# This file is part of ICU4X. For terms of use, please see the file
# called LICENSE at the top level of the ICU4X source tree
# (online at: https://github.com/unicode-org/icu4x/blob/main/LICENSE ).

[package]
name = "icu4x-datagen"
description = "Generate data for ICU4X DataProvider"
license = "Unicode-3.0"

authors.workspace = true
categories.workspace = true
edition.workspace = true
homepage.workspace = true
include.workspace = true
repository.workspace = true
rust-version.workspace = true
version.workspace = true

[dependencies]
icu_provider = { workspace = true }
icu = { workspace = true, features = ["datagen"] }
icu_datagen = { workspace = true, features = ["rayon"] }
icu_datagen_bikeshed = { workspace = true, optional = true }
icu_registry = { workspace = true }

icu_provider_blob = { workspace = true, features = ["export"], optional = true }

clap = { workspace = true, features = ["derive"] }
eyre = { workspace = true }
log = { workspace = true }
simple_logger = { workspace = true }

[features]
default = ["use_wasm", "networking", "fs_exporter", "blob_exporter", "baked_exporter", "provider"]
provider = ["dep:icu_datagen_bikeshed"]
baked_exporter = ["icu_datagen/baked_exporter"]
blob_exporter = ["icu_datagen/blob_exporter"]
blob_input = ["dep:icu_provider_blob", "icu/datagen", "icu_provider/export"]
fs_exporter = ["icu_datagen/fs_exporter"]
# Use wasm for building codepointtries
use_wasm = ["icu_datagen_bikeshed?/use_wasm"]
# Use local ICU4C libraries for building codepointtries
# (will do nothing if used with `use_wasm`)
# If neither `use_wasm` nor `use_icu4c` are enabled,
# rule based segmenter data will not be generated.
use_icu4c = ["icu_datagen_bikeshed?/use_icu4c"]
networking = ["icu_datagen_bikeshed?/networking"]
experimental = ["icu_datagen_bikeshed?/experimental", "icu/experimental"]

[package.metadata.cargo-all-features]
# We don't need working CPT builders for check
skip_feature_sets = [["use_icu4c"], ["use_wasm"]]
skip_optional_dependencies = true
# We have a *lot* of features here
max_combination_size = 2
