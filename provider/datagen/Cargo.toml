# This file is part of ICU4X. For terms of use, please see the file
# called LICENSE at the top level of the ICU4X source tree
# (online at: https://github.com/unicode-org/icu4x/blob/main/LICENSE ).

[package]
name = "icu_datagen"
description = "Generate data for ICU4X DataProvider"
version = "1.2.5"
rust-version = "1.61.0"
authors = ["The ICU4X Project Developers"]
edition = "2021"
readme = "README.md"
repository = "https://github.com/unicode-org/icu4x"
homepage = "https://icu4x.unicode.org"
license = "Unicode-DFS-2016"
categories = ["internationalization"]
# Keep this in sync with other crates unless there are exceptions
include = [
    "data/**/*",
    "src/**/*",
    "examples/**/*",
    "benches/**/*",
    "tests/**/*",
    "Cargo.toml",
    "LICENSE",
    "README.md",
]
default-run = "icu4x-datagen"

[package.metadata.docs.rs]
all-features = true

[dependencies]

# ICU components
icu_calendar = { version = "1.2.0", path = "../../components/calendar", features = ["datagen"] }
icu_casemapping = { version = "0.7.1", path = "../../experimental/casemapping", features = ["datagen"] }
icu_collator = { version = "1.2.0", path = "../../components/collator", features = ["datagen"] }
icu_compactdecimal = { version = "0.2.0", path = "../../experimental/compactdecimal", features = ["datagen"] }
icu_datetime = { version = "1.2.0", path = "../../components/datetime", features = ["datagen"] }
icu_decimal = { version = "1.2.0", path = "../../components/decimal", features = ["datagen"] }
icu_displaynames = { version = "0.10.0", path = "../../experimental/displaynames", features = ["datagen"] }
icu_list = { version = "1.2.0", path = "../../components/list", features = ["datagen"]}
icu_locid_transform = { version = "1.2.0", path = "../../components/locid_transform", features = ["datagen"] }
icu_normalizer = { version = "1.2.0", path = "../../components/normalizer", features = ["datagen"] }
icu_personnames = { version = "0.1.0", path = "../../experimental/personnames", features = ["datagen"] }
icu_plurals = { version = "1.2.0", path = "../../components/plurals", features = ["datagen"] }
icu_properties = { version = "1.2.0", path = "../../components/properties", features = ["datagen"]}
icu_relativetime = { version = "0.1.0", path = "../../experimental/relativetime", features = ["datagen"] }
icu_segmenter = { version = "1.2.0", path = "../../components/segmenter", features = ["datagen", "lstm"] }
icu_timezone = { version = "1.2.0", path = "../../components/timezone", features = ["datagen"] }

# ICU infrastructure
icu_codepointtrie_builder = { version = "0.3.4", path = "../../components/collections/codepointtrie_builder", default-features = false }
icu_collections = { version = "1.2.0", path = "../../components/collections", features = ["serde"] }
icu_locid = { version = "1.2.0", path = "../../components/locid", features = ["std", "serde"] }
icu_provider = { version = "1.2.0", path = "../core", features = ["std", "log_error_context", "datagen"]}
tinystr = { version = "0.7.1", path = "../../utils/tinystr", features = ["alloc", "serde", "zerovec"], default-features = false }
writeable = { version = "0.5.1", path = "../../utils/writeable" }
zerovec = { version = "0.9.4", path = "../../utils/zerovec", features = ["serde", "yoke"] }

# Exporters
icu_provider_blob = { version = "1.2.0", path = "../blob", features = ["export"], optional = true }
icu_provider_fs = { version = "1.2.0", path = "../fs", features = ["export"], optional = true }
crlify = { version = "1.0.1", path = "../../utils/crlify", optional = true }
databake = { version = "0.1.3", path = "../../utils/databake", optional = true}
syn = {version = "2", features = ["parsing"], optional = true }

# Other external dependencies
displaydoc = { version = "0.2.3", default-features = false }
elsa = "1.7"
itertools = "0.10"
lazy_static = "1"
log = "0.4"
memchr = "2.5.0"
ndarray = { version = "0.15.5", default-features = false }
serde = { version = "1.0", default-features = false, features = ["derive", "alloc"] }
serde_json = { version = "1.0", default-features = false, features = ["alloc"] }
serde-aux = { version = "4.1.2", default-features = false }
toml = "0.5"
zip = { version = ">=0.5, <0.7", default-features = false, features = ["deflate"] }

rayon = { version = "1.5", optional = true }
ureq = { version = "2", optional = true }

# Dependencies for "bin" feature
clap = { version = "4", optional = true, features = ["derive"] }
eyre = { version = "0.6", optional = true }
simple_logger = { version = "4.1.0", default-features = false, optional = true }

[dev-dependencies]
icu = { path = "../../components/icu" }
icu_provider_adapters = { version = "1.2.0", path = "../adapters" }
icu_testdata = { path = "../testdata", features = ["buffer"] }
repodata = { path = "../../provider/repodata" }


[target.'cfg(not(target_os = "windows"))'.dev-dependencies]
# The verify-zero-copy test is causing problems on Windows
dhat = "0.3.0"

[features]
default = ["bin", "use_wasm", "networking", "legacy_api", "rayon"]
provider_baked = ["dep:crlify", "dep:databake", "dep:syn"]
provider_blob = ["dep:icu_provider_blob"]
provider_fs = ["dep:icu_provider_fs"]
legacy_api = ["provider_fs", "provider_blob", "provider_baked"]
bin = ["dep:clap", "dep:eyre", "dep:simple_logger"]
# Use wasm for building codepointtries
use_wasm = ["icu_codepointtrie_builder/wasm"]
# Use local ICU4C libraries for building codepointtries
# (will do nothing if used with `use_wasm`)
# If neither `use_wasm` nor `use_icu4c` are enabled,
# rule based segmenter data will not be generated.
use_icu4c = ["icu_codepointtrie_builder/icu4c"]
networking = ["dep:ureq"]

[[bin]]
name = "icu4x-datagen"
path = "src/bin/datagen/mod.rs"
required-features = ["bin"]

[[test]]
name = "icu4x-verify-zero-copy"
path = "tests/verify-zero-copy.rs"

[package.metadata.cargo-all-features]
# We don't need working CPT builders for check
skip_feature_sets = [["use_icu4c"], ["use_wasm"]]
