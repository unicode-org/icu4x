# This file is part of ICU4X. For terms of use, please see the file
# called LICENSE at the top level of the ICU4X source tree
# (online at: https://github.com/unicode-org/icu4x/blob/main/LICENSE ).

[package]
name = "icu_datagen"
description = "Generate data for ICU4X DataProvider"
license-file = "LICENSE"
include = [
    "data/**/*",
    "src/**/*",
    "examples/**/*",
    "benches/**/*",
    "tests/**/*",
    "!tests/data/json/**/*",
    "!tests/data/postcard/**/*",
    "Cargo.toml",
    "LICENSE",
    "README.md",
]
default-run = "icu4x-datagen"
version = "1.3.3"

authors.workspace = true
categories.workspace = true
edition.workspace = true
homepage.workspace = true
repository.workspace = true
rust-version.workspace = true

[package.metadata.docs.rs]
all-features = true

[dependencies]
# ICU components
icu_calendar = { workspace = true, features = ["datagen"] }
icu_casemap = { workspace = true, features = ["datagen"] }
icu_collator = { workspace = true, features = ["datagen"] }
icu_datetime = { workspace = true, features = ["datagen"] }
icu_decimal = { workspace = true, features = ["datagen"] }
icu_list = { workspace = true, features = ["datagen"]}
icu_locid_transform = { workspace = true, features = ["datagen"] }
icu_normalizer = { workspace = true, features = ["datagen"] }
icu_plurals = { workspace = true, features = ["datagen"] }
icu_properties = { workspace = true, features = ["datagen"]}
icu_segmenter = { workspace = true, features = ["datagen", "lstm"] }
icu_timezone = { workspace = true, features = ["datagen"] }

icu_compactdecimal = { workspace = true, features = ["datagen"], optional = true }
icu_displaynames = { workspace = true, features = ["datagen"], optional = true }
icu_relativetime = { workspace = true, features = ["datagen"], optional = true }
icu_transliterate = { workspace = true, features = ["datagen"], optional = true }

# ICU infrastructure
icu_codepointtrie_builder = { workspace = true }
icu_collections = { workspace = true, features = ["serde"] }
icu_locid = { workspace = true, features = ["std", "serde"] }
icu_provider = { workspace = true, features = ["std", "logging", "datagen", "experimental"]}
icu_provider_adapters = { workspace = true }
tinystr = { workspace = true, features = ["alloc", "serde", "zerovec"] }
writeable = { workspace = true }
zerotrie = { workspace = true, features = ["alloc"] }
zerovec = { workspace = true, features = ["serde", "yoke"] }

# Exporters
icu_provider_blob = { workspace = true, features = ["export"], optional = true }
icu_provider_fs = { workspace = true, features = ["export"], optional = true }
crlify = { workspace = true, optional = true }
databake = { workspace = true, optional = true}
proc-macro2 = {version = "1", optional = true }

# Other external dependencies
displaydoc = { version = "0.2.3", default-features = false }
elsa = "1.9"
itertools = "0.10"
log = "0.4"
memchr = "2.5.0"
once_cell = "1"
ndarray = { version = "0.15.5", default-features = false }
serde = { version = "1.0", default-features = false, features = ["derive", "alloc"] }
serde_json = { version = "1.0", default-features = false, features = ["alloc"] }
serde-aux = { version = "4.1.2", default-features = false }
toml = "0.5"
twox-hash = { version = "1.6", default-features = false }
zip = { version = ">=0.5, <0.7", default-features = false, features = ["deflate"] }

rayon = { version = "1.5", optional = true }
ureq = { version = "2", optional = true }

fraction = {version = "0.14.0", default-features = false }
num-bigint = { version = "0.4.4", default-features = false }


# Dependencies for "bin" feature
clap = { version = "4", optional = true, features = ["derive"] }
eyre = { version = "0.6", optional = true }
simple_logger = { version = "4.1.0", default-features = false, optional = true }
either = "1.9.0"

[dev-dependencies]
crlify = { path = "../../utils/crlify" }
icu = { path = "../../components/icu" }
postcard = "1"
simple_logger = { version = "4.1.0", default-features = false }

# Pre-experimental components with limited data generation
icu_singlenumberformatter = { workspace = true, features = ["datagen"] }
icu_unitsconversion = { workspace = true, features = ["datagen"] }

[features]
default = ["bin", "use_wasm", "networking", "legacy_api", "rayon", "fs_exporter", "blob_exporter", "baked_exporter"]
baked_exporter = ["dep:crlify", "dep:databake", "dep:proc-macro2"]
blob_exporter = ["dep:icu_provider_blob"]
fs_exporter = ["dep:icu_provider_fs"]
legacy_api = ["fs_exporter", "blob_exporter", "baked_exporter"]
bin = ["dep:clap", "dep:eyre", "dep:simple_logger"]
rayon = ["dep:rayon"]
# Use wasm for building codepointtries
use_wasm = ["icu_codepointtrie_builder/wasm"]
# Use local ICU4C libraries for building codepointtries
# (will do nothing if used with `use_wasm`)
# If neither `use_wasm` nor `use_icu4c` are enabled,
# rule based segmenter data will not be generated.
use_icu4c = ["icu_codepointtrie_builder/icu4c"]
networking = ["dep:ureq"]

# experimental deps
icu_compactdecimal = ["dep:icu_compactdecimal"]
icu_displaynames = ["dep:icu_displaynames"]
icu_relativetime = ["dep:icu_relativetime"]
icu_transliterate = ["dep:icu_transliterate"]
experimental_components = [
    "icu_compactdecimal",
    "icu_displaynames",
    "icu_relativetime",
    "icu_transliterate",
]

[[bin]]
name = "icu4x-datagen"
path = "src/bin/datagen/mod.rs"
required-features = ["bin"]

[package.metadata.cargo-all-features]
# We don't need working CPT builders for check
skip_feature_sets = [["use_icu4c"], ["use_wasm"]]
skip_optional_dependencies = true
# Always the experimental deps because we want to all-or-nothing them
# and the nothing case is already tested in regular check CI
always_include_features = ["icu_compactdecimal", "icu_displaynames", "icu_relativetime", "icu_transliterate"]
# We have a *lot* of features here
max_combination_size = 2
