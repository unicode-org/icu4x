# This file is part of ICU4X. For terms of use, please see the file
# called LICENSE at the top level of the ICU4X source tree
# (online at: https://github.com/unicode-org/icu4x/blob/main/LICENSE ).

[package]
name = "icu_datagen"
description = "Generate data for ICU4X DataProvider"
version = "0.5.0"
authors = ["The ICU4X Project Developers"]
edition = "2018"
readme = "README.md"
repository = "https://github.com/unicode-org/icu4x"
license-file = "LICENSE"
categories = ["internationalization"]
# Keep this in sync with other crates unless there are exceptions
include = [
    "src/**/*",
    "examples/**/*",
    "benches/**/*",
    "tests/**/*",
    "Cargo.toml",
    "LICENSE",
    "README.md",
]

[package.metadata.cargo-all-features]
# Omit most optional dependency features from permutation testing
skip_optional_dependencies = true

[package.metadata.docs.rs]
all-features = true

[dependencies]
cached-path = { version = "0.5", optional = true }
clap = "2.33"
dhat = "0.3.0"
displaydoc = { version = "0.2.3", default-features = false }
elsa = "1.7"
eyre = "0.6"
icu_calendar = { version = "0.5", path = "../../components/calendar", features = ["datagen"] }
icu_casemapping = { version = "0.1", path = "../../experimental/casemapping", features = ["serialize", "datagen"], optional = true }
icu_codepointtrie = { version = "0.3.3", path = "../../utils/codepointtrie", features = ["serde_serialize"] }
icu_datetime = { version = "0.5", path = "../../components/datetime", features = ["datagen"] }
icu_decimal = { version = "0.5", path = "../../components/decimal", features = ["datagen"] }
icu_list = { version = "0.5", path = "../../components/list", features = ["datagen"]}
icu_locale_canonicalizer = { version = "0.5", path = "../../components/locale_canonicalizer", features = ["datagen"] }
icu_locid = { version = "0.5", path = "../../components/locid", features = ["std"]}
icu_plurals = { version = "0.5", path = "../../components/plurals", features = ["datagen"] }
icu_properties = { version = "0.5", path = "../../components/properties", features = ["std", "datagen"]}
icu_provider = { version = "0.5", path = "../core", features = ["std", "log_error_context"]}
icu_provider_adapters = { path = "../adapters", features = ["datagen"] }
icu_provider_blob = { version = "0.5", path = "../blob", features = ["export"] }
icu_provider_fs = { version = "0.5", path = "../fs", features = ["export"] }
icu_segmenter = { version = "0.1", path = "../../experimental/segmenter", features = ["datagen"] }
icu_testdata = { version = "0.5", path = "../testdata", features = ["metadata"] }
icu_uniset = { version = "0.4.1", path = "../../utils/uniset", features = ["serialize"] }
itertools = "0.10"
json = "0.12"
litemap = { version = "0.3.0", path = "../../utils/litemap" }
log = { version = "0.4" }
rayon = "1.5"
serde = { version = "1.0", default-features = false, features = ["derive", "alloc"] }
serde_json = { version = "1.0", default-features = false, features = ["alloc"] }
serde-aux = "2.1.1"
serde-tuple-vec-map = "1.0"
simple_logger = "1.12"
smallstr = { version = "0.2", features = ["serde"] }
smallvec = "1.6"
tinystr = { path = "../../utils/tinystr", version = "0.5.0", features = ["alloc", "serde", "zerovec"], default-features = false }
toml = { version = "0.5" }
writeable = { version = "0.3", path = "../../utils/writeable" }
zerovec = { version = "0.6", path = "../../utils/zerovec", features = ["serde_serialize", "yoke"] }

# Dependencies for the "download-testdata" feature
reqwest = { version = "0.11", features = ["stream"], optional = true }
tokio = { version = "1.5", features = ["rt-multi-thread", "macros", "fs"], optional = true }
futures = { version = "0.3", optional = true }

[dev-dependencies]
mktemp = "0.4"
icu_testdata = { version = "0.5", path = "../testdata" }
writeable = { version = "0.3", path = "../../utils/writeable" }

[features]
experimental = []
casemapping = ["icu_casemapping"]
# Automatically download CLDR and uprops data
download = ["cached-path"]
download-testdata = ["reqwest", "icu_testdata/metadata", "tokio", "futures"]
default = ["casemapping"]

[[bin]]
name = "icu4x-datagen"
path = "src/bin/datagen.rs"

[[bin]]
name = "icu4x-testdata-download"
path = "src/bin/testdata-download.rs"
required-features = ["download-testdata"]

[[bin]]
name = "icu4x-verify-zero-copy"
path = "src/bin/verify-zero-copy.rs"
