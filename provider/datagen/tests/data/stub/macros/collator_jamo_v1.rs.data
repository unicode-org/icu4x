// @generated
# [doc = " Implement `DataProvider<CollationJamoV1Marker>` on the given struct using the data"] # [doc = r" hardcoded in this file. This allows the struct to be used with"] # [doc = r" `icu`'s `_unstable` constructors."] # [doc (hidden)] # [macro_export] macro_rules ! __impl_collator_jamo_v1 { ($ provider : ty) => { # [clippy :: msrv = "1.67"] const _ : () = < $ provider > :: MUST_USE_MAKE_PROVIDER_MACRO ; # [clippy :: msrv = "1.67"] impl $ provider { # [doc (hidden)] pub const SINGLETON_COLLATOR_JAMO_V1 : & 'static < icu::collator :: provider :: CollationJamoV1Marker as icu_provider :: DataMarker > :: Yokeable = & icu::collator :: provider :: CollationJamoV1 { ce32s : unsafe { zerovec :: ZeroVec :: from_bytes_unchecked (b"\x05\x05\x06y\x05\x05\x08y\x05\x05\ny\x05\x05\x0Cy\x05\x05\x0Ey\x05\x05\x10y\x05\x05\x12y\x05\x05\x14y\x05\x05\x16y\x05\x05\x18y\x05\x05\x1Ay\x05\x05\x1Cy\x05\x05\x1Ey\x05\x05 y\x05\x05\"y\x05\x05$y\x05\x05&y\x05\x05(y\x05\x05*y\x05\x05,y\x05\x05.y\x05\x050y\xC1\x022y\xC1\t2y\xC1\x102y\xC1\x172y\x05\x054y\x05\x056y\x05\x058y\x05\x05:y\x05\x05<y\x05\x05>y\x05\x05@y\x05\x05By\x05\x05Dy\x05\x05Fy\xC1\x02Hy\xC1\tHy\xC1\x10Hy\x05\x05Jy\x05\x05Ly\x05\x05Ny\x05\x05Py\x05\x05Ry\x05\x05Ty\x05\x05Vy\x05\x05Xy\x05\x05Zy\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\xCE@q\0\x05\x05_y\x05\x05ay\x05\x05cy\xC1\x02ey\xC1\tey\xC1\x10ey\xC1\x17ey\xC1\x1Eey\xC1\xF0ey\xC1\xF7ey\x05\x05gy\x05\x05iy\x05\x05ky\x05\x05my\x05\x05oy\x05\x05qy\x05\x05sy\x05\x05uy\x05\x05wy\x05\x05yy\x05\x05{y\x05\x05}y\x05\x05\x7Fy\x05\x05\x81y\x05\x05\x83y\x05\x05\x85y\x05\x05\x87y\x05\x05\x89y\x05\x05\x8By\x05\x05\x8Dy\x05\x05\x8Fy\xCE`q\0\xCE`q\0\xCE`q\0\xCE`q\0\xCE`q\0\xCE`q\0\xCE`q\0\xCE`q\0\xCE`q\0\xCE`q\0\xCE`q\0\xCE`q\0\xCE`q\0\xCE`q\0\x05\x05\x93y\x05\x05\x95y\x05\x05\x97y\x05\x05\x99y\x05\x05\x9By\xC1\x02\x9Dy\xC1\t\x9Dy\xC1\x10\x9Dy\xC1\x17\x9Dy\xC1\x1E\x9Dy\xC1%\x9Dy\xC1,\x9Dy\xC13\x9Dy\x05\x05\x9Fy\x05\x05\xA1y\x05\x05\xA3y\x05\x05\xA5y\xC1\x02\xA7y\xC1\t\xA7y\xC1\x10\xA7y\xC1\x17\xA7y\xC1\x1E\xA7y\xC1%\xA7y\xC1,\xA7y\xC13\xA7y\xC1:\xA7y\x05\x05\xA9y\x05\x05\xABy\x05\x05\xADy\x05\x05\xAFy\xC1\x02\xB1y\xC1\t\xB1y\xC1\x10\xB1y\xC1\x17\xB1y\xC1\x1E\xB1y\xC1%\xB1y\x05\x05\xB3y\x05\x05\xB5y\x05\x05\xB7y\x05\x05\xB9y\x05\x05\xBBy\x05\x05\xBDy\x05\x05\xBFy\x05\x05\xC1y\x05\x05\xC3y\x05\x05\xC5y\x05\x05\xC7y\x05\x05\xC9y\x05\x05\xCBy\x05\x05\xCDy\x05\x05\xCFy\x05\x05\xD1y\x05\x05\xD3y\x05\x05\xD5y\x05\x05\xD7y\x05\x05\xD9y\x05\x05\xDBy\x05\x05\xDDy\x05\x05\xDFy\x05\x05\xE1y\x05\x05\xE3y\x05\x05\xE5y\x05\x05\xE7y\xC1\x02\xE9y\xC1\t\xE9y\xC1\x10\xE9y\xC1\x17\xE9y\x05\x05\xEBy\x05\x05\xEDy\xC1\x02\xEFy\xC1\t\xEFy\xC1\x10\xEFy\x05\x05\xF1y\x05\x05\xF3y\x05\x05\xF5y\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0\xCE\x80q\0") } , } ; } # [clippy :: msrv = "1.67"] impl icu_provider :: DataProvider < icu::collator :: provider :: CollationJamoV1Marker > for $ provider { fn load (& self , req : icu_provider :: DataRequest ,) -> Result < icu_provider :: DataResponse < icu::collator :: provider :: CollationJamoV1Marker > , icu_provider :: DataError > { if req . locale . is_empty () { Ok (icu_provider :: DataResponse { payload : Some (icu_provider :: DataPayload :: from_static_ref (Self :: SINGLETON_COLLATOR_JAMO_V1)) , metadata : Default :: default () , }) } else { Err (icu_provider :: DataErrorKind :: ExtraneousLocale . with_req (< icu::collator :: provider :: CollationJamoV1Marker as icu_provider :: KeyedDataMarker > :: KEY , req)) } } } } }