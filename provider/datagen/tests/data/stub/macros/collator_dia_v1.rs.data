// @generated
# [doc = " Implement `DataProvider<CollationDiacriticsV1Marker>` on the given struct using the data"] # [doc = r" hardcoded in this file. This allows the struct to be used with"] # [doc = r" `icu`'s `_unstable` constructors."] # [doc (hidden)] # [macro_export] macro_rules ! __impl_collator_dia_v1 { ($ provider : ty) => { # [clippy :: msrv = "1.67"] const _ : () = < $ provider > :: MUST_USE_MAKE_PROVIDER_MACRO ; # [clippy :: msrv = "1.67"] impl icu_provider :: DataProvider < icu::collator :: provider :: CollationDiacriticsV1Marker > for $ provider { fn load (& self , req : icu_provider :: DataRequest ,) -> Result < icu_provider :: DataResponse < icu::collator :: provider :: CollationDiacriticsV1Marker > , icu_provider :: DataError > { Err (icu_provider :: DataErrorKind :: MissingLocale . with_req (< icu::collator :: provider :: CollationDiacriticsV1Marker as icu_provider :: KeyedDataMarker > :: KEY , req)) } } } }