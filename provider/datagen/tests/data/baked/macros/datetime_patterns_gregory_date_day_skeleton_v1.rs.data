// @generated
/// Implement `DataProvider<GregorianDateDayNeoSkeletonPatternsV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_datetime_patterns_gregory_date_day_skeleton_v1 {
    ($ provider : ty) => {
        #[clippy::msrv = "1.67"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.67"]
        impl icu_provider::DataProvider<icu::datetime::provider::neo::GregorianDateDayNeoSkeletonPatternsV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::datetime::provider::neo::GregorianDateDayNeoSkeletonPatternsV1Marker>, icu_provider::DataError> {
                static UND_X_D: <icu::datetime::provider::neo::GregorianDateDayNeoSkeletonPatternsV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { indices: unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\0\0") }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\0\x80@\x01") } };
                static UND_X_DE: <icu::datetime::provider::neo::GregorianDateDayNeoSkeletonPatternsV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { indices: unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x80\0") }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\r\0\0\x80@\x01\0\0,\0\0 \x80P\x04\0\x80@\x01\0\0,\0\0 \x80P\x01") } };
                static UND_X_E: <icu::datetime::provider::neo::GregorianDateDayNeoSkeletonPatternsV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { indices: unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x80\0") }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x04\0\0\x80R\x04\0\x80R\x03") } };
                static UND_X_GYM0DE: <icu::datetime::provider::neo::GregorianDateDayNeoSkeletonPatternsV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { indices: unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x80\0") }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x1F\0\0\x80\0\x04\0\0 \x80\x10\x01\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80P\x04\0\x80\0\x03\0\0 \x80\x10\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80P\x01") } };
                static UND_X_M0D: <icu::datetime::provider::neo::GregorianDateDayNeoSkeletonPatternsV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { indices: unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\xC0\0") }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\n\0\x14\0\0\x80 \x04\0\0 \x80@\x01\0\x80 \x03\0\0 \x80@\x01\0\x80 \x02\0\0-\x80@\x02") } };
                static UND_X_YM0D: <icu::datetime::provider::neo::GregorianDateDayNeoSkeletonPatternsV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { indices: unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\xC0\0") }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x10\0 \0\0\x80\x10\x01\0\0 \x80 \x04\0\0 \x80@\x01\0\x80\x10\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\x80\x10\x01\0\0-\x80 \x02\0\0-\x80@\x02") } };
                static UND_X_M0DE: <icu::datetime::provider::neo::GregorianDateDayNeoSkeletonPatternsV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { indices: unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\xC0\0") }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x13\0&\0\0\x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80P\x04\0\x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80P\x01\0\x80 \x02\0\0-\x80@\x02\0\0,\0\0 \x80P\x01") } };
                static UND_X_GYM0D: <icu::datetime::provider::neo::GregorianDateDayNeoSkeletonPatternsV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { indices: unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\xC0\0") }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x16\0,\0\0\x80\0\x04\0\0 \x80\x10\x01\0\0 \x80 \x04\0\0 \x80@\x01\0\x80\0\x03\0\0 \x80\x10\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\x80\0\x03\0\0 \x80\x10\x01\0\0-\x80 \x01\0\0-\x80@\x01") } };
                static UND_X_YM0DE: <icu::datetime::provider::neo::GregorianDateDayNeoSkeletonPatternsV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { indices: unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\xC0\0") }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x19\x002\0\0\x80\x10\x01\0\0 \x80 \x04\0\0 \x80@\x01\0\0,\0\0 \x80P\x04\0\x80\x10\x01\0\0 \x80 \x03\0\0 \x80@\x01\0\0,\0\0 \x80P\x01\0\x80\x10\x01\0\0-\x80 \x02\0\0-\x80@\x02\0\0,\0\0 \x80P\x01") } };
                static VALUES: [&<icu::datetime::provider::neo::GregorianDateDayNeoSkeletonPatternsV1Marker as icu_provider::DataMarker>::Yokeable; 9usize] = [&UND_X_D, &UND_X_DE, &UND_X_E, &UND_X_GYM0D, &UND_X_GYM0DE, &UND_X_M0D, &UND_X_M0DE, &UND_X_YM0D, &UND_X_YM0DE];
                static KEYS: [&str; 9usize] = ["und-x-d", "und-x-de", "und-x-e", "und-x-gym0d", "und-x-gym0de", "und-x-m0d", "und-x-m0de", "und-x-ym0d", "und-x-ym0de"];
                if let Ok(payload) = KEYS.binary_search_by(|k| req.locale.strict_cmp(k.as_bytes()).reverse()).map(|i| *unsafe { VALUES.get_unchecked(i) }) {
                    Ok(icu_provider::DataResponse { payload: Some(icu_provider::DataPayload::from_static_ref(payload)), metadata: Default::default() })
                } else {
                    Err(icu_provider::DataErrorKind::MissingLocale.with_req(<icu::datetime::provider::neo::GregorianDateDayNeoSkeletonPatternsV1Marker as icu_provider::KeyedDataMarker>::KEY, req))
                }
            }
        }
    };
}
