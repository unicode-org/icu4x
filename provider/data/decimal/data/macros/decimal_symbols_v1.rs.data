// @generated
/// Implement `DataProvider<DecimalSymbolsV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_decimal_symbols_v1 {
    ($ provider : ty) => {
        #[clippy::msrv = "1.70"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.70"]
        impl icu_provider::DataProvider<icu::decimal::provider::DecimalSymbolsV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::decimal::provider::DecimalSymbolsV1Marker>, icu_provider::DataError> {
                static AST: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("."), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static LO_U_NU_LAOO: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("."), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['໐', '໑', '໒', '໓', '໔', '໕', '໖', '໗', '໘', '໙'] };
                static KM_U_NU_KHMR: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("."), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['០', '១', '២', '៣', '៤', '៥', '៦', '៧', '៨', '៩'] };
                static JV_U_NU_JAVA: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("."), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['꧐', '꧑', '꧒', '꧓', '꧔', '꧕', '꧖', '꧗', '꧘', '꧙'] };
                static ES: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("."), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 2u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static FR: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("\u{202f}"), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static AF: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("\u{a0}"), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static BE: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("\u{a0}"), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 2u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static LMO: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("’"), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static AS_U_NU_LATN: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 2u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static BRX_U_NU_DEVA: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 2u8, min_grouping: 1u8 }, digits: ['०', '१', '२', '३', '४', '५', '६', '७', '८', '९'] };
                static AS: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 2u8, min_grouping: 1u8 }, digits: ['০', '১', '২', '৩', '৪', '৫', '৬', '৭', '৮', '৯'] };
                static PA_U_NU_GURU: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 2u8, min_grouping: 1u8 }, digits: ['੦', '੧', '੨', '੩', '੪', '੫', '੬', '੭', '੮', '੯'] };
                static GU_U_NU_GUJR: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 2u8, min_grouping: 1u8 }, digits: ['૦', '૧', '૨', '૩', '૪', '૫', '૬', '૭', '૮', '૯'] };
                static KXV_ORYA_U_NU_ORYA: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 2u8, min_grouping: 1u8 }, digits: ['୦', '୧', '୨', '୩', '୪', '୫', '୬', '୭', '୮', '୯'] };
                static TA_LK_U_NU_TAMLDEC: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 2u8, min_grouping: 1u8 }, digits: ['௦', '௧', '௨', '௩', '௪', '௫', '௬', '௭', '௮', '௯'] };
                static KXV_TELU_U_NU_TELU: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 2u8, min_grouping: 1u8 }, digits: ['౦', '౧', '౨', '౩', '౪', '౫', '౬', '౭', '౮', '౯'] };
                static ML_U_NU_MLYM: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 2u8, min_grouping: 1u8 }, digits: ['൦', '൧', '൨', '൩', '൪', '൫', '൬', '൭', '൮', '൯'] };
                static BGC_U_NU_LATN: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static BGC: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['०', '१', '२', '३', '४', '५', '६', '७', '८', '९'] };
                static MNI: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['০', '১', '২', '৩', '৪', '৫', '৬', '৭', '৮', '৯'] };
                static TA_MY_U_NU_TAMLDEC: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['௦', '௧', '௨', '௩', '௪', '௫', '௬', '௭', '௮', '௯'] };
                static TE_U_NU_TELU: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['౦', '౧', '౨', '౩', '౪', '౫', '౬', '౭', '౮', '౯'] };
                static KN_U_NU_KNDA: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['೦', '೧', '೨', '೩', '೪', '೫', '೬', '೭', '೮', '೯'] };
                static TH_U_NU_THAI: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['๐', '๑', '๒', '๓', '๔', '๕', '๖', '๗', '๘', '๙'] };
                static MY: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['၀', '၁', '၂', '၃', '၄', '၅', '၆', '၇', '၈', '၉'] };
                static SAT: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['᱐', '᱑', '᱒', '᱓', '᱔', '᱕', '᱖', '᱗', '᱘', '᱙'] };
                static YUE_HANS_U_NU_HANIDEC: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['〇', '一', '二', '三', '四', '五', '六', '七', '八', '九'] };
                static XH: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed("\u{a0}"), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static KS_U_NU_LATN: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed("،"), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static NQO: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed("،"), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['߀', '߁', '߂', '߃', '߄', '߅', '߆', '߇', '߈', '߉'] };
                static DE_CH: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed("’"), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static FF_ADLM_BF_U_NU_LATN: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed("⹁"), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static FF_ADLM: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed("⹁"), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['𞥐', '𞥑', '𞥒', '𞥓', '𞥔', '𞥕', '𞥖', '𞥗', '𞥘', '𞥙'] };
                static AR_DZ: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{200e}-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{200e}+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("."), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static AR_AE: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{200e}-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{200e}+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static KS: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{200e}-\u{200e}"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{200e}+\u{200e}"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("٫"), grouping_separator: alloc::borrow::Cow::Borrowed("٬"), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['۰', '۱', '۲', '۳', '۴', '۵', '۶', '۷', '۸', '۹'] };
                static PS_PK_U_NU_LATN: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{200e}−"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{200e}+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("."), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static FA_AF_U_NU_LATN: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{200e}−"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{200e}+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static FA: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{200e}−"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{200e}+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("٫"), grouping_separator: alloc::borrow::Cow::Borrowed("٬"), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['۰', '۱', '۲', '۳', '۴', '۵', '۶', '۷', '۸', '۹'] };
                static AR: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{61c}-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{61c}+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("٫"), grouping_separator: alloc::borrow::Cow::Borrowed("٬"), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['٠', '١', '٢', '٣', '٤', '٥', '٦', '٧', '٨', '٩'] };
                static EU: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("−"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("."), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static FI: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("−"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("\u{a0}"), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static ET: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("−"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("\u{a0}"), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 2u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static RM: <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("−"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu::decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed("’"), grouping_sizes: icu::decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static DATA: [(&str, &<icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable); 252usize] = [("af", &AF), ("ar", &AR), ("ar-AE", &AR_AE), ("ar-AE-u-nu-arab", &AR), ("ar-BH-u-nu-latn", &AR_AE), ("ar-DJ-u-nu-latn", &AR_AE), ("ar-DZ", &AR_DZ), ("ar-DZ-u-nu-arab", &AR), ("ar-EG-u-nu-latn", &AR_AE), ("ar-EH", &AR_AE), ("ar-EH-u-nu-arab", &AR), ("ar-ER-u-nu-latn", &AR_AE), ("ar-IL-u-nu-latn", &AR_AE), ("ar-IQ-u-nu-latn", &AR_AE), ("ar-JO-u-nu-latn", &AR_AE), ("ar-KM-u-nu-latn", &AR_AE), ("ar-KW-u-nu-latn", &AR_AE), ("ar-LB-u-nu-latn", &AR_DZ), ("ar-LY", &AR_DZ), ("ar-LY-u-nu-arab", &AR), ("ar-MA", &AR_DZ), ("ar-MA-u-nu-arab", &AR), ("ar-MR-u-nu-latn", &AR_DZ), ("ar-OM-u-nu-latn", &AR_AE), ("ar-PS-u-nu-latn", &AR_AE), ("ar-QA-u-nu-latn", &AR_AE), ("ar-SA-u-nu-latn", &AR_AE), ("ar-SD-u-nu-latn", &AR_AE), ("ar-SO-u-nu-latn", &AR_AE), ("ar-SS-u-nu-latn", &AR_AE), ("ar-SY-u-nu-latn", &AR_AE), ("ar-TD-u-nu-latn", &AR_AE), ("ar-TN", &AR_DZ), ("ar-TN-u-nu-arab", &AR), ("ar-YE-u-nu-latn", &AR_AE), ("ar-u-nu-latn", &AR_AE), ("as", &AS), ("as-u-nu-latn", &AS_U_NU_LATN), ("ast", &AST), ("az", &AST), ("be", &BE), ("bg", &BE), ("bgc", &BGC), ("bgc-u-nu-latn", &BGC_U_NU_LATN), ("bho", &BGC), ("bho-u-nu-latn", &BGC_U_NU_LATN), ("blo", &AF), ("bn", &AS), ("bn-IN-u-nu-latn", &AS_U_NU_LATN), ("bn-u-nu-latn", &AS_U_NU_LATN), ("br", &AF), ("brx", &AS_U_NU_LATN), ("brx-u-nu-deva", &BRX_U_NU_DEVA), ("bs", &AST), ("bs-Cyrl", &AST), ("ca", &AST), ("cs", &AF), ("cv", &AF), ("da", &AST), ("de", &AST), ("de-AT", &AF), ("de-CH", &DE_CH), ("de-LI", &DE_CH), ("doi-u-nu-deva", &BGC), ("dsb", &AST), ("el", &AST), ("en-AT", &AST), ("en-BE", &AST), ("en-CH", &DE_CH), ("en-DE", &AST), ("en-DK", &AST), ("en-FI", &AF), ("en-ID", &AST), ("en-IN", &AS_U_NU_LATN), ("en-NL", &AST), ("en-SE", &AF), ("en-SI", &AST), ("eo", &AF), ("es", &ES), ("es-419", &BGC_U_NU_LATN), ("es-AR", &AST), ("es-BO", &AST), ("es-CL", &AST), ("es-CO", &AST), ("es-CR", &AF), ("es-EC", &AST), ("es-PY", &AST), ("es-UY", &AST), ("es-VE", &AST), ("et", &ET), ("eu", &EU), ("fa", &FA), ("fa-AF-u-nu-latn", &FA_AF_U_NU_LATN), ("fa-u-nu-latn", &FA_AF_U_NU_LATN), ("ff-Adlm", &FF_ADLM), ("ff-Adlm-BF-u-nu-latn", &FF_ADLM_BF_U_NU_LATN), ("ff-Adlm-CM-u-nu-latn", &FF_ADLM_BF_U_NU_LATN), ("ff-Adlm-GH-u-nu-latn", &FF_ADLM_BF_U_NU_LATN), ("ff-Adlm-GM-u-nu-latn", &FF_ADLM_BF_U_NU_LATN), ("ff-Adlm-GW-u-nu-latn", &FF_ADLM_BF_U_NU_LATN), ("ff-Adlm-LR-u-nu-latn", &FF_ADLM_BF_U_NU_LATN), ("ff-Adlm-MR-u-nu-latn", &FF_ADLM_BF_U_NU_LATN), ("ff-Adlm-NE-u-nu-latn", &FF_ADLM_BF_U_NU_LATN), ("ff-Adlm-NG-u-nu-latn", &FF_ADLM_BF_U_NU_LATN), ("ff-Adlm-SL-u-nu-latn", &FF_ADLM_BF_U_NU_LATN), ("ff-Adlm-SN-u-nu-latn", &FF_ADLM_BF_U_NU_LATN), ("ff-Adlm-u-nu-latn", &FF_ADLM_BF_U_NU_LATN), ("fi", &FI), ("fo", &EU), ("fr", &FR), ("fr-CA", &AF), ("fr-LU", &AST), ("fr-MA", &AST), ("fy", &AST), ("gl", &AST), ("gu", &AS_U_NU_LATN), ("gu-u-nu-gujr", &GU_U_NU_GUJR), ("he", &AR_AE), ("hi", &AS_U_NU_LATN), ("hi-u-nu-deva", &BRX_U_NU_DEVA), ("hr", &EU), ("hsb", &AST), ("hu", &BE), ("hy", &AF), ("ia", &ES), ("id", &AST), ("ie", &AF), ("is", &AST), ("it", &AST), ("it-CH", &DE_CH), ("jv", &AST), ("jv-u-nu-java", &JV_U_NU_JAVA), ("ka", &BE), ("kea", &AF), ("kgp", &AST), ("kk", &AF), ("km-u-nu-khmr", &KM_U_NU_KHMR), ("kn-u-nu-knda", &KN_U_NU_KNDA), ("kok-u-nu-deva", &BGC), ("ks", &KS), ("ks-u-nu-latn", &KS_U_NU_LATN), ("ku", &AST), ("kxv", &AS_U_NU_LATN), ("kxv-Deva", &AS_U_NU_LATN), ("kxv-Deva-u-nu-deva", &BRX_U_NU_DEVA), ("kxv-Orya", &AS_U_NU_LATN), ("kxv-Orya-u-nu-orya", &KXV_ORYA_U_NU_ORYA), ("kxv-Telu", &AS_U_NU_LATN), ("kxv-Telu-u-nu-telu", &KXV_TELU_U_NU_TELU), ("ky", &AF), ("lb", &AST), ("lij", &AST), ("lmo", &LMO), ("lo", &AST), ("lo-u-nu-laoo", &LO_U_NU_LAOO), ("lt", &FI), ("lv", &BE), ("mai-u-nu-deva", &BGC), ("mk", &AST), ("ml", &AS_U_NU_LATN), ("ml-u-nu-mlym", &ML_U_NU_MLYM), ("mni", &MNI), ("mni-u-nu-latn", &BGC_U_NU_LATN), ("mr", &BRX_U_NU_DEVA), ("mr-u-nu-latn", &AS_U_NU_LATN), ("ms-BN", &AST), ("ms-ID", &AST), ("my", &MY), ("my-u-nu-latn", &BGC_U_NU_LATN), ("nds", &AST), ("ne", &BRX_U_NU_DEVA), ("ne-IN-u-nu-latn", &AS_U_NU_LATN), ("ne-u-nu-latn", &AS_U_NU_LATN), ("nl", &AST), ("no", &FI), ("nqo", &NQO), ("nqo-u-nu-latn", &KS_U_NU_LATN), ("oc", &AF), ("or", &AS_U_NU_LATN), ("or-u-nu-orya", &KXV_ORYA_U_NU_ORYA), ("pa", &AS_U_NU_LATN), ("pa-u-nu-guru", &PA_U_NU_GURU), ("pl", &BE), ("prg", &AF), ("ps", &KS), ("ps-PK-u-nu-latn", &PS_PK_U_NU_LATN), ("ps-u-nu-latn", &PS_PK_U_NU_LATN), ("pt", &AST), ("pt-AO", &AF), ("pt-PT", &BE), ("qu-BO", &AST), ("raj", &BGC), ("raj-u-nu-latn", &BGC_U_NU_LATN), ("rm", &RM), ("ro", &AST), ("ru", &AF), ("ru-UA", &BE), ("sa", &BRX_U_NU_DEVA), ("sa-u-nu-latn", &AS_U_NU_LATN), ("sah", &AF), ("sat", &SAT), ("sat-u-nu-latn", &BGC_U_NU_LATN), ("sc", &AST), ("sd", &AR), ("sd-u-nu-latn", &BGC_U_NU_LATN), ("sk", &AF), ("sl", &EU), ("sq", &BE), ("sr", &AST), ("sr-Latn", &AST), ("su", &AST), ("sv", &FI), ("sw-CD", &AST), ("szl", &AF), ("ta", &AS_U_NU_LATN), ("ta-LK-u-nu-tamldec", &TA_LK_U_NU_TAMLDEC), ("ta-MY", &BGC_U_NU_LATN), ("ta-MY-u-nu-tamldec", &TA_MY_U_NU_TAMLDEC), ("ta-SG", &BGC_U_NU_LATN), ("ta-SG-u-nu-tamldec", &TA_MY_U_NU_TAMLDEC), ("ta-u-nu-tamldec", &TA_LK_U_NU_TAMLDEC), ("te", &AS_U_NU_LATN), ("te-u-nu-telu", &TE_U_NU_TELU), ("tg", &AF), ("th-u-nu-thai", &TH_U_NU_THAI), ("tk", &AF), ("tr", &AST), ("tt", &AF), ("ug-u-nu-arabext", &KS), ("uk", &AF), ("und", &BGC_U_NU_LATN), ("ur", &AR_AE), ("ur-IN", &KS), ("ur-IN-u-nu-latn", &AR_AE), ("ur-u-nu-arabext", &KS), ("uz", &AF), ("uz-Cyrl", &AF), ("vec", &FR), ("vi", &AST), ("vmw", &AST), ("wo", &AST), ("xh", &XH), ("xnr", &AS_U_NU_LATN), ("xnr-u-nu-deva", &BRX_U_NU_DEVA), ("yrl", &AST), ("yue-Hans-u-nu-hanidec", &YUE_HANS_U_NU_HANIDEC), ("yue-u-nu-hanidec", &YUE_HANS_U_NU_HANIDEC), ("zh-HK-u-nu-hanidec", &YUE_HANS_U_NU_HANIDEC), ("zh-Hant-u-nu-hanidec", &YUE_HANS_U_NU_HANIDEC), ("zh-MO-u-nu-hanidec", &YUE_HANS_U_NU_HANIDEC), ("zh-SG-u-nu-hanidec", &YUE_HANS_U_NU_HANIDEC), ("zh-u-nu-hanidec", &YUE_HANS_U_NU_HANIDEC)];
                fn lookup(req: icu_provider::DataRequest) -> Option<&'static <icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DynamicDataMarker>::Yokeable> {
                    DATA.binary_search_by(|(k, _)| req.legacy_cmp(k.as_bytes()).reverse()).map(|i| (*unsafe { DATA.get_unchecked(i) }).1).ok()
                }
                let mut metadata = icu_provider::DataResponseMetadata::default();
                let payload = if let Some(payload) = lookup(req) {
                    payload
                } else {
                    const FALLBACKER: icu::locale::fallback::LocaleFallbackerWithConfig<'static> = icu::locale::fallback::LocaleFallbacker::new().for_config(<icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::INFO.fallback_config);
                    let mut fallback_iterator = FALLBACKER.fallback_for(req.locale.clone());
                    loop {
                        if let Some(payload) = lookup(icu_provider::DataRequest { locale: fallback_iterator.get(), ..req }) {
                            metadata.locale = Some(fallback_iterator.take());
                            break payload;
                        }
                        if fallback_iterator.get().is_und() {
                            return Err(icu_provider::DataErrorKind::MissingLocale.with_req(<icu::decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::INFO, req));
                        }
                        fallback_iterator.step();
                    }
                };
                Ok(icu_provider::DataResponse { payload: Some(icu_provider::DataPayload::from_static_ref(payload)), metadata })
            }
        }
    };
}
/// Implement `IterableDataProvider<DecimalSymbolsV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `DatagenDriver` for this marker.
#[doc(hidden)]
#[macro_export]
macro_rules! __impliterable_decimal_symbols_v1 {
    ($ provider : ty) => {
        #[clippy::msrv = "1.70"]
        impl icu_provider::datagen::IterableDataProvider<icu::decimal::provider::DecimalSymbolsV1Marker> for $provider {
            fn supported_requests(&self) -> Result<std::collections::HashSet<(icu_provider::DataLocale, icu_provider::DataMarkerAttributes)>, icu_provider::DataError> {
                Ok(["af", "ar", "ar-AE", "ar-AE-u-nu-arab", "ar-BH-u-nu-latn", "ar-DJ-u-nu-latn", "ar-DZ", "ar-DZ-u-nu-arab", "ar-EG-u-nu-latn", "ar-EH", "ar-EH-u-nu-arab", "ar-ER-u-nu-latn", "ar-IL-u-nu-latn", "ar-IQ-u-nu-latn", "ar-JO-u-nu-latn", "ar-KM-u-nu-latn", "ar-KW-u-nu-latn", "ar-LB-u-nu-latn", "ar-LY", "ar-LY-u-nu-arab", "ar-MA", "ar-MA-u-nu-arab", "ar-MR-u-nu-latn", "ar-OM-u-nu-latn", "ar-PS-u-nu-latn", "ar-QA-u-nu-latn", "ar-SA-u-nu-latn", "ar-SD-u-nu-latn", "ar-SO-u-nu-latn", "ar-SS-u-nu-latn", "ar-SY-u-nu-latn", "ar-TD-u-nu-latn", "ar-TN", "ar-TN-u-nu-arab", "ar-YE-u-nu-latn", "ar-u-nu-latn", "as", "as-u-nu-latn", "ast", "az", "be", "bg", "bgc", "bgc-u-nu-latn", "bho", "bho-u-nu-latn", "blo", "bn", "bn-IN-u-nu-latn", "bn-u-nu-latn", "br", "brx", "brx-u-nu-deva", "bs", "bs-Cyrl", "ca", "cs", "cv", "da", "de", "de-AT", "de-CH", "de-LI", "doi-u-nu-deva", "dsb", "el", "en-AT", "en-BE", "en-CH", "en-DE", "en-DK", "en-FI", "en-ID", "en-IN", "en-NL", "en-SE", "en-SI", "eo", "es", "es-419", "es-AR", "es-BO", "es-CL", "es-CO", "es-CR", "es-EC", "es-PY", "es-UY", "es-VE", "et", "eu", "fa", "fa-AF-u-nu-latn", "fa-u-nu-latn", "ff-Adlm", "ff-Adlm-BF-u-nu-latn", "ff-Adlm-CM-u-nu-latn", "ff-Adlm-GH-u-nu-latn", "ff-Adlm-GM-u-nu-latn", "ff-Adlm-GW-u-nu-latn", "ff-Adlm-LR-u-nu-latn", "ff-Adlm-MR-u-nu-latn", "ff-Adlm-NE-u-nu-latn", "ff-Adlm-NG-u-nu-latn", "ff-Adlm-SL-u-nu-latn", "ff-Adlm-SN-u-nu-latn", "ff-Adlm-u-nu-latn", "fi", "fo", "fr", "fr-CA", "fr-LU", "fr-MA", "fy", "gl", "gu", "gu-u-nu-gujr", "he", "hi", "hi-u-nu-deva", "hr", "hsb", "hu", "hy", "ia", "id", "ie", "is", "it", "it-CH", "jv", "jv-u-nu-java", "ka", "kea", "kgp", "kk", "km-u-nu-khmr", "kn-u-nu-knda", "kok-u-nu-deva", "ks", "ks-u-nu-latn", "ku", "kxv", "kxv-Deva", "kxv-Deva-u-nu-deva", "kxv-Orya", "kxv-Orya-u-nu-orya", "kxv-Telu", "kxv-Telu-u-nu-telu", "ky", "lb", "lij", "lmo", "lo", "lo-u-nu-laoo", "lt", "lv", "mai-u-nu-deva", "mk", "ml", "ml-u-nu-mlym", "mni", "mni-u-nu-latn", "mr", "mr-u-nu-latn", "ms-BN", "ms-ID", "my", "my-u-nu-latn", "nds", "ne", "ne-IN-u-nu-latn", "ne-u-nu-latn", "nl", "no", "nqo", "nqo-u-nu-latn", "oc", "or", "or-u-nu-orya", "pa", "pa-u-nu-guru", "pl", "prg", "ps", "ps-PK-u-nu-latn", "ps-u-nu-latn", "pt", "pt-AO", "pt-PT", "qu-BO", "raj", "raj-u-nu-latn", "rm", "ro", "ru", "ru-UA", "sa", "sa-u-nu-latn", "sah", "sat", "sat-u-nu-latn", "sc", "sd", "sd-u-nu-latn", "sk", "sl", "sq", "sr", "sr-Latn", "su", "sv", "sw-CD", "szl", "ta", "ta-LK-u-nu-tamldec", "ta-MY", "ta-MY-u-nu-tamldec", "ta-SG", "ta-SG-u-nu-tamldec", "ta-u-nu-tamldec", "te", "te-u-nu-telu", "tg", "th-u-nu-thai", "tk", "tr", "tt", "ug-u-nu-arabext", "uk", "und", "ur", "ur-IN", "ur-IN-u-nu-latn", "ur-u-nu-arabext", "uz", "uz-Cyrl", "vec", "vi", "vmw", "wo", "xh", "xnr", "xnr-u-nu-deva", "yrl", "yue-Hans-u-nu-hanidec", "yue-u-nu-hanidec", "zh-HK-u-nu-hanidec", "zh-Hant-u-nu-hanidec", "zh-MO-u-nu-hanidec", "zh-SG-u-nu-hanidec", "zh-u-nu-hanidec"].into_iter().filter_map(icu_provider::DataRequest::legacy_decode).collect())
            }
        }
    };
}
