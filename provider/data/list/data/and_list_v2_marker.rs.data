// @generated
/// Implement `DataProvider<AndListV2Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
///
/// Using this implementation will embed the following data in the binary's data segment:
/// * 2099B for the lookup data structure (388 data identifiers)
/// * 42671B[^1] for the actual data (138 unique structs)
///
/// [^1]: these numbers can be smaller in practice due to linker deduplication
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_and_list_v2_marker {
    ($ provider : ty) => {
        #[clippy::msrv = "1.71.1"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.71.1"]
        impl $provider {
            const DATA_AND_LIST_V2_MARKER: icu_provider_baked::zerotrie::Data<icu::list::provider::AndListV2Marker> = icu_provider_baked::zerotrie::Data { trie: icu_provider_baked::zerotrie::ZeroTrieSimpleAscii { store: b"\xE1yabcdefghijklmnoprstuvwxyz\0\0\x01\x01\x01\x02\x02\x02\x03\x03\x04\x04\x04\x05\x05\x05\x05\x06\x06\x07\x07\x07\x07\x07U\xBD\x12G\xB4\x17S\xCA!;(d\xDD\x02\x10QtM\xC4\x06!+:y\xC6fkmrsz\x0C\x16 *@\x1E\xC3NSW\x01\x03\x80\x90\x07\x90\x07\x1E\xC3NSW\x01\x02\x81\x81\x81\x1E\xC3NSW\x01\x02\x82\x82\x82\x1E\xC3NSW\x01\x02\x83\x83\x83\xC2\x1Et\x08\xC2SW\x02\x90C\x90C\x1E\xC3NSW\x01\x02\x84\x84\x84\x1E\xC2SW\x02\x90D\x90D\xC6eglnrs\n\x14 )A\x1E\xC3NSW\x01\x02\x85\x85\x85\x1E\xC3NSW\x01\x02\x86\x8A\x8Ao\x1E\xC3NSW\x01\x02\x87\x87\x90e\x1E\xC2SW\x02\x90E\x90E\xC2\x1Ex\n\xC3NSW\x01\x02\x87\x87\x90q\x1E\xC3NSW\x01\x02\x88\x88\x88\xC2\x1E-\t\xC3NSW\x01\x02\x89\x89\x89Cyrl\x1E\xC3NSW\x01\x02\x8A\x8A\x8A\xC6aehsvy\n\x14!7@\x1E\xC3NSW\x01\x02\x89\x89\x89b\x1E\xC2SW\x02\x90F\x90Fr\x1E\xC3NSW\x01\x03\x8B\x90=\x90r\xC2\x1Ew\x08\xC2SW\x02\x90G\x90G\x1E\xC3NSW\x01\x02\x8C\x8C\x8C\x1E\xC2SW\x02\x90H\x90H\x1E\xC2SW\x02\x90I\x90I\xC4aeos\n\x14\x1F\x1E\xC3NSW\x01\x02\x8D\x8D\x8D\x1E\xC3NSW\x01\x02\x8E\x8E\x8Ei\x1E\xC3NSW\x01\x02\x8F\x8F\x8Fb\x1E\xC3NSW\x02\x04\x90\0\x90\0\x90\0\xC6elnstu\r\x16BOX\x1E\xC3NSW\x02\x04\x90\x01\x90\x01\x90\x01\x1E\xC2SW\x02\x90J\x90J\xC2\x1E-\x08\xC2SW\x02\x90=\x90:\xC30CI\x0B\x1501\x1E\xC2SW\x02\x90K\x90KA\x1E\xC2SW\x02\x90K\x90KN\x1EN\x90\x02\x1E\xC3NSW\x02\x04\x90\x03\x90\x03\x90\x03\x1E\xC2SW\x02\x90\x06\x90\x06\x1E\xC2SW\x02\x90L\x90L\xC6afiory\r\x1F8AJ\x1E\xC3NSW\x02\x04\x90\x04\x90M\x90M-Adlm\x1E\xC3NSW\x02\x04\x90\x05\x90N\x90s\xC2\x1El\x0C\xC3NSW\x02\x04\x90\x06\x90\x06\x90\x06\x1E\xC2SW\x02\x90O\x90O\x1E\xC2SW\x02\x90=\x90t\x1E\xC2SW\x02\x90P\x90P\x1E\xC3NSW\x02\x04\x90\x07\x90\x07\x90\x07\xC4adlu\x15\x1E+\xC2\x1Ea\x08\xC2SW\x02\x90Q\x90Q\x1E\xC2NS\x02\x90\x08\x90\x08\x1E\xC2SW\x02\x90R\x90Q\x1E\xC3NSW\x02\x04\x90\t\x90\t\x90\t\x1E\xC2SW\x02\x90S\x90S\xC7aeirsuy\r\x1A;ES`\x1E\xC3NSW\x02\x04\x90\n\x90\n\x90\n\x1E\xC3NSW\x02\x04\x90\x0B\x90\x0B\x90\x0B\xC2\x1E-\x0C\xC3NSW\x02\x04\x90\x0C\x90\x0C\x90!Latn\x1E\xC3NSW\x02\x04\x90\r\x90T\x90T\x1E\xC3NSW\x01\x02\x89\x89\x89b\x1E\xC3NSW\x02\x04\x90\0\x90\0\x90\0\x1E\xC3NSW\x02\x04\x90\x0E\x90\x0E\x90\x0E\x1E\xC2SW\x02\x90U\x90U\xC7adegist\t\x12\x1F(5<\x1E\xC2SW\x02\x90\t\x90\t\x1E\xC2SW\x02\x90V\x90V\x1E\xC3NSW\x02\x04\x90\x0F\x90\x0F\x90\x0F\x1E\xC2SW\x02\x90W\x90W\x1E\xC3NSW\x02\x04\x90\x10\x90\x10\x90\x10\x1E\xC2SW\x01\x8D\x8D\x1E\xC3NSW\x02\x04\x90\t\x90\t\x90\t\xC2av\r\x1E\xC3NSW\x02\x04\x90\x11\x90\x11\x90\x11\x1E\xC2SW\x02\x90X\x90X\xCBaegkmnosuxy\r\x18\"/8AUv\x83\xCA\x1E\xC3NSW\x02\x04\x90\x12\x90\x12\x90\x12a\x1E\xC3NSW\x01\x02\x89\x89\x89p\x1E\xC2SW\x02\x90Y\x90Y\x1E\xC3NSW\x02\x04\x90\x13\x90\x13\x90\x13\x1E\xC2SW\x02\x90Z\x90u\x1E\xC2SW\x02\x90[\x90[\xC2\x1Ek\x0C\xC3NSW\x02\x04\x90\x14\x90\x14\x90\x14\x1ES\x90=\xC2\x1E-\x0C\xC3NSW\x02\x04\x90\x15\x90\x15\x90\x15Deva\x1E\xC3NSW\x02\x04\x90\x16\x90\x16\x90\x16\x1E\xC3NSW\x02\x04\x90\x17\x90\x17\x90\x17v\xC2\x1E-\x0C\xC3NSW\x02\x04\x90\x18\x90\x18\x90\x18\xC3DOT\x10 eva\x1E\xC3NSW\x02\x04\x90\x19\x90\x19\x90\x19rya\x1E\xC3NSW\x02\x04\x90\x1A\x90\x1A\x90\x1Aelu\x1E\xC3NSW\x02\x04\x90\x1B\x90\x1B\x90\x1B\x1E\xC3NSW\x02\x04\x90\x1C\x90\x1C\x90\x1C\xC4botv\r\x1A'\x1E\xC3NSW\x02\x04\x90\x1D\x90\x1D\x90\x1D\x1E\xC3NSW\x02\x04\x90\x1E\x90\\\x90\x1E\x1E\xC3NSW\x02\x04\x90\x1F\x90\x1F\x90\x1F\x1E\xC3NSW\x02\x04\x90 \x90 \x90 \xC9aiklnrsty\x0E\x12\x1C)7DMZi\x1E\xC3NSW\x02\x04\x90!\x90!\x90!\x1ES\x90=\x1E\xC3NSW\x01\x02\x8A\x8A\x8A\x1E\xC3NSW\x02\x04\x90\"\x90]\x90]i\x1E\xC3NSW\x02\x04\x90#\x90#\x90#\x1E\xC3NSW\x02\x04\x90$\x90$\x90$\x1E\xC2SW\x02\x90^\x90^\x1E\xC3NSW\x02\x04\x90%\x90%\x90%\x1E\xC3NSW\x02\x04\x90&\x90&\x90&\xC3elo\r\x15\x1E\xC3NSW\x02\x04\x90'\x90_\x90_\x1E\xC2SW\x01\x87\x90\x07\x1E\xC3NSW\x01\x02\x8D\x8D\x8Dr\x1E\xC3NSW\x02\x04\x90(\x90(\x90(\xC5aclst\t\x17!.\x1E\xC2SW\x02\x90`\x90`m\x1E\xC3NSW\x02\x04\x90)\x90=\x90v\x1E\xC3NSW\x01\x02\x89\x89\x89\x1E\xC3NSW\x02\x04\x90*\x90a\x90a\x1E\xC2SW\x02\x90\t\x90\t\xC3mou\r\x16\x1E\xC3NSW\x02\x04\x90\t\x90\t\x90\t\x1E\xC2SW\x02\x90b\x90b\x1E\xC2SW\x01\x8A\x8A\xCDacdikloqruvwy\x1D*7DQ^fs\x8E\x9B\xA4\xB1\xC2\x1Eh\x0C\xC3NSW\x02\x04\x90+\x90+\x90+\x1E\xC3NSW\x02\x04\x90,\x90,\x90,\x1E\xC3NSW\x02\x04\x90\t\x90\t\x90\t\x1E\xC3NSW\x02\x04\x90-\x90c\x90c\x1E\xC3NSW\x02\x04\x90.\x90.\x90.\x1E\xC3NSW\x02\x04\x90/\x90/\x90/\x1E\xC3NSW\x02\x04\x900\x900\x900\x1E\xC2SW\x01\x87\x90w\x1E\xC3NSW\x02\x04\x901\x901\x901\xC2\x1E-\t\xC3NSW\x01\x02\x8A\x8A\x8ALatn\x1E\xC3NSW\x01\x02\x89\x89\x89\x1E\xC3NSW\x02\x04\x902\x902\x902\x1E\xC2SW\x02\x90d\x90d\x1E\xC3NSW\x02\x04\x903\x90e\x90er\x1E\xC3NSW\x02\x04\x904\x904\x904\xC9aeghikort\r\x16#0=FS\\\x1E\xC3NSW\x02\x04\x905\x905\x905\x1E\xC2SW\x02\x90f\x90f\x1E\xC3NSW\x02\x04\x906\x906\x906\x1E\xC3NSW\x02\x04\x907\x907\x907\x1E\xC3NSW\x02\x04\x908\x90g\x90g\x1E\xC2SW\x02\x90h\x90h\x1E\xC3NSW\x02\x04\x909\x909\x909\x1E\xC2SW\x02\x90i\x90i\x1E\xC2SW\x02\x90j\x90j\xC5gknrz\r\x14\"/\x1E\xC3NSW\x02\x04\x90:\x90:\x90:\x1E\xC2SW\x01\x85\x85d\x1E\xC3NSW\x02\x04\x90;\x90;\x90;\x1E\xC3NSW\x02\x04\x90<\x90k\x90k\x1E\xC2SW\x02\x90l\x90l\xC2ei\x0Ec\x1E\xC3NSW\x02\x04\x90\x0F\x90\t\x90\t\x1E\xC2SW\x02\x90m\x90mo\x1E\xC2NS\x02\x90=\x90=nr\x1E\xC3NSW\x02\x04\x90>\x90>\x90x\xC3oru\r\x17\x1E\xC3NSW\x02\x04\x90?\x90?\x90yl\x1E\xC2SW\x02\x90n\x90ne\xC2\x1E-\x0C\xC3NSW\x02\x04\x90@\x90@\x90@Hans\x1E\xC3NSW\x02\x04\x90@\x90@\x90@\xC2huB\xC2\x1E-\x0C\xC3NSW\x02\x04\x90\x11\x90o\x90o\xC2HM \xC2Ka\r\x1E\xC3NSW\x02\x04\x90A\x90A\x90Ant\x1E\xC3NSW\x02\x04\x90B\x90o\x90oO\x1E\xC3NSW\x02\x04\x90A\x90A\x90A\x1E\xC2SW\x02\x90p\x90p" }, values: &[icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" en ", 4u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", ne ", 5u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" ne ", 4u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts("፣ ", 4u8), middle: alloc::borrow::Cow::Borrowed("፣ "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" እና ", 8u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(" و", 3u8), middle: alloc::borrow::Cow::Borrowed(" و"), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" و", 3u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" y ", 3u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" і ", 4u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" и ", 4u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" & ", 3u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", आरो ", 12u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" आरो ", 11u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" i ", 3u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" и ", 4u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", & ", 4u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" ᐊᐠᐘ ", 11u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" og ", 4u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" und ", 5u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", त\u{947} ", 9u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" त\u{947} ", 8u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" a ", 3u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", kple ", 7u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" kple ", 6u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", and ", 6u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" y ", 3u8), special_case: Some(icu::list::provider::SpecialCasePattern { condition: unsafe { icu::list::provider::SerdeDFA::from_dfa_bytes_unchecked(if cfg!(target_endian = "little") { b"rust-regex-automata-dfa-sparse\0\0\xFF\xFE\0\0\x02\0\0\0\0\0\0\0\x02\0\0\0\x0E\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\x02\x02\x02\x03\x04\x04\x05\x06\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x08\t\t\t\n\x0B\x0B\x0C\r\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0F\x0F\x0F\x0F\x0F\x0F\x0F\x0F\x0F\x0F\x0F\x0F\x0F\x0F\x0F\x0F\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x12\x12\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x14\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x16\x17\x17\x18\x19\x19\x19\x1A\x1B\x1B\x1B\x1B\x1B\x1B\x1B\x1B\x1B\x1B\x1B(\x01\0\0\x01\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\x01\x80\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\x05\0\x05\x05\x06\x06\x0C\x0C\r\r\0\0S\0\0\0D\0\0\0S\0\0\0D\0\0\0\0\0\0\0\0\x02\0\0\x1B\0\0\x12\0\0\0\x12\0\0\0\0\x03\0\x06\x06\r\r\0\0h\0\0\0h\0\0\0\0\0\0\0\0\x0E\0\0\0\x02\x02\x04\x07\t\t\x0B\x0E\x13\x13\x14\x14\x15\x15\x16\x16\x17\x17\x18\x18\x19\x19\x1A\x1A\0\0D\0\0\0D\0\0\0D\0\0\0D\0\0\0D\0\0\0\xBF\0\0\0\xCE\0\0\0\xDD\0\0\0\xEC\0\0\0\xDD\0\0\0\xFB\0\0\0\n\x01\0\0\x19\x01\0\0\x12\0\0\0\0\x02\0\x0F\x11\0\0D\0\0\0\0\0\0\0\0\x02\0\x11\x11\0\0\xBF\0\0\0\0\0\0\0\0\x02\0\x0F\x11\0\0\xBF\0\0\0\0\0\0\0\0\x02\0\x0F\x10\0\0\xBF\0\0\0\0\0\0\0\0\x02\0\x10\x11\0\0\xDD\0\0\0\0\0\0\0\0\x02\0\x0F\x11\0\0\xDD\0\0\0\0\0\0\0\0\x02\0\x0F\x0F\0\0\xDD\0\0\0\0\0\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\0\0\0\0\0\0\0\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\0\0\0\0\x01\0\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x06\0\0\0\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF`\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0#\0\0\0#\0\0\0#\0\0\0#\0\0\0#\0\0\0#\0\0\0\x12\0\0\0\t\0\0\0\x12\0\0\0\x12\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" } else { b"rust-regex-automata-dfa-sparse\0\0\0\0\xFE\xFF\0\0\0\x02\0\0\0\0\0\0\0\x02\0\0\0\x0E\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\x02\x02\x02\x03\x04\x04\x05\x06\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x08\t\t\t\n\x0B\x0B\x0C\r\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0F\x0F\x0F\x0F\x0F\x0F\x0F\x0F\x0F\x0F\x0F\x0F\x0F\x0F\x0F\x0F\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x12\x12\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x14\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x15\x16\x17\x17\x18\x19\x19\x19\x1A\x1B\x1B\x1B\x1B\x1B\x1B\x1B\x1B\x1B\x1B\x1B\0\0\x01(\0\x01\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x80\x01\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\x05\x05\x05\x06\x06\x0C\x0C\r\r\0\0\0\0\0S\0\0\0D\0\0\0S\0\0\0D\0\0\0\0\0\0\x02\0\x1B\0\0\0\0\0\x12\0\0\0\x12\0\0\x03\x06\x06\r\r\0\0\0\0\0h\0\0\0h\0\0\0\0\0\0\x0E\0\0\x02\x02\x04\x07\t\t\x0B\x0E\x13\x13\x14\x14\x15\x15\x16\x16\x17\x17\x18\x18\x19\x19\x1A\x1A\0\0\0\0\0D\0\0\0D\0\0\0D\0\0\0D\0\0\0D\0\0\0\xBF\0\0\0\xCE\0\0\0\xDD\0\0\0\xEC\0\0\0\xDD\0\0\0\xFB\0\0\x01\n\0\0\x01\x19\0\0\0\x12\0\0\x02\x0F\x11\0\0\0\0\0D\0\0\0\0\0\0\x02\x11\x11\0\0\0\0\0\xBF\0\0\0\0\0\0\x02\x0F\x11\0\0\0\0\0\xBF\0\0\0\0\0\0\x02\x0F\x10\0\0\0\0\0\xBF\0\0\0\0\0\0\x02\x10\x11\0\0\0\0\0\xDD\0\0\0\0\0\0\x02\x0F\x11\0\0\0\0\0\xDD\0\0\0\0\0\0\x02\x0F\x0F\0\0\0\0\0\xDD\0\0\0\0\0\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\x03\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\0\0\0\0\0\0\0\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\0\0\0\0\x01\0\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x06\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\0\0\0`\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0#\0\0\0#\0\0\0#\0\0\0#\0\0\0#\0\0\0#\0\0\0\x12\0\0\0\t\0\0\0\x12\0\0\0\x12\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" }) }, pattern: icu::list::provider::ListJoinerPattern::from_parts(" e ", 3u8) }) }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts("،\u{200f} ", 6u8), middle: alloc::borrow::Cow::Borrowed("،\u{200f} "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts("،\u{200f} ", 6u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts("⹁ ", 4u8), middle: alloc::borrow::Cow::Borrowed("⹁ "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts("⹁ ", 4u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" ja ", 4u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" en ", 4u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", kɛ ", 6u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" kɛ ", 5u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" e ", 3u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", da ", 5u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" da ", 4u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" ו", 3u8), special_case: Some(icu::list::provider::SpecialCasePattern { condition: unsafe { icu::list::provider::SerdeDFA::from_dfa_bytes_unchecked(if cfg!(target_endian = "little") { b"rust-regex-automata-dfa-sparse\0\0\xFF\xFE\0\0\x02\0\0\0\0\0\0\0\x02\0\0\0\x11\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\x01\x02\x03\x03\x04\x05\x05\x06\x06\x06\x06\x06\x06\x06\x06\x07\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\t\t\t\n\n\n\n\n\n\n\n\n\n\n\x0B\x0C\r\x0E\x0F\x0F\x0F\x0F\x0F\x0F\x10\x10\x11\x12\x12\x12\x12\x12\x13\x14\x15\x16\x16\x17\x17\x17\x17\x17\x17\x17\x17\x17\x17\x17\x17\x17\x17\x17\x17\x17\x17\x17\x17\x18\x19\x1A\x1A\x1A\x1A\x1A\x1A\x1A\x1A\x1B\x1C\x1C\x1C\x1C\x1C\x1C\x1C\x1C\x1C\x1C\x1C\x1C\x1D\x1E\x1F !!!\"###########y\x01\0\0\x01\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\x01\x80\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\x0E\0\0\0\x17\x17\x18\x18\x19\x19\x1A\x1A\x1B\x1B\x1C\x1C\x1D\x1D\x1E\x1E\x1F\x1F  !!\"\"\0\0j\x01\0\0z\0\0\0\x89\0\0\0\x98\0\0\0z\0\0\0\xB3\0\0\0\xC2\0\0\0\xD1\0\0\0\xC2\0\0\0\xE0\0\0\0\x01\x01\0\0\x10\x01\0\0\x1F\x01\0\0\0\0\0\0\0\x02\0\x01\x15\0\0j\x01\0\0\0\0\0\0\0\x02\0\x01\x07\0\0j\x01\0\0\0\0\0\0\0\x04\0\x06\x06\x0B\x0E\x10\x15\0\0j\x01\0\0j\x01\0\0j\x01\0\0\0\0\0\0\0\x02\0\n\x15\0\0z\0\0\0\0\0\0\0\0\x02\0\x01\x15\0\0z\0\0\0\0\0\0\0\0\x02\0\x01\t\0\0z\0\0\0\0\0\0\0\0\x05\0\x01\x0B\x0C\x0C\r\r\x0E\x15\0\0z\0\0\0.\x01\0\0O\x01\0\0z\0\0\0\0\0\0\0\0\x02\0\x07\x15\0\0\xC2\0\0\0\0\0\0\0\0\x02\0\x01\x15\0\0\xC2\0\0\0\0\0\0\0\0\x02\0\x01\x06\0\0\xC2\0\0\0\0\0\0\0\0\x05\0\x01\x08\x11\x11\x13\x13\x15\x15\0\0j\x01\0\0j\x01\0\0j\x01\0\0j\x01\0\0\0\0\0\0\0\x04\0\x02\x02\x04\x04\x07\x15\0\0j\x01\0\0j\x01\0\0j\x01\0\0\0\0\0\0\0\x02\0\0#\0\0\x12\0\0\0\x12\0\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\0\0\0\0\0\0\0\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\0\0\0\0\x01\0\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x06\0\0\0\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xC0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0#\0\0\0#\0\0\0#\0\0\0#\0\0\0#\0\0\0#\0\0\0\x12\0\0\0\t\0\0\0\x12\0\0\0\x12\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" } else { b"rust-regex-automata-dfa-sparse\0\0\0\0\xFE\xFF\0\0\0\x02\0\0\0\0\0\0\0\x02\0\0\0\x11\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\x01\x02\x03\x03\x04\x05\x05\x06\x06\x06\x06\x06\x06\x06\x06\x07\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\t\t\t\n\n\n\n\n\n\n\n\n\n\n\x0B\x0C\r\x0E\x0F\x0F\x0F\x0F\x0F\x0F\x10\x10\x11\x12\x12\x12\x12\x12\x13\x14\x15\x16\x16\x17\x17\x17\x17\x17\x17\x17\x17\x17\x17\x17\x17\x17\x17\x17\x17\x17\x17\x17\x17\x18\x19\x1A\x1A\x1A\x1A\x1A\x1A\x1A\x1A\x1B\x1C\x1C\x1C\x1C\x1C\x1C\x1C\x1C\x1C\x1C\x1C\x1C\x1D\x1E\x1F !!!\"###########\0\0\x01y\0\x01\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x80\x01\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\x0E\0\0\x17\x17\x18\x18\x19\x19\x1A\x1A\x1B\x1B\x1C\x1C\x1D\x1D\x1E\x1E\x1F\x1F  !!\"\"\0\0\0\0\x01j\0\0\0z\0\0\0\x89\0\0\0\x98\0\0\0z\0\0\0\xB3\0\0\0\xC2\0\0\0\xD1\0\0\0\xC2\0\0\0\xE0\0\0\x01\x01\0\0\x01\x10\0\0\x01\x1F\0\0\0\0\0\0\x02\x01\x15\0\0\0\0\x01j\0\0\0\0\0\0\x02\x01\x07\0\0\0\0\x01j\0\0\0\0\0\0\x04\x06\x06\x0B\x0E\x10\x15\0\0\0\0\x01j\0\0\x01j\0\0\x01j\0\0\0\0\0\0\x02\n\x15\0\0\0\0\0z\0\0\0\0\0\0\x02\x01\x15\0\0\0\0\0z\0\0\0\0\0\0\x02\x01\t\0\0\0\0\0z\0\0\0\0\0\0\x05\x01\x0B\x0C\x0C\r\r\x0E\x15\0\0\0\0\0z\0\0\x01.\0\0\x01O\0\0\0z\0\0\0\0\0\0\x02\x07\x15\0\0\0\0\0\xC2\0\0\0\0\0\0\x02\x01\x15\0\0\0\0\0\xC2\0\0\0\0\0\0\x02\x01\x06\0\0\0\0\0\xC2\0\0\0\0\0\0\x05\x01\x08\x11\x11\x13\x13\x15\x15\0\0\0\0\x01j\0\0\x01j\0\0\x01j\0\0\x01j\0\0\0\0\0\0\x04\x02\x02\x04\x04\x07\x15\0\0\0\0\x01j\0\0\x01j\0\0\x01j\0\0\0\0\0\0\x02\0#\0\0\0\0\0\x12\0\0\0\x12\0\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\x03\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\0\0\0\0\0\0\0\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\0\0\0\0\x01\0\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x06\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\0\0\0\xC0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0#\0\0\0#\0\0\0#\0\0\0#\0\0\0#\0\0\0#\0\0\0\x12\0\0\0\t\0\0\0\x12\0\0\0\x12\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" }) }, pattern: icu::list::provider::ListJoinerPattern::from_parts(" ו‑", 6u8) }) }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" और ", 8u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" aur ", 5u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" és ", 5u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" e ", 3u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts("、", 3u8), middle: alloc::borrow::Cow::Borrowed("、"), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts("ꌋꆀ", 6u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts("、", 3u8), middle: alloc::borrow::Cow::Borrowed("、"), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts("、", 3u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" და ", 8u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" және ", 10u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" 및 ", 5u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts("، ", 3u8), middle: alloc::borrow::Cow::Borrowed("، "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts("، ت\u{655}ہ ", 10u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" ت\u{655}ہ ", 8u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", ति ", 9u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" ति ", 8u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" û ", 4u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", aḍe ", 8u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" aḍe ", 7u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", ऑड\u{93c}\u{947} ", 15u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" ऑड\u{93c}\u{947} ", 14u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", ଅଡ\u{b3c}େ ", 15u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" ଅଡ\u{b3c}େ ", 14u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", మర\u{c3f}యు ", 18u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" మర\u{c3f}యు ", 17u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" жана ", 10u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" a(n) ", 6u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" ແລະ ", 11u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" ir ", 4u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" un ", 4u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", और ", 9u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" और ", 8u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(",  എന\u{d4d}നിവ", 2u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" অমস\u{9c1}ং ", 17u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" आणि ", 11u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", u ", 4u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" u ", 3u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(" - ", 3u8), middle: alloc::borrow::Cow::Borrowed(" - "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts("န\u{103e}င\u{1037}\u{103a} ", 16u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(",", 1u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", ଓ ", 6u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" ଓ ", 5u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", ọ ", 6u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts("، ", 3u8), middle: alloc::borrow::Cow::Borrowed("، "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts("، او ", 8u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts("، ", 3u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", तथा ", 12u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" तथा ", 11u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" уонна ", 12u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts("، ", 3u8), middle: alloc::borrow::Cow::Borrowed("، "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts("، ", 3u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", සහ ", 9u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" සහ ", 8u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" a ", 3u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" a\u{a0}", 4u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" in ", 4u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" dhe ", 5u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", sareng ", 9u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" sareng ", 8u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" na ", 4u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(" ܘ", 3u8), middle: alloc::borrow::Cow::Borrowed(" ܘ"), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" ܘ", 3u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" மற\u{bcd}றும\u{bcd} ", 23u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" ва ", 6u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(" ", 1u8), middle: alloc::borrow::Cow::Borrowed(" "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" และ", 10u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts("และ", 9u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts("፣ ", 4u8), middle: alloc::borrow::Cow::Borrowed("፣ "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts("ን ን", 4u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts("፣ ", 4u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(" mo ", 4u8), middle: alloc::borrow::Cow::Borrowed(" mo "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" mo ", 4u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", and ", 6u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" and ", 5u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts("، ", 3u8), middle: alloc::borrow::Cow::Borrowed("، "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts("، ", 3u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", & ", 4u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" & ", 3u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" कन\u{947} ", 11u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" àti ", 6u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" àti", 5u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts("、", 3u8), middle: alloc::borrow::Cow::Borrowed("、"), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts("同", 3u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts("、", 3u8), middle: alloc::borrow::Cow::Borrowed("、"), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts("及", 3u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts("、", 3u8), middle: alloc::borrow::Cow::Borrowed("、"), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts("和", 3u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts("、", 3u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" আৰ\u{9c1} ", 11u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" və ", 5u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" এবং ", 11u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", ug ", 5u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" ug ", 4u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" a\u{a0}", 4u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" тата ", 10u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", a(c) ", 7u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" a(c) ", 6u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" και ", 8u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" and ", 5u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" eta ", 5u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts("،\u{200f} ", 6u8), middle: alloc::borrow::Cow::Borrowed("،\u{200f} "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts("، و ", 6u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" و ", 4u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts("⹁ ", 4u8), middle: alloc::borrow::Cow::Borrowed("⹁ "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts("⹁ & ", 6u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" & ", 3u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", at ", 5u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" at ", 4u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" et ", 4u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" agus ", 6u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" ⁊ ", 5u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" અન\u{ac7} ", 11u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", aur ", 6u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" aur ", 5u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" և ", 4u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", dan ", 6u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" dan ", 5u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", na ", 5u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" na ", 4u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", lan ", 6u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" lan ", 5u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" kar ", 5u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" ន\u{17b7}ង ", 11u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", ಮತ\u{ccd}ತು ", 18u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" ಮತ\u{ccd}ತು ", 17u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" ແລະ ", 11u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(",  എന\u{d4d}നിവ", 2u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" ക\u{d42}ട\u{d3e}തെ ", 20u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" dan ", 5u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(",", 1u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" र ", 5u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" ਅਤ\u{a47} ", 11u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts("، ", 3u8), middle: alloc::borrow::Cow::Borrowed("، "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts("، او ", 8u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" او ", 6u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" și ", 5u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts("، ", 3u8), middle: alloc::borrow::Cow::Borrowed("، "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts("، ۽ ", 6u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" ۽ ", 4u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" och ", 5u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" na ", 4u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" మర\u{c3f}యు ", 17u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts("፣ ", 4u8), middle: alloc::borrow::Cow::Borrowed("፣ "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts("ን ን", 4u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" we ", 4u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" ve ", 4u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" һәм ", 8u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts("، ", 3u8), middle: alloc::borrow::Cow::Borrowed("، "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts("، اور ", 10u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" اور ", 8u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" va ", 4u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" và ", 5u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" asuí ", 7u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts("、", 3u8), middle: alloc::borrow::Cow::Borrowed("、"), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts("和", 3u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", ne-", 5u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" ne-", 4u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" ha ", 4u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", ᎠᎴ ", 9u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" ᎠᎴ ", 8u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts("⹁ ", 4u8), middle: alloc::borrow::Cow::Borrowed("⹁ "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts("⹁ 𞤫 ", 9u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" 𞤫 ", 6u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", og ", 5u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" og ", 4u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" ន\u{17b7}ង ", 11u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" ន\u{17b7}ង\u{200b}", 13u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", an ", 5u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" an ", 4u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" iyo ", 5u8), special_case: None }, pair: None }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", कन\u{947} ", 12u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" कन\u{947} ", 11u8), special_case: None }) }, icu::list::provider::ListFormatterPatternsV2 { start: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), middle: alloc::borrow::Cow::Borrowed(", "), end: icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(", ", 2u8), special_case: None }, pair: Some(icu::list::provider::ConditionalListJoinerPattern { default: icu::list::provider::ListJoinerPattern::from_parts(" àti", 5u8), special_case: None }) }] };
        }
        #[clippy::msrv = "1.71.1"]
        impl icu_provider::DataProvider<icu::list::provider::AndListV2Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::list::provider::AndListV2Marker>, icu_provider::DataError> {
                let mut metadata = icu_provider::DataResponseMetadata::default();
                let payload = if let Some(payload) = icu_provider_baked::DataStore::get(&Self::DATA_AND_LIST_V2_MARKER, req.id, req.metadata.attributes_prefix_match) {
                    payload
                } else {
                    const FALLBACKER: icu::locale::fallback::LocaleFallbackerWithConfig<'static> = icu::locale::fallback::LocaleFallbacker::new().for_config(<icu::list::provider::AndListV2Marker as icu_provider::DataMarker>::INFO.fallback_config);
                    let mut fallback_iterator = FALLBACKER.fallback_for(req.id.locale.clone());
                    loop {
                        if let Some(payload) = icu_provider_baked::DataStore::get(&Self::DATA_AND_LIST_V2_MARKER, icu_provider::DataIdentifierBorrowed::for_marker_attributes_and_locale(req.id.marker_attributes, fallback_iterator.get()), req.metadata.attributes_prefix_match) {
                            metadata.locale = Some(fallback_iterator.take());
                            break payload;
                        }
                        if fallback_iterator.get().is_default() {
                            return Err(icu_provider::DataErrorKind::IdentifierNotFound.with_req(<icu::list::provider::AndListV2Marker as icu_provider::DataMarker>::INFO, req));
                        }
                        fallback_iterator.step();
                    }
                };
                Ok(icu_provider::DataResponse { payload: icu_provider::DataPayload::from_static_ref(payload), metadata })
            }
        }
    };
    ($ provider : ty , ITER) => {
        __impl_and_list_v2_marker!($provider);
        #[clippy::msrv = "1.71.1"]
        impl icu_provider::IterableDataProvider<icu::list::provider::AndListV2Marker> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BTreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok(icu_provider_baked::DataStore::iter(&Self::DATA_AND_LIST_V2_MARKER).collect())
            }
        }
    };
    ($ provider : ty , DRY) => {};
    ($ provider : ty , DRY , ITER) => {
        __impl_and_list_v2_marker!($provider, ITER);
    };
}
#[doc(inline)]
pub use __impl_and_list_v2_marker as impl_and_list_v2_marker;
