// @generated
/// Implement `DataProvider<NfkdInertV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
///
/// Using this implementation will embed the following data in the binary's data segment:
/// * 3530B[^1] for the singleton data struct
///
/// [^1]: these numbers can be smaller in practice due to linker deduplication
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_nfkd_inert_v1_marker {
    ($ provider : ty) => {
        #[clippy::msrv = "1.71.1"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.71.1"]
        impl $provider {
            #[doc(hidden)]
            pub const SINGLETON_NFKD_INERT_V1_MARKER: &'static <icu::properties::provider::NfkdInertV1Marker as icu_provider::DynamicDataMarker>::DataStruct = &icu::properties::provider::PropertyCodePointSetV1::InversionList(unsafe {
                #[allow(unused_unsafe)]
                icu::collections::codepointinvlist::CodePointInversionList::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\0\0\0\xA0\0\0\xA1\0\0\xA8\0\0\xA9\0\0\xAA\0\0\xAB\0\0\xAF\0\0\xB0\0\0\xB2\0\0\xB6\0\0\xB8\0\0\xBB\0\0\xBC\0\0\xBF\0\0\xC0\0\0\xC6\0\0\xC7\0\0\xD0\0\0\xD1\0\0\xD7\0\0\xD9\0\0\xDE\0\0\xE0\0\0\xE6\0\0\xE7\0\0\xF0\0\0\xF1\0\0\xF7\0\0\xF9\0\0\xFE\0\0\xFF\0\0\x10\x01\0\x12\x01\0&\x01\0(\x01\x001\x01\x002\x01\08\x01\09\x01\0A\x01\0C\x01\0J\x01\0L\x01\0R\x01\0T\x01\0f\x01\0h\x01\0\x80\x01\0\xA0\x01\0\xA2\x01\0\xAF\x01\0\xB1\x01\0\xC4\x01\0\xDD\x01\0\xDE\x01\0\xE4\x01\0\xE6\x01\0\xF6\x01\0\xF8\x01\0\x1C\x02\0\x1E\x02\0 \x02\0&\x02\x004\x02\0\xB0\x02\0\xB9\x02\0\xD8\x02\0\xDE\x02\0\xE0\x02\0\xE5\x02\0\0\x03\0O\x03\0P\x03\0p\x03\0t\x03\0u\x03\0z\x03\0{\x03\0~\x03\0\x7F\x03\0\x84\x03\0\x8B\x03\0\x8C\x03\0\x8D\x03\0\x8E\x03\0\x91\x03\0\xAA\x03\0\xB1\x03\0\xCA\x03\0\xCF\x03\0\xD0\x03\0\xD7\x03\0\xF0\x03\0\xF3\x03\0\xF4\x03\0\xF6\x03\0\xF9\x03\0\xFA\x03\0\0\x04\0\x02\x04\0\x03\x04\0\x04\x04\0\x07\x04\0\x08\x04\0\x0C\x04\0\x0F\x04\0\x19\x04\0\x1A\x04\09\x04\0:\x04\0P\x04\0R\x04\0S\x04\0T\x04\0W\x04\0X\x04\0\\\x04\0_\x04\0v\x04\0x\x04\0\x83\x04\0\x88\x04\0\xC1\x04\0\xC3\x04\0\xD0\x04\0\xD4\x04\0\xD6\x04\0\xD8\x04\0\xDA\x04\0\xE0\x04\0\xE2\x04\0\xE8\x04\0\xEA\x04\0\xF6\x04\0\xF8\x04\0\xFA\x04\0\x87\x05\0\x88\x05\0\x91\x05\0\xBE\x05\0\xBF\x05\0\xC0\x05\0\xC1\x05\0\xC3\x05\0\xC4\x05\0\xC6\x05\0\xC7\x05\0\xC8\x05\0\x10\x06\0\x1B\x06\0\"\x06\0'\x06\0K\x06\0`\x06\0p\x06\0q\x06\0u\x06\0y\x06\0\xC0\x06\0\xC1\x06\0\xC2\x06\0\xC3\x06\0\xD3\x06\0\xD4\x06\0\xD6\x06\0\xDD\x06\0\xDF\x06\0\xE5\x06\0\xE7\x06\0\xE9\x06\0\xEA\x06\0\xEE\x06\0\x11\x07\0\x12\x07\x000\x07\0K\x07\0\xEB\x07\0\xF4\x07\0\xFD\x07\0\xFE\x07\0\x16\x08\0\x1A\x08\0\x1B\x08\0$\x08\0%\x08\0(\x08\0)\x08\0.\x08\0Y\x08\0\\\x08\0\x97\x08\0\xA0\x08\0\xCA\x08\0\xE2\x08\0\xE3\x08\0\0\t\0)\t\0*\t\x001\t\x002\t\x004\t\x005\t\0<\t\0=\t\0M\t\0N\t\0Q\t\0U\t\0X\t\0`\t\0\xBC\t\0\xBD\t\0\xCB\t\0\xCE\t\0\xDC\t\0\xDE\t\0\xDF\t\0\xE0\t\0\xFE\t\0\xFF\t\x003\n\x004\n\x006\n\x007\n\0<\n\0=\n\0M\n\0N\n\0Y\n\0\\\n\0^\n\0_\n\0\xBC\n\0\xBD\n\0\xCD\n\0\xCE\n\0<\x0B\0=\x0B\0H\x0B\0I\x0B\0K\x0B\0N\x0B\0\\\x0B\0^\x0B\0\x94\x0B\0\x95\x0B\0\xCA\x0B\0\xCE\x0B\0<\x0C\0=\x0C\0H\x0C\0I\x0C\0M\x0C\0N\x0C\0U\x0C\0W\x0C\0\xBC\x0C\0\xBD\x0C\0\xC0\x0C\0\xC1\x0C\0\xC7\x0C\0\xC9\x0C\0\xCA\x0C\0\xCC\x0C\0\xCD\x0C\0\xCE\x0C\0;\r\0=\r\0J\r\0N\r\0\xCA\r\0\xCB\r\0\xDA\r\0\xDB\r\0\xDC\r\0\xDF\r\x003\x0E\x004\x0E\08\x0E\0;\x0E\0H\x0E\0L\x0E\0\xB3\x0E\0\xB4\x0E\0\xB8\x0E\0\xBB\x0E\0\xC8\x0E\0\xCC\x0E\0\xDC\x0E\0\xDE\x0E\0\x0C\x0F\0\r\x0F\0\x18\x0F\0\x1A\x0F\x005\x0F\x006\x0F\x007\x0F\08\x0F\09\x0F\0:\x0F\0C\x0F\0D\x0F\0M\x0F\0N\x0F\0R\x0F\0S\x0F\0W\x0F\0X\x0F\0\\\x0F\0]\x0F\0i\x0F\0j\x0F\0q\x0F\0~\x0F\0\x80\x0F\0\x85\x0F\0\x86\x0F\0\x88\x0F\0\x93\x0F\0\x94\x0F\0\x9D\x0F\0\x9E\x0F\0\xA2\x0F\0\xA3\x0F\0\xA7\x0F\0\xA8\x0F\0\xAC\x0F\0\xAD\x0F\0\xB9\x0F\0\xBA\x0F\0\xC6\x0F\0\xC7\x0F\0&\x10\0'\x10\x007\x10\08\x10\09\x10\0;\x10\0\x8D\x10\0\x8E\x10\0\xFC\x10\0\xFD\x10\0]\x13\0`\x13\0\x14\x17\0\x16\x17\x004\x17\x005\x17\0\xD2\x17\0\xD3\x17\0\xDD\x17\0\xDE\x17\0\xA9\x18\0\xAA\x18\09\x19\0<\x19\0\x17\x1A\0\x19\x1A\0`\x1A\0a\x1A\0u\x1A\0}\x1A\0\x7F\x1A\0\x80\x1A\0\xB0\x1A\0\xBE\x1A\0\xBF\x1A\0\xCF\x1A\0\x06\x1B\0\x07\x1B\0\x08\x1B\0\t\x1B\0\n\x1B\0\x0B\x1B\0\x0C\x1B\0\r\x1B\0\x0E\x1B\0\x0F\x1B\0\x12\x1B\0\x13\x1B\x004\x1B\x005\x1B\0;\x1B\0<\x1B\0=\x1B\0>\x1B\0@\x1B\0B\x1B\0C\x1B\0E\x1B\0k\x1B\0t\x1B\0\xAA\x1B\0\xAC\x1B\0\xE6\x1B\0\xE7\x1B\0\xF2\x1B\0\xF4\x1B\x007\x1C\08\x1C\0\xD0\x1C\0\xD3\x1C\0\xD4\x1C\0\xE1\x1C\0\xE2\x1C\0\xE9\x1C\0\xED\x1C\0\xEE\x1C\0\xF4\x1C\0\xF5\x1C\0\xF8\x1C\0\xFA\x1C\0,\x1D\0/\x1D\x000\x1D\0;\x1D\0<\x1D\0N\x1D\0O\x1D\0k\x1D\0x\x1D\0y\x1D\0\x9B\x1D\0\x9C\x1E\0\xA0\x1E\0\xFA\x1E\0\0\x1F\0\x16\x1F\0\x18\x1F\0\x1E\x1F\0 \x1F\0F\x1F\0H\x1F\0N\x1F\0P\x1F\0X\x1F\0Y\x1F\0Z\x1F\0[\x1F\0\\\x1F\0]\x1F\0^\x1F\0_\x1F\0~\x1F\0\x80\x1F\0\xB5\x1F\0\xB6\x1F\0\xC5\x1F\0\xC6\x1F\0\xD4\x1F\0\xD6\x1F\0\xDC\x1F\0\xDD\x1F\0\xF0\x1F\0\xF2\x1F\0\xF5\x1F\0\xF6\x1F\0\xFF\x1F\0\0 \0\x0B \0\x11 \0\x12 \0\x17 \0\x18 \0$ \0' \0/ \x000 \x003 \x005 \x006 \08 \0< \0= \0> \0? \0G \0J \0W \0X \0_ \0` \0p \0r \0t \0\x8F \0\x90 \0\x9D \0\xA8 \0\xA9 \0\xD0 \0\xDD \0\xE1 \0\xE2 \0\xE5 \0\xF1 \0\0!\0\x04!\0\x05!\0\x08!\0\t!\0\x14!\0\x15!\0\x17!\0\x19!\0\x1E!\0 !\0#!\0$!\0%!\0&!\0'!\0(!\0)!\0*!\0.!\0/!\x002!\x003!\0:!\0;!\0A!\0E!\0J!\0P!\0\x80!\0\x89!\0\x8A!\0\x9A!\0\x9C!\0\xAE!\0\xAF!\0\xCD!\0\xD0!\0\x04\"\0\x05\"\0\t\"\0\n\"\0\x0C\"\0\r\"\0$\"\0%\"\0&\"\0'\"\0,\"\0.\"\0/\"\x001\"\0A\"\0B\"\0D\"\0E\"\0G\"\0H\"\0I\"\0J\"\0`\"\0a\"\0b\"\0c\"\0m\"\0r\"\0t\"\0v\"\0x\"\0z\"\0\x80\"\0\x82\"\0\x84\"\0\x86\"\0\x88\"\0\x8A\"\0\xAC\"\0\xB0\"\0\xE0\"\0\xE4\"\0\xEA\"\0\xEE\"\0)#\0+#\0`$\0\xEB$\0\x0C*\0\r*\0t*\0w*\0\xDC*\0\xDD*\0|,\0~,\0\xEF,\0\xF2,\0o-\0p-\0\x7F-\0\x80-\0\xE0-\0\0.\0\x9F.\0\xA0.\0\xF3.\0\xF4.\0\0/\0\xD6/\0\x000\0\x010\0*0\x0000\x0060\x0070\080\0;0\0L0\0M0\0N0\0O0\0P0\0Q0\0R0\0S0\0T0\0U0\0V0\0W0\0X0\0Y0\0Z0\0[0\0\\0\0]0\0^0\0_0\0`0\0a0\0b0\0c0\0e0\0f0\0g0\0h0\0i0\0j0\0p0\0r0\0s0\0u0\0v0\0x0\0y0\0{0\0|0\0~0\0\x940\0\x950\0\x990\0\x9D0\0\x9E0\0\xA00\0\xAC0\0\xAD0\0\xAE0\0\xAF0\0\xB00\0\xB10\0\xB20\0\xB30\0\xB40\0\xB50\0\xB60\0\xB70\0\xB80\0\xB90\0\xBA0\0\xBB0\0\xBC0\0\xBD0\0\xBE0\0\xBF0\0\xC00\0\xC10\0\xC20\0\xC30\0\xC50\0\xC60\0\xC70\0\xC80\0\xC90\0\xCA0\0\xD00\0\xD20\0\xD30\0\xD50\0\xD60\0\xD80\0\xD90\0\xDB0\0\xDC0\0\xDE0\0\xF40\0\xF50\0\xF70\0\xFB0\0\xFE0\0\x001\x0011\0\x8F1\0\x921\0\xA01\0\x002\0\x1F2\0 2\0H2\0P2\0\x7F2\0\x802\0\x004\0o\xA6\0p\xA6\0t\xA6\0~\xA6\0\x9C\xA6\0\xA0\xA6\0\xF0\xA6\0\xF2\xA6\0p\xA7\0q\xA7\0\xF2\xA7\0\xF5\xA7\0\xF8\xA7\0\xFA\xA7\0\x06\xA8\0\x07\xA8\0,\xA8\0-\xA8\0\xC4\xA8\0\xC5\xA8\0\xE0\xA8\0\xF2\xA8\0+\xA9\0.\xA9\0S\xA9\0T\xA9\0\xB3\xA9\0\xB4\xA9\0\xC0\xA9\0\xC1\xA9\0\xB0\xAA\0\xB1\xAA\0\xB2\xAA\0\xB5\xAA\0\xB7\xAA\0\xB9\xAA\0\xBE\xAA\0\xC0\xAA\0\xC1\xAA\0\xC2\xAA\0\xF6\xAA\0\xF7\xAA\0\\\xAB\0`\xAB\0i\xAB\0j\xAB\0\xED\xAB\0\xEE\xAB\0\0\xAC\0\xA4\xD7\0\0\xF9\0\x0E\xFA\0\x10\xFA\0\x11\xFA\0\x12\xFA\0\x13\xFA\0\x15\xFA\0\x1F\xFA\0 \xFA\0!\xFA\0\"\xFA\0#\xFA\0%\xFA\0'\xFA\0*\xFA\0n\xFA\0p\xFA\0\xDA\xFA\0\0\xFB\0\x07\xFB\0\x13\xFB\0\x18\xFB\0\x1D\xFB\x007\xFB\08\xFB\0=\xFB\0>\xFB\0?\xFB\0@\xFB\0B\xFB\0C\xFB\0E\xFB\0F\xFB\0\xB2\xFB\0\xD3\xFB\0>\xFD\0P\xFD\0\x90\xFD\0\x92\xFD\0\xC8\xFD\0\xF0\xFD\0\xFD\xFD\0\x10\xFE\0\x1A\xFE\0 \xFE\0E\xFE\0G\xFE\0S\xFE\0T\xFE\0g\xFE\0h\xFE\0l\xFE\0p\xFE\0s\xFE\0t\xFE\0u\xFE\0v\xFE\0\xFD\xFE\0\x01\xFF\0\xBF\xFF\0\xC2\xFF\0\xC8\xFF\0\xCA\xFF\0\xD0\xFF\0\xD2\xFF\0\xD8\xFF\0\xDA\xFF\0\xDD\xFF\0\xE0\xFF\0\xE7\xFF\0\xE8\xFF\0\xEF\xFF\0\xFD\x01\x01\xFE\x01\x01\xE0\x02\x01\xE1\x02\x01v\x03\x01{\x03\x01\xC9\x05\x01\xCA\x05\x01\xE4\x05\x01\xE5\x05\x01\x81\x07\x01\x86\x07\x01\x87\x07\x01\xB1\x07\x01\xB2\x07\x01\xBB\x07\x01\r\n\x01\x0E\n\x01\x0F\n\x01\x10\n\x018\n\x01;\n\x01?\n\x01@\n\x01\xE5\n\x01\xE7\n\x01$\r\x01(\r\x01i\r\x01n\r\x01\xAB\x0E\x01\xAD\x0E\x01\xFD\x0E\x01\0\x0F\x01F\x0F\x01Q\x0F\x01\x82\x0F\x01\x86\x0F\x01F\x10\x01G\x10\x01p\x10\x01q\x10\x01\x7F\x10\x01\x80\x10\x01\x9A\x10\x01\x9B\x10\x01\x9C\x10\x01\x9D\x10\x01\xAB\x10\x01\xAC\x10\x01\xB9\x10\x01\xBB\x10\x01\0\x11\x01\x03\x11\x01.\x11\x010\x11\x013\x11\x015\x11\x01s\x11\x01t\x11\x01\xC0\x11\x01\xC1\x11\x01\xCA\x11\x01\xCB\x11\x015\x12\x017\x12\x01\xE9\x12\x01\xEB\x12\x01;\x13\x01=\x13\x01K\x13\x01N\x13\x01f\x13\x01m\x13\x01p\x13\x01u\x13\x01\x83\x13\x01\x84\x13\x01\x85\x13\x01\x86\x13\x01\x8E\x13\x01\x8F\x13\x01\x91\x13\x01\x92\x13\x01\xC5\x13\x01\xC6\x13\x01\xC7\x13\x01\xC9\x13\x01\xCE\x13\x01\xD1\x13\x01B\x14\x01C\x14\x01F\x14\x01G\x14\x01^\x14\x01_\x14\x01\xBB\x14\x01\xBD\x14\x01\xBE\x14\x01\xBF\x14\x01\xC2\x14\x01\xC4\x14\x01\xBA\x15\x01\xBC\x15\x01\xBF\x15\x01\xC1\x15\x01?\x16\x01@\x16\x01\xB6\x16\x01\xB8\x16\x01+\x17\x01,\x17\x019\x18\x01;\x18\x018\x19\x019\x19\x01=\x19\x01?\x19\x01C\x19\x01D\x19\x01\xE0\x19\x01\xE1\x19\x014\x1A\x015\x1A\x01G\x1A\x01H\x1A\x01\x99\x1A\x01\x9A\x1A\x01?\x1C\x01@\x1C\x01B\x1D\x01C\x1D\x01D\x1D\x01F\x1D\x01\x97\x1D\x01\x98\x1D\x01A\x1F\x01C\x1F\x01!a\x01)a\x01/a\x010a\x01\xF0j\x01\xF5j\x010k\x017k\x01hm\x01km\x01\xF0o\x01\xF2o\x01\x9E\xBC\x01\x9F\xBC\x01\xD6\xCC\x01\xFA\xCC\x01^\xD1\x01j\xD1\x01m\xD1\x01s\xD1\x01{\xD1\x01\x83\xD1\x01\x85\xD1\x01\x8C\xD1\x01\xAA\xD1\x01\xAE\xD1\x01\xBB\xD1\x01\xC1\xD1\x01B\xD2\x01E\xD2\x01\0\xD4\x01U\xD4\x01V\xD4\x01\x9D\xD4\x01\x9E\xD4\x01\xA0\xD4\x01\xA2\xD4\x01\xA3\xD4\x01\xA5\xD4\x01\xA7\xD4\x01\xA9\xD4\x01\xAD\xD4\x01\xAE\xD4\x01\xBA\xD4\x01\xBB\xD4\x01\xBC\xD4\x01\xBD\xD4\x01\xC4\xD4\x01\xC5\xD4\x01\x06\xD5\x01\x07\xD5\x01\x0B\xD5\x01\r\xD5\x01\x15\xD5\x01\x16\xD5\x01\x1D\xD5\x01\x1E\xD5\x01:\xD5\x01;\xD5\x01?\xD5\x01@\xD5\x01E\xD5\x01F\xD5\x01G\xD5\x01J\xD5\x01Q\xD5\x01R\xD5\x01\xA6\xD6\x01\xA8\xD6\x01\xCC\xD7\x01\xCE\xD7\x01\0\xD8\x01\0\xE0\x01\x07\xE0\x01\x08\xE0\x01\x19\xE0\x01\x1B\xE0\x01\"\xE0\x01#\xE0\x01%\xE0\x01&\xE0\x01+\xE0\x010\xE0\x01n\xE0\x01\x8F\xE0\x01\x90\xE0\x010\xE1\x017\xE1\x01\xAE\xE2\x01\xAF\xE2\x01\xEC\xE2\x01\xF0\xE2\x01\xEC\xE4\x01\xF0\xE4\x01\xEE\xE5\x01\xF0\xE5\x01\xD0\xE8\x01\xD7\xE8\x01D\xE9\x01K\xE9\x01\0\xEE\x01\x04\xEE\x01\x05\xEE\x01 \xEE\x01!\xEE\x01#\xEE\x01$\xEE\x01%\xEE\x01'\xEE\x01(\xEE\x01)\xEE\x013\xEE\x014\xEE\x018\xEE\x019\xEE\x01:\xEE\x01;\xEE\x01<\xEE\x01B\xEE\x01C\xEE\x01G\xEE\x01H\xEE\x01I\xEE\x01J\xEE\x01K\xEE\x01L\xEE\x01M\xEE\x01P\xEE\x01Q\xEE\x01S\xEE\x01T\xEE\x01U\xEE\x01W\xEE\x01X\xEE\x01Y\xEE\x01Z\xEE\x01[\xEE\x01\\\xEE\x01]\xEE\x01^\xEE\x01_\xEE\x01`\xEE\x01a\xEE\x01c\xEE\x01d\xEE\x01e\xEE\x01g\xEE\x01k\xEE\x01l\xEE\x01s\xEE\x01t\xEE\x01x\xEE\x01y\xEE\x01}\xEE\x01~\xEE\x01\x7F\xEE\x01\x80\xEE\x01\x8A\xEE\x01\x8B\xEE\x01\x9C\xEE\x01\xA1\xEE\x01\xA4\xEE\x01\xA5\xEE\x01\xAA\xEE\x01\xAB\xEE\x01\xBC\xEE\x01\0\xF1\x01\x0B\xF1\x01\x10\xF1\x01/\xF1\x010\xF1\x01P\xF1\x01j\xF1\x01m\xF1\x01\x90\xF1\x01\x91\xF1\x01\0\xF2\x01\x03\xF2\x01\x10\xF2\x01<\xF2\x01@\xF2\x01I\xF2\x01P\xF2\x01R\xF2\x01\xF0\xFB\x01\xFA\xFB\x01\0\xF8\x02\x1E\xFA\x02\0\0\x11") }, 1096097u32)
            });
        }
        #[clippy::msrv = "1.71.1"]
        impl icu_provider::DataProvider<icu::properties::provider::NfkdInertV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::properties::provider::NfkdInertV1Marker>, icu_provider::DataError> {
                if req.id.locale.is_default() {
                    Ok(icu_provider::DataResponse { payload: icu_provider::DataPayload::from_static_ref(Self::SINGLETON_NFKD_INERT_V1_MARKER), metadata: Default::default() })
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::properties::provider::NfkdInertV1Marker as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
    };
    ($ provider : ty , ITER) => {
        __impl_nfkd_inert_v1_marker!($provider);
        #[clippy::msrv = "1.71.1"]
        impl icu_provider::IterableDataProvider<icu::properties::provider::NfkdInertV1Marker> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BtreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok([Default::default()].into_iter().collect())
            }
        }
    };
    ($ provider : ty , DRY) => {
        __impl_nfkd_inert_v1_marker!($provider);
        #[clippy::msrv = "1.71.1"]
        impl icu_provider::DryDataProvider<icu::properties::provider::NfkdInertV1Marker> for $provider {
            fn dry_load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponseMetadata, icu_provider::DataError> {
                if req.id.locale.is_default() {
                    Ok(Default::default())
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::properties::provider::NfkdInertV1Marker as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
    };
    ($ provider : ty , DRY , ITER) => {
        __impl_nfkd_inert_v1_marker!($provider);
        #[clippy::msrv = "1.71.1"]
        impl icu_provider::DryDataProvider<icu::properties::provider::NfkdInertV1Marker> for $provider {
            fn dry_load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponseMetadata, icu_provider::DataError> {
                if req.id.locale.is_default() {
                    Ok(Default::default())
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::properties::provider::NfkdInertV1Marker as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
        #[clippy::msrv = "1.71.1"]
        impl icu_provider::IterableDataProvider<icu::properties::provider::NfkdInertV1Marker> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BtreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok([Default::default()].into_iter().collect())
            }
        }
    };
}
#[doc(inline)]
pub use __impl_nfkd_inert_v1_marker as impl_nfkd_inert_v1_marker;
