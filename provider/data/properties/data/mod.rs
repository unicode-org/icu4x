// @generated
include!("general_category_v1.rs.data");
include!("general_category_value_to_long_name_v1.rs.data");
include!("ids_binary_operator_v1.rs.data");
include!("emoji_component_v1.rs.data");
include!("changes_when_nfkc_casefolded_v1.rs.data");
include!("grapheme_cluster_break_name_to_value_v2.rs.data");
include!("east_asian_width_value_to_short_name_v1.rs.data");
include!("join_control_v1.rs.data");
include!("radical_v1.rs.data");
include!("alphabetic_v1.rs.data");
include!("canonical_combining_class_v1.rs.data");
include!("hyphen_v1.rs.data");
include!("terminal_punctuation_v1.rs.data");
include!("sentence_break_v1.rs.data");
include!("bidi_mirrored_v1.rs.data");
include!("lowercase_v1.rs.data");
include!("pattern_syntax_v1.rs.data");
include!("sentence_terminal_v1.rs.data");
include!("noncharacter_code_point_v1.rs.data");
include!("segment_starter_v1.rs.data");
include!("default_ignorable_code_point_v1.rs.data");
include!("graph_v1.rs.data");
include!("sentence_break_value_to_short_name_v1.rs.data");
include!("id_continue_v1.rs.data");
include!("prepended_concatenation_mark_v1.rs.data");
include!("ids_trinary_operator_v1.rs.data");
include!("general_category_name_to_value_v2.rs.data");
include!("case_ignorable_v1.rs.data");
include!("uppercase_v1.rs.data");
include!("script_v1.rs.data");
include!("bidi_control_v1.rs.data");
include!("canonical_combining_class_value_to_long_name_v1.rs.data");
include!("grapheme_link_v1.rs.data");
include!("bidi_class_name_to_value_v2.rs.data");
include!("emoji_v1.rs.data");
include!("xdigit_v1.rs.data");
include!("quotation_mark_v1.rs.data");
include!("word_break_name_to_value_v2.rs.data");
include!("pattern_white_space_v1.rs.data");
include!("grapheme_cluster_break_v1.rs.data");
include!("nfkc_inert_v1.rs.data");
include!("hangul_syllable_type_value_to_short_name_v1.rs.data");
include!("line_break_value_to_long_name_v1.rs.data");
include!("east_asian_width_v1.rs.data");
include!("joining_type_v1.rs.data");
include!("joining_type_value_to_long_name_v1.rs.data");
include!("general_category_value_to_short_name_v1.rs.data");
include!("white_space_v1.rs.data");
include!("nfd_inert_v1.rs.data");
include!("indic_syllabic_category_v1.rs.data");
include!("unified_ideograph_v1.rs.data");
include!("word_break_value_to_long_name_v1.rs.data");
include!("soft_dotted_v1.rs.data");
include!("joining_type_value_to_short_name_v1.rs.data");
include!("blank_v1.rs.data");
include!("bidi_mirroring_glyph_v1.rs.data");
include!("xid_start_v1.rs.data");
include!("nfc_inert_v1.rs.data");
include!("script_value_to_short_name_v1.rs.data");
include!("line_break_name_to_value_v2.rs.data");
include!("sentence_break_value_to_long_name_v1.rs.data");
include!("deprecated_v1.rs.data");
include!("line_break_value_to_short_name_v1.rs.data");
include!("grapheme_cluster_break_value_to_long_name_v1.rs.data");
include!("east_asian_width_name_to_value_v2.rs.data");
include!("grapheme_cluster_break_value_to_short_name_v1.rs.data");
include!("ascii_hex_digit_v1.rs.data");
include!("grapheme_base_v1.rs.data");
include!("id_start_v1.rs.data");
include!("changes_when_casefolded_v1.rs.data");
include!("variation_selector_v1.rs.data");
include!("hangul_syllable_type_value_to_long_name_v1.rs.data");
include!("hex_digit_v1.rs.data");
include!("canonical_combining_class_value_to_short_name_v1.rs.data");
include!("cased_v1.rs.data");
include!("emoji_modifier_base_v1.rs.data");
include!("case_sensitive_v1.rs.data");
include!("print_v1.rs.data");
include!("indic_syllabic_category_value_to_short_name_v1.rs.data");
include!("emoji_modifier_v1.rs.data");
include!("hangul_syllable_type_name_to_value_v2.rs.data");
include!("script_name_to_value_v2.rs.data");
include!("changes_when_titlecased_v1.rs.data");
include!("script_value_to_long_name_v1.rs.data");
include!("diacritic_v1.rs.data");
include!("sentence_break_name_to_value_v2.rs.data");
include!("word_break_v1.rs.data");
include!("nfkd_inert_v1.rs.data");
include!("grapheme_extend_v1.rs.data");
include!("xid_continue_v1.rs.data");
include!("script_with_extensions_property_v1.rs.data");
include!("general_category_mask_name_to_value_v2.rs.data");
include!("extended_pictographic_v1.rs.data");
include!("emoji_presentation_v1.rs.data");
include!("regional_indicator_v1.rs.data");
include!("indic_syllabic_category_value_to_long_name_v1.rs.data");
include!("bidi_class_value_to_short_name_v1.rs.data");
include!("logical_order_exception_v1.rs.data");
include!("basic_emoji_v1.rs.data");
include!("changes_when_lowercased_v1.rs.data");
include!("changes_when_uppercased_v1.rs.data");
include!("math_v1.rs.data");
include!("indic_syllabic_category_name_to_value_v2.rs.data");
include!("line_break_v1.rs.data");
include!("word_break_value_to_short_name_v1.rs.data");
include!("bidi_class_value_to_long_name_v1.rs.data");
include!("joining_type_name_to_value_v2.rs.data");
include!("hangul_syllable_type_v1.rs.data");
include!("full_composition_exclusion_v1.rs.data");
include!("ideographic_v1.rs.data");
include!("changes_when_casemapped_v1.rs.data");
include!("extender_v1.rs.data");
include!("alnum_v1.rs.data");
include!("bidi_class_v1.rs.data");
include!("canonical_combining_class_name_to_value_v2.rs.data");
include!("dash_v1.rs.data");
include!("east_asian_width_value_to_long_name_v1.rs.data");
/// Marks a type as a data provider. You can then use macros like
/// `impl_core_helloworld_v1` to add implementations.
///
/// ```ignore
/// struct MyProvider;
/// const _: () = {
///     include!("path/to/generated/macros.rs");
///     make_provider!(MyProvider);
///     impl_core_helloworld_v1!(MyProvider);
/// }
/// ```
#[doc(hidden)]
#[macro_export]
macro_rules! __make_provider {
    ($ name : ty) => {
        #[clippy::msrv = "1.81"]
        impl $name {
            #[allow(dead_code)]
            pub(crate) const MUST_USE_MAKE_PROVIDER_MACRO: () = ();
        }
        icu_provider::marker::impl_data_provider_never_marker!($name);
    };
}
#[doc(inline)]
pub use __make_provider as make_provider;
#[allow(unused_macros)]
macro_rules! impl_data_provider {
    ($ provider : ty) => {
        make_provider!($provider);
        impl_general_category_v1!($provider);
        impl_general_category_value_to_long_name_v1!($provider);
        impl_ids_binary_operator_v1!($provider);
        impl_emoji_component_v1!($provider);
        impl_changes_when_nfkc_casefolded_v1!($provider);
        impl_grapheme_cluster_break_name_to_value_v2!($provider);
        impl_east_asian_width_value_to_short_name_v1!($provider);
        impl_join_control_v1!($provider);
        impl_radical_v1!($provider);
        impl_alphabetic_v1!($provider);
        impl_canonical_combining_class_v1!($provider);
        impl_hyphen_v1!($provider);
        impl_terminal_punctuation_v1!($provider);
        impl_sentence_break_v1!($provider);
        impl_bidi_mirrored_v1!($provider);
        impl_lowercase_v1!($provider);
        impl_pattern_syntax_v1!($provider);
        impl_sentence_terminal_v1!($provider);
        impl_noncharacter_code_point_v1!($provider);
        impl_segment_starter_v1!($provider);
        impl_default_ignorable_code_point_v1!($provider);
        impl_graph_v1!($provider);
        impl_sentence_break_value_to_short_name_v1!($provider);
        impl_id_continue_v1!($provider);
        impl_prepended_concatenation_mark_v1!($provider);
        impl_ids_trinary_operator_v1!($provider);
        impl_general_category_name_to_value_v2!($provider);
        impl_case_ignorable_v1!($provider);
        impl_uppercase_v1!($provider);
        impl_script_v1!($provider);
        impl_bidi_control_v1!($provider);
        impl_canonical_combining_class_value_to_long_name_v1!($provider);
        impl_grapheme_link_v1!($provider);
        impl_bidi_class_name_to_value_v2!($provider);
        impl_emoji_v1!($provider);
        impl_xdigit_v1!($provider);
        impl_quotation_mark_v1!($provider);
        impl_word_break_name_to_value_v2!($provider);
        impl_pattern_white_space_v1!($provider);
        impl_grapheme_cluster_break_v1!($provider);
        impl_nfkc_inert_v1!($provider);
        impl_hangul_syllable_type_value_to_short_name_v1!($provider);
        impl_line_break_value_to_long_name_v1!($provider);
        impl_east_asian_width_v1!($provider);
        impl_joining_type_v1!($provider);
        impl_joining_type_value_to_long_name_v1!($provider);
        impl_general_category_value_to_short_name_v1!($provider);
        impl_white_space_v1!($provider);
        impl_nfd_inert_v1!($provider);
        impl_indic_syllabic_category_v1!($provider);
        impl_unified_ideograph_v1!($provider);
        impl_word_break_value_to_long_name_v1!($provider);
        impl_soft_dotted_v1!($provider);
        impl_joining_type_value_to_short_name_v1!($provider);
        impl_blank_v1!($provider);
        impl_bidi_mirroring_glyph_v1!($provider);
        impl_xid_start_v1!($provider);
        impl_nfc_inert_v1!($provider);
        impl_script_value_to_short_name_v1!($provider);
        impl_line_break_name_to_value_v2!($provider);
        impl_sentence_break_value_to_long_name_v1!($provider);
        impl_deprecated_v1!($provider);
        impl_line_break_value_to_short_name_v1!($provider);
        impl_grapheme_cluster_break_value_to_long_name_v1!($provider);
        impl_east_asian_width_name_to_value_v2!($provider);
        impl_grapheme_cluster_break_value_to_short_name_v1!($provider);
        impl_ascii_hex_digit_v1!($provider);
        impl_grapheme_base_v1!($provider);
        impl_id_start_v1!($provider);
        impl_changes_when_casefolded_v1!($provider);
        impl_variation_selector_v1!($provider);
        impl_hangul_syllable_type_value_to_long_name_v1!($provider);
        impl_hex_digit_v1!($provider);
        impl_canonical_combining_class_value_to_short_name_v1!($provider);
        impl_cased_v1!($provider);
        impl_emoji_modifier_base_v1!($provider);
        impl_case_sensitive_v1!($provider);
        impl_print_v1!($provider);
        impl_indic_syllabic_category_value_to_short_name_v1!($provider);
        impl_emoji_modifier_v1!($provider);
        impl_hangul_syllable_type_name_to_value_v2!($provider);
        impl_script_name_to_value_v2!($provider);
        impl_changes_when_titlecased_v1!($provider);
        impl_script_value_to_long_name_v1!($provider);
        impl_diacritic_v1!($provider);
        impl_sentence_break_name_to_value_v2!($provider);
        impl_word_break_v1!($provider);
        impl_nfkd_inert_v1!($provider);
        impl_grapheme_extend_v1!($provider);
        impl_xid_continue_v1!($provider);
        impl_script_with_extensions_property_v1!($provider);
        impl_general_category_mask_name_to_value_v2!($provider);
        impl_extended_pictographic_v1!($provider);
        impl_emoji_presentation_v1!($provider);
        impl_regional_indicator_v1!($provider);
        impl_indic_syllabic_category_value_to_long_name_v1!($provider);
        impl_bidi_class_value_to_short_name_v1!($provider);
        impl_logical_order_exception_v1!($provider);
        impl_basic_emoji_v1!($provider);
        impl_changes_when_lowercased_v1!($provider);
        impl_changes_when_uppercased_v1!($provider);
        impl_math_v1!($provider);
        impl_indic_syllabic_category_name_to_value_v2!($provider);
        impl_line_break_v1!($provider);
        impl_word_break_value_to_short_name_v1!($provider);
        impl_bidi_class_value_to_long_name_v1!($provider);
        impl_joining_type_name_to_value_v2!($provider);
        impl_hangul_syllable_type_v1!($provider);
        impl_full_composition_exclusion_v1!($provider);
        impl_ideographic_v1!($provider);
        impl_changes_when_casemapped_v1!($provider);
        impl_extender_v1!($provider);
        impl_alnum_v1!($provider);
        impl_bidi_class_v1!($provider);
        impl_canonical_combining_class_name_to_value_v2!($provider);
        impl_dash_v1!($provider);
        impl_east_asian_width_value_to_long_name_v1!($provider);
    };
}
