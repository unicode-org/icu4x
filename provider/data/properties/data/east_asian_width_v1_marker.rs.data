// @generated
/// Implement `DataProvider<EastAsianWidthV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
///
/// Using this implementation will embed the following data in the binary's data segment:
/// * 5028B[^1] for the singleton data struct
///
/// [^1]: these numbers can be smaller in practice due to linker deduplication
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_east_asian_width_v1_marker {
    ($ provider : ty) => {
        #[clippy::msrv = "1.71.1"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.71.1"]
        impl $provider {
            #[doc(hidden)]
            pub const SINGLETON_EAST_ASIAN_WIDTH_V1_MARKER: &'static <icu::properties::provider::EastAsianWidthV1Marker as icu_provider::DynamicDataMarker>::DataStruct = &icu::properties::provider::PropertyCodePointMapV1::CodePointTrie(icu::collections::codepointtrie::CodePointTrie::from_parts(icu::collections::codepointtrie::CodePointTrieHeader { high_start: 1114112u32, shifted12_high_start: 272u16, index3_null_offset: 18u16, data_null_offset: 359u32, null_value: 0u32, trie_type: icu::collections::codepointtrie::TrieType::Small }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\0\0@\0\x7F\0\xBF\0\xFC\0;\x01g\x01\x99\x01g\x01\xC8\x01g\x01\x04\x02D\x02T\x02\x84\x02\xC2\x02\x01\x031\x03g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01\x9C\x04\xB6\x04\xC4\x04\xDA\x04\xFA\x04\x03\x05 \x05:\x05\xB6\x04\xB6\x04\xB6\x04Z\x05\xB6\x04\xB6\x04\xB6\x04Z\x05\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04\xFA\x04z\x05\xFA\x04\xFA\x04\xFA\x04\x9A\x05\x9A\x05\x9A\x05\x9B\x05\x9A\x05\x9A\x05\x9A\x05\x9B\x05\0\0\x10\0 \x000\0@\0P\0`\0p\0\x7F\0\x8F\0\x9F\0\xAF\0\xBF\0\xCF\0\xDF\0\xEF\0\xFC\0\x0C\x01\x1C\x01,\x01;\x01K\x01[\x01k\x01g\x01w\x01\x87\x01\x97\x01\x99\x01\xA9\x01\xB9\x01\xC9\x01g\x01w\x01\x87\x01\x97\x01\xC8\x01\xD8\x01\xE8\x01\xF8\x01g\x01w\x01\x87\x01\x97\x01\x04\x02\x14\x02$\x024\x02D\x02T\x02d\x02t\x02T\x02d\x02t\x02\x84\x02\x84\x02\x94\x02\xA4\x02\xB4\x02\xC2\x02\xD2\x02\xE2\x02\xF2\x02\x01\x03\x11\x03!\x031\x031\x03A\x03Q\x03a\x03g\x01w\x01\x87\x01\x97\x01g\x01w\x01\x87\x01\x97\x01g\x01w\x01\x87\x01\x97\x01g\x01w\x01\x87\x01\x97\x01g\x01w\x01\x87\x01\x97\x01g\x01w\x01\x87\x01\x97\x01g\x01w\x01\x87\x01\x97\x01g\x01w\x01\x87\x01\x97\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01q\x03q\x03q\x03q\x03q\x03q\x03g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01\x81\x03\x91\x03\xA1\x03g\x01g\x01g\x01\x13\x01\xB0\x03g\x01\xB7\x03g\x01g\x01g\x01g\x01g\x01\xC4\x03\xD1\x03\xE0\x03g\x01g\x01\xED\x03x\x02z\x02\xC6\0z\x02g\x01\xFC\x03g\x01\n\x04\x10\x01g\x01\x1A\x04$\x043\x04B\x04P\x04d\x01`\x04g\x01h\x04s\x04\x12\x01\x91\0g\x01g\x01g\x01g\x01g\x01z\x04\x86\x04g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01\x91\x04\xA1\x04g\x01g\x01g\x01g\x01g\x01g\x01D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02\x9C\x02D\x02D\x02D\x02D\x02D\x02x\x02D\x02D\x02\x80\x02D\x02\xAF\x04\xA4\x02\xBD\x04\xC9\x04M\x01\xD5\x04\xE5\x04\xF4\x04\x04\x05g\x01\x14\x05$\x050\x05@\x05b\x03g\x03P\x05`\x05l\x05u\x05\x7F\x05\x8D\x05\x9B\x05\xAB\x05g\x01\xB7\x05\xCC\x01\xC0\x05\xCF\x05g\x01>\x02g\x01\xDA\x05g\x01\xE1\x05g\x01g\x01\xF1\x05g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01\xFF\x05g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01\xE7\x04g\x01g\x01g\x01\x0F\x06g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01q\x03\x1F\x06q\x03q\x03q\x03q\x03q\x030\x05q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03.\x05g\x01q\x03/\x06q\x03q\x030\x06p\x03q\x03q\x03q\x03q\x038\x06q\x03q\x03q\x03q\x03q\x03q\x03l\x03q\x03q\x03p\x03q\x03q\x03q\x03q\x030\x06q\x03q\x03q\x03q\x03q\x03B\x06q\x030\x06q\x03q\x03Q\x06q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03a\x06q\x03q\x03q\x03-\x05g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01q\x03a\x06g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x030\x05g\x01g\x01g\x01g\x01g\x01D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01D\x02d\x06g\x01q\x03q\x03t\x06}\x06g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01\x8C\x06\x8D\x06\x8D\x06\x8D\x06\x8D\x06\x8D\x06\x9C\x06\x9D\x06\x9D\x06\x9D\x06\x9D\x06\x9E\x06\xAD\x06\xB5\x06\xC5\x06\xCC\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01/\x05\xE0\x05q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03\x14\x05q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03.\x05g\x01b\x03\xD5\x06g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01\xE5\x06q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03\xDF\x05\xF4\x06g\x01\x04\x07\x10\x07q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03b\x06g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01q\x03q\x03q\x03q\x03q\x03-\x05q\x03-\x05g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01\xBB\x05g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01b\x03g\x01g\x01g\x01y\x02D\x02v\x02D\x02D\x02D\x02z\x02D\x02 \x07/\x07w\x02g\x01g\x01g\x01g\x01g\x01\xDF\x05q\x03q\x03b\x06\xD5\x06\xE0\x05.\x05g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01q\x03q\x03?\x07L\x07q\x03q\x03q\x03S\x07q\x030\x05q\x03q\x03a\x070\x05q\x03p\x07q\x03q\x03q\x030\x06\x7F\x07q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x032\x06q\x03q\x03q\x031\x06\x8F\x07q\x03\x14\x05\xE6\x05g\x01\x7F\x04\xBB\x05g\x01g\x01g\x01g\x01f\x03q\x03q\x03q\x03q\x03q\x03g\x01g\x01g\x01q\x03q\x03q\x03q\x03\x9F\x07\xAF\x07\xE7\x04\xB7\x07g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01b\x06\xC3\x07g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01e\x03q\x03q\x03y\x06L\x07q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03g\x01g\x01g\x01g\x01g\x01g\x01g\x01a\x06\xD3\x07q\x03q\x03q\x03\xD7\x062\x06d\x06\xD5\x06g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x03q\x031\x06g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01g\x01D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02g\x01D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02D\x02v\x02\x84\0\xA4\0\xC4\0\xCC\0\xCC\0\xCC\0\xCC\0\xCC\0\xEC\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x0B\x01+\x01K\x01k\x01\x8A\x01\xA3\x01\x12\0\xBB\x01\xDB\x01\xFA\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\x17\x02\x12\0$\x02\x12\0\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01D\x02\x12\0\x12\0\x12\0\x12\0d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02t\x02\x84\x02\x12\0\xA4\x02\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\xC4\x02\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xE4\x02\xFF\x01\xFF\x01\x04\x03\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x15\x035\x03L\x03\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\\\x03\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0|\x03\x9C\x03\xBC\x03\xDC\x03\xFC\x03\x1C\x04\x12\0\x12\0\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01\xFF\x01<\x04\\\x04\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0\x12\0d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02d\x02|\x04") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\x04\x04\x01\x04\x04\x01\x01\0\x01\0\x04\x01\x01\x04\x01\x01\x01\x01\x01\0\x01\x01\x01\x01\x01\0\x01\x01\x01\x01\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\x01\x01\0\0\0\0\0\x01\x01\x01\x01\0\0\0\0\x01\0\x01\x01\x01\0\x01\x01\0\0\x01\0\x01\x01\0\0\0\x01\x01\x01\x01\0\x01\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\x01\x01\0\0\0\x01\0\0\0\0\0\x01\x01\x01\0\0\0\0\x01\0\0\0\0\0\0\x01\x01\x01\0\x01\0\0\0\x01\x01\x01\x01\0\x01\0\0\0\0\x01\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\x01\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\x01\0\x01\0\x01\0\x01\0\x01\0\x01\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\x01\0\x01\x01\x01\0\x01\0\0\x01\0\0\0\0\0\0\0\x01\x01\x01\x01\0\x01\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\0\x01\x01\x01\x01\x01\x01\x01\0\0\0\0\0\0\0\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\0\x01\x01\x01\x01\x01\x01\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x01\0\0\x01\x01\x01\x01\0\x01\x01\0\0\x01\x01\0\0\x01\x01\x01\0\x01\x01\x01\x01\0\0\0\0\0\0\0\0\x01\0\x01\x01\0\x01\0\0\0\0\0\x01\0\0\x01\0\x01\x01\x01\x01\0\0\0\0\0\0\0\0\0\0\0\x02\0\0\x01\0\0\0\x01\0\x01\0\0\0\x01\0\0\0\0\0\0\x01\0\0\x01\0\0\0\0\0\0\0\0\0\x01\x01\0\0\0\x01\0\0\0\0\x01\0\0\0\0\x01\x01\0\0\0\0\0\0\x01\x01\x01\x01\0\0\0\0\0\0\0\0\x01\x01\0\0\0\0\0\0\x01\0\x01\0\0\0\0\0\0\0\0\0\0\0\x01\0\x01\x01\0\0\0\x01\x01\0\0\x01\0\0\0\x01\0\0\0\0\x01\0\0\x01\x01\x01\0\0\x01\0\x01\0\x01\x01\x01\x01\x01\x01\0\x01\0\0\0\0\x01\x01\x01\x01\0\0\0\0\x01\x01\0\0\0\0\0\0\0\0\x01\0\0\0\x01\0\0\0\x01\x01\0\0\x01\x01\x01\x01\0\0\x01\x01\0\0\x01\x01\0\0\0\0\0\0\0\0\x01\0\0\0\x01\0\0\0\0\0\0\0\x05\x05\0\0\0\0\0\0\0\0\0\x05\x05\0\0\0\0\0\0\0\0\0\x05\x05\x05\x05\0\0\0\x05\0\0\x05\0\0\0\0\0\0\0\0\0\0\0\0\x01\x01\x01\x01\0\0\0\0\0\0\0\0\0\0\x01\x01\0\0\x01\x01\0\0\0\0\x01\x01\0\0\0\0\x01\x01\x01\0\0\x01\0\0\x01\x01\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\x05\x05\0\0\0\0\0\x01\x01\0\0\x01\0\0\0\0\x01\x01\0\0\0\0\x05\x05\0\0\0\0\0\0\x01\0\x01\0\x05\x05\x05\x05\x05\x05\x05\x05\0\0\0\0\0\0\0\0\x01\0\x01\0\0\0\0\0\x05\x05\x05\x05\x05\x05\x05\x05\0\0\0\0\0\0\0\0\0\0\0\0\x01\x01\0\x01\x01\x01\0\x01\x01\x01\x01\0\x01\x01\0\x01\0\0\0\x05\0\0\0\0\0\0\0\0\0\0\x01\x01\0\x05\0\0\0\0\0\0\0\0\x05\x05\0\0\0\0\0\0\0\0\0\0\0\0\0\x05\x05\x01\x01\x01\x01\x01\x01\x01\x01\x05\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\0\x01\0\0\0\0\x01\x01\x05\x01\x01\x01\x01\x01\x05\x05\x01\x05\x01\x01\x01\x01\x05\x01\x01\x05\x01\x01\0\0\0\0\0\x05\0\0\0\0\x05\x05\0\0\0\0\0\0\0\0\x05\0\0\0\0\0\0\0\0\0\0\0\0\x05\0\x05\0\0\0\x05\x05\x05\0\x05\0\0\0\0\0\0\0\0\x05\x05\x05\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x05\0\0\0\0\0\0\x04\x04\x04\x04\x04\x04\x04\x04\0\0\0\0\0\x04\x04\0\0\0\0\0\0\0\0\0\x05\0\0\0\0\x05\x01\x01\x01\x01\0\0\0\0\0\0\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\0\x05\x05\x05\x05\x05\x03\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\0\0\x05\x05\x05\x05\x05\x05\x05\0\0\0\0\0\0\0\0\0\x05\x05\x05\x05\x05\x05\x05\x05\x01\x01\x01\x01\x01\x01\x01\x01\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\0\0\0\0\0\0\x05\x05\x05\0\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\0\x05\x05\x05\x05\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\0\0\x02\x02\x02\x02\x02\x02\0\0\x02\x02\x02\x02\x02\x02\0\0\x02\x02\x02\0\0\0\x03\x03\x03\x03\x03\x03\x03\0\x02\x02\x02\x02\x02\x02\x02\0\x05\x05\x05\x05\x05\x05\x05\x05\x05\0\0\0\0\0\0\0\x05\x05\x05\x05\0\x05\x05\x05\x05\x05\x05\x05\0\x05\x05\0\0\x05\0\0\0\0\0\0\0\0\0\0\0\0\0\x05\x05\x05\0\0\x05\0\0\0\0\0\0\0\0\0\0\x05\x05\x05\x05\0\0\0\0\0\0\0\0\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x05\x01\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x01\x01\x01\x01\x01\x05\0\0\0\0\0\0\0\0\0\0\0\0\x05\x05\x05\x05\x05\x05\0\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\0\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\0\0\0\0\x05\0\0\0\x05\0\0\0\x05\x05\x05\x05\x05\x05\x05\x05\0\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\0\0\0\0\0\0\0\0\0\0\0\x05\x05\x05\x05\0\x05\x05\x05\x05\x05\x05\0\0\0\0\0\0\x05\0\0\0\x05\x05\x05\0\0\x05\x05\x05\0\0\0\0\x05\x05\x05\x05\x05\x05\x05\x05\x05\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\0\0\0\0\0\x05\0\0\0") }, icu::properties::props::EastAsianWidth(0u8)));
        }
        #[clippy::msrv = "1.71.1"]
        impl icu_provider::DataProvider<icu::properties::provider::EastAsianWidthV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::properties::provider::EastAsianWidthV1Marker>, icu_provider::DataError> {
                if req.id.locale.is_default() {
                    Ok(icu_provider::DataResponse { payload: icu_provider::DataPayload::from_static_ref(Self::SINGLETON_EAST_ASIAN_WIDTH_V1_MARKER), metadata: Default::default() })
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::properties::provider::EastAsianWidthV1Marker as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
    };
    ($ provider : ty , ITER) => {
        __impl_east_asian_width_v1_marker!($provider);
        #[clippy::msrv = "1.71.1"]
        impl icu_provider::IterableDataProvider<icu::properties::provider::EastAsianWidthV1Marker> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BtreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok([Default::default()].into_iter().collect())
            }
        }
    };
    ($ provider : ty , DRY) => {
        __impl_east_asian_width_v1_marker!($provider);
        #[clippy::msrv = "1.71.1"]
        impl icu_provider::DryDataProvider<icu::properties::provider::EastAsianWidthV1Marker> for $provider {
            fn dry_load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponseMetadata, icu_provider::DataError> {
                if req.id.locale.is_default() {
                    Ok(Default::default())
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::properties::provider::EastAsianWidthV1Marker as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
    };
    ($ provider : ty , DRY , ITER) => {
        __impl_east_asian_width_v1_marker!($provider);
        #[clippy::msrv = "1.71.1"]
        impl icu_provider::DryDataProvider<icu::properties::provider::EastAsianWidthV1Marker> for $provider {
            fn dry_load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponseMetadata, icu_provider::DataError> {
                if req.id.locale.is_default() {
                    Ok(Default::default())
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::properties::provider::EastAsianWidthV1Marker as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
        #[clippy::msrv = "1.71.1"]
        impl icu_provider::IterableDataProvider<icu::properties::provider::EastAsianWidthV1Marker> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BtreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok([Default::default()].into_iter().collect())
            }
        }
    };
}
#[doc(inline)]
pub use __impl_east_asian_width_v1_marker as impl_east_asian_width_v1_marker;
