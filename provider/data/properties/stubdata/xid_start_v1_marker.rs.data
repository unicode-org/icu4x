// @generated
/// Implement `DataProvider<XidStartV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
///
/// Using this implementation will embed the following data in the binary's data segment:
/// * 4136B[^1] for the singleton data struct
///
/// [^1]: these numbers can be smaller in practice due to linker deduplication
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_xid_start_v1_marker {
    ($ provider : ty) => {
        #[clippy::msrv = "1.71.1"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.71.1"]
        impl $provider {
            #[doc(hidden)]
            pub const SINGLETON_XID_START_V1_MARKER: &'static <icu::properties::provider::XidStartV1Marker as icu_provider::DynamicDataMarker>::DataStruct = &icu::properties::provider::PropertyCodePointSetV1::InversionList(unsafe {
                #[allow(unused_unsafe)]
                icu::collections::codepointinvlist::CodePointInversionList::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"A\0\0[\0\0a\0\0{\0\0\xAA\0\0\xAB\0\0\xB5\0\0\xB6\0\0\xBA\0\0\xBB\0\0\xC0\0\0\xD7\0\0\xD8\0\0\xF7\0\0\xF8\0\0\xC2\x02\0\xC6\x02\0\xD2\x02\0\xE0\x02\0\xE5\x02\0\xEC\x02\0\xED\x02\0\xEE\x02\0\xEF\x02\0p\x03\0u\x03\0v\x03\0x\x03\0{\x03\0~\x03\0\x7F\x03\0\x80\x03\0\x86\x03\0\x87\x03\0\x88\x03\0\x8B\x03\0\x8C\x03\0\x8D\x03\0\x8E\x03\0\xA2\x03\0\xA3\x03\0\xF6\x03\0\xF7\x03\0\x82\x04\0\x8A\x04\x000\x05\x001\x05\0W\x05\0Y\x05\0Z\x05\0`\x05\0\x89\x05\0\xD0\x05\0\xEB\x05\0\xEF\x05\0\xF3\x05\0 \x06\0K\x06\0n\x06\0p\x06\0q\x06\0\xD4\x06\0\xD5\x06\0\xD6\x06\0\xE5\x06\0\xE7\x06\0\xEE\x06\0\xF0\x06\0\xFA\x06\0\xFD\x06\0\xFF\x06\0\0\x07\0\x10\x07\0\x11\x07\0\x12\x07\x000\x07\0M\x07\0\xA6\x07\0\xB1\x07\0\xB2\x07\0\xCA\x07\0\xEB\x07\0\xF4\x07\0\xF6\x07\0\xFA\x07\0\xFB\x07\0\0\x08\0\x16\x08\0\x1A\x08\0\x1B\x08\0$\x08\0%\x08\0(\x08\0)\x08\0@\x08\0Y\x08\0`\x08\0k\x08\0p\x08\0\x88\x08\0\x89\x08\0\x8F\x08\0\xA0\x08\0\xCA\x08\0\x04\t\0:\t\0=\t\0>\t\0P\t\0Q\t\0X\t\0b\t\0q\t\0\x81\t\0\x85\t\0\x8D\t\0\x8F\t\0\x91\t\0\x93\t\0\xA9\t\0\xAA\t\0\xB1\t\0\xB2\t\0\xB3\t\0\xB6\t\0\xBA\t\0\xBD\t\0\xBE\t\0\xCE\t\0\xCF\t\0\xDC\t\0\xDE\t\0\xDF\t\0\xE2\t\0\xF0\t\0\xF2\t\0\xFC\t\0\xFD\t\0\x05\n\0\x0B\n\0\x0F\n\0\x11\n\0\x13\n\0)\n\0*\n\x001\n\x002\n\x004\n\x005\n\x007\n\08\n\0:\n\0Y\n\0]\n\0^\n\0_\n\0r\n\0u\n\0\x85\n\0\x8E\n\0\x8F\n\0\x92\n\0\x93\n\0\xA9\n\0\xAA\n\0\xB1\n\0\xB2\n\0\xB4\n\0\xB5\n\0\xBA\n\0\xBD\n\0\xBE\n\0\xD0\n\0\xD1\n\0\xE0\n\0\xE2\n\0\xF9\n\0\xFA\n\0\x05\x0B\0\r\x0B\0\x0F\x0B\0\x11\x0B\0\x13\x0B\0)\x0B\0*\x0B\x001\x0B\x002\x0B\x004\x0B\x005\x0B\0:\x0B\0=\x0B\0>\x0B\0\\\x0B\0^\x0B\0_\x0B\0b\x0B\0q\x0B\0r\x0B\0\x83\x0B\0\x84\x0B\0\x85\x0B\0\x8B\x0B\0\x8E\x0B\0\x91\x0B\0\x92\x0B\0\x96\x0B\0\x99\x0B\0\x9B\x0B\0\x9C\x0B\0\x9D\x0B\0\x9E\x0B\0\xA0\x0B\0\xA3\x0B\0\xA5\x0B\0\xA8\x0B\0\xAB\x0B\0\xAE\x0B\0\xBA\x0B\0\xD0\x0B\0\xD1\x0B\0\x05\x0C\0\r\x0C\0\x0E\x0C\0\x11\x0C\0\x12\x0C\0)\x0C\0*\x0C\0:\x0C\0=\x0C\0>\x0C\0X\x0C\0[\x0C\0]\x0C\0^\x0C\0`\x0C\0b\x0C\0\x80\x0C\0\x81\x0C\0\x85\x0C\0\x8D\x0C\0\x8E\x0C\0\x91\x0C\0\x92\x0C\0\xA9\x0C\0\xAA\x0C\0\xB4\x0C\0\xB5\x0C\0\xBA\x0C\0\xBD\x0C\0\xBE\x0C\0\xDD\x0C\0\xDF\x0C\0\xE0\x0C\0\xE2\x0C\0\xF1\x0C\0\xF3\x0C\0\x04\r\0\r\r\0\x0E\r\0\x11\r\0\x12\r\0;\r\0=\r\0>\r\0N\r\0O\r\0T\r\0W\r\0_\r\0b\r\0z\r\0\x80\r\0\x85\r\0\x97\r\0\x9A\r\0\xB2\r\0\xB3\r\0\xBC\r\0\xBD\r\0\xBE\r\0\xC0\r\0\xC7\r\0\x01\x0E\x001\x0E\x002\x0E\x003\x0E\0@\x0E\0G\x0E\0\x81\x0E\0\x83\x0E\0\x84\x0E\0\x85\x0E\0\x86\x0E\0\x8B\x0E\0\x8C\x0E\0\xA4\x0E\0\xA5\x0E\0\xA6\x0E\0\xA7\x0E\0\xB1\x0E\0\xB2\x0E\0\xB3\x0E\0\xBD\x0E\0\xBE\x0E\0\xC0\x0E\0\xC5\x0E\0\xC6\x0E\0\xC7\x0E\0\xDC\x0E\0\xE0\x0E\0\0\x0F\0\x01\x0F\0@\x0F\0H\x0F\0I\x0F\0m\x0F\0\x88\x0F\0\x8D\x0F\0\0\x10\0+\x10\0?\x10\0@\x10\0P\x10\0V\x10\0Z\x10\0^\x10\0a\x10\0b\x10\0e\x10\0g\x10\0n\x10\0q\x10\0u\x10\0\x82\x10\0\x8E\x10\0\x8F\x10\0\xA0\x10\0\xC6\x10\0\xC7\x10\0\xC8\x10\0\xCD\x10\0\xCE\x10\0\xD0\x10\0\xFB\x10\0\xFC\x10\0I\x12\0J\x12\0N\x12\0P\x12\0W\x12\0X\x12\0Y\x12\0Z\x12\0^\x12\0`\x12\0\x89\x12\0\x8A\x12\0\x8E\x12\0\x90\x12\0\xB1\x12\0\xB2\x12\0\xB6\x12\0\xB8\x12\0\xBF\x12\0\xC0\x12\0\xC1\x12\0\xC2\x12\0\xC6\x12\0\xC8\x12\0\xD7\x12\0\xD8\x12\0\x11\x13\0\x12\x13\0\x16\x13\0\x18\x13\0[\x13\0\x80\x13\0\x90\x13\0\xA0\x13\0\xF6\x13\0\xF8\x13\0\xFE\x13\0\x01\x14\0m\x16\0o\x16\0\x80\x16\0\x81\x16\0\x9B\x16\0\xA0\x16\0\xEB\x16\0\xEE\x16\0\xF9\x16\0\0\x17\0\x12\x17\0\x1F\x17\x002\x17\0@\x17\0R\x17\0`\x17\0m\x17\0n\x17\0q\x17\0\x80\x17\0\xB4\x17\0\xD7\x17\0\xD8\x17\0\xDC\x17\0\xDD\x17\0 \x18\0y\x18\0\x80\x18\0\xA9\x18\0\xAA\x18\0\xAB\x18\0\xB0\x18\0\xF6\x18\0\0\x19\0\x1F\x19\0P\x19\0n\x19\0p\x19\0u\x19\0\x80\x19\0\xAC\x19\0\xB0\x19\0\xCA\x19\0\0\x1A\0\x17\x1A\0 \x1A\0U\x1A\0\xA7\x1A\0\xA8\x1A\0\x05\x1B\x004\x1B\0E\x1B\0M\x1B\0\x83\x1B\0\xA1\x1B\0\xAE\x1B\0\xB0\x1B\0\xBA\x1B\0\xE6\x1B\0\0\x1C\0$\x1C\0M\x1C\0P\x1C\0Z\x1C\0~\x1C\0\x80\x1C\0\x8B\x1C\0\x90\x1C\0\xBB\x1C\0\xBD\x1C\0\xC0\x1C\0\xE9\x1C\0\xED\x1C\0\xEE\x1C\0\xF4\x1C\0\xF5\x1C\0\xF7\x1C\0\xFA\x1C\0\xFB\x1C\0\0\x1D\0\xC0\x1D\0\0\x1E\0\x16\x1F\0\x18\x1F\0\x1E\x1F\0 \x1F\0F\x1F\0H\x1F\0N\x1F\0P\x1F\0X\x1F\0Y\x1F\0Z\x1F\0[\x1F\0\\\x1F\0]\x1F\0^\x1F\0_\x1F\0~\x1F\0\x80\x1F\0\xB5\x1F\0\xB6\x1F\0\xBD\x1F\0\xBE\x1F\0\xBF\x1F\0\xC2\x1F\0\xC5\x1F\0\xC6\x1F\0\xCD\x1F\0\xD0\x1F\0\xD4\x1F\0\xD6\x1F\0\xDC\x1F\0\xE0\x1F\0\xED\x1F\0\xF2\x1F\0\xF5\x1F\0\xF6\x1F\0\xFD\x1F\0q \0r \0\x7F \0\x80 \0\x90 \0\x9D \0\x02!\0\x03!\0\x07!\0\x08!\0\n!\0\x14!\0\x15!\0\x16!\0\x18!\0\x1E!\0$!\0%!\0&!\0'!\0(!\0)!\0*!\0:!\0<!\0@!\0E!\0J!\0N!\0O!\0`!\0\x89!\0\0,\0\xE5,\0\xEB,\0\xEF,\0\xF2,\0\xF4,\0\0-\0&-\0'-\0(-\0--\0.-\x000-\0h-\0o-\0p-\0\x80-\0\x97-\0\xA0-\0\xA7-\0\xA8-\0\xAF-\0\xB0-\0\xB7-\0\xB8-\0\xBF-\0\xC0-\0\xC7-\0\xC8-\0\xCF-\0\xD0-\0\xD7-\0\xD8-\0\xDF-\0\x050\0\x080\0!0\0*0\x0010\x0060\080\0=0\0A0\0\x970\0\x9D0\0\xA00\0\xA10\0\xFB0\0\xFC0\0\x001\0\x051\x0001\x0011\0\x8F1\0\xA01\0\xC01\0\xF01\0\x002\0\x004\0\xC0M\0\0N\0\x8D\xA4\0\xD0\xA4\0\xFE\xA4\0\0\xA5\0\r\xA6\0\x10\xA6\0 \xA6\0*\xA6\0,\xA6\0@\xA6\0o\xA6\0\x7F\xA6\0\x9E\xA6\0\xA0\xA6\0\xF0\xA6\0\x17\xA7\0 \xA7\0\"\xA7\0\x89\xA7\0\x8B\xA7\0\xCE\xA7\0\xD0\xA7\0\xD2\xA7\0\xD3\xA7\0\xD4\xA7\0\xD5\xA7\0\xDD\xA7\0\xF2\xA7\0\x02\xA8\0\x03\xA8\0\x06\xA8\0\x07\xA8\0\x0B\xA8\0\x0C\xA8\0#\xA8\0@\xA8\0t\xA8\0\x82\xA8\0\xB4\xA8\0\xF2\xA8\0\xF8\xA8\0\xFB\xA8\0\xFC\xA8\0\xFD\xA8\0\xFF\xA8\0\n\xA9\0&\xA9\x000\xA9\0G\xA9\0`\xA9\0}\xA9\0\x84\xA9\0\xB3\xA9\0\xCF\xA9\0\xD0\xA9\0\xE0\xA9\0\xE5\xA9\0\xE6\xA9\0\xF0\xA9\0\xFA\xA9\0\xFF\xA9\0\0\xAA\0)\xAA\0@\xAA\0C\xAA\0D\xAA\0L\xAA\0`\xAA\0w\xAA\0z\xAA\0{\xAA\0~\xAA\0\xB0\xAA\0\xB1\xAA\0\xB2\xAA\0\xB5\xAA\0\xB7\xAA\0\xB9\xAA\0\xBE\xAA\0\xC0\xAA\0\xC1\xAA\0\xC2\xAA\0\xC3\xAA\0\xDB\xAA\0\xDE\xAA\0\xE0\xAA\0\xEB\xAA\0\xF2\xAA\0\xF5\xAA\0\x01\xAB\0\x07\xAB\0\t\xAB\0\x0F\xAB\0\x11\xAB\0\x17\xAB\0 \xAB\0'\xAB\0(\xAB\0/\xAB\x000\xAB\0[\xAB\0\\\xAB\0j\xAB\0p\xAB\0\xE3\xAB\0\0\xAC\0\xA4\xD7\0\xB0\xD7\0\xC7\xD7\0\xCB\xD7\0\xFC\xD7\0\0\xF9\0n\xFA\0p\xFA\0\xDA\xFA\0\0\xFB\0\x07\xFB\0\x13\xFB\0\x18\xFB\0\x1D\xFB\0\x1E\xFB\0\x1F\xFB\0)\xFB\0*\xFB\x007\xFB\08\xFB\0=\xFB\0>\xFB\0?\xFB\0@\xFB\0B\xFB\0C\xFB\0E\xFB\0F\xFB\0\xB2\xFB\0\xD3\xFB\0^\xFC\0d\xFC\0>\xFD\0P\xFD\0\x90\xFD\0\x92\xFD\0\xC8\xFD\0\xF0\xFD\0\xFA\xFD\0q\xFE\0r\xFE\0s\xFE\0t\xFE\0w\xFE\0x\xFE\0y\xFE\0z\xFE\0{\xFE\0|\xFE\0}\xFE\0~\xFE\0\x7F\xFE\0\xFD\xFE\0!\xFF\0;\xFF\0A\xFF\0[\xFF\0f\xFF\0\x9E\xFF\0\xA0\xFF\0\xBF\xFF\0\xC2\xFF\0\xC8\xFF\0\xCA\xFF\0\xD0\xFF\0\xD2\xFF\0\xD8\xFF\0\xDA\xFF\0\xDD\xFF\0\0\0\x01\x0C\0\x01\r\0\x01'\0\x01(\0\x01;\0\x01<\0\x01>\0\x01?\0\x01N\0\x01P\0\x01^\0\x01\x80\0\x01\xFB\0\x01@\x01\x01u\x01\x01\x80\x02\x01\x9D\x02\x01\xA0\x02\x01\xD1\x02\x01\0\x03\x01 \x03\x01-\x03\x01K\x03\x01P\x03\x01v\x03\x01\x80\x03\x01\x9E\x03\x01\xA0\x03\x01\xC4\x03\x01\xC8\x03\x01\xD0\x03\x01\xD1\x03\x01\xD6\x03\x01\0\x04\x01\x9E\x04\x01\xB0\x04\x01\xD4\x04\x01\xD8\x04\x01\xFC\x04\x01\0\x05\x01(\x05\x010\x05\x01d\x05\x01p\x05\x01{\x05\x01|\x05\x01\x8B\x05\x01\x8C\x05\x01\x93\x05\x01\x94\x05\x01\x96\x05\x01\x97\x05\x01\xA2\x05\x01\xA3\x05\x01\xB2\x05\x01\xB3\x05\x01\xBA\x05\x01\xBB\x05\x01\xBD\x05\x01\xC0\x05\x01\xF4\x05\x01\0\x06\x017\x07\x01@\x07\x01V\x07\x01`\x07\x01h\x07\x01\x80\x07\x01\x86\x07\x01\x87\x07\x01\xB1\x07\x01\xB2\x07\x01\xBB\x07\x01\0\x08\x01\x06\x08\x01\x08\x08\x01\t\x08\x01\n\x08\x016\x08\x017\x08\x019\x08\x01<\x08\x01=\x08\x01?\x08\x01V\x08\x01`\x08\x01w\x08\x01\x80\x08\x01\x9F\x08\x01\xE0\x08\x01\xF3\x08\x01\xF4\x08\x01\xF6\x08\x01\0\t\x01\x16\t\x01 \t\x01:\t\x01\x80\t\x01\xB8\t\x01\xBE\t\x01\xC0\t\x01\0\n\x01\x01\n\x01\x10\n\x01\x14\n\x01\x15\n\x01\x18\n\x01\x19\n\x016\n\x01`\n\x01}\n\x01\x80\n\x01\x9D\n\x01\xC0\n\x01\xC8\n\x01\xC9\n\x01\xE5\n\x01\0\x0B\x016\x0B\x01@\x0B\x01V\x0B\x01`\x0B\x01s\x0B\x01\x80\x0B\x01\x92\x0B\x01\0\x0C\x01I\x0C\x01\x80\x0C\x01\xB3\x0C\x01\xC0\x0C\x01\xF3\x0C\x01\0\r\x01$\r\x01J\r\x01f\r\x01o\r\x01\x86\r\x01\x80\x0E\x01\xAA\x0E\x01\xB0\x0E\x01\xB2\x0E\x01\xC2\x0E\x01\xC5\x0E\x01\0\x0F\x01\x1D\x0F\x01'\x0F\x01(\x0F\x010\x0F\x01F\x0F\x01p\x0F\x01\x82\x0F\x01\xB0\x0F\x01\xC5\x0F\x01\xE0\x0F\x01\xF7\x0F\x01\x03\x10\x018\x10\x01q\x10\x01s\x10\x01u\x10\x01v\x10\x01\x83\x10\x01\xB0\x10\x01\xD0\x10\x01\xE9\x10\x01\x03\x11\x01'\x11\x01D\x11\x01E\x11\x01G\x11\x01H\x11\x01P\x11\x01s\x11\x01v\x11\x01w\x11\x01\x83\x11\x01\xB3\x11\x01\xC1\x11\x01\xC5\x11\x01\xDA\x11\x01\xDB\x11\x01\xDC\x11\x01\xDD\x11\x01\0\x12\x01\x12\x12\x01\x13\x12\x01,\x12\x01?\x12\x01A\x12\x01\x80\x12\x01\x87\x12\x01\x88\x12\x01\x89\x12\x01\x8A\x12\x01\x8E\x12\x01\x8F\x12\x01\x9E\x12\x01\x9F\x12\x01\xA9\x12\x01\xB0\x12\x01\xDF\x12\x01\x05\x13\x01\r\x13\x01\x0F\x13\x01\x11\x13\x01\x13\x13\x01)\x13\x01*\x13\x011\x13\x012\x13\x014\x13\x015\x13\x01:\x13\x01=\x13\x01>\x13\x01P\x13\x01Q\x13\x01]\x13\x01b\x13\x01\x80\x13\x01\x8A\x13\x01\x8B\x13\x01\x8C\x13\x01\x8E\x13\x01\x8F\x13\x01\x90\x13\x01\xB6\x13\x01\xB7\x13\x01\xB8\x13\x01\xD1\x13\x01\xD2\x13\x01\xD3\x13\x01\xD4\x13\x01\0\x14\x015\x14\x01G\x14\x01K\x14\x01_\x14\x01b\x14\x01\x80\x14\x01\xB0\x14\x01\xC4\x14\x01\xC6\x14\x01\xC7\x14\x01\xC8\x14\x01\x80\x15\x01\xAF\x15\x01\xD8\x15\x01\xDC\x15\x01\0\x16\x010\x16\x01D\x16\x01E\x16\x01\x80\x16\x01\xAB\x16\x01\xB8\x16\x01\xB9\x16\x01\0\x17\x01\x1B\x17\x01@\x17\x01G\x17\x01\0\x18\x01,\x18\x01\xA0\x18\x01\xE0\x18\x01\xFF\x18\x01\x07\x19\x01\t\x19\x01\n\x19\x01\x0C\x19\x01\x14\x19\x01\x15\x19\x01\x17\x19\x01\x18\x19\x010\x19\x01?\x19\x01@\x19\x01A\x19\x01B\x19\x01\xA0\x19\x01\xA8\x19\x01\xAA\x19\x01\xD1\x19\x01\xE1\x19\x01\xE2\x19\x01\xE3\x19\x01\xE4\x19\x01\0\x1A\x01\x01\x1A\x01\x0B\x1A\x013\x1A\x01:\x1A\x01;\x1A\x01P\x1A\x01Q\x1A\x01\\\x1A\x01\x8A\x1A\x01\x9D\x1A\x01\x9E\x1A\x01\xB0\x1A\x01\xF9\x1A\x01\xC0\x1B\x01\xE1\x1B\x01\0\x1C\x01\t\x1C\x01\n\x1C\x01/\x1C\x01@\x1C\x01A\x1C\x01r\x1C\x01\x90\x1C\x01\0\x1D\x01\x07\x1D\x01\x08\x1D\x01\n\x1D\x01\x0B\x1D\x011\x1D\x01F\x1D\x01G\x1D\x01`\x1D\x01f\x1D\x01g\x1D\x01i\x1D\x01j\x1D\x01\x8A\x1D\x01\x98\x1D\x01\x99\x1D\x01\xE0\x1E\x01\xF3\x1E\x01\x02\x1F\x01\x03\x1F\x01\x04\x1F\x01\x11\x1F\x01\x12\x1F\x014\x1F\x01\xB0\x1F\x01\xB1\x1F\x01\0 \x01\x9A#\x01\0$\x01o$\x01\x80$\x01D%\x01\x90/\x01\xF1/\x01\x000\x0104\x01A4\x01G4\x01`4\x01\xFBC\x01\0D\x01GF\x01\0a\x01\x1Ea\x01\0h\x019j\x01@j\x01_j\x01pj\x01\xBFj\x01\xD0j\x01\xEEj\x01\0k\x010k\x01@k\x01Dk\x01ck\x01xk\x01}k\x01\x90k\x01@m\x01mm\x01@n\x01\x80n\x01\0o\x01Ko\x01Po\x01Qo\x01\x93o\x01\xA0o\x01\xE0o\x01\xE2o\x01\xE3o\x01\xE4o\x01\0p\x01\xF8\x87\x01\0\x88\x01\xD6\x8C\x01\xFF\x8C\x01\t\x8D\x01\xF0\xAF\x01\xF4\xAF\x01\xF5\xAF\x01\xFC\xAF\x01\xFD\xAF\x01\xFF\xAF\x01\0\xB0\x01#\xB1\x012\xB1\x013\xB1\x01P\xB1\x01S\xB1\x01U\xB1\x01V\xB1\x01d\xB1\x01h\xB1\x01p\xB1\x01\xFC\xB2\x01\0\xBC\x01k\xBC\x01p\xBC\x01}\xBC\x01\x80\xBC\x01\x89\xBC\x01\x90\xBC\x01\x9A\xBC\x01\0\xD4\x01U\xD4\x01V\xD4\x01\x9D\xD4\x01\x9E\xD4\x01\xA0\xD4\x01\xA2\xD4\x01\xA3\xD4\x01\xA5\xD4\x01\xA7\xD4\x01\xA9\xD4\x01\xAD\xD4\x01\xAE\xD4\x01\xBA\xD4\x01\xBB\xD4\x01\xBC\xD4\x01\xBD\xD4\x01\xC4\xD4\x01\xC5\xD4\x01\x06\xD5\x01\x07\xD5\x01\x0B\xD5\x01\r\xD5\x01\x15\xD5\x01\x16\xD5\x01\x1D\xD5\x01\x1E\xD5\x01:\xD5\x01;\xD5\x01?\xD5\x01@\xD5\x01E\xD5\x01F\xD5\x01G\xD5\x01J\xD5\x01Q\xD5\x01R\xD5\x01\xA6\xD6\x01\xA8\xD6\x01\xC1\xD6\x01\xC2\xD6\x01\xDB\xD6\x01\xDC\xD6\x01\xFB\xD6\x01\xFC\xD6\x01\x15\xD7\x01\x16\xD7\x015\xD7\x016\xD7\x01O\xD7\x01P\xD7\x01o\xD7\x01p\xD7\x01\x89\xD7\x01\x8A\xD7\x01\xA9\xD7\x01\xAA\xD7\x01\xC3\xD7\x01\xC4\xD7\x01\xCC\xD7\x01\0\xDF\x01\x1F\xDF\x01%\xDF\x01+\xDF\x010\xE0\x01n\xE0\x01\0\xE1\x01-\xE1\x017\xE1\x01>\xE1\x01N\xE1\x01O\xE1\x01\x90\xE2\x01\xAE\xE2\x01\xC0\xE2\x01\xEC\xE2\x01\xD0\xE4\x01\xEC\xE4\x01\xD0\xE5\x01\xEE\xE5\x01\xF0\xE5\x01\xF1\xE5\x01\xE0\xE7\x01\xE7\xE7\x01\xE8\xE7\x01\xEC\xE7\x01\xED\xE7\x01\xEF\xE7\x01\xF0\xE7\x01\xFF\xE7\x01\0\xE8\x01\xC5\xE8\x01\0\xE9\x01D\xE9\x01K\xE9\x01L\xE9\x01\0\xEE\x01\x04\xEE\x01\x05\xEE\x01 \xEE\x01!\xEE\x01#\xEE\x01$\xEE\x01%\xEE\x01'\xEE\x01(\xEE\x01)\xEE\x013\xEE\x014\xEE\x018\xEE\x019\xEE\x01:\xEE\x01;\xEE\x01<\xEE\x01B\xEE\x01C\xEE\x01G\xEE\x01H\xEE\x01I\xEE\x01J\xEE\x01K\xEE\x01L\xEE\x01M\xEE\x01P\xEE\x01Q\xEE\x01S\xEE\x01T\xEE\x01U\xEE\x01W\xEE\x01X\xEE\x01Y\xEE\x01Z\xEE\x01[\xEE\x01\\\xEE\x01]\xEE\x01^\xEE\x01_\xEE\x01`\xEE\x01a\xEE\x01c\xEE\x01d\xEE\x01e\xEE\x01g\xEE\x01k\xEE\x01l\xEE\x01s\xEE\x01t\xEE\x01x\xEE\x01y\xEE\x01}\xEE\x01~\xEE\x01\x7F\xEE\x01\x80\xEE\x01\x8A\xEE\x01\x8B\xEE\x01\x9C\xEE\x01\xA1\xEE\x01\xA4\xEE\x01\xA5\xEE\x01\xAA\xEE\x01\xAB\xEE\x01\xBC\xEE\x01\0\0\x02\xE0\xA6\x02\0\xA7\x02:\xB7\x02@\xB7\x02\x1E\xB8\x02 \xB8\x02\xA2\xCE\x02\xB0\xCE\x02\xE1\xEB\x02\xF0\xEB\x02^\xEE\x02\0\xF8\x02\x1E\xFA\x02\0\0\x03K\x13\x03P\x13\x03\xB0#\x03") }, 141246u32)
            });
        }
        #[clippy::msrv = "1.71.1"]
        impl icu_provider::DataProvider<icu::properties::provider::XidStartV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::properties::provider::XidStartV1Marker>, icu_provider::DataError> {
                if req.id.locale.is_default() {
                    Ok(icu_provider::DataResponse { payload: icu_provider::DataPayload::from_static_ref(Self::SINGLETON_XID_START_V1_MARKER), metadata: Default::default() })
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::properties::provider::XidStartV1Marker as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
    };
    ($ provider : ty , ITER) => {
        __impl_xid_start_v1_marker!($provider);
        #[clippy::msrv = "1.71.1"]
        impl icu_provider::IterableDataProvider<icu::properties::provider::XidStartV1Marker> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BtreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok([Default::default()].into_iter().collect())
            }
        }
    };
    ($ provider : ty , DRY) => {
        __impl_xid_start_v1_marker!($provider);
        #[clippy::msrv = "1.71.1"]
        impl icu_provider::DryDataProvider<icu::properties::provider::XidStartV1Marker> for $provider {
            fn dry_load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponseMetadata, icu_provider::DataError> {
                if req.id.locale.is_default() {
                    Ok(Default::default())
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::properties::provider::XidStartV1Marker as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
    };
    ($ provider : ty , DRY , ITER) => {
        __impl_xid_start_v1_marker!($provider);
        #[clippy::msrv = "1.71.1"]
        impl icu_provider::DryDataProvider<icu::properties::provider::XidStartV1Marker> for $provider {
            fn dry_load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponseMetadata, icu_provider::DataError> {
                if req.id.locale.is_default() {
                    Ok(Default::default())
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::properties::provider::XidStartV1Marker as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
        #[clippy::msrv = "1.71.1"]
        impl icu_provider::IterableDataProvider<icu::properties::provider::XidStartV1Marker> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BtreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok([Default::default()].into_iter().collect())
            }
        }
    };
}
#[doc(inline)]
pub use __impl_xid_start_v1_marker as impl_xid_start_v1_marker;
