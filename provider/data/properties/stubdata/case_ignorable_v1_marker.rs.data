// @generated
/// Implement `DataProvider<CaseIgnorableV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
///
/// Using this implementation will embed the following data in the binary's data segment:
/// * 2744B[^1] for the singleton data struct
///
/// [^1]: these numbers can be smaller in practice due to linker deduplication
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_case_ignorable_v1_marker {
    ($ provider : ty) => {
        #[clippy::msrv = "1.71.1"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.71.1"]
        impl $provider {
            #[doc(hidden)]
            pub const SINGLETON_CASE_IGNORABLE_V1_MARKER: &'static <icu::properties::provider::CaseIgnorableV1Marker as icu_provider::DynamicDataMarker>::DataStruct = &icu::properties::provider::PropertyCodePointSetV1::InversionList(unsafe {
                #[allow(unused_unsafe)]
                icu::collections::codepointinvlist::CodePointInversionList::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"'\0\0(\0\0.\0\0/\0\0:\0\0;\0\0^\0\0_\0\0`\0\0a\0\0\xA8\0\0\xA9\0\0\xAD\0\0\xAE\0\0\xAF\0\0\xB0\0\0\xB4\0\0\xB5\0\0\xB7\0\0\xB9\0\0\xB0\x02\0p\x03\0t\x03\0v\x03\0z\x03\0{\x03\0\x84\x03\0\x86\x03\0\x87\x03\0\x88\x03\0\x83\x04\0\x8A\x04\0Y\x05\0Z\x05\0_\x05\0`\x05\0\x91\x05\0\xBE\x05\0\xBF\x05\0\xC0\x05\0\xC1\x05\0\xC3\x05\0\xC4\x05\0\xC6\x05\0\xC7\x05\0\xC8\x05\0\xF4\x05\0\xF5\x05\0\0\x06\0\x06\x06\0\x10\x06\0\x1B\x06\0\x1C\x06\0\x1D\x06\0@\x06\0A\x06\0K\x06\0`\x06\0p\x06\0q\x06\0\xD6\x06\0\xDE\x06\0\xDF\x06\0\xE9\x06\0\xEA\x06\0\xEE\x06\0\x0F\x07\0\x10\x07\0\x11\x07\0\x12\x07\x000\x07\0K\x07\0\xA6\x07\0\xB1\x07\0\xEB\x07\0\xF6\x07\0\xFA\x07\0\xFB\x07\0\xFD\x07\0\xFE\x07\0\x16\x08\0.\x08\0Y\x08\0\\\x08\0\x88\x08\0\x89\x08\0\x90\x08\0\x92\x08\0\x97\x08\0\xA0\x08\0\xC9\x08\0\x03\t\0:\t\0;\t\0<\t\0=\t\0A\t\0I\t\0M\t\0N\t\0Q\t\0X\t\0b\t\0d\t\0q\t\0r\t\0\x81\t\0\x82\t\0\xBC\t\0\xBD\t\0\xC1\t\0\xC5\t\0\xCD\t\0\xCE\t\0\xE2\t\0\xE4\t\0\xFE\t\0\xFF\t\0\x01\n\0\x03\n\0<\n\0=\n\0A\n\0C\n\0G\n\0I\n\0K\n\0N\n\0Q\n\0R\n\0p\n\0r\n\0u\n\0v\n\0\x81\n\0\x83\n\0\xBC\n\0\xBD\n\0\xC1\n\0\xC6\n\0\xC7\n\0\xC9\n\0\xCD\n\0\xCE\n\0\xE2\n\0\xE4\n\0\xFA\n\0\0\x0B\0\x01\x0B\0\x02\x0B\0<\x0B\0=\x0B\0?\x0B\0@\x0B\0A\x0B\0E\x0B\0M\x0B\0N\x0B\0U\x0B\0W\x0B\0b\x0B\0d\x0B\0\x82\x0B\0\x83\x0B\0\xC0\x0B\0\xC1\x0B\0\xCD\x0B\0\xCE\x0B\0\0\x0C\0\x01\x0C\0\x04\x0C\0\x05\x0C\0<\x0C\0=\x0C\0>\x0C\0A\x0C\0F\x0C\0I\x0C\0J\x0C\0N\x0C\0U\x0C\0W\x0C\0b\x0C\0d\x0C\0\x81\x0C\0\x82\x0C\0\xBC\x0C\0\xBD\x0C\0\xBF\x0C\0\xC0\x0C\0\xC6\x0C\0\xC7\x0C\0\xCC\x0C\0\xCE\x0C\0\xE2\x0C\0\xE4\x0C\0\0\r\0\x02\r\0;\r\0=\r\0A\r\0E\r\0M\r\0N\r\0b\r\0d\r\0\x81\r\0\x82\r\0\xCA\r\0\xCB\r\0\xD2\r\0\xD5\r\0\xD6\r\0\xD7\r\x001\x0E\x002\x0E\x004\x0E\0;\x0E\0F\x0E\0O\x0E\0\xB1\x0E\0\xB2\x0E\0\xB4\x0E\0\xBD\x0E\0\xC6\x0E\0\xC7\x0E\0\xC8\x0E\0\xCF\x0E\0\x18\x0F\0\x1A\x0F\x005\x0F\x006\x0F\x007\x0F\08\x0F\09\x0F\0:\x0F\0q\x0F\0\x7F\x0F\0\x80\x0F\0\x85\x0F\0\x86\x0F\0\x88\x0F\0\x8D\x0F\0\x98\x0F\0\x99\x0F\0\xBD\x0F\0\xC6\x0F\0\xC7\x0F\0-\x10\x001\x10\x002\x10\08\x10\09\x10\0;\x10\0=\x10\0?\x10\0X\x10\0Z\x10\0^\x10\0a\x10\0q\x10\0u\x10\0\x82\x10\0\x83\x10\0\x85\x10\0\x87\x10\0\x8D\x10\0\x8E\x10\0\x9D\x10\0\x9E\x10\0\xFC\x10\0\xFD\x10\0]\x13\0`\x13\0\x12\x17\0\x15\x17\x002\x17\x004\x17\0R\x17\0T\x17\0r\x17\0t\x17\0\xB4\x17\0\xB6\x17\0\xB7\x17\0\xBE\x17\0\xC6\x17\0\xC7\x17\0\xC9\x17\0\xD4\x17\0\xD7\x17\0\xD8\x17\0\xDD\x17\0\xDE\x17\0\x0B\x18\0\x10\x18\0C\x18\0D\x18\0\x85\x18\0\x87\x18\0\xA9\x18\0\xAA\x18\0 \x19\0#\x19\0'\x19\0)\x19\x002\x19\x003\x19\09\x19\0<\x19\0\x17\x1A\0\x19\x1A\0\x1B\x1A\0\x1C\x1A\0V\x1A\0W\x1A\0X\x1A\0_\x1A\0`\x1A\0a\x1A\0b\x1A\0c\x1A\0e\x1A\0m\x1A\0s\x1A\0}\x1A\0\x7F\x1A\0\x80\x1A\0\xA7\x1A\0\xA8\x1A\0\xB0\x1A\0\xCF\x1A\0\0\x1B\0\x04\x1B\x004\x1B\x005\x1B\x006\x1B\0;\x1B\0<\x1B\0=\x1B\0B\x1B\0C\x1B\0k\x1B\0t\x1B\0\x80\x1B\0\x82\x1B\0\xA2\x1B\0\xA6\x1B\0\xA8\x1B\0\xAA\x1B\0\xAB\x1B\0\xAE\x1B\0\xE6\x1B\0\xE7\x1B\0\xE8\x1B\0\xEA\x1B\0\xED\x1B\0\xEE\x1B\0\xEF\x1B\0\xF2\x1B\0,\x1C\x004\x1C\x006\x1C\08\x1C\0x\x1C\0~\x1C\0\xD0\x1C\0\xD3\x1C\0\xD4\x1C\0\xE1\x1C\0\xE2\x1C\0\xE9\x1C\0\xED\x1C\0\xEE\x1C\0\xF4\x1C\0\xF5\x1C\0\xF8\x1C\0\xFA\x1C\0,\x1D\0k\x1D\0x\x1D\0y\x1D\0\x9B\x1D\0\0\x1E\0\xBD\x1F\0\xBE\x1F\0\xBF\x1F\0\xC2\x1F\0\xCD\x1F\0\xD0\x1F\0\xDD\x1F\0\xE0\x1F\0\xED\x1F\0\xF0\x1F\0\xFD\x1F\0\xFF\x1F\0\x0B \0\x10 \0\x18 \0\x1A \0$ \0% \0' \0( \0* \0/ \0` \0e \0f \0p \0q \0r \0\x7F \0\x80 \0\x90 \0\x9D \0\xD0 \0\xF1 \0|,\0~,\0\xEF,\0\xF2,\0o-\0p-\0\x7F-\0\x80-\0\xE0-\0\0.\0/.\x000.\0\x050\0\x060\0*0\0.0\x0010\x0060\0;0\0<0\0\x990\0\x9F0\0\xFC0\0\xFF0\0\x15\xA0\0\x16\xA0\0\xF8\xA4\0\xFE\xA4\0\x0C\xA6\0\r\xA6\0o\xA6\0s\xA6\0t\xA6\0~\xA6\0\x7F\xA6\0\x80\xA6\0\x9C\xA6\0\xA0\xA6\0\xF0\xA6\0\xF2\xA6\0\0\xA7\0\"\xA7\0p\xA7\0q\xA7\0\x88\xA7\0\x8B\xA7\0\xF2\xA7\0\xF5\xA7\0\xF8\xA7\0\xFA\xA7\0\x02\xA8\0\x03\xA8\0\x06\xA8\0\x07\xA8\0\x0B\xA8\0\x0C\xA8\0%\xA8\0'\xA8\0,\xA8\0-\xA8\0\xC4\xA8\0\xC6\xA8\0\xE0\xA8\0\xF2\xA8\0\xFF\xA8\0\0\xA9\0&\xA9\0.\xA9\0G\xA9\0R\xA9\0\x80\xA9\0\x83\xA9\0\xB3\xA9\0\xB4\xA9\0\xB6\xA9\0\xBA\xA9\0\xBC\xA9\0\xBE\xA9\0\xCF\xA9\0\xD0\xA9\0\xE5\xA9\0\xE7\xA9\0)\xAA\0/\xAA\x001\xAA\x003\xAA\x005\xAA\x007\xAA\0C\xAA\0D\xAA\0L\xAA\0M\xAA\0p\xAA\0q\xAA\0|\xAA\0}\xAA\0\xB0\xAA\0\xB1\xAA\0\xB2\xAA\0\xB5\xAA\0\xB7\xAA\0\xB9\xAA\0\xBE\xAA\0\xC0\xAA\0\xC1\xAA\0\xC2\xAA\0\xDD\xAA\0\xDE\xAA\0\xEC\xAA\0\xEE\xAA\0\xF3\xAA\0\xF5\xAA\0\xF6\xAA\0\xF7\xAA\0[\xAB\0`\xAB\0i\xAB\0l\xAB\0\xE5\xAB\0\xE6\xAB\0\xE8\xAB\0\xE9\xAB\0\xED\xAB\0\xEE\xAB\0\x1E\xFB\0\x1F\xFB\0\xB2\xFB\0\xC3\xFB\0\0\xFE\0\x10\xFE\0\x13\xFE\0\x14\xFE\0 \xFE\x000\xFE\0R\xFE\0S\xFE\0U\xFE\0V\xFE\0\xFF\xFE\0\0\xFF\0\x07\xFF\0\x08\xFF\0\x0E\xFF\0\x0F\xFF\0\x1A\xFF\0\x1B\xFF\0>\xFF\0?\xFF\0@\xFF\0A\xFF\0p\xFF\0q\xFF\0\x9E\xFF\0\xA0\xFF\0\xE3\xFF\0\xE4\xFF\0\xF9\xFF\0\xFC\xFF\0\xFD\x01\x01\xFE\x01\x01\xE0\x02\x01\xE1\x02\x01v\x03\x01{\x03\x01\x80\x07\x01\x86\x07\x01\x87\x07\x01\xB1\x07\x01\xB2\x07\x01\xBB\x07\x01\x01\n\x01\x04\n\x01\x05\n\x01\x07\n\x01\x0C\n\x01\x10\n\x018\n\x01;\n\x01?\n\x01@\n\x01\xE5\n\x01\xE7\n\x01$\r\x01(\r\x01N\r\x01O\r\x01i\r\x01n\r\x01o\r\x01p\r\x01\xAB\x0E\x01\xAD\x0E\x01\xFC\x0E\x01\0\x0F\x01F\x0F\x01Q\x0F\x01\x82\x0F\x01\x86\x0F\x01\x01\x10\x01\x02\x10\x018\x10\x01G\x10\x01p\x10\x01q\x10\x01s\x10\x01u\x10\x01\x7F\x10\x01\x82\x10\x01\xB3\x10\x01\xB7\x10\x01\xB9\x10\x01\xBB\x10\x01\xBD\x10\x01\xBE\x10\x01\xC2\x10\x01\xC3\x10\x01\xCD\x10\x01\xCE\x10\x01\0\x11\x01\x03\x11\x01'\x11\x01,\x11\x01-\x11\x015\x11\x01s\x11\x01t\x11\x01\x80\x11\x01\x82\x11\x01\xB6\x11\x01\xBF\x11\x01\xC9\x11\x01\xCD\x11\x01\xCF\x11\x01\xD0\x11\x01/\x12\x012\x12\x014\x12\x015\x12\x016\x12\x018\x12\x01>\x12\x01?\x12\x01A\x12\x01B\x12\x01\xDF\x12\x01\xE0\x12\x01\xE3\x12\x01\xEB\x12\x01\0\x13\x01\x02\x13\x01;\x13\x01=\x13\x01@\x13\x01A\x13\x01f\x13\x01m\x13\x01p\x13\x01u\x13\x01\xBB\x13\x01\xC1\x13\x01\xCE\x13\x01\xCF\x13\x01\xD0\x13\x01\xD1\x13\x01\xD2\x13\x01\xD3\x13\x01\xE1\x13\x01\xE3\x13\x018\x14\x01@\x14\x01B\x14\x01E\x14\x01F\x14\x01G\x14\x01^\x14\x01_\x14\x01\xB3\x14\x01\xB9\x14\x01\xBA\x14\x01\xBB\x14\x01\xBF\x14\x01\xC1\x14\x01\xC2\x14\x01\xC4\x14\x01\xB2\x15\x01\xB6\x15\x01\xBC\x15\x01\xBE\x15\x01\xBF\x15\x01\xC1\x15\x01\xDC\x15\x01\xDE\x15\x013\x16\x01;\x16\x01=\x16\x01>\x16\x01?\x16\x01A\x16\x01\xAB\x16\x01\xAC\x16\x01\xAD\x16\x01\xAE\x16\x01\xB0\x16\x01\xB6\x16\x01\xB7\x16\x01\xB8\x16\x01\x1D\x17\x01\x1E\x17\x01\x1F\x17\x01 \x17\x01\"\x17\x01&\x17\x01'\x17\x01,\x17\x01/\x18\x018\x18\x019\x18\x01;\x18\x01;\x19\x01=\x19\x01>\x19\x01?\x19\x01C\x19\x01D\x19\x01\xD4\x19\x01\xD8\x19\x01\xDA\x19\x01\xDC\x19\x01\xE0\x19\x01\xE1\x19\x01\x01\x1A\x01\x0B\x1A\x013\x1A\x019\x1A\x01;\x1A\x01?\x1A\x01G\x1A\x01H\x1A\x01Q\x1A\x01W\x1A\x01Y\x1A\x01\\\x1A\x01\x8A\x1A\x01\x97\x1A\x01\x98\x1A\x01\x9A\x1A\x010\x1C\x017\x1C\x018\x1C\x01>\x1C\x01?\x1C\x01@\x1C\x01\x92\x1C\x01\xA8\x1C\x01\xAA\x1C\x01\xB1\x1C\x01\xB2\x1C\x01\xB4\x1C\x01\xB5\x1C\x01\xB7\x1C\x011\x1D\x017\x1D\x01:\x1D\x01;\x1D\x01<\x1D\x01>\x1D\x01?\x1D\x01F\x1D\x01G\x1D\x01H\x1D\x01\x90\x1D\x01\x92\x1D\x01\x95\x1D\x01\x96\x1D\x01\x97\x1D\x01\x98\x1D\x01\xF3\x1E\x01\xF5\x1E\x01\0\x1F\x01\x02\x1F\x016\x1F\x01;\x1F\x01@\x1F\x01A\x1F\x01B\x1F\x01C\x1F\x01Z\x1F\x01[\x1F\x0104\x01A4\x01G4\x01V4\x01\x1Ea\x01*a\x01-a\x010a\x01\xF0j\x01\xF5j\x010k\x017k\x01@k\x01Dk\x01@m\x01Cm\x01km\x01mm\x01Oo\x01Po\x01\x8Fo\x01\xA0o\x01\xE0o\x01\xE2o\x01\xE3o\x01\xE5o\x01\xF0\xAF\x01\xF4\xAF\x01\xF5\xAF\x01\xFC\xAF\x01\xFD\xAF\x01\xFF\xAF\x01\x9D\xBC\x01\x9F\xBC\x01\xA0\xBC\x01\xA4\xBC\x01\0\xCF\x01.\xCF\x010\xCF\x01G\xCF\x01g\xD1\x01j\xD1\x01s\xD1\x01\x83\xD1\x01\x85\xD1\x01\x8C\xD1\x01\xAA\xD1\x01\xAE\xD1\x01B\xD2\x01E\xD2\x01\0\xDA\x017\xDA\x01;\xDA\x01m\xDA\x01u\xDA\x01v\xDA\x01\x84\xDA\x01\x85\xDA\x01\x9B\xDA\x01\xA0\xDA\x01\xA1\xDA\x01\xB0\xDA\x01\0\xE0\x01\x07\xE0\x01\x08\xE0\x01\x19\xE0\x01\x1B\xE0\x01\"\xE0\x01#\xE0\x01%\xE0\x01&\xE0\x01+\xE0\x010\xE0\x01n\xE0\x01\x8F\xE0\x01\x90\xE0\x010\xE1\x01>\xE1\x01\xAE\xE2\x01\xAF\xE2\x01\xEC\xE2\x01\xF0\xE2\x01\xEB\xE4\x01\xF0\xE4\x01\xEE\xE5\x01\xF0\xE5\x01\xD0\xE8\x01\xD7\xE8\x01D\xE9\x01L\xE9\x01\xFB\xF3\x01\0\xF4\x01\x01\0\x0E\x02\0\x0E \0\x0E\x80\0\x0E\0\x01\x0E\xF0\x01\x0E") }, 2749u32)
            });
        }
        #[clippy::msrv = "1.71.1"]
        impl icu_provider::DataProvider<icu::properties::provider::CaseIgnorableV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::properties::provider::CaseIgnorableV1Marker>, icu_provider::DataError> {
                if req.id.locale.is_default() {
                    Ok(icu_provider::DataResponse { payload: icu_provider::DataPayload::from_static_ref(Self::SINGLETON_CASE_IGNORABLE_V1_MARKER), metadata: Default::default() })
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::properties::provider::CaseIgnorableV1Marker as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
    };
    ($ provider : ty , ITER) => {
        __impl_case_ignorable_v1_marker!($provider);
        #[clippy::msrv = "1.71.1"]
        impl icu_provider::IterableDataProvider<icu::properties::provider::CaseIgnorableV1Marker> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BtreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok([Default::default()].into_iter().collect())
            }
        }
    };
    ($ provider : ty , DRY) => {
        __impl_case_ignorable_v1_marker!($provider);
        #[clippy::msrv = "1.71.1"]
        impl icu_provider::DryDataProvider<icu::properties::provider::CaseIgnorableV1Marker> for $provider {
            fn dry_load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponseMetadata, icu_provider::DataError> {
                if req.id.locale.is_default() {
                    Ok(Default::default())
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::properties::provider::CaseIgnorableV1Marker as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
    };
    ($ provider : ty , DRY , ITER) => {
        __impl_case_ignorable_v1_marker!($provider);
        #[clippy::msrv = "1.71.1"]
        impl icu_provider::DryDataProvider<icu::properties::provider::CaseIgnorableV1Marker> for $provider {
            fn dry_load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponseMetadata, icu_provider::DataError> {
                if req.id.locale.is_default() {
                    Ok(Default::default())
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::properties::provider::CaseIgnorableV1Marker as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
        #[clippy::msrv = "1.71.1"]
        impl icu_provider::IterableDataProvider<icu::properties::provider::CaseIgnorableV1Marker> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BtreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok([Default::default()].into_iter().collect())
            }
        }
    };
}
#[doc(inline)]
pub use __impl_case_ignorable_v1_marker as impl_case_ignorable_v1_marker;
