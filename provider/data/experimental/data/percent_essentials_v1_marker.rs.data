// @generated
/// Implement `DataProvider<PercentEssentialsV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
///
/// Using this implementation will embed the following data in the binary's data segment:
/// * 276B for the lookup data structure (60 data identifiers)
/// * 2945B[^1] for the actual data (22 unique structs)
///
/// [^1]: these numbers can be smaller in practice due to linker deduplication
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_percent_essentials_v1_marker {
    ($ provider : ty) => {
        #[clippy::msrv = "1.70"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.70"]
        impl $provider {
            const DATA_PERCENT_ESSENTIALS_V1_MARKER: icu_provider_baked::zerotrie::Data<icu::experimental::dimension::provider::percent::PercentEssentialsV1Marker> = icu_provider_baked::zerotrie::Data { trie: icu_provider_baked::zerotrie::ZeroTrieSimpleAscii { store: b"\xD5abcdefghjklmnopqrstuy\n\x17 3Xlnxz\x80\x87\x89\x95\x98\x9A\x9C\xA6\xB2\xBB\xC2r\x80-S\xC2AO\x01\x81\x81\xC4elrs\x01\x03\x04\x82o\x83\x84\x85\xC3asv\x01\x02\x84\x84\x84\xC3aes\x01\x0B\x84\x82-\xC2CL\x02H\x85I\x85b\x82\xC4nstu\x15\x1B\x1C-\xC4ADFS\x02\x08\nT\x84\xC2EK\x01\x84\x84I\x84E\x84\x84-419\x86\x87\x88\xC4aior\x01\x02\x03\x89\x8A\x8A\x8B-C\xC2AH\x01\x82\x8Cl\x84\xC3ers\x01\x02\x8D\x8Ab\x82a\x8E\xC2au\x01\x85\x8F\xC2bt\x01\x84\x90\0k\x82\xC3dno\x02\x04s\x84\x90\x01\x90\x02c\x90\x03s\x89u\x84\xC3mou\x02\x03\x90\x01\x84\x82\xC4klqv\x01\x02\x03\x84\x8A\x85\x8A\xC3krt\x01\x02\x84\x8F\x84\xC2nr\x02d\x86\x8Do\x90\x04-BJ\x90\x05" }, values: &[icu::experimental::dimension::provider::percent::PercentEssentialsV1 { signed_pattern: icu_pattern::Pattern::<icu_pattern::DoublePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{3}\u{2}\u{200e}%\u{200e}")), unsigned_pattern: icu_pattern::Pattern::<icu_pattern::SinglePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{1}\u{200e}%\u{200e}")), approximately_sign: alloc::borrow::Cow::Borrowed("~"), minus_sign: alloc::borrow::Cow::Borrowed("\u{200e}-"), plus_sign: alloc::borrow::Cow::Borrowed("\u{200e}+") }, icu::experimental::dimension::provider::percent::PercentEssentialsV1 { signed_pattern: icu_pattern::Pattern::<icu_pattern::DoublePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{3}\u{2}٪")), unsigned_pattern: icu_pattern::Pattern::<icu_pattern::SinglePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{1}٪")), approximately_sign: alloc::borrow::Cow::Borrowed("~"), minus_sign: alloc::borrow::Cow::Borrowed("\u{200e}-"), plus_sign: alloc::borrow::Cow::Borrowed("\u{200e}+") }, icu::experimental::dimension::provider::percent::PercentEssentialsV1 { signed_pattern: icu_pattern::Pattern::<icu_pattern::DoublePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{3}\u{2}\u{a0}%")), unsigned_pattern: icu_pattern::Pattern::<icu_pattern::SinglePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{1}\u{a0}%")), approximately_sign: alloc::borrow::Cow::Borrowed("≈"), minus_sign: alloc::borrow::Cow::Borrowed("-"), plus_sign: alloc::borrow::Cow::Borrowed("+") }, icu::experimental::dimension::provider::percent::PercentEssentialsV1 { signed_pattern: icu_pattern::Pattern::<icu_pattern::DoublePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\t\u{8}%\u{a0}")), unsigned_pattern: icu_pattern::Pattern::<icu_pattern::SinglePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{4}%\u{a0}")), approximately_sign: alloc::borrow::Cow::Borrowed("~"), minus_sign: alloc::borrow::Cow::Borrowed("-"), plus_sign: alloc::borrow::Cow::Borrowed("+") }, icu::experimental::dimension::provider::percent::PercentEssentialsV1 { signed_pattern: icu_pattern::Pattern::<icu_pattern::DoublePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{3}\u{2}\u{a0}%")), unsigned_pattern: icu_pattern::Pattern::<icu_pattern::SinglePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{1}\u{a0}%")), approximately_sign: alloc::borrow::Cow::Borrowed("~"), minus_sign: alloc::borrow::Cow::Borrowed("-"), plus_sign: alloc::borrow::Cow::Borrowed("+") }, icu::experimental::dimension::provider::percent::PercentEssentialsV1 { signed_pattern: icu_pattern::Pattern::<icu_pattern::DoublePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{3}\u{2}%")), unsigned_pattern: icu_pattern::Pattern::<icu_pattern::SinglePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{1}%")), approximately_sign: alloc::borrow::Cow::Borrowed("≈"), minus_sign: alloc::borrow::Cow::Borrowed("-"), plus_sign: alloc::borrow::Cow::Borrowed("+") }, icu::experimental::dimension::provider::percent::PercentEssentialsV1 { signed_pattern: icu_pattern::Pattern::<icu_pattern::DoublePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{3}\u{2}%")), unsigned_pattern: icu_pattern::Pattern::<icu_pattern::SinglePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{1}%")), approximately_sign: alloc::borrow::Cow::Borrowed("~"), minus_sign: alloc::borrow::Cow::Borrowed("-"), plus_sign: alloc::borrow::Cow::Borrowed("+") }, icu::experimental::dimension::provider::percent::PercentEssentialsV1 { signed_pattern: icu_pattern::Pattern::<icu_pattern::DoublePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{3}\u{2}%")), unsigned_pattern: icu_pattern::Pattern::<icu_pattern::SinglePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{1}%")), approximately_sign: alloc::borrow::Cow::Borrowed("≈"), minus_sign: alloc::borrow::Cow::Borrowed("−"), plus_sign: alloc::borrow::Cow::Borrowed("+") }, icu::experimental::dimension::provider::percent::PercentEssentialsV1 { signed_pattern: icu_pattern::Pattern::<icu_pattern::DoublePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{3}\u{8}%\u{a0}")), unsigned_pattern: icu_pattern::Pattern::<icu_pattern::SinglePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{4}%\u{a0}")), approximately_sign: alloc::borrow::Cow::Borrowed("~"), minus_sign: alloc::borrow::Cow::Borrowed("−"), plus_sign: alloc::borrow::Cow::Borrowed("+") }, icu::experimental::dimension::provider::percent::PercentEssentialsV1 { signed_pattern: icu_pattern::Pattern::<icu_pattern::DoublePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{3}\u{2}%")), unsigned_pattern: icu_pattern::Pattern::<icu_pattern::SinglePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{1}%")), approximately_sign: alloc::borrow::Cow::Borrowed("~"), minus_sign: alloc::borrow::Cow::Borrowed("\u{200e}−"), plus_sign: alloc::borrow::Cow::Borrowed("\u{200e}+") }, icu::experimental::dimension::provider::percent::PercentEssentialsV1 { signed_pattern: icu_pattern::Pattern::<icu_pattern::DoublePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{3}\u{2}\u{a0}%")), unsigned_pattern: icu_pattern::Pattern::<icu_pattern::SinglePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{1}\u{a0}%")), approximately_sign: alloc::borrow::Cow::Borrowed("~"), minus_sign: alloc::borrow::Cow::Borrowed("−"), plus_sign: alloc::borrow::Cow::Borrowed("+") }, icu::experimental::dimension::provider::percent::PercentEssentialsV1 { signed_pattern: icu_pattern::Pattern::<icu_pattern::DoublePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{3}\u{2}\u{a0}%")), unsigned_pattern: icu_pattern::Pattern::<icu_pattern::SinglePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{1}\u{a0}%")), approximately_sign: alloc::borrow::Cow::Borrowed("≃"), minus_sign: alloc::borrow::Cow::Borrowed("-"), plus_sign: alloc::borrow::Cow::Borrowed("+") }, icu::experimental::dimension::provider::percent::PercentEssentialsV1 { signed_pattern: icu_pattern::Pattern::<icu_pattern::DoublePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{3}\u{2}%")), unsigned_pattern: icu_pattern::Pattern::<icu_pattern::SinglePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{1}%")), approximately_sign: alloc::borrow::Cow::Borrowed("≃"), minus_sign: alloc::borrow::Cow::Borrowed("-"), plus_sign: alloc::borrow::Cow::Borrowed("+") }, icu::experimental::dimension::provider::percent::PercentEssentialsV1 { signed_pattern: icu_pattern::Pattern::<icu_pattern::DoublePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{3}\u{2}%")), unsigned_pattern: icu_pattern::Pattern::<icu_pattern::SinglePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{1}%")), approximately_sign: alloc::borrow::Cow::Borrowed("~"), minus_sign: alloc::borrow::Cow::Borrowed("\u{200e}-"), plus_sign: alloc::borrow::Cow::Borrowed("\u{200e}+") }, icu::experimental::dimension::provider::percent::PercentEssentialsV1 { signed_pattern: icu_pattern::Pattern::<icu_pattern::DoublePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{3}\u{2}%")), unsigned_pattern: icu_pattern::Pattern::<icu_pattern::SinglePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{1}%")), approximately_sign: alloc::borrow::Cow::Borrowed("約"), minus_sign: alloc::borrow::Cow::Borrowed("-"), plus_sign: alloc::borrow::Cow::Borrowed("+") }, icu::experimental::dimension::provider::percent::PercentEssentialsV1 { signed_pattern: icu_pattern::Pattern::<icu_pattern::DoublePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{3}\u{4}%")), unsigned_pattern: icu_pattern::Pattern::<icu_pattern::SinglePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{2}%")), approximately_sign: alloc::borrow::Cow::Borrowed("~"), minus_sign: alloc::borrow::Cow::Borrowed("-"), plus_sign: alloc::borrow::Cow::Borrowed("+") }, icu::experimental::dimension::provider::percent::PercentEssentialsV1 { signed_pattern: icu_pattern::Pattern::<icu_pattern::DoublePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{3}\u{2}\u{a0}%")), unsigned_pattern: icu_pattern::Pattern::<icu_pattern::SinglePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{1}\u{a0}%")), approximately_sign: alloc::borrow::Cow::Borrowed("∼"), minus_sign: alloc::borrow::Cow::Borrowed("−"), plus_sign: alloc::borrow::Cow::Borrowed("+") }, icu::experimental::dimension::provider::percent::PercentEssentialsV1 { signed_pattern: icu_pattern::Pattern::<icu_pattern::DoublePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{3}\u{2}\u{a0}%")), unsigned_pattern: icu_pattern::Pattern::<icu_pattern::SinglePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{1}\u{a0}%")), approximately_sign: alloc::borrow::Cow::Borrowed("≈"), minus_sign: alloc::borrow::Cow::Borrowed("−"), plus_sign: alloc::borrow::Cow::Borrowed("+") }, icu::experimental::dimension::provider::percent::PercentEssentialsV1 { signed_pattern: icu_pattern::Pattern::<icu_pattern::DoublePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{3}\u{2}\u{a0}%")), unsigned_pattern: icu_pattern::Pattern::<icu_pattern::SinglePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{1}\u{a0}%")), approximately_sign: alloc::borrow::Cow::Borrowed("ca."), minus_sign: alloc::borrow::Cow::Borrowed("−"), plus_sign: alloc::borrow::Cow::Borrowed("+") }, icu::experimental::dimension::provider::percent::PercentEssentialsV1 { signed_pattern: icu_pattern::Pattern::<icu_pattern::DoublePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{3}\u{2}\u{202f}%")), unsigned_pattern: icu_pattern::Pattern::<icu_pattern::SinglePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{1}\u{202f}%")), approximately_sign: alloc::borrow::Cow::Borrowed("~"), minus_sign: alloc::borrow::Cow::Borrowed("-"), plus_sign: alloc::borrow::Cow::Borrowed("+") }, icu::experimental::dimension::provider::percent::PercentEssentialsV1 { signed_pattern: icu_pattern::Pattern::<icu_pattern::DoublePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{3}\u{2}%")), unsigned_pattern: icu_pattern::Pattern::<icu_pattern::SinglePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{1}%")), approximately_sign: alloc::borrow::Cow::Borrowed("dáàṣì"), minus_sign: alloc::borrow::Cow::Borrowed("-"), plus_sign: alloc::borrow::Cow::Borrowed("+") }, icu::experimental::dimension::provider::percent::PercentEssentialsV1 { signed_pattern: icu_pattern::Pattern::<icu_pattern::DoublePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{3}\u{2}%")), unsigned_pattern: icu_pattern::Pattern::<icu_pattern::SinglePlaceholder, _>::from_store_unchecked(alloc::borrow::Cow::Borrowed("\u{1}%")), approximately_sign: alloc::borrow::Cow::Borrowed("dáàshì"), minus_sign: alloc::borrow::Cow::Borrowed("-"), plus_sign: alloc::borrow::Cow::Borrowed("+") }] };
        }
        #[clippy::msrv = "1.70"]
        impl icu_provider::DataProvider<icu::experimental::dimension::provider::percent::PercentEssentialsV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::experimental::dimension::provider::percent::PercentEssentialsV1Marker>, icu_provider::DataError> {
                let mut metadata = icu_provider::DataResponseMetadata::default();
                let payload = if let Some(payload) = icu_provider_baked::DataStore::get(&Self::DATA_PERCENT_ESSENTIALS_V1_MARKER, req.id, req.metadata.attributes_prefix_match) {
                    payload
                } else {
                    const FALLBACKER: icu::locale::fallback::LocaleFallbackerWithConfig<'static> = icu::locale::fallback::LocaleFallbacker::new().for_config(<icu::experimental::dimension::provider::percent::PercentEssentialsV1Marker as icu_provider::DataMarker>::INFO.fallback_config);
                    let mut fallback_iterator = FALLBACKER.fallback_for(req.id.locale.clone());
                    loop {
                        if let Some(payload) = icu_provider_baked::DataStore::get(&Self::DATA_PERCENT_ESSENTIALS_V1_MARKER, icu_provider::DataIdentifierBorrowed::for_marker_attributes_and_locale(req.id.marker_attributes, fallback_iterator.get()), req.metadata.attributes_prefix_match) {
                            metadata.locale = Some(fallback_iterator.take());
                            break payload;
                        }
                        if fallback_iterator.get().is_default() {
                            return Err(icu_provider::DataErrorKind::IdentifierNotFound.with_req(<icu::experimental::dimension::provider::percent::PercentEssentialsV1Marker as icu_provider::DataMarker>::INFO, req));
                        }
                        fallback_iterator.step();
                    }
                };
                Ok(icu_provider::DataResponse { payload: icu_provider::DataPayload::from_static_ref(payload), metadata })
            }
        }
    };
    ($ provider : ty , ITER) => {
        __impl_percent_essentials_v1_marker!($provider);
        #[clippy::msrv = "1.70"]
        impl icu_provider::IterableDataProvider<icu::experimental::dimension::provider::percent::PercentEssentialsV1Marker> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BTreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok(icu_provider_baked::DataStore::iter(&Self::DATA_PERCENT_ESSENTIALS_V1_MARKER).collect())
            }
        }
    };
}
#[doc(inline)]
pub use __impl_percent_essentials_v1_marker as impl_percent_essentials_v1_marker;
