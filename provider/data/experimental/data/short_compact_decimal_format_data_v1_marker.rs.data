// @generated
/// Implement `DataProvider<ShortCompactDecimalFormatDataV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
///
/// Using this implementation will embed the following data in the binary's data segment:
/// * 2452B[^1] for the lookup data structure (121 data identifiers)
/// * 17950B[^1] for the actual data (103 unique structs)
///
/// [^1]: these numbers can be smaller in practice due to linker deduplication
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_short_compact_decimal_format_data_v1_marker {
    ($ provider : ty) => {
        #[clippy::msrv = "1.70"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.70"]
        impl $provider {
            const DATA_SHORT_COMPACT_DECIMAL_FORMAT_DATA_V1_MARKER: icu_provider_baked::binary_search::Data<icu_provider_baked::binary_search::Locale<12usize>, icu::experimental::compactdecimal::provider::ShortCompactDecimalFormatDataV1Marker> = icu_provider_baked::binary_search::Data(
                {
                    use icu_provider_baked::binary_search::tinystr::tinystr;
                    &[tinystr!(12usize, "af"), tinystr!(12usize, "am"), tinystr!(12usize, "ar"), tinystr!(12usize, "as"), tinystr!(12usize, "az"), tinystr!(12usize, "be"), tinystr!(12usize, "bg"), tinystr!(12usize, "bn"), tinystr!(12usize, "br"), tinystr!(12usize, "brx"), tinystr!(12usize, "bs"), tinystr!(12usize, "bs-Cyrl"), tinystr!(12usize, "ca"), tinystr!(12usize, "chr"), tinystr!(12usize, "cs"), tinystr!(12usize, "cy"), tinystr!(12usize, "da"), tinystr!(12usize, "de"), tinystr!(12usize, "dsb"), tinystr!(12usize, "el"), tinystr!(12usize, "en"), tinystr!(12usize, "en-IN"), tinystr!(12usize, "es"), tinystr!(12usize, "es-419"), tinystr!(12usize, "es-MX"), tinystr!(12usize, "es-US"), tinystr!(12usize, "et"), tinystr!(12usize, "eu"), tinystr!(12usize, "fa"), tinystr!(12usize, "ff-Adlm"), tinystr!(12usize, "fi"), tinystr!(12usize, "fil"), tinystr!(12usize, "fo"), tinystr!(12usize, "fr"), tinystr!(12usize, "fr-CA"), tinystr!(12usize, "fy"), tinystr!(12usize, "ga"), tinystr!(12usize, "gd"), tinystr!(12usize, "gl"), tinystr!(12usize, "gu"), tinystr!(12usize, "ha"), tinystr!(12usize, "he"), tinystr!(12usize, "hi"), tinystr!(12usize, "hr"), tinystr!(12usize, "hsb"), tinystr!(12usize, "hu"), tinystr!(12usize, "hy"), tinystr!(12usize, "ia"), tinystr!(12usize, "id"), tinystr!(12usize, "is"), tinystr!(12usize, "it"), tinystr!(12usize, "ja"), tinystr!(12usize, "jv"), tinystr!(12usize, "ka"), tinystr!(12usize, "kea"), tinystr!(12usize, "kgp"), tinystr!(12usize, "kk"), tinystr!(12usize, "km"), tinystr!(12usize, "kn"), tinystr!(12usize, "ko"), tinystr!(12usize, "kok"), tinystr!(12usize, "ky"), tinystr!(12usize, "lb"), tinystr!(12usize, "lo"), tinystr!(12usize, "lo-u-nu-laoo"), tinystr!(12usize, "lt"), tinystr!(12usize, "lv"), tinystr!(12usize, "mk"), tinystr!(12usize, "ml"), tinystr!(12usize, "mn"), tinystr!(12usize, "mr"), tinystr!(12usize, "ms"), tinystr!(12usize, "my"), tinystr!(12usize, "ne"), tinystr!(12usize, "nl"), tinystr!(12usize, "no"), tinystr!(12usize, "or"), tinystr!(12usize, "pa"), tinystr!(12usize, "pcm"), tinystr!(12usize, "pl"), tinystr!(12usize, "ps"), tinystr!(12usize, "pt"), tinystr!(12usize, "pt-PT"), tinystr!(12usize, "ro"), tinystr!(12usize, "ru"), tinystr!(12usize, "sah"), tinystr!(12usize, "sc"), tinystr!(12usize, "sd"), tinystr!(12usize, "si"), tinystr!(12usize, "sk"), tinystr!(12usize, "sl"), tinystr!(12usize, "so"), tinystr!(12usize, "sq"), tinystr!(12usize, "sr"), tinystr!(12usize, "sr-Latn"), tinystr!(12usize, "sv"), tinystr!(12usize, "sw"), tinystr!(12usize, "sw-KE"), tinystr!(12usize, "ta"), tinystr!(12usize, "te"), tinystr!(12usize, "tg"), tinystr!(12usize, "th"), tinystr!(12usize, "ti"), tinystr!(12usize, "tk"), tinystr!(12usize, "to"), tinystr!(12usize, "tr"), tinystr!(12usize, "ug"), tinystr!(12usize, "uk"), tinystr!(12usize, "und"), tinystr!(12usize, "ur"), tinystr!(12usize, "uz"), tinystr!(12usize, "uz-Cyrl"), tinystr!(12usize, "vi"), tinystr!(12usize, "yrl"), tinystr!(12usize, "yue"), tinystr!(12usize, "yue-Hans"), tinystr!(12usize, "zh"), tinystr!(12usize, "zh-HK"), tinystr!(12usize, "zh-Hant"), tinystr!(12usize, "zh-MO"), tinystr!(12usize, "zu")]
                },
                {
                    type S = <icu::experimental::compactdecimal::provider::ShortCompactDecimalFormatDataV1Marker as icu_provider::DynamicDataMarker>::Yokeable;
                    const __AF: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x05\0\n\0\x11\0\x03\0\xC2\xA0k\x06\0\xC2\xA0m\t\0\xC2\xA0mjd\x0C\0\xC2\xA0bn") })
                        },
                    };
                    const __AM: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x07\0\x0E\0\x15\0\x03\0\xC2\xA0\xE1\x88\xBA\x06\0\xC2\xA0\xE1\x88\x9A\t\0\xC2\xA0\xE1\x89\xA2\x0C\0\xC2\xA0\xE1\x89\xB5") })
                        },
                    };
                    const __AR: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x04\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x02\0\0\0\x03\0\0\0\x08\0\0\0\r\0\0\0\x12\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x05\x05\0\x02\x03\x04\x05\0\x02\x03\x04\x05\0\x02\x03\x04\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x12\0\0\0\0\0\x0C\0\x16\0 \0\"\0$\0&\0(\x006\08\0:\0<\0>\0L\0N\0P\0R\0T\0\x03\0\xC2\xA0\xD8\xA2\xD9\x84\xD8\xA7\xD9\x81\x03\0\xC2\xA0\xD8\xA3\xD9\x84\xD9\x81\x03\0\xC2\xA0\xD8\xA3\xD9\x84\xD9\x81\0\0\0\0\0\0\0\0\x06\0\xC2\xA0\xD9\x85\xD9\x84\xD9\x8A\xD9\x88\xD9\x86\0\0\0\0\0\0\0\0\t\0\xC2\xA0\xD9\x85\xD9\x84\xD9\x8A\xD8\xA7\xD8\xB1\0\0\0\0\0\0\0\0\x0C\0\xC2\xA0\xD8\xAA\xD8\xB1\xD9\x84\xD9\x8A\xD9\x88\xD9\x86") })
                        },
                    };
                    const __AS: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x05\x06\x08\t\x0B\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0\x05\0\0\0\x06\0\0\0\x07\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x07\0\0\0\0\0\x13\0 \x003\0@\0U\0g\0\x03\0\xC2\xA0\xE0\xA6\xB9\xE0\xA6\xBE\xE0\xA6\x9C\xE0\xA6\xBE\xE0\xA7\xB0\x05\0\xC2\xA0\xE0\xA6\xB2\xE0\xA6\xBE\xE0\xA6\x96\x06\0\xC2\xA0\xE0\xA6\xA8\xE0\xA6\xBF\xE0\xA6\xAF\xE0\xA7\x81\xE0\xA6\xA4\x06\0\xC2\xA0\xE0\xA6\xA8\xE0\xA6\xBF\xE0\xA6\x83\t\0\xC2\xA0\xE0\xA6\xB6\xE0\xA6\x83\xC2\xA0\xE0\xA6\x95\xE0\xA7\x8B\xE0\xA6\x83\t\0\xC2\xA0\xE0\xA6\xB6\xE0\xA6\x83\xC2\xA0\xE0\xA6\x95\xE0\xA6\x83\x0C\0\xC2\xA0\xE0\xA6\xB6\xE0\xA6\x83\xC2\xA0\xE0\xA6\xAA\xE0\xA6\x83") })
                        },
                    };
                    const __AZ: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x02\0\0\0\x03\0\0\0\x04\0\0\0\x05\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x05\0\0\0\0\0\x02\0\x05\0\x0C\0\x14\0\0\0\x03\0K\x06\0\xC2\xA0mln\t\0\xC2\xA0mlrd\x0C\0\xC2\xA0trln") })
                        },
                    };
                    const __BE: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x0B\0\x15\0!\0\x03\0\xC2\xA0\xD1\x82\xD1\x8B\xD1\x81.\x06\0\xC2\xA0\xD0\xBC\xD0\xBB\xD0\xBD\t\0\xC2\xA0\xD0\xBC\xD0\xBB\xD1\x80\xD0\xB4\x0C\0\xC2\xA0\xD1\x82\xD1\x80\xD0\xBB\xD0\xBD") })
                        },
                    };
                    const __BG: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x0B\0\x16\0#\0\x03\0\xC2\xA0\xD1\x85\xD0\xB8\xD0\xBB.\x06\0\xC2\xA0\xD0\xBC\xD0\xBB\xD0\xBD.\t\0\xC2\xA0\xD0\xBC\xD0\xBB\xD1\x80\xD0\xB4.\x0C\0\xC2\xA0\xD1\x82\xD1\x80\xD0\xBB\xD0\xBD.") })
                        },
                    };
                    const __BN: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x05\x07\n\x0B\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x05\0\0\0\x06\0\0\0\x07\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x01\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x07\0\0\0\0\0\n\0\x14\0\x1E\x000\0@\0H\0\x03\0\xC2\xA0\xE0\xA6\xB9\xE0\xA6\xBE\x05\0\xC2\xA0\xE0\xA6\xB2\xE0\xA6\xBE\x07\0\xC2\xA0\xE0\xA6\x95\xE0\xA7\x8B\t\0\xC2\xA0\xE0\xA6\xB6\xE0\xA6\xA4\xC2\xA0\xE0\xA6\x95\xE0\xA7\x8B\t\0\xE0\xA6\xB6\xE0\xA6\xA4\xC2\xA0\xE0\xA6\x95\xE0\xA7\x8B\t\0\xE0\xA6\x95\xE0\xA7\x8B\x0C\0\xC2\xA0\xE0\xA6\xB2\xE0\xA6\xBE.\xE0\xA6\x95\xE0\xA7\x8B.") })
                        },
                    };
                    const __BR: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x03\0\0\0\x05\0\0\0\x07\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x01\x05\x01\x05\x01\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x07\0\0\0\0\0\x03\0\x05\0\x08\0\n\0\r\0\x0F\0\x03\0k\0\0\x06\0M\0\0\t\0G\0\0\x0C\0T") })
                        },
                    };
                    const __BRX: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x08\0\x10\0\x18\0\x03\0\xE0\xA4\x95\xE0\xA5\x87\x06\0\xE0\xA4\x8F\xE0\xA4\xAE\t\0\xE0\xA4\xAC\xE0\xA4\xBF\x0C\0\xE0\xA4\xA4\xE0\xA4\xBF") })
                        },
                    };
                    const __BS: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\t\0\x11\0\x1A\0\x03\0\xC2\xA0hilj.\x06\0\xC2\xA0mil.\t\0\xC2\xA0mlrd.\x0C\0\xC2\xA0bil.") })
                        },
                    };
                    const __BS_CYRL: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x04\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\n\0\x14\0 \0\x03\0\xC2\xA0\xD1\x85\xD0\xB8\xD1\x99\x06\0\xC2\xA0\xD0\xBC\xD0\xB8\xD0\xBB\t\0\xC2\xA0\xD0\xBC\xD0\xBB\xD1\x80\xD0\xB4\x0C\0\xC2\xA0\xD0\xB1\xD0\xB8\xD0\xBB") })
                        },
                    };
                    const __CA: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\n\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x05\0\n\0\x10\0\x03\0\xC2\xA0k\x06\0\xC2\xA0M\t\0\xC2\xA0kM\x0C\0\xC2\xA0B") })
                        },
                    };
                    const __CHR: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x02\0\0\0\x04\0\0\0\x05\0\0\0\x07\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\x05\x01\x05\x05\x01\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x07\0\0\0\0\0\x02\0\x05\0\x07\0\n\0\r\0\x0F\0\0\0\x03\0K\0\0\x06\0M\t\0B\0\0\x0C\0T") })
                        },
                    };
                    const __CS: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x08\0\x10\0\x18\0\x03\0\xC2\xA0tis.\x06\0\xC2\xA0mil.\t\0\xC2\xA0mld.\x0C\0\xC2\xA0bil.") })
                        },
                    };
                    const __DA: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x05\0\r\0\x15\0\x03\0\xC2\xA0t\x06\0\xC2\xA0mio.\t\0\xC2\xA0mia.\x0C\0\xC2\xA0bio.") })
                        },
                    };
                    const __DE: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x08\0\x10\0\x06\0\xC2\xA0Mio.\t\0\xC2\xA0Mrd.\x0C\0\xC2\xA0Bio.") })
                        },
                    };
                    const __DSB: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x08\0\x10\0\x18\0\x03\0\xC2\xA0tys.\x06\0\xC2\xA0mio.\t\0\xC2\xA0mrd.\x0C\0\xC2\xA0bil.") })
                        },
                    };
                    const __EL: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x0B\0\x14\0\x1F\0\x03\0\xC2\xA0\xCF\x87\xCE\xB9\xCE\xBB.\x06\0\xC2\xA0\xCE\xB5\xCE\xBA.\t\0\xC2\xA0\xCE\xB4\xCE\xB9\xCF\x83.\x0C\0\xC2\xA0\xCF\x84\xCF\x81\xCE\xB9\xCF\x83.") })
                        },
                    };
                    const __EN: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x03\0\x06\0\t\0\x03\0K\x06\0M\t\0B\x0C\0T") })
                        },
                    };
                    const __EN_IN: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x05\x07\n\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0\x05\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x05\0\0\0\0\0\x03\0\x06\0\n\0\x0F\0\x03\0K\x05\0L\x07\0Cr\n\0KCr\x0C\0LCr") })
                        },
                    };
                    const __ES: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\n\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x07\0\x0C\0\x16\0\x03\0\xC2\xA0mil\x06\0\xC2\xA0M\t\0\xC2\xA0mil\xC2\xA0M\x0C\0\xC2\xA0B") })
                        },
                    };
                    const __ES_419: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x04\x06\n\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0\x05\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x05\0\0\0\0\0\x05\0\n\0\x0F\0\x19\0\x03\0\xC2\xA0K\x03\0\xC2\xA0k\x06\0\xC2\xA0M\t\0\xC2\xA0mil\xC2\xA0M\x0C\0\xC2\xA0B") })
                        },
                    };
                    const __ES_MX: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\n\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x05\0\n\0\x14\0\x03\0\xC2\xA0k\x06\0\xC2\xA0M\t\0\xC2\xA0mil\xC2\xA0M\x0C\0\xC2\xA0B") })
                        },
                    };
                    const __ES_US: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\n\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x05\0\n\0\x14\0\x03\0\xC2\xA0K\x06\0\xC2\xA0M\t\0\xC2\xA0mil\xC2\xA0M\x0C\0\xC2\xA0B") })
                        },
                    };
                    const __ET: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x07\0\x0E\0\x15\0\x03\0\xC2\xA0tuh\x06\0\xC2\xA0mln\t\0\xC2\xA0mld\x0C\0\xC2\xA0trln") })
                        },
                    };
                    const __EU: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x06\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x05\0\x06\0\xC2\xA0M\x0C\0\xC2\xA0B") })
                        },
                    };
                    const __FA: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x0C\0\x1C\0.\0\x03\0\xC2\xA0\xD9\x87\xD8\xB2\xD8\xA7\xD8\xB1\x06\0\xC2\xA0\xD9\x85\xDB\x8C\xD9\x84\xDB\x8C\xD9\x88\xD9\x86\t\0\xC2\xA0\xD9\x85\xDB\x8C\xD9\x84\xDB\x8C\xD8\xA7\xD8\xB1\xD8\xAF\x0C\0\xC2\xA0\xD8\xAA\xD8\xB1\xDB\x8C\xD9\x84\xDB\x8C\xD9\x88\xD9\x86") })
                        },
                    };
                    const __FF_ADLM: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x06\0\x0C\0\x16\0\x03\0\xF0\x9E\xA4\x93\x06\0\xF0\x9E\xA4\x81\t\0\xF0\x9E\xA4\x81\xF0\x9E\xA4\xB6\x0C\0\xF0\x9E\xA4\x9A") })
                        },
                    };
                    const __FI: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x06\0\x0F\0\x17\0\x03\0\xC2\xA0t.\x06\0\xC2\xA0milj.\t\0\xC2\xA0mrd.\x0C\0\xC2\xA0bilj.") })
                        },
                    };
                    const __FO: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\t\0\x12\0\x1A\0\x03\0\xC2\xA0t\xC3\xBAs.\x06\0\xC2\xA0mi\xC3\xB3.\t\0\xC2\xA0mia.\x0C\0\xC2\xA0bi\xC3\xB3.") })
                        },
                    };
                    const __FR: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x05\0\n\0\x10\0\x03\0\xC2\xA0k\x06\0\xC2\xA0M\t\0\xC2\xA0Md\x0C\0\xC2\xA0Bn") })
                        },
                    };
                    const __FR_CA: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x05\0\n\0\x0F\0\x03\0\xC2\xA0k\x06\0\xC2\xA0M\t\0\xC2\xA0G\x0C\0\xC2\xA0T") })
                        },
                    };
                    const __FY: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x02\0\0\0\x03\0\0\0\x04\0\0\0\x05\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x05\0\0\0\0\0\x02\0\x05\0\r\0\x15\0\0\0\x03\0K\x06\0\xC2\xA0mln.\t\0\xC2\xA0mld.\x0C\0\xC2\xA0bln.") })
                        },
                    };
                    const __GA: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x03\0\0\0\x04\0\0\0\x06\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x01\x05\x05\x01\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x06\0\0\0\0\0\x03\0\x05\0\x08\0\x0B\0\r\0\x03\0k\0\0\x06\0M\t\0B\0\0\x0C\0T") })
                        },
                    };
                    const __GU: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x05\x07\t\x0B\x0C\r\x0E") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0\x05\0\0\0\x06\0\0\0\x07\0\0\0\x08\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x08\0\0\0\0\0\x10\0\x1D\0-\0:\0P\0i\0y\0\x03\0\xC2\xA0\xE0\xAA\xB9\xE0\xAA\x9C\xE0\xAA\xBE\xE0\xAA\xB0\x05\0\xC2\xA0\xE0\xAA\xB2\xE0\xAA\xBE\xE0\xAA\x96\x07\0\xC2\xA0\xE0\xAA\x95\xE0\xAA\xB0\xE0\xAB\x8B\xE0\xAA\xA1\t\0\xC2\xA0\xE0\xAA\x85\xE0\xAA\xAC\xE0\xAA\x9C\x0B\0\xC2\xA0\xE0\xAA\xA8\xE0\xAA\xBF\xE0\xAA\x96\xE0\xAA\xB0\xE0\xAB\x8D\xE0\xAA\xB5\x0C\0\xC2\xA0\xE0\xAA\xAE\xE0\xAA\xB9\xE0\xAA\xBE\xE0\xAA\xAA\xE0\xAA\xA6\xE0\xAB\x8D\xE0\xAA\xAE\r\0\xC2\xA0\xE0\xAA\xB6\xE0\xAA\x82\xE0\xAA\x95\xE0\xAB\x81\x0E\0\xC2\xA0\xE0\xAA\x9C\xE0\xAA\xB2\xE0\xAA\xA7\xE0\xAA\xBF") })
                        },
                    };
                    const __HA: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x03\0\0\0\x04\0\0\0\x06\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x01\x05\x05\x01\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x06\0\0\0\0\0\x03\0\x05\0\x08\0\x0B\0\r\0\x03\0D\0\0\x06\0M\t\0B\0\0\x0C\0T") })
                        },
                    };
                    const __HE: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x06\0\x0C\0\x12\0\x03\0K\xE2\x80\x8F\x06\0M\xE2\x80\x8F\t\0B\xE2\x80\x8F\x0C\0T\xE2\x80\x8F") })
                        },
                    };
                    const __HI: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x05\x07\t\x0B\r") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0\x05\0\0\0\x06\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x06\0\0\0\0\0\x13\0 \0*\x004\0>\0\x03\0\xC2\xA0\xE0\xA4\xB9\xE0\xA4\x9C\xE0\xA4\xBC\xE0\xA4\xBE\xE0\xA4\xB0\x05\0\xC2\xA0\xE0\xA4\xB2\xE0\xA4\xBE\xE0\xA4\x96\x07\0\xC2\xA0\xE0\xA4\x95\xE0\xA5\xB0\t\0\xC2\xA0\xE0\xA4\x85\xE0\xA5\xB0\x0B\0\xC2\xA0\xE0\xA4\x96\xE0\xA5\xB0\r\0\xC2\xA0\xE0\xA4\xA8\xE0\xA5\x80\xE0\xA4\xB2") })
                        },
                    };
                    const __HR: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x08\0\x10\0\x18\0\x03\0\xC2\xA0tis.\x06\0\xC2\xA0mil.\t\0\xC2\xA0mlr.\x0C\0\xC2\xA0bil.") })
                        },
                    };
                    const __HU: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x05\0\n\0\x11\0\x03\0\xC2\xA0E\x06\0\xC2\xA0M\t\0\xC2\xA0Mrd\x0C\0\xC2\xA0B") })
                        },
                    };
                    const __HY: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\n\0\x14\0 \0\x03\0\xC2\xA0\xD5\xB0\xD5\xA6\xD6\x80\x06\0\xC2\xA0\xD5\xB4\xD5\xAC\xD5\xB6\t\0\xC2\xA0\xD5\xB4\xD5\xAC\xD6\x80\xD5\xA4\x0C\0\xC2\xA0\xD5\xBF\xD6\x80\xD5\xAC\xD5\xB6") })
                        },
                    };
                    const __IA: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x07\0\x0E\0\x15\0\x03\0\xC2\xA0mil\x06\0\xC2\xA0mln\t\0\xC2\xA0mld\x0C\0\xC2\xA0bln") })
                        },
                    };
                    const __ID: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x06\0\x0C\0\x11\0\x03\0\xC2\xA0rb\x06\0\xC2\xA0jt\t\0\xC2\xA0M\x0C\0\xC2\xA0T") })
                        },
                    };
                    const __IS: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x07\0\r\0\x14\0\x03\0\xC2\xA0\xC3\xBE.\x06\0\xC2\xA0m.\t\0\xC2\xA0ma.\x0C\0\xC2\xA0bn") })
                        },
                    };
                    const __IT: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x07\0\x0E\0\x06\0\xC2\xA0Mln\t\0\xC2\xA0Mrd\x0C\0\xC2\xA0Bln") })
                        },
                    };
                    const __JA: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x04\x08\x0C\x10") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x05\0\n\0\x0F\0\x04\0\xE4\xB8\x87\x08\0\xE5\x84\x84\x0C\0\xE5\x85\x86\x10\0\xE4\xBA\xAC") })
                        },
                    };
                    const __JV: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x07\0\n\0\x03\0\xC3\x88\x06\0Y\t\0M\x0C\0T") })
                        },
                    };
                    const __KA: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0B\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0\x05\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x05\0\0\0\0\0\x0B\0\x19\0*\08\0\x03\0\xC2\xA0\xE1\x83\x90\xE1\x83\x97.\x06\0\xC2\xA0\xE1\x83\x9B\xE1\x83\x9A\xE1\x83\x9C.\t\0\xC2\xA0\xE1\x83\x9B\xE1\x83\x9A\xE1\x83\xA0\xE1\x83\x93.\t\0\xC2\xA0\xE1\x83\x9B\xE1\x83\x9A\xE1\x83\xA0.\x0C\0\xC2\xA0\xE1\x83\xA2\xE1\x83\xA0\xE1\x83\x9A.") })
                        },
                    };
                    const __KEA: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x07\0\x0C\0\x12\0\x03\0\xC2\xA0mil\x06\0\xC2\xA0M\t\0\xC2\xA0MM\x0C\0\xC2\xA0Bi") })
                        },
                    };
                    const __KGP: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x07\0\r\0\x13\0\x03\0\xC2\xA0mil\x06\0\xC2\xA0mi\t\0\xC2\xA0bi\x0C\0\xC2\xA0tri") })
                        },
                    };
                    const __KK: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x05\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0\x05\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x05\0\0\0\0\0\n\0\x11\0\x1B\0'\0\x03\0\xC2\xA0\xD0\xBC\xD1\x8B\xD2\xA3\x03\0\xC2\xA0\xD0\xBC.\x06\0\xC2\xA0\xD0\xBC\xD0\xBB\xD0\xBD\t\0\xC2\xA0\xD0\xBC\xD0\xBB\xD1\x80\xD0\xB4\x0C\0\xC2\xA0\xD1\x82\xD1\x80\xD0\xBB\xD0\xBD") })
                        },
                    };
                    const __KM: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x04\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0\x05\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x05\0\0\0\0\0\x0E\0\x1E\0+\0A\0\x03\0\xE1\x9E\x96\xE1\x9E\xB6\xE1\x9E\x93\xE1\x9F\x8B\x03\0\xC2\xA0\xE1\x9E\x96\xE1\x9E\xB6\xE1\x9E\x93\xE1\x9F\x8B\x06\0\xC2\xA0\xE1\x9E\x9B\xE1\x9E\xB6\xE1\x9E\x93\t\0\xC2\xA0\xE1\x9E\x94\xE1\x9F\x8A\xE1\x9E\xB8\xE1\x9E\x9B\xE1\x9E\xB6\xE1\x9E\x93\x0C\0\xC2\xA0\xE1\x9E\x91\xE1\x9F\x92\xE1\x9E\x9A\xE1\x9E\xB8\xE1\x9E\x9B\xE1\x9E\xB6\xE1\x9E\x93") })
                        },
                    };
                    const __KN: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x08\0\x10\0\x18\0\x03\0\xE0\xB2\xB8\xE0\xB2\xBE\x06\0\xE0\xB2\xAE\xE0\xB2\xBF\t\0\xE0\xB2\xAC\xE0\xB2\xBF\x0C\0\xE0\xB2\x9F\xE0\xB3\x8D\xE0\xB2\xB0\xE0\xB2\xBF") })
                        },
                    };
                    const __KO: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x04\x08\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x05\0\n\0\x0F\0\x03\0\xEC\xB2\x9C\x04\0\xEB\xA7\x8C\x08\0\xEC\x96\xB5\x0C\0\xEC\xA1\xB0") })
                        },
                    };
                    const __KY: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\n\0\x14\0\x1E\0\x03\0\xC2\xA0\xD0\xBC\xD0\xB8\xD2\xA3\x06\0\xC2\xA0\xD0\xBC\xD0\xBB\xD0\xBD\t\0\xC2\xA0\xD0\xBC\xD0\xBB\xD0\xB4\x0C\0\xC2\xA0\xD1\x82\xD1\x80\xD0\xBB\xD0\xBD") })
                        },
                    };
                    const __LB: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x08\0\x10\0\x18\0\x03\0\xC2\xA0Dsd.\x06\0\xC2\xA0Mio.\t\0\xC2\xA0Mrd.\x0C\0\xC2\xA0Bio.") })
                        },
                    };
                    const __LO: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x05\x06\t\x0C\r") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0\x05\0\0\0\x06\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x06\0\0\0\0\0\r\0\x1A\0*\x007\0S\0\x03\0\xC2\xA0\xE0\xBA\x9E\xE0\xBA\xB1\xE0\xBA\x99\x03\0\xC2\xA0\xE0\xBA\x81\xE0\xBA\xB5\xE0\xBA\x9A\x06\0\xC2\xA0\xE0\xBA\xA5\xE0\xBB\x89\xE0\xBA\xB2\xE0\xBA\x99\t\0\xC2\xA0\xE0\xBA\x95\xE0\xBA\xB7\xE0\xBB\x89\x0C\0\xC2\xA0\xE0\xBA\xA5\xE0\xBB\x89\xE0\xBA\xB2\xE0\xBA\x99\xE0\xBA\xA5\xE0\xBB\x89\xE0\xBA\xB2\xE0\xBA\x99\x0C\0\xE0\xBA\xA5\xE0\xBA\xA5") })
                        },
                    };
                    const __LO_U_NU_LAOO: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\r") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x0B\0\x19\0$\0\x03\0\xE0\xBA\x9E\xE0\xBA\xB1\xE0\xBA\x99\x06\0\xE0\xBA\xA5\xE0\xBB\x89\xE0\xBA\xB2\xE0\xBA\x99\t\0\xE0\xBA\x95\xE0\xBA\xB7\xE0\xBB\x89\x0C\0\xE0\xBA\x9E\xE0\xBA\xB1\xE0\xBA\x99\xE0\xBA\x95\xE0\xBA\xB7\xE0\xBB\x89") })
                        },
                    };
                    const __LT: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x0B\0\x13\0\x1C\0\x03\0\xC2\xA0t\xC5\xABkst.\x06\0\xC2\xA0mln.\t\0\xC2\xA0mlrd.\x0C\0\xC2\xA0trln.") })
                        },
                    };
                    const __LV: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x0B\0\x14\0\x1E\0\x03\0\xC2\xA0t\xC5\xABkst.\x06\0\xC2\xA0milj.\t\0\xC2\xA0mljrd.\x0C\0\xC2\xA0trilj.") })
                        },
                    };
                    const __MK: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\x08\t\x0B\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0\x06\0\0\0\x07\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05\x01\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x07\0\0\0\0\0\x0B\0\x16\0\x1C\0)\x002\0;\0\x03\0\xC2\xA0\xD0\xB8\xD0\xBB\xD1\x98.\x06\0\xC2\xA0\xD0\xBC\xD0\xB8\xD0\xBB.\x06\0\xC2\xA0\xD0\x9C\t\0\xC2\xA0\xD0\xBC\xD0\xB8\xD0\xBB\xD1\x98.\t\0\xC2\xA0\xD0\xBC\xD1\x98.\t\0\xC2\xA0\xD0\xBC\xD0\xB8.\x0C\0\xC2\xA0\xD0\xB1\xD0\xB8\xD0\xBB.") })
                        },
                    };
                    const __MN: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0B\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0\x05\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x05\0\0\0\0\0\x0E\0\x18\0(\0,\0\x03\0\xC2\xA0\xD0\xBC\xD1\x8F\xD0\xBD\xD0\xB3\xD0\xB0\x06\0\xC2\xA0\xD1\x81\xD0\xB0\xD1\x8F\t\0\xC2\xA0\xD1\x82\xD1\x8D\xD1\x80\xD0\xB1\xD1\x83\xD0\xBC\t\0\xD0\xA2\x0C\0\xD0\x98\xD0\x9D") })
                        },
                    };
                    const __MR: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x05\x07\t\x0B\r") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0\x05\0\0\0\x06\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x06\0\0\0\0\0\x07\0\x14\0$\x004\0D\0\x03\0\xC2\xA0\xE0\xA4\xB9\x05\0\xC2\xA0\xE0\xA4\xB2\xE0\xA4\xBE\xE0\xA4\x96\x07\0\xC2\xA0\xE0\xA4\x95\xE0\xA5\x8B\xE0\xA4\x9F\xE0\xA5\x80\t\0\xC2\xA0\xE0\xA4\x85\xE0\xA4\xAC\xE0\xA5\x8D\xE0\xA4\x9C\x0B\0\xC2\xA0\xE0\xA4\x96\xE0\xA4\xB0\xE0\xA5\x8D\xE0\xA4\xB5\r\0\xC2\xA0\xE0\xA4\xAA\xE0\xA4\xA6\xE0\xA5\x8D\xE0\xA4\xAE") })
                        },
                    };
                    const __MS: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x03\0\x06\0\t\0\x03\0K\x06\0J\t\0B\x0C\0T") })
                        },
                    };
                    const __MY: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x04\x05\x06\x07\n\x0B\x0C\r\x0E") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0\x05\0\0\0\x06\0\0\0\x07\0\0\0\x08\0\0\0\t\0\0\0\n\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\n\0\0\0\0\0\x13\0)\0<\0L\0\\\0q\0\x86\0\xA1\0\xB9\0\x03\0\xC2\xA0\xE1\x80\x91\xE1\x80\xB1\xE1\x80\xAC\xE1\x80\x84\xE1\x80\xBA\x04\0\xC2\xA0\xE1\x80\x9E\xE1\x80\xB1\xE1\x80\xAC\xE1\x80\x84\xE1\x80\xBA\xE1\x80\xB8\x05\0\xC2\xA0\xE1\x80\x9E\xE1\x80\xAD\xE1\x80\x94\xE1\x80\xBA\xE1\x80\xB8\x06\0\xC2\xA0\xE1\x80\x9E\xE1\x80\x94\xE1\x80\xBA\xE1\x80\xB8\x07\0\xC2\xA0\xE1\x80\x80\xE1\x80\xAF\xE1\x80\x8B\xE1\x80\xB1\n\x0E\xE1\x80\x80\xE1\x80\xAF\xE1\x80\x8B\xE1\x80\xB1\xC2\xA0\xC2\xA0\xE1\x80\x91\x0B\x0E\xE1\x80\x80\xE1\x80\xAF\xE1\x80\x8B\xE1\x80\xB1\xC2\xA0\xC2\xA0\xE1\x80\x9E\x0C\x08\xE1\x80\x8B\xE1\x80\xB1\xC2\xA0\xC2\xA0\xE1\x80\x9E\xE1\x80\xAD\xE1\x80\x94\xE1\x80\xBA\xE1\x80\xB8\r\x08\xE1\x80\x8B\xE1\x80\xB1\xC2\xA0\xC2\xA0\xE1\x80\x9E\xE1\x80\x94\xE1\x80\xBA\xE1\x80\xB8\x0E\0\xC2\xA0\xE1\x80\x80\xE1\x80\xB1\xE1\x80\xAC\xE1\x80\x8B\xE1\x80\xAD") })
                        },
                    };
                    const __NE: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x05\x07\t\x0B\r") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0\x05\0\0\0\x06\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x06\0\0\0\0\0\x10\0\x1D\0-\0:\0G\0\x03\0\xC2\xA0\xE0\xA4\xB9\xE0\xA4\x9C\xE0\xA4\xBE\xE0\xA4\xB0\x05\0\xC2\xA0\xE0\xA4\xB2\xE0\xA4\xBE\xE0\xA4\x96\x07\0\xC2\xA0\xE0\xA4\x95\xE0\xA4\xB0\xE0\xA5\x8B\xE0\xA4\xA1\t\0\xC2\xA0\xE0\xA4\x85\xE0\xA4\xB0\xE0\xA4\xAC\x0B\0\xC2\xA0\xE0\xA4\x96\xE0\xA4\xB0\xE0\xA4\xAC\r\0\xC2\xA0\xE0\xA4\xB6\xE0\xA4\x82\xE0\xA4\x96") })
                        },
                    };
                    const __NO: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x03\0\x0C\0\x14\0\x03\0k\x06\0\xC2\xA0mill.\t\0\xC2\xA0mrd.\x0C\0\xC2\xA0bill.") })
                        },
                    };
                    const __OR: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x05\0\r\0\x15\0\x03\0\xE0\xAC\xB9\x06\0\xE0\xAC\xA8\xE0\xAC\xBF\t\0\xE0\xAC\xAC\xE0\xAC\xBF\x0C\0\xE0\xAC\x9F\xE0\xAD\x8D\xE0\xAC\xB0\xE0\xAC\xBF") })
                        },
                    };
                    const __PA: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x05\x07\t\x0B\r") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0\x05\0\0\0\x06\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x06\0\0\0\0\0\x13\0 \x000\0=\0J\0\x03\0\xC2\xA0\xE0\xA8\xB9\xE0\xA8\x9C\xE0\xA8\xBC\xE0\xA8\xBE\xE0\xA8\xB0\x05\0\xC2\xA0\xE0\xA8\xB2\xE0\xA9\xB1\xE0\xA8\x96\x07\0\xC2\xA0\xE0\xA8\x95\xE0\xA8\xB0\xE0\xA9\x8B\xE0\xA9\x9C\t\0\xC2\xA0\xE0\xA8\x85\xE0\xA8\xB0\xE0\xA8\xAC\x0B\0\xC2\xA0\xE0\xA8\x96\xE0\xA8\xB0\xE0\xA8\xAC\r\0\xC2\xA0\xE0\xA8\xA8\xE0\xA9\x80\xE0\xA8\xB2") })
                        },
                    };
                    const __PL: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x08\0\x0F\0\x16\0\x03\0\xC2\xA0tys.\x06\0\xC2\xA0mln\t\0\xC2\xA0mld\x0C\0\xC2\xA0bln") })
                        },
                    };
                    const __PS: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0B\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x02\0\0\0\x04\0\0\0\x05\0\0\0\x07\0\0\0\t\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\x05\x01\x05\x05\x01\x05\x01\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\t\0\0\0\0\0\x02\0\x05\0\x07\0\n\0\r\0\x10\0\x13\0\x15\0\0\0\x03\0K\0\0\x06\0M\t\0B\t\0G\t\0B\0\0\x0C\0T") })
                        },
                    };
                    const __PT_PT: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x07\0\x0C\0\x12\0\x03\0\xC2\xA0mil\x06\0\xC2\xA0M\t\0\xC2\xA0mM\x0C\0\xC2\xA0Bi") })
                        },
                    };
                    const __RO: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x05\0\r\0\x15\0\x03\0\xC2\xA0K\x06\0\xC2\xA0mil.\t\0\xC2\xA0mld.\x0C\0\xC2\xA0tril.") })
                        },
                    };
                    const __SAH: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x0B\0\x15\0!\0\x03\0\xC2\xA0\xD1\x82\xD1\x8B\xD2\xBB.\x06\0\xC2\xA0\xD0\xBC\xD3\xA9\xD0\xBB\t\0\xC2\xA0\xD0\xBC\xD0\xBB\xD1\x80\xD0\xB4\x0C\0\xC2\xA0\xD1\x82\xD1\x80\xD0\xBB\xD0\xBD") })
                        },
                    };
                    const __SC: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x08\0\x0F\0\x16\0\x03\0\xC2\xA0m\xC3\xACg\x06\0\xC2\xA0Mln\t\0\xC2\xA0Mrd\x0C\0\xC2\xA0Bln") })
                        },
                    };
                    const __SD: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x0C\0\x18\0$\0\x03\0\xC2\xA0\xD9\x87\xD8\xB2\xD8\xA7\xD8\xB1\x06\0\xC2\xA0\xD9\x85\xD9\x84\xD9\x8A\xD9\x86\t\0\xC2\xA0\xD8\xA8\xD9\x84\xD9\x8A\xD9\x86\x0C\0\xC2\xA0\xD9\xBD\xD8\xB1\xD9\x84\xD9\x8A\xD9\x86") })
                        },
                    };
                    const __SI: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x05\0\r\0\x15\0\x03\x03\xE0\xB6\xAF\x06\x06\xE0\xB6\xB8\xE0\xB7\x92\t\x06\xE0\xB6\xB6\xE0\xB7\x92\x0C\x0F\xE0\xB6\xA7\xE0\xB7\x8A\xE2\x80\x8D\xE0\xB6\xBB\xE0\xB7\x92") })
                        },
                    };
                    const __SL: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x08\0\x10\0\x18\0\x03\0\xC2\xA0tis.\x06\0\xC2\xA0mio.\t\0\xC2\xA0mrd.\x0C\0\xC2\xA0bil.") })
                        },
                    };
                    const __SQ: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\t\0\x10\0\x17\0\x03\0\xC2\xA0mij\xC3\xAB\x06\0\xC2\xA0mln\t\0\xC2\xA0mld\x0C\0\xC2\xA0bln") })
                        },
                    };
                    const __SR: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x0B\0\x16\0#\0\x03\0\xC2\xA0\xD1\x85\xD0\xB8\xD1\x99.\x06\0\xC2\xA0\xD0\xBC\xD0\xB8\xD0\xBB.\t\0\xC2\xA0\xD0\xBC\xD0\xBB\xD1\x80\xD0\xB4.\x0C\0\xC2\xA0\xD0\xB1\xD0\xB8\xD0\xBB.") })
                        },
                    };
                    const __SV: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x06\0\x0C\0\x12\0\x03\0\xC2\xA0tn\x06\0\xC2\xA0mn\t\0\xC2\xA0md\x0C\0\xC2\xA0bn") })
                        },
                    };
                    const __SW: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x05\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x01\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x05\0\0\0\0\0\x08\0\x0B\0\x0E\0\x11\0\x03\x06elfu\xC2\xA0\x06\0M\t\0B\x0C\0B\x0C\0T") })
                        },
                    };
                    const __SW_KE: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x08\0\x0B\0\x0E\0\x03\x06elfu\xC2\xA0\x06\x01M\t\x01B\x0C\x01T") })
                        },
                    };
                    const __TA: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x05\0\r\0\x15\0\x03\0\xE0\xAE\x86\x06\0\xE0\xAE\xAE\xE0\xAE\xBF\t\0\xE0\xAE\xAA\xE0\xAE\xBF\x0C\0\xE0\xAE\x9F\xE0\xAE\xBF") })
                        },
                    };
                    const __TE: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x08\0\x10\0\x18\0\x03\0\xE0\xB0\xB5\xE0\xB1\x87\x06\0\xE0\xB0\xAE\xE0\xB0\xBF\t\0\xE0\xB0\xAC\xE0\xB0\xBF\x0C\0\xE0\xB0\x9F\xE0\xB1\x8D\xE0\xB0\xB0\xE0\xB0\xBF") })
                        },
                    };
                    const __TG: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x0B\0\x16\0#\0\x03\0\xC2\xA0\xD2\xB3\xD0\xB7\xD1\x80.\x06\0\xC2\xA0\xD0\xBC\xD0\xBB\xD0\xBD.\t\0\xC2\xA0\xD0\xBC\xD0\xBB\xD1\x80\xD0\xB4.\x0C\0\xC2\xA0\xD1\x82\xD1\x80\xD0\xBB\xD0\xBD.") })
                        },
                    };
                    const __TI: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x07\0\x0E\0\x15\0\x03\0\xC2\xA0\xE1\x88\xBD\x06\0\xC2\xA0\xE1\x88\x9A\t\0\xC2\xA0\xE1\x89\xA2\x0C\0\xC2\xA0\xE1\x89\xB5") })
                        },
                    };
                    const __TK: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\t\0\x10\0\x18\0\x03\0\xC2\xA0m\xC3\xBC\xC5\x88\x06\0\xC2\xA0mln\t\0\xC2\xA0mlrd\x0C\0\xC2\xA0trln") })
                        },
                    };
                    const __TO: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x04\x05\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0\x05\0\0\0\x06\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x06\0\0\0\0\0\x03\0\x06\0\t\0\x0C\0\x0F\0\x03\0a\x04\0m\x05\0k\x06\0M\t\0P\x0C\0T") })
                        },
                    };
                    const __TR: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x05\0\x0B\0\x11\0\x03\0\xC2\xA0B\x06\0\xC2\xA0Mn\t\0\xC2\xA0Mr\x0C\0\xC2\xA0Tn") })
                        },
                    };
                    const __UG: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x05\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x01\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x05\0\0\0\0\0\x08\0\x16\0&\0(\0\x03\0\xD9\x85\xD9\x89\xDA\xAD\x06\0\xD9\x85\xD9\x89\xD9\x84\xD9\x8A\xD9\x88\xD9\x86\t\0\xD9\x85\xD9\x89\xD9\x84\xD9\x8A\xD8\xA7\xD8\xB1\xD8\xAF\0\0\x0C\0T") })
                        },
                    };
                    const __UK: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x0B\0\x15\0!\0\x03\0\xC2\xA0\xD1\x82\xD0\xB8\xD1\x81.\x06\0\xC2\xA0\xD0\xBC\xD0\xBB\xD0\xBD\t\0\xC2\xA0\xD0\xBC\xD0\xBB\xD1\x80\xD0\xB4\x0C\0\xC2\xA0\xD1\x82\xD1\x80\xD0\xBB\xD0\xBD") })
                        },
                    };
                    const __UND: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x03\0\x06\0\t\0\x03\0K\x06\0M\t\0G\x0C\0T") })
                        },
                    };
                    const __UR: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x05\x07\t\x0B\r") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0\x05\0\0\0\x06\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x06\0\0\0\0\0\x0C\0\x18\0$\0.\0:\0\x03\0\xC2\xA0\xDB\x81\xD8\xB2\xD8\xA7\xD8\xB1\x05\0\xC2\xA0\xD9\x84\xD8\xA7\xDA\xA9\xDA\xBE\x07\0\xC2\xA0\xDA\xA9\xD8\xB1\xD9\x88\xDA\x91\t\0\xC2\xA0\xD8\xA7\xD8\xB1\xD8\xA8\x0B\0\xC2\xA0\xDA\xA9\xDA\xBE\xD8\xB1\xD8\xA8\x0C\0\xC2\xA0\xD9\xB9\xD8\xB1\xDB\x8C\xD9\x84\xDB\x8C\xD9\x86") })
                        },
                    };
                    const __UZ: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x08\0\x0F\0\x17\0\x03\0\xC2\xA0ming\x06\0\xC2\xA0mln\t\0\xC2\xA0mlrd\x0C\0\xC2\xA0trln") })
                        },
                    };
                    const __UZ_CYRL: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\n\0\x12\0\x1C\0\x03\0\xD0\xBC\xD0\xB8\xD0\xBD\xD0\xB3\x06\0\xD0\xBC\xD0\xBB\xD0\xBD\t\0\xD0\xBC\xD0\xBB\xD1\x80\xD0\xB4\x0C\0\xD1\x82\xD1\x80\xD0\xBB\xD0\xBD") })
                        },
                    };
                    const __VI: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x05\0\x0B\0\x10\0\x03\0\xC2\xA0N\x06\0\xC2\xA0Tr\t\0\xC2\xA0T\x0C\0\xC2\xA0NT") })
                        },
                    };
                    const __YRL: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x06\t\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x07\0\r\0\x13\0\x03\0\xC2\xA0miu\x06\0\xC2\xA0mi\t\0\xC2\xA0bi\x0C\0\xC2\xA0tiri") })
                        },
                    };
                    const __YUE: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x04\x08\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x05\0\n\0\x0F\0\x03\0\xE5\x8D\x83\x04\0\xE8\x90\xAC\x08\0\xE5\x84\x84\x0C\0\xE5\x85\x86") })
                        },
                    };
                    const __YUE_HANS: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x04\x08\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x05\0\n\0\x04\0\xE4\xB8\x87\x08\0\xE4\xBA\xBF\x0C\0\xE5\x85\x86") })
                        },
                    };
                    const __ZH: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x04\x08\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x05\0\n\0\x04\0\xE4\xB8\x87\x08\0\xE4\xBA\xBF\x0C\0\xE4\xB8\x87\xE4\xBA\xBF") })
                        },
                    };
                    const __ZH_HANT: &S = &icu::experimental::compactdecimal::provider::CompactDecimalPatternDataV1 {
                        patterns: unsafe {
                            #[allow(unused_unsafe)]
                            zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x04\x08\x0C") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x05\x05\x05") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x05\0\n\0\x04\0\xE8\x90\xAC\x08\0\xE5\x84\x84\x0C\0\xE5\x85\x86") })
                        },
                    };
                    &[__AF, __AM, __AR, __AS, __AZ, __BE, __BG, __BN, __BR, __BRX, __BS, __BS_CYRL, __CA, __CHR, __CS, __CHR, __DA, __DE, __DSB, __EL, __EN, __EN_IN, __ES, __ES_419, __ES_MX, __ES_US, __ET, __EU, __FA, __FF_ADLM, __FI, __CHR, __FO, __FR, __FR_CA, __FY, __GA, __CHR, __EU, __GU, __HA, __HE, __HI, __HR, __DSB, __HU, __HY, __IA, __ID, __IS, __IT, __JA, __JV, __KA, __KEA, __KGP, __KK, __KM, __KN, __KO, __EN, __KY, __LB, __LO, __LO_U_NU_LAOO, __LT, __LV, __MK, __CHR, __MN, __MR, __MS, __MY, __NE, __FY, __NO, __OR, __PA, __CHR, __PL, __PS, __KGP, __PT_PT, __RO, __BE, __SAH, __SC, __SD, __SI, __CS, __SL, __CHR, __SQ, __SR, __BS, __SV, __SW, __SW_KE, __TA, __TE, __TG, __EN, __TI, __TK, __TO, __TR, __UG, __UK, __UND, __UR, __UZ, __UZ_CYRL, __VI, __YRL, __YUE, __YUE_HANS, __ZH, __EN, __ZH_HANT, __EN, __CHR]
                },
            );
        }
        #[clippy::msrv = "1.70"]
        impl icu_provider::DataProvider<icu::experimental::compactdecimal::provider::ShortCompactDecimalFormatDataV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::experimental::compactdecimal::provider::ShortCompactDecimalFormatDataV1Marker>, icu_provider::DataError> {
                let mut metadata = icu_provider::DataResponseMetadata::default();
                let payload = if let Some(payload) = icu_provider_baked::DataStore::get(&Self::DATA_SHORT_COMPACT_DECIMAL_FORMAT_DATA_V1_MARKER, req.id) {
                    payload
                } else {
                    const FALLBACKER: icu::locale::fallback::LocaleFallbackerWithConfig<'static> = icu::locale::fallback::LocaleFallbacker::new().for_config(<icu::experimental::compactdecimal::provider::ShortCompactDecimalFormatDataV1Marker as icu_provider::DataMarker>::INFO.fallback_config);
                    let mut fallback_iterator = FALLBACKER.fallback_for(req.id.locale.clone());
                    loop {
                        if let Some(payload) = icu_provider_baked::DataStore::get(&Self::DATA_SHORT_COMPACT_DECIMAL_FORMAT_DATA_V1_MARKER, icu_provider::DataIdentifierBorrowed::for_marker_attributes_and_locale(req.id.marker_attributes, fallback_iterator.get())) {
                            metadata.locale = Some(fallback_iterator.take());
                            break payload;
                        }
                        if fallback_iterator.get().is_und() {
                            return Err(icu_provider::DataErrorKind::IdentifierNotFound.with_req(<icu::experimental::compactdecimal::provider::ShortCompactDecimalFormatDataV1Marker as icu_provider::DataMarker>::INFO, req));
                        }
                        fallback_iterator.step();
                    }
                };
                Ok(icu_provider::DataResponse { payload: icu_provider::DataPayload::from_static_ref(payload), metadata })
            }
        }
    };
    ($ provider : ty , ITER) => {
        __impl_short_compact_decimal_format_data_v1_marker!($provider);
        #[clippy::msrv = "1.70"]
        impl icu_provider::IterableDataProvider<icu::experimental::compactdecimal::provider::ShortCompactDecimalFormatDataV1Marker> for $provider {
            fn iter_ids(&self) -> Result<std::collections::HashSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok(icu_provider_baked::DataStore::iter(&Self::DATA_SHORT_COMPACT_DECIMAL_FORMAT_DATA_V1_MARKER).collect())
            }
        }
    };
}
#[doc(inline)]
pub use __impl_short_compact_decimal_format_data_v1_marker as impl_short_compact_decimal_format_data_v1_marker;
