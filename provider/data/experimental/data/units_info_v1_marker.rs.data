// @generated
/// Implement `DataProvider<UnitsInfoV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
///
/// Using this implementation will embed the following data in the binary's data segment:
/// * 5622B[^1] for the singleton data struct
///
/// [^1]: these numbers can be smaller in practice due to linker deduplication
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_units_info_v1_marker {
    ($ provider : ty) => {
        #[clippy::msrv = "1.71.1"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.71.1"]
        impl $provider {
            #[doc(hidden)]
            pub const SINGLETON_UNITS_INFO_V1_MARKER: &'static <icu::experimental::units::provider::UnitsInfoV1Marker as icu_provider::DynamicDataMarker>::DataStruct = &icu::experimental::units::provider::UnitsInfoV1 { units_conversion_trie: zerotrie::ZeroTrieSimpleAscii { store: unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\xE1x1abcdefghijklmnopqrstvwy\0\0\0\0\x01\x01\x01\x02\x02\x02\x02\x02\x02\x02\x03\x03\x03\x03\x04\x04\x04\x04\x04\rJ\x95\xEDDl\xC9\x0E6BX\x99\xC1\xFB\x19D\xBC\xD3\x01\x7F\xB6\xBB\xD700-kilometer\x80\xC5cmrst\x03\x08\x1A*re\x81pere\x82c-\xC2ms\x06inute\x83econd\x84tronomical-unit\x85mosphere\x86\xC6aeiruy\x06\x17\x190;r\x87rel\x88\xC2ac\x06ufort\x89querel\x8At\x8Bitish-thermal-unit\x8C-it\x8D\xC2-s\x03jp\x8Ehel\x8Fte\x90\0\xC5aehou\x1B+5<\xC3lnr\x0B\x11orie\x90\x01-it\x90\x02dela\x90\x03at\x90\x04\xC2ln\x06sius\x90\x05tury\x90\x06\xC2ao\x04in\x90\x07\x90\x08ulomb\x90\tp\x90\n-\xC2jm\x03p\x90\x0Betric\x90\x0C\xC5aeoru\x14;>H\xC2ly\x05ton\x90\r\x90\x0E-person\x90\x0F\xC3cgs\x05\nade\x90\x10ree\x90\x11sert-spoon\x90\x12-imperial\x90\x13t\x90\x14\xC2ao\x03m\x90\x15p\x90\x16nam\x90\x17\xC3alm\x14 rth-\xC2mr\x05ass\x90\x18adius\x90\x19ectronvolt\x90\x1A\x90\x1B\xC4alou\x18.I\xC3hrt\t\rrenheit\x90\x1Cad\x90\x1Dhom\x90\x1Euid-ounce\x90\x1F-imperial\x90 \xC2or\x0F\xC2dt\tcalorie\x90!\x90\"tnight\x90#\xC2nr\x02\x90$long\x90%\xC3-ar\x071force\x90&\xC2ls\x10lon\x90'-imperial\x90(oline-energy-density\x90)a\xC3imy\x03\x05n\x90*\x90+\x90,\xC2eo\x14\xC3cnr\x06\ntare\x90-ry\x90.tz\x90/\xC2ru\tsepower\x900r\x901\xC2nt\x04ch\x902em\x903\xC2io\x06gger\x904\xC2-u\x04jp\x905le\x906\xC5aeino\x0C\x17'+\xC2rt\x04at\x907al\x908\xC2ln\x05vin\x909\x90:logram\x90;-force\x90<ot\x90=\xC2ks\x03u\x90>aji\x90?\xC2iu\x1A\xC2gt\x12ht-\xC2sy\x06peed\x90@ear\x90Aer\x90B\xC2mx\x04en\x90C\x90D\xC3eio\x05 ter\x90E\xC2ln\x12e\x90F-scandinavian\x90Gute\x90H\xC2ln\x03e\x90Ith\x90J-person\x90K\xC3aei\r\x13utical-mile\x90Lwton\x90Mght\x90N\xC4fhsu\x0F\x12\x17\xC2gh\x08lucose\x90Og\x90Pm\x90Qaji\x90Rnce\x90S-troy\x90T\xC4aeio\x0E.T\xC2rs\x05sec\x90Ucal\x90Vr\xC2cm\x05ent\x90W\xC2iy\x0Cll\xC2ei\x02\x90Xon\x90Yriad\x90Z\xC2nx\x1E\xC2ct\x03h\x90[\x90\\-\xC2im\tmperial\x90]etric\x90^el\x90_\xC3iru\x04\nnt\x90`tion\x90and\x90b-force\x90cuart\x90d\xC2-e\nimperial\x90er\x90f\xC4aeio\x0F\x19#\xC2dn\x05ian\x90gkine\x90hvolution\x90i\xC2-n\x04jp\x90j\x90kd\x90l\xC8aehilotu\x03\x10'6:[ki\x90m\xC2-c\x04jp\x90nond\x90oaku\x90p-\xC2cl\x06loth\x90qength\x90re\xC2mv\x05ens\x90sert\x90tug\x90ular-\xC3lmr\x0B\x10uminosity\x90vass\x90wadius\x90x\xC2eo\x08radian\x90yne\x90zn\x90{\xC4aeho\n\x19!blespoon\x90|\xC2as\x07spoon\x90}la\x90~erm-us\x90\x7F\xC2-n\x04jp\x91\0\x91\x01ne\x91\x02olt\x91\x03\xC2ae\x04tt\x91\x04\xC2be\x04er\x91\x05k\x91\x06-person\x91\x07\xC2ae\x04rd\x91\x08ar\x91\t-person\x91\n") } }, convert_infos: unsafe { zerovec::vecs::VarZeroVec16::from_bytes_unchecked(b"\x9B\0\x16\0/\0C\0X\0n\0\x86\0\xA6\0\xC6\0\xE2\0\xFB\0\x0F\x01#\x01H\x01m\x01\x82\x01\x9F\x01\xB3\x01\xD2\x01\xF2\x01\x06\x02\x1B\x020\x02D\x02Z\x02p\x02\x89\x02\xA5\x02\xBA\x02\xCF\x02\xF6\x02\x0C\x03\"\x036\x03K\x03g\x03\x81\x03\x95\x03\xB1\x03\xCE\x03\xE3\x03\x01\x04\x17\x04A\x04U\x04j\x04\x8D\x04\xA3\x04\xBF\x04\xD9\x04\xF8\x04\x0E\x05$\x059\x05N\x05j\x05\x85\x05\x9E\x05\xC6\x05\xE0\x05\xF5\x05\x0E\x06#\x06F\x06_\x06\x88\x06\x9D\x06\xB2\x06\xC6\x06\xE2\x06\xF6\x06\x14\x07(\x07J\x07^\x07r\x07\x86\x07\xA7\x07\xC2\x07\xD8\x07\xEE\x07\n\x08$\x089\x08W\x08p\x08\x84\x08\x9A\x08\xAF\x08\xC3\x08\xE0\x08\xF4\x08\x08\t\x1D\t;\tO\tv\t\x9A\t\xBD\t\xD3\t\xED\t\x06\n'\nE\nY\nn\n\x84\n\x99\n\xB6\n\xD1\n\xEA\n\xFF\n\x13\x0B)\x0B=\x0BW\x0B\x7F\x0B\x9A\x0B\xB3\x0B\xC7\x0B\xE1\x0B\xF5\x0B\t\x0C\x1E\x0C3\x0CI\x0Ca\x0Cv\x0C\x8A\x0C\xA2\x0C\xB6\x0C\xCA\x0C\xED\x0C\x06\r#\rL\rl\r\x83\r\xA4\r\xBE\r\xD3\r\xEF\r\x0B\x0E)\x0EJ\x0Ea\x0Ey\x0E\x8E\x0E\xB1\x0E\xCF\x0E\xF2\x0E\x08\x0F\x1E\x0F4\x0FH\x0F\0\0\0\x05\0\x08\0\t\0\n\0\x01\0\0U\0\xA0\x86\x01\x01\0\x01\0\0\0\x05\0\t\0\x0C\0\r\0\x02\0\0U\0\x92:\xD8\x12-1\x01\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0\x02\0\x01\x01\0\x01\0\0\0\x05\0\x06\0\x08\0\t\0\x01\0\0y\0\x01`T\0\x01\0\0\0\x05\0\x06\0\t\0\n\0\x01\0\0y\0\x01\x80\xC6\x13\0\x01\0\0\0\x05\0\n\0\x0B\0\x0C\0\x01\0\0U\0lZ\xBA\xD4\"\x01\0\x01\0\0\0\x0F\0\x12\0\x13\0\x14\0\x01\0\0K\0\xFF\0\0U\0\xFE\0\0\x7F\0\xCD\x8B\x01\x01\0\x01\0\0\0\x0F\0\x12\0\x13\0\x14\0\x01\0\0K\0\xFF\0\0U\0\xFE\0\0\x7F\0\xA0\x86\x01\x01\0\x01\0\0\0\x05\0\n\0\x0F\0\x10\0\x03\0\0U\0\x8D\x19FP\x02\0QJ\x8D\x0E\0\x01\0\0\0\n\0\x0B\0\x0C\0\r\0\x01\0\0U\0\xFF\0\0\x7F\0\x01\x01\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\xFF\0\0\x7F\0\x01\x01\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0\x0B\0\x01\x01\0\x01\0\0\0\x0F\0\x14\0\x18\0\x19\0\x01\0\0K\0\x02\0\0U\0\xFE\0\0\x7F\0\xB7o\xFE\x85\x05\xA0RW\x01\0\x01\0\0\0\x0F\0\x14\0\x18\0\x19\0\x01\0\0K\0\x02\0\0U\0\xFE\0\0\x7F\x007\xBCOH\x0C\x80\xF0\xFA\x02\0\x01\0\0\0\x05\0\x07\0\x08\0\t\0\x02\0\0U\0\x90\x01y\0\x01\0\0\0\x05\0\n\0\x10\0\x11\0\x03\0\0U\0\x7F\x9D\x93G3\0\xA4\x071\xAF\x05\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0\x0B\0\x08\x01\0\x01\0\0\0\x0F\0\x11\0\x12\0\x13\0\x01\0\0K\0\x02\0\0U\0\xFE\0\0\x7F\0\x0B\x02}\0\x01\0\0\0\x0F\0\x11\0\x13\0\x14\0\x01\0\0K\0\x02\0\0U\0\xFE\0\0\x7F\0\xE3(\xC4\t\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0\x13\0\x01\x01\0\x01\0\0\0\x05\0\x06\0\x08\0\t\0\x01\0\0K\0\x01\x88\x13\0\x01\0\0\0\x05\0\x06\0\x07\0\t\0\x01\0\0I\0\x01\x01W\x15\x14\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0\x99\0d\x01\0\x01\0\0\0\x05\0\x07\0\t\0\n\0\x01\0\0U\0\x1D1q\x02\0\x01\0\0\0\x05\0\x08\0\t\0\n\0\x02\0\0U\0\x80O\x12y\0\x01\0\0\0\n\0\x0B\0\x0C\0\r\0\x01\0\0\x7F\0\x01\0\0\x02\0\x01\x01\0\x01\0\0\0\x05\0\t\0\x0F\0\x10\0\x03\0\0U\0\x99\x194\x1C\0 J\xA9\xD1\x01\0\x01\0\0\0\x05\0\x06\0\x08\0\t\0\x03\0\0U\0\x01\x10'\0\x01\0\0\0\x05\0\x06\0\x08\0\t\0\x03\0\0U\0\x01\xA0\x0F\0\x01\0\0\x01\x05\0\n\0\x1A\0\x1B\0\x01\0\0K\0\x0B\x1A\x95\xA9&\0\0\0\0@\"\x8A\tz\xC4\x86Z\xA8L;K\0\x01\0\0\0\x05\0\x08\0\t\0\n\0\x01\0\0\x7F\0\x80Q\x01\x01\0\x01\0\0\0\x05\0\x08\0\t\0\n\0\x01\0\0\x7F\0\x80Q\x01\x01\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0\x99\0\n\x01\0\x01\0\0\0\x05\0\x06\0\x08\0\t\0\x01\0\0y\0\x01h\x01\0\x01\0\0\0\x05\0\t\0\x0F\0\x10\0\x03\0\0U\0\x99\x194\x1C\0\0\x10\xA5\xD4\xE8\0\x01\0\0\0\x05\0\x08\0\r\0\x0E\0\x03\0\0U\0\xD1\xEF\x06\0\0\x08\xAF/\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0o\0\x01\x01\0\x01\0\0\0\x05\0\t\0\x0F\0\x10\0\x03\0\0U\0\x99\x194\x1C\0\0\x88Rjt\0\x01\0\0\0\x05\0\t\0\x10\0\x11\0\x03\0\0U\x003\xB3f\t\0\0\xC0\xBC\xF7\xE9\n\0\x01\0\0\0\x05\0\x07\0\x08\0\t\0\x02\0\0U\0\xE8\x03\x01\0\x01\0\0\0\x05\0\x10\0\x11\0\x12\0\x01\0\0K\0\0\0\xA02H\x88X\x9C\xA9\xF0\x04\x01\0\x01\0\0\0\x05\0\x08\0\t\0\n\0\x01\0\0U\0tRa\x01\0\x01\0\0\0\x0F\0\x12\0\x1D\0\x1E\0\x01\0\0K\0\x02\0\0U\0\xFE\0\0\x7F\0\x81r\x18\0\0\0JH\x01\x14\x16\x95E\x08\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0+\0\x01\x01\0\x01\0\0\0\x05\0\x06\0\x07\0\t\0\x01\0\0I\0\x05\t\x8F\xB3\xB4\0\0\0\x14\0\x15\0\x16\0\x17\0\x04\0\0\x7F\0\x02\0\0\x02\0\xFF\0\0K\0\xFE\0\0U\0\x01\x01\0\x01\0\0\0\x05\0\x07\0\t\0\n\0\x01\0\0U\0w\x04q\x02\0\x01\0\0\0\x05\0\t\0\x0F\0\x10\0\x03\0\0U\0\x99\x194\x1C\0\0QJ\x8D\x0E\0\x01\0\0\0\x05\0\x08\0\r\0\x0E\0\x03\0\0U\0\xD1\xEF\x06\0\xA0\xAC\xB9\x03\0\x01\0\0\0\x0F\0\x11\0\x12\0\x13\0\x01\0\0K\0\x02\0\0U\0\xFE\0\0\x7F\0X\x10\x01\0\x01\0\0\0\x05\0\x07\0\t\0\n\0\x01\0\0U\0}\x01\xE2\x04\0\x01\0\0\0\x05\0\x08\0\t\0\n\0\x01\0\0\x7F\0\0u\x12\x01\0\x01\0\0\0\x05\0\x06\0\x08\0\t\0\x01\0\0K\0\x03@\x1F\0\x01\0\0\0\x05\0\x07\0\x08\0\t\0\x01\0\0U\0:b}\0\x01\0\0\0\n\0\r\0\x0F\0\x10\0\x01\0\0U\0\xFE\0\0\x7F\0%\xFE\x02 N\0\x01\0\0\0\x05\0\t\0\x0E\0\x0F\0\x03\0\0U\0\x99\x194\x1C\0\xA2\x94\x1A\x1D\0\x01\0\0\0\x05\0\x08\0\x0C\0\r\0\x03\0\0U\0\xD1\xEF\x06\0\xE1\xF5\x05\0\x01\0\0\0\x0F\0\x17\0\x1B\0\x1C\0\x01\0\0K\0\xFF\0\0U\0\xFE\0\0\x7F\0\0\xA0\x06a\x8C\xF2\x05\nu\xD0W\x01\0\x01\0\0\0\x05\0\x08\0\r\0\x0E\0\x01\0\0K\0\x13\xE0b\0\xE8vH\x17\0\x01\0\0\0\x05\0\x06\0\x08\0\t\0\x01\0\0K\0\x01\xE8\x03\0\x01\0\0\0\n\0\x0B\0\x0C\0\r\0\x02\0\0U\0\xFE\0\0\x7F\0\x01\x01\0\x01\0\0\0\x05\0\x07\0\x08\0\t\0\x02\0\0U\0\x10'\x01\0\x01\0\0\0\x14\0\x15\0\x16\0\x17\0\x01\0\0K\0\x02\0\0U\0\xFE\0\0\x7F\0\xFE\0\0\x02\0\x01\x01\0\x01\0\0\0\n\0\x0B\0\x0C\0\r\0\x01\0\0y\0\xFF\0\0\x7F\0\x01\x01\0\x01\0\0\0\x0F\0\x16\0\x1C\0\x1D\0\x01\0\0K\0\x02\0\0U\0\xFD\0\0\x7F\0'\\\xBC\r\x81v\x84\0 =\x88y-\0\x01\0\0\0\x05\0\x07\0\x08\0\t\0\x01\0\0\x7F\0\x10\x0E\x01\0\x01\0\0\0\x05\0\x06\0\x08\0\t\0\x01\0\0U\0\x7F\x88\x13\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0C\0\x01\x01\0\x01\0\0\0\x05\0\t\0\x0F\0\x10\0\x03\0\0U\0\xCBL\x9CT\0\0\xA2\x94\x1A\x1D\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0U\0(y\0\x01\0\0\0\x0F\0\x10\0\x11\0\x12\0\x01\0\0K\0\x02\0\0U\0\xFE\0\0\x7F\0\x01\x01\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0q\0\x01\x18\0\x01\0\0\0\n\0\x14\0\x15\0\x16\0\x01\0\0C\0\xFF\0\0\x7F\0\0\0\xC6\\\x14_)\x17\x86\x7F\x01\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0I\0\x01\x01\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0U\0\x18y\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0K\0\x01\x01\0\x01\0\0\0\x0F\0\x12\0\x14\0\x15\0\x01\0\0K\0\x01\0\0U\0\xFE\0\0\x7F\0%\xFE\x02 N\0\x01\0\0\0\n\0\x0C\0\x0E\0\x0F\0\x01\0\0U\0\xFF\0\0\x7F\0\xCF\x01\x84\x03\0\x01\0\0\0\x05\0\x07\0\t\0\n\0\x03\0\0U\0a\t\xFE3\0\x01\0\0\0\x05\0\x06\0\t\0\n\0\x03\0\0U\0\x01@\r\x03\0\x01\0\0\0\n\0\x0E\0\x0F\0\x10\0\x01\0\0U\0\xFF\0\0\x7F\0Jx\xDE\x11\x01\0\x01\0\0\0\x05\0\x0C\0\r\0\x0E\0\x01\0\0U\0\xC0F\"\xF7{\x9C!\x01\0\x01\0\0\0\x05\0\x06\0\x08\0\t\0\x03\0\0U\0\x01\xE8\x03\0\x01\0\0\0\x0F\0\x10\0\x11\0\x12\0\x01\0\0\x13\0\x02\0\0U\0\xFE\0\0U\0\x01\x01\0\x01\0\0\0\n\0\x0B\0\x0C\0\r\0\x01\0\0\x13\0\xFE\0\0U\0\x01\x01\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0U\0\x01\x01\0\x01\0\0\0\x05\0\x08\0\t\0\n\0\x01\0\0U\0\xD0\x11\x03}\0\x01\0\0\0\x05\0\x07\0\x08\0\t\0\x01\0\0U\0\x10'\x01\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0\x7F\0<\x01\0\x01\0\0\0\x05\0\x0F\0\x10\0\x11\0\x01\0\0C\0\0\0\xC6\\\x14_)\x17\x86\x7F\x01\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0\x99\0\x01\x0C\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0\x99\0\x01\x0C\0\x01\0\0\0\x05\0\x07\0\x08\0\t\0\x01\0\0U\0<\x07\x01\0\x01\0\0\0\x0F\0\x10\0\x11\0\x12\0\x01\0\0K\0\x01\0\0U\0\xFE\0\0\x7F\0\x01\x01\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0^\0\x01\x01\0\x01\0\0\0\n\0\x17\0\x1A\0\x1B\0\x01\0\0C\0\xFF\0\0K\0\0\0\0g\x1A\x8E|F.\x15\x96\x02LU}\x1B\0\x01\0\0\0\x0F\0\x14\0\x17\0\x18\0\x01\0\0K\0\xFE\0\0U\0\xFE\0\0\x7F\0+\xA3S5\x06@\r\x03\0\x01\0\0\0\x14\0\x15\0\x16\0\x17\0\x01\0\0K\0\x02\0\0U\0\xFD\0\0\x7F\0\xFE\0\0\x02\0\x01\x01\0\x01\0\0\0\x05\0\x06\0\t\0\n\0\x03\0\0U\0\x03@\r\x03\0\x01\0\0\0\x05\0\t\0\r\0\x0E\0\x01\0\0K\0\x85 \xB4\x02\0\x10^_\0\x01\0\0\0\x05\0\x08\0\x0C\0\r\0\x01\0\0K\0s\xDD\x0B@x}\x01\0\x01\0\0\x01\x05\0\x10\0\x14\0\x15\0\x01\0\0U\0\0\xA0\xF1\xE1;\xB0\xD7G1\x81\nc\xE0\x87\x18\0\x01\0\0\0\x0F\0\x10\0\x11\0\x12\0\x01\0\0K\0\xFF\0\0U\0\xFE\0\0\x7F\0\x01\x01\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0q\0\x01d\0\x01\0\0\0\x05\0\x06\0\x08\0\t\0\x01\0\0q\0\x01\xE8\x03\0\x01\0\0\0\x05\0\x06\0\t\0\n\0\x01\0\0q\0\x01@B\x0F\0\x01\0\0\0\x05\0\x06\0\x08\0\t\0\x01\0\0q\0\x01\x10'\0\x01\0\0\0\x05\0\t\0\x10\0\x11\0\x03\0\0U\0\x99\x194\x1C\0\0\x80(\xA5F\x07\0\x01\0\0\0\x05\0\t\0\x0E\0\x0F\0\x03\0\0U\0\x99\x194\x1C\0\x10\xA5\xD4\xE8\0\x01\0\0\0\x05\0\x08\0\x0C\0\r\0\x03\0\0U\0\xD1\xEF\x06\0\x08\xAF/\0\x01\0\0\0\x05\0\x06\0\x08\0\t\0\x03\0\0U\0\x01\xD0\x07\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0o\0\x01\x01\0\x01\0\0\0\x05\0\x06\0\t\0\n\0\x01\0\0U\0\x7F@~\x05\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0q\0\x01\x01\0\x01\0\0\0\x05\0\t\0\r\0\x0E\0\x01\0\0K\0\x85 \xB4\x02\0\xE1\xF5\x05\0\x01\0\0\0\x0F\0\x15\0\x1B\0\x1C\0\x01\0\0K\0\x01\0\0U\0\xFE\0\0\x7F\09\xA9V]\x17\x08\0 J\xA9\xD1\x01\0\x01\0\0\0\x05\0\t\0\x0E\0\x0F\0\x03\0\0U\0\x99\x194\x1C\0\x88Rjt\0\x01\0\0\0\x05\0\x08\0\x0C\0\r\0\x03\0\0U\0\xD1\xEF\x06\0\x84\xD7\x17\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0\x99\0\x01\x04\0\x01\0\0\x01\x05\0\t\0\r\0\x0E\0\x01\0\0y\x000y\xE7\x03c\xE0\x87\x18\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0I\0\x05\t\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0y\0\x01\x01\0\x01\0\0\0\x05\0\x07\0\x08\0\t\0\x01\0\0U\0\x80\xCAy\0\x01\0\0\0\x05\0\x06\0\x08\0\t\0\x01\0\0U\0\x01*v\0\x01\0\0\0\x05\0\x07\0\t\0\n\0\x01\0\0U\0\x1D1\xC4\t\0\x01\0\0\0\x05\0\x07\0\x0B\0\x0C\0\x03\0\0U\0a\t\xC0rUO\0\x01\0\0\0\x05\0\x07\0\x08\0\t\0\x02\0\0U\0\xE0.y\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0\x7F\0\x01\x01\0\x01\0\0\0\x05\0\x07\0\x0B\0\x0C\0\x03\0\0U\0a\t\xE0\xF1\xEE\x07\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0U\0\x05y\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0U\0\x04y\0\x01\0\0\0\x14\0\x15\0\x16\0\x17\0\x03\0\0\x7F\0\x02\0\0\x02\0\xFF\0\0K\0\xFE\0\0U\0\x01\x01\0\x01\0\0\0\n\0\x0B\0\x0C\0\r\0\x02\0\0U\0\xFE\0\0\x7F\0\x01\x01\0\x01\0\0\0\x05\0\x0B\0\x10\0\x11\0\x01\0\0K\09\xA9V]\x17\x08\0\xD0\xFD\xEE\x8D\0\x01\0\0\0\x0F\0\x1B\0\x1C\0\x1D\0\x01\0\0K\0\x02\0\0U\0\xFD\0\0\x7F\0\0\0\0\xF2\xED\xD4\xD4\x94\r\xA5<\x01\x01\0\x01\0\0\0\x05\0\x12\0\x13\0\x14\0\x01\0\0K\0\0\0\x006?\x15\xD0\x1C(\xD5\x17\x19\x19\x01\0\x01\0\0\0\x05\0\t\0\n\0\x0B\0\x01\0\0U\0 \x8Aw)\x01\0\x01\0\0\x01\x05\0\x0C\0\x14\0\x15\0\x02\0\0y\0\0i\xFE\r#>\x0FIf\x17\xFD0\xC2Y\x02\0\x01\0\0\0\x05\0\t\0\r\0\x0E\0\x01\0\0K\0\xA3\xE3\xEC\x12\x80\xF0\xFA\x02\0\x01\0\0\0\x05\0\x06\0\x08\0\t\0\x01\0\0U\0\x02]\x02\0\x01\0\0\0\x05\0\t\0\x0F\0\x10\0\x03\0\0U\0\x99\x194\x1C\0\0\xA2\x94\x1A\x1D\0\x01\0\0\0\x05\0\t\0\x0F\0\x10\0\x03\0\0U\x003\xB3f\t\0\0\xA2\x94\x1A\x1D\0\x01\0\0\0\x0F\0\x10\0\x11\0\x12\0\x01\0\0K\0\xFE\0\0\x7F\0\xFF\0\0\x02\0\x01\x01\0\x01\0\0\0\x0F\0\x13\0\x14\0\x15\0\x01\0\0K\0\x02\0\0U\0\xFE\0\0\x7F\0\xD0\x80I\x06\x01\0\x01\0\0\0\x05\0\x07\0\n\0\x0B\0\x03\0\0U\0a\t\xEC\x07\x02\0\x01\0\0\0\x05\0\t\0\x0B\0\x0C\0\x01\0\0K\0\x85 \xB4\x02P\xC3\0\x01\0\0\0\x05\0\x07\0\x08\0\t\0\x01\0\0K\0\xE8\x03\x01\0\x01\0\0\0\x14\0\x15\0\x16\0\x17\0\x01\0\0K\0\x02\0\0U\0\xFD\0\0\x7F\0\xFF\0\0\x02\0\x01\x01\0\x01\0\0\0\x0F\0\x10\0\x11\0\x12\0\x01\0\0K\0\x02\0\0U\0\xFD\0\0\x7F\0\x01\x01\0\x01\0\0\0\x14\0\x15\0\x16\0\x17\0\x01\0\0K\0\x02\0\0U\0\xFE\0\0\x7F\0\xFF\0\0\x02\0\x01\x01\0\x01\0\0\0\x05\0\x08\0\t\0\n\0\x01\0\0\x7F\0\x80:\t\x01\0\x01\0\0\0\x05\0\x08\0\t\0\n\0\x01\0\0\x7F\0\x80:\t\x01\0\x01\0\0\0\x05\0\x07\0\t\0\n\0\x01\0\0U\0w\x04\xE2\x04\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0\x99\0\x01\x01\0\x01\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0\x99\0\x01\x01\0\x01") } };
        }
        #[clippy::msrv = "1.71.1"]
        impl icu_provider::DataProvider<icu::experimental::units::provider::UnitsInfoV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::experimental::units::provider::UnitsInfoV1Marker>, icu_provider::DataError> {
                if req.id.locale.is_default() {
                    Ok(icu_provider::DataResponse { payload: icu_provider::DataPayload::from_static_ref(Self::SINGLETON_UNITS_INFO_V1_MARKER), metadata: Default::default() })
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::experimental::units::provider::UnitsInfoV1Marker as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
    };
    ($ provider : ty , ITER) => {
        __impl_units_info_v1_marker!($provider);
        #[clippy::msrv = "1.71.1"]
        impl icu_provider::IterableDataProvider<icu::experimental::units::provider::UnitsInfoV1Marker> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BtreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok([Default::default()].into_iter().collect())
            }
        }
    };
    ($ provider : ty , DRY) => {
        __impl_units_info_v1_marker!($provider);
        #[clippy::msrv = "1.71.1"]
        impl icu_provider::DryDataProvider<icu::experimental::units::provider::UnitsInfoV1Marker> for $provider {
            fn dry_load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponseMetadata, icu_provider::DataError> {
                if req.id.locale.is_default() {
                    Ok(Default::default())
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::experimental::units::provider::UnitsInfoV1Marker as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
    };
    ($ provider : ty , DRY , ITER) => {
        __impl_units_info_v1_marker!($provider);
        #[clippy::msrv = "1.71.1"]
        impl icu_provider::DryDataProvider<icu::experimental::units::provider::UnitsInfoV1Marker> for $provider {
            fn dry_load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponseMetadata, icu_provider::DataError> {
                if req.id.locale.is_default() {
                    Ok(Default::default())
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::experimental::units::provider::UnitsInfoV1Marker as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
        #[clippy::msrv = "1.71.1"]
        impl icu_provider::IterableDataProvider<icu::experimental::units::provider::UnitsInfoV1Marker> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BtreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok([Default::default()].into_iter().collect())
            }
        }
    };
}
#[doc(inline)]
pub use __impl_units_info_v1_marker as impl_units_info_v1_marker;
