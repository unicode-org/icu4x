// @generated
/// Implement `DataProvider<UnitsInfoV1>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
///
/// Using this implementation will embed the following data in the binary's data segment:
/// * 4576B[^1] for the singleton data struct
///
/// [^1]: these numbers can be smaller in practice due to linker deduplication
///
/// This macro requires the following crates:
/// * `icu`
/// * `icu_provider`
/// * `zerovec`
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_units_info_v1 {
    ($ provider : ty) => {
        #[clippy::msrv = "1.82"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.82"]
        impl $provider {
            #[doc(hidden)]
            pub const SINGLETON_UNITS_INFO_V1: &'static <icu::experimental::units::provider::UnitsInfoV1 as icu_provider::DynamicDataMarker>::DataStruct = &icu::experimental::units::provider::UnitsInfo { conversion_info: unsafe { zerovec::vecs::VarZeroVec16::from_bytes_unchecked(b"\x9B\0\x18\x003\0I\0`\0x\0\x92\0\xB4\0\xD6\0\xF4\0\x0F\x01%\x01;\x01b\x01\x89\x01\xA0\x01\xBF\x01\xD5\x01\xF6\x01\x18\x02.\x02E\x02\\\x02r\x02\x8A\x02\xA2\x02\xBD\x02\xDB\x02\xF2\x02\t\x032\x03J\x03b\x03x\x03\x8F\x03\xAD\x03\xC9\x03\xDF\x03\xFD\x03\x1C\x043\x04S\x04k\x04\x97\x04\xAD\x04\xC4\x04\xE9\x04\x01\x05\x1F\x05;\x05\\\x05t\x05\x8C\x05\xA3\x05\xBA\x05\xD8\x05\xF5\x05\x10\x06:\x06V\x06m\x06\x88\x06\x9F\x06\xC4\x06\xDF\x06\n\x07!\x078\x07N\x07l\x07\x82\x07\xA2\x07\xB8\x07\xDC\x07\xF2\x07\x08\x08\x1E\x08A\x08^\x08v\x08\x8E\x08\xAC\x08\xC8\x08\xDF\x08\xFF\x08\x1A\t0\tH\t_\tu\t\x94\t\xAA\t\xC0\t\xD7\t\xF7\t\r\n6\n\\\n\x81\n\x99\n\xB5\n\xD0\n\xF3\n\x13\x0B)\x0B@\x0BX\x0Bo\x0B\x8E\x0B\xAB\x0B\xC6\x0B\xDD\x0B\xF3\x0B\x0B\x0C!\x0C=\x0Cg\x0C\x84\x0C\x9F\x0C\xB5\x0C\xD1\x0C\xE7\x0C\xFD\x0C\x14\r+\rC\r]\rt\r\x8A\r\xA4\r\xBA\r\xD0\r\xF5\r\x10\x0E/\x0EZ\x0E|\x0E\x95\x0E\xB8\x0E\xD4\x0E\xEB\x0E\t\x0F'\x0FG\x0Fj\x0F\x83\x0F\x9D\x0F\xB4\x0F\xD9\x0F\xF9\x0F\x1E\x106\x10N\x10f\x10|\x10\0\0\0\0\0\x05\0\x08\0\t\0\n\0\x01\0\0U\0\xA0\x86\x01\x01\0\x01\x01\0\0\0\0\x05\0\t\0\x0C\0\r\0\x02\0\0U\0\x92:\xD8\x12-1\x01\0\x01\x02\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0\x02\0\x01\x01\0\x01\x03\0\0\0\0\x05\0\x06\0\x08\0\t\0\x01\0\0y\0\x01`T\0\x01\x04\0\0\0\0\x05\0\x06\0\t\0\n\0\x01\0\0y\0\x01\x80\xC6\x13\0\x01\x05\0\0\0\0\x05\0\n\0\x0B\0\x0C\0\x01\0\0U\0lZ\xBA\xD4\"\x01\0\x01\x06\0\0\0\0\x0F\0\x12\0\x13\0\x14\0\x01\0\0K\0\xFF\0\0U\0\xFE\0\0\x7F\0\xCD\x8B\x01\x01\0\x01\x07\0\0\0\0\x0F\0\x12\0\x13\0\x14\0\x01\0\0K\0\xFF\0\0U\0\xFE\0\0\x7F\0\xA0\x86\x01\x01\0\x01\x08\0\0\0\0\x05\0\n\0\x0F\0\x10\0\x03\0\0U\0\x8D\x19FP\x02\0QJ\x8D\x0E\0\x01\t\0\0\0\0\n\0\x0B\0\x0C\0\r\0\x01\0\0U\0\xFF\0\0\x7F\0\x01\x01\0\x01\n\0\0\0\0\x05\0\x06\0\x07\0\x08\0\xFF\0\0\x7F\0\x01\x01\0\x01\x0B\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0\x0B\0\x01\x01\0\x01\x0C\0\0\0\0\x0F\0\x14\0\x18\0\x19\0\x01\0\0K\0\x02\0\0U\0\xFE\0\0\x7F\0\xB7o\xFE\x85\x05\xA0RW\x01\0\x01\r\0\0\0\0\x0F\0\x14\0\x18\0\x19\0\x01\0\0K\0\x02\0\0U\0\xFE\0\0\x7F\x007\xBCOH\x0C\x80\xF0\xFA\x02\0\x01\x0E\0\0\0\0\x05\0\x07\0\x08\0\t\0\x02\0\0U\0\x90\x01y\0\x01\x0F\0\0\0\0\x05\0\n\0\x10\0\x11\0\x03\0\0U\0\x7F\x9D\x93G3\0\xA4\x071\xAF\x05\0\x01\x10\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0\x0B\0\x08\x01\0\x01\x11\0\0\0\0\x0F\0\x11\0\x12\0\x13\0\x01\0\0K\0\x02\0\0U\0\xFE\0\0\x7F\0\x0B\x02}\0\x01\x12\0\0\0\0\x0F\0\x11\0\x13\0\x14\0\x01\0\0K\0\x02\0\0U\0\xFE\0\0\x7F\0\xE3(\xC4\t\0\x01\x13\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0\x13\0\x01\x01\0\x01\x14\0\0\0\0\x05\0\x06\0\x08\0\t\0\x01\0\0K\0\x01\x88\x13\0\x01\x15\0\0\0\0\x05\0\x06\0\x07\0\t\0\x01\0\0I\0\x01\x01W\x15\x14\x16\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0\x99\0d\x01\0\x01\x17\0\0\0\0\x05\0\x07\0\t\0\n\0\x01\0\0U\0\x1D1q\x02\0\x01\x18\0\0\0\0\x05\0\x08\0\t\0\n\0\x02\0\0U\0\x80O\x12y\0\x01\x19\0\0\0\0\n\0\x0B\0\x0C\0\r\0\x01\0\0\x7F\0\x01\0\0\x02\0\x01\x01\0\x01\x1A\0\0\0\0\x05\0\t\0\x0F\0\x10\0\x03\0\0U\0\x99\x194\x1C\0 J\xA9\xD1\x01\0\x01\x1B\0\0\0\0\x05\0\x06\0\x08\0\t\0\x03\0\0U\0\x01\x10'\0\x01\x1C\0\0\0\0\x05\0\x06\0\x08\0\t\0\x03\0\0U\0\x01\xA0\x0F\0\x01\x1D\0\0\0\x01\x05\0\n\0\x1A\0\x1B\0\x01\0\0K\0\x0B\x1A\x95\xA9&\0\0\0\0@\"\x8A\tz\xC4\x86Z\xA8L;K\0\x01\x1E\0\0\0\0\x05\0\x08\0\t\0\n\0\x01\0\0\x7F\0\x80Q\x01\x01\0\x01\x1F\0\0\0\0\x05\0\x08\0\t\0\n\0\x01\0\0\x7F\0\x80Q\x01\x01\0\x01 \0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0\x99\0\n\x01\0\x01!\0\0\0\0\x05\0\x06\0\x08\0\t\0\x01\0\0y\0\x01h\x01\0\x01\"\0\0\0\0\x05\0\t\0\x0F\0\x10\0\x03\0\0U\0\x99\x194\x1C\0\0\x10\xA5\xD4\xE8\0\x01#\0\0\0\0\x05\0\x08\0\r\0\x0E\0\x03\0\0U\0\xD1\xEF\x06\0\0\x08\xAF/\0\x01$\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0o\0\x01\x01\0\x01%\0\0\0\0\x05\0\t\0\x0F\0\x10\0\x03\0\0U\0\x99\x194\x1C\0\0\x88Rjt\0\x01&\0\0\0\0\x05\0\t\0\x10\0\x11\0\x03\0\0U\x003\xB3f\t\0\0\xC0\xBC\xF7\xE9\n\0\x01'\0\0\0\0\x05\0\x07\0\x08\0\t\0\x02\0\0U\0\xE8\x03\x01\0\x01(\0\0\0\0\x05\0\x10\0\x11\0\x12\0\x01\0\0K\0\0\0\xA02H\x88X\x9C\xA9\xF0\x04\x01\0\x01)\0\0\0\0\x05\0\x08\0\t\0\n\0\x01\0\0U\0tRa\x01\0\x01*\0\0\0\0\x0F\0\x12\0\x1D\0\x1E\0\x01\0\0K\0\x02\0\0U\0\xFE\0\0\x7F\0\x81r\x18\0\0\0JH\x01\x14\x16\x95E\x08\0\x01+\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0+\0\x01\x01\0\x01,\0\0\0\0\x05\0\x06\0\x07\0\t\0\x01\0\0I\0\x05\t\x8F\xB3\xB4-\0\0\0\0\x14\0\x15\0\x16\0\x17\0\x04\0\0\x7F\0\x02\0\0\x02\0\xFF\0\0K\0\xFE\0\0U\0\x01\x01\0\x01.\0\0\0\0\x05\0\x07\0\t\0\n\0\x01\0\0U\0w\x04q\x02\0\x01/\0\0\0\0\x05\0\t\0\x0F\0\x10\0\x03\0\0U\0\x99\x194\x1C\0\0QJ\x8D\x0E\0\x010\0\0\0\0\x05\0\x08\0\r\0\x0E\0\x03\0\0U\0\xD1\xEF\x06\0\xA0\xAC\xB9\x03\0\x011\0\0\0\0\x0F\0\x11\0\x12\0\x13\0\x01\0\0K\0\x02\0\0U\0\xFE\0\0\x7F\0X\x10\x01\0\x012\0\0\0\0\x05\0\x07\0\t\0\n\0\x01\0\0U\0}\x01\xE2\x04\0\x013\0\0\0\0\x05\0\x08\0\t\0\n\0\x01\0\0\x7F\0\0u\x12\x01\0\x014\0\0\0\0\x05\0\x06\0\x08\0\t\0\x01\0\0K\0\x03@\x1F\0\x015\0\0\0\0\x05\0\x07\0\x08\0\t\0\x01\0\0U\0:b}\0\x016\0\0\0\0\n\0\r\0\x0F\0\x10\0\x01\0\0U\0\xFE\0\0\x7F\0%\xFE\x02 N\0\x017\0\0\0\0\x05\0\t\0\x0E\0\x0F\0\x03\0\0U\0\x99\x194\x1C\0\xA2\x94\x1A\x1D\0\x018\0\0\0\0\x05\0\x08\0\x0C\0\r\0\x03\0\0U\0\xD1\xEF\x06\0\xE1\xF5\x05\0\x019\0\0\0\0\x0F\0\x17\0\x1B\0\x1C\0\x01\0\0K\0\xFF\0\0U\0\xFE\0\0\x7F\0\0\xA0\x06a\x8C\xF2\x05\nu\xD0W\x01\0\x01:\0\0\0\0\x05\0\x08\0\r\0\x0E\0\x01\0\0K\0\x13\xE0b\0\xE8vH\x17\0\x01;\0\0\0\0\x05\0\x06\0\x08\0\t\0\x01\0\0K\0\x01\xE8\x03\0\x01<\0\0\0\0\n\0\x0B\0\x0C\0\r\0\x02\0\0U\0\xFE\0\0\x7F\0\x01\x01\0\x01=\0\0\0\0\x05\0\x07\0\x08\0\t\0\x02\0\0U\0\x10'\x01\0\x01>\0\0\0\0\x14\0\x15\0\x16\0\x17\0\x01\0\0K\0\x02\0\0U\0\xFE\0\0\x7F\0\xFE\0\0\x02\0\x01\x01\0\x01?\0\0\0\0\n\0\x0B\0\x0C\0\r\0\x01\0\0y\0\xFF\0\0\x7F\0\x01\x01\0\x01@\0\0\0\0\x0F\0\x16\0\x1C\0\x1D\0\x01\0\0K\0\x02\0\0U\0\xFD\0\0\x7F\0'\\\xBC\r\x81v\x84\0 =\x88y-\0\x01A\0\0\0\0\x05\0\x07\0\x08\0\t\0\x01\0\0\x7F\0\x10\x0E\x01\0\x01B\0\0\0\0\x05\0\x06\0\x08\0\t\0\x01\0\0U\0\x7F\x88\x13\0\x01C\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0C\0\x01\x01\0\x01D\0\0\0\0\x05\0\t\0\x0F\0\x10\0\x03\0\0U\0\xCBL\x9CT\0\0\xA2\x94\x1A\x1D\0\x01E\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0U\0(y\0\x01F\0\0\0\0\x0F\0\x10\0\x11\0\x12\0\x01\0\0K\0\x02\0\0U\0\xFE\0\0\x7F\0\x01\x01\0\x01G\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0q\0\x01\x18\0\x01H\0\0\0\0\n\0\x14\0\x15\0\x16\0\x01\0\0C\0\xFF\0\0\x7F\0\0\0\xC6\\\x14_)\x17\x86\x7F\x01\0\x01I\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0I\0\x01\x01\0\x01J\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0U\0\x18y\0\x01K\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0K\0\x01\x01\0\x01L\0\0\0\0\x0F\0\x12\0\x14\0\x15\0\x01\0\0K\0\x01\0\0U\0\xFE\0\0\x7F\0%\xFE\x02 N\0\x01M\0\0\0\0\n\0\x0C\0\x0E\0\x0F\0\x01\0\0U\0\xFF\0\0\x7F\0\xCF\x01\x84\x03\0\x01N\0\0\0\0\x05\0\x07\0\t\0\n\0\x03\0\0U\0a\t\xFE3\0\x01O\0\0\0\0\x05\0\x06\0\t\0\n\0\x03\0\0U\0\x01@\r\x03\0\x01P\0\0\0\0\n\0\x0E\0\x0F\0\x10\0\x01\0\0U\0\xFF\0\0\x7F\0Jx\xDE\x11\x01\0\x01Q\0\0\0\0\x05\0\x0C\0\r\0\x0E\0\x01\0\0U\0\xC0F\"\xF7{\x9C!\x01\0\x01R\0\0\0\0\x05\0\x06\0\x08\0\t\0\x03\0\0U\0\x01\xE8\x03\0\x01S\0\0\0\0\x0F\0\x10\0\x11\0\x12\0\x01\0\0\x13\0\x02\0\0U\0\xFE\0\0U\0\x01\x01\0\x01T\0\0\0\0\n\0\x0B\0\x0C\0\r\0\x01\0\0\x13\0\xFE\0\0U\0\x01\x01\0\x01U\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0U\0\x01\x01\0\x01V\0\0\0\0\x05\0\x08\0\t\0\n\0\x01\0\0U\0\xD0\x11\x03}\0\x01W\0\0\0\0\x05\0\x07\0\x08\0\t\0\x01\0\0U\0\x10'\x01\0\x01X\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0\x7F\0<\x01\0\x01Y\0\0\0\0\x05\0\x0F\0\x10\0\x11\0\x01\0\0C\0\0\0\xC6\\\x14_)\x17\x86\x7F\x01\0\x01Z\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0\x99\0\x01\x0C\0\x01[\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0\x99\0\x01\x0C\0\x01\\\0\0\0\0\x05\0\x07\0\x08\0\t\0\x01\0\0U\0<\x07\x01\0\x01]\0\0\0\0\x0F\0\x10\0\x11\0\x12\0\x01\0\0K\0\x01\0\0U\0\xFE\0\0\x7F\0\x01\x01\0\x01^\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0^\0\x01\x01\0\x01_\0\0\0\0\n\0\x17\0\x1A\0\x1B\0\x01\0\0C\0\xFF\0\0K\0\0\0\0g\x1A\x8E|F.\x15\x96\x02LU}\x1B\0\x01`\0\0\0\0\x0F\0\x14\0\x17\0\x18\0\x01\0\0K\0\xFE\0\0U\0\xFE\0\0\x7F\0+\xA3S5\x06@\r\x03\0\x01a\0\0\0\0\x14\0\x15\0\x16\0\x17\0\x01\0\0K\0\x02\0\0U\0\xFD\0\0\x7F\0\xFE\0\0\x02\0\x01\x01\0\x01b\0\0\0\0\x05\0\x06\0\t\0\n\0\x03\0\0U\0\x03@\r\x03\0\x01c\0\0\0\0\x05\0\t\0\r\0\x0E\0\x01\0\0K\0\x85 \xB4\x02\0\x10^_\0\x01d\0\0\0\0\x05\0\x08\0\x0C\0\r\0\x01\0\0K\0s\xDD\x0B@x}\x01\0\x01e\0\0\0\x01\x05\0\x10\0\x14\0\x15\0\x01\0\0U\0\0\xA0\xF1\xE1;\xB0\xD7G1\x81\nc\xE0\x87\x18\0\x01f\0\0\0\0\x0F\0\x10\0\x11\0\x12\0\x01\0\0K\0\xFF\0\0U\0\xFE\0\0\x7F\0\x01\x01\0\x01g\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0q\0\x01d\0\x01h\0\0\0\0\x05\0\x06\0\x08\0\t\0\x01\0\0q\0\x01\xE8\x03\0\x01i\0\0\0\0\x05\0\x06\0\t\0\n\0\x01\0\0q\0\x01@B\x0F\0\x01j\0\0\0\0\x05\0\x06\0\x08\0\t\0\x01\0\0q\0\x01\x10'\0\x01k\0\0\0\0\x05\0\t\0\x10\0\x11\0\x03\0\0U\0\x99\x194\x1C\0\0\x80(\xA5F\x07\0\x01l\0\0\0\0\x05\0\t\0\x0E\0\x0F\0\x03\0\0U\0\x99\x194\x1C\0\x10\xA5\xD4\xE8\0\x01m\0\0\0\0\x05\0\x08\0\x0C\0\r\0\x03\0\0U\0\xD1\xEF\x06\0\x08\xAF/\0\x01n\0\0\0\0\x05\0\x06\0\x08\0\t\0\x03\0\0U\0\x01\xD0\x07\0\x01o\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0o\0\x01\x01\0\x01p\0\0\0\0\x05\0\x06\0\t\0\n\0\x01\0\0U\0\x7F@~\x05\0\x01q\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0q\0\x01\x01\0\x01r\0\0\0\0\x05\0\t\0\r\0\x0E\0\x01\0\0K\0\x85 \xB4\x02\0\xE1\xF5\x05\0\x01s\0\0\0\0\x0F\0\x15\0\x1B\0\x1C\0\x01\0\0K\0\x01\0\0U\0\xFE\0\0\x7F\09\xA9V]\x17\x08\0 J\xA9\xD1\x01\0\x01t\0\0\0\0\x05\0\t\0\x0E\0\x0F\0\x03\0\0U\0\x99\x194\x1C\0\x88Rjt\0\x01u\0\0\0\0\x05\0\x08\0\x0C\0\r\0\x03\0\0U\0\xD1\xEF\x06\0\x84\xD7\x17\0\x01v\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0\x99\0\x01\x04\0\x01w\0\0\0\x01\x05\0\t\0\r\0\x0E\0\x01\0\0y\x000y\xE7\x03c\xE0\x87\x18\0\x01x\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0I\0\x05\t\0\x01y\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0y\0\x01\x01\0\x01z\0\0\0\0\x05\0\x07\0\x08\0\t\0\x01\0\0U\0\x80\xCAy\0\x01{\0\0\0\0\x05\0\x06\0\x08\0\t\0\x01\0\0U\0\x01*v\0\x01|\0\0\0\0\x05\0\x07\0\t\0\n\0\x01\0\0U\0\x1D1\xC4\t\0\x01}\0\0\0\0\x05\0\x07\0\x0B\0\x0C\0\x03\0\0U\0a\t\xC0rUO\0\x01~\0\0\0\0\x05\0\x07\0\x08\0\t\0\x02\0\0U\0\xE0.y\0\x01\x7F\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0\x7F\0\x01\x01\0\x01\x80\0\0\0\0\x05\0\x07\0\x0B\0\x0C\0\x03\0\0U\0a\t\xE0\xF1\xEE\x07\0\x01\x81\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0U\0\x05y\0\x01\x82\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0U\0\x04y\0\x01\x83\0\0\0\0\x14\0\x15\0\x16\0\x17\0\x03\0\0\x7F\0\x02\0\0\x02\0\xFF\0\0K\0\xFE\0\0U\0\x01\x01\0\x01\x84\0\0\0\0\n\0\x0B\0\x0C\0\r\0\x02\0\0U\0\xFE\0\0\x7F\0\x01\x01\0\x01\x85\0\0\0\0\x05\0\x0B\0\x10\0\x11\0\x01\0\0K\09\xA9V]\x17\x08\0\xD0\xFD\xEE\x8D\0\x01\x86\0\0\0\0\x0F\0\x1B\0\x1C\0\x1D\0\x01\0\0K\0\x02\0\0U\0\xFD\0\0\x7F\0\0\0\0\xF2\xED\xD4\xD4\x94\r\xA5<\x01\x01\0\x01\x87\0\0\0\0\x05\0\x12\0\x13\0\x14\0\x01\0\0K\0\0\0\x006?\x15\xD0\x1C(\xD5\x17\x19\x19\x01\0\x01\x88\0\0\0\0\x05\0\t\0\n\0\x0B\0\x01\0\0U\0 \x8Aw)\x01\0\x01\x89\0\0\0\x01\x05\0\x0C\0\x14\0\x15\0\x02\0\0y\0\0i\xFE\r#>\x0FIf\x17\xFD0\xC2Y\x02\0\x01\x8A\0\0\0\0\x05\0\t\0\r\0\x0E\0\x01\0\0K\0\xA3\xE3\xEC\x12\x80\xF0\xFA\x02\0\x01\x8B\0\0\0\0\x05\0\x06\0\x08\0\t\0\x01\0\0U\0\x02]\x02\0\x01\x8C\0\0\0\0\x05\0\t\0\x0F\0\x10\0\x03\0\0U\0\x99\x194\x1C\0\0\xA2\x94\x1A\x1D\0\x01\x8D\0\0\0\0\x05\0\t\0\x0F\0\x10\0\x03\0\0U\x003\xB3f\t\0\0\xA2\x94\x1A\x1D\0\x01\x8E\0\0\0\0\x0F\0\x10\0\x11\0\x12\0\x01\0\0K\0\xFE\0\0\x7F\0\xFF\0\0\x02\0\x01\x01\0\x01\x8F\0\0\0\0\x0F\0\x13\0\x14\0\x15\0\x01\0\0K\0\x02\0\0U\0\xFE\0\0\x7F\0\xD0\x80I\x06\x01\0\x01\x90\0\0\0\0\x05\0\x07\0\n\0\x0B\0\x03\0\0U\0a\t\xEC\x07\x02\0\x01\x91\0\0\0\0\x05\0\t\0\x0B\0\x0C\0\x01\0\0K\0\x85 \xB4\x02P\xC3\0\x01\x92\0\0\0\0\x05\0\x07\0\x08\0\t\0\x01\0\0K\0\xE8\x03\x01\0\x01\x93\0\0\0\0\x14\0\x15\0\x16\0\x17\0\x01\0\0K\0\x02\0\0U\0\xFD\0\0\x7F\0\xFF\0\0\x02\0\x01\x01\0\x01\x94\0\0\0\0\x0F\0\x10\0\x11\0\x12\0\x01\0\0K\0\x02\0\0U\0\xFD\0\0\x7F\0\x01\x01\0\x01\x95\0\0\0\0\x14\0\x15\0\x16\0\x17\0\x01\0\0K\0\x02\0\0U\0\xFE\0\0\x7F\0\xFF\0\0\x02\0\x01\x01\0\x01\x96\0\0\0\0\x05\0\x08\0\t\0\n\0\x01\0\0\x7F\0\x80:\t\x01\0\x01\x97\0\0\0\0\x05\0\x08\0\t\0\n\0\x01\0\0\x7F\0\x80:\t\x01\0\x01\x98\0\0\0\0\x05\0\x07\0\t\0\n\0\x01\0\0U\0w\x04\xE2\x04\0\x01\x99\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0\x99\0\x01\x01\0\x01\x9A\0\0\0\0\x05\0\x06\0\x07\0\x08\0\x01\0\0\x99\0\x01\x01\0\x01") } };
        }
        #[clippy::msrv = "1.82"]
        impl icu_provider::DataProvider<icu::experimental::units::provider::UnitsInfoV1> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::experimental::units::provider::UnitsInfoV1>, icu_provider::DataError> {
                if req.id.locale.is_unknown() {
                    Ok(icu_provider::DataResponse { payload: icu_provider::DataPayload::from_static_ref(Self::SINGLETON_UNITS_INFO_V1), metadata: icu_provider::DataResponseMetadata::default() })
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::experimental::units::provider::UnitsInfoV1 as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
    };
    ($ provider : ty , ITER) => {
        __impl_units_info_v1!($provider);
        #[clippy::msrv = "1.82"]
        impl icu_provider::IterableDataProvider<icu::experimental::units::provider::UnitsInfoV1> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BtreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok([Default::default()].into_iter().collect())
            }
        }
    };
    ($ provider : ty , DRY) => {
        __impl_units_info_v1!($provider);
        #[clippy::msrv = "1.82"]
        impl icu_provider::DryDataProvider<icu::experimental::units::provider::UnitsInfoV1> for $provider {
            fn dry_load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponseMetadata, icu_provider::DataError> {
                if req.id.locale.is_unknown() {
                    Ok(icu_provider::DataResponseMetadata::default())
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::experimental::units::provider::UnitsInfoV1 as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
    };
    ($ provider : ty , DRY , ITER) => {
        __impl_units_info_v1!($provider);
        #[clippy::msrv = "1.82"]
        impl icu_provider::DryDataProvider<icu::experimental::units::provider::UnitsInfoV1> for $provider {
            fn dry_load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponseMetadata, icu_provider::DataError> {
                if req.id.locale.is_unknown() {
                    Ok(icu_provider::DataResponseMetadata::default())
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::experimental::units::provider::UnitsInfoV1 as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
        #[clippy::msrv = "1.82"]
        impl icu_provider::IterableDataProvider<icu::experimental::units::provider::UnitsInfoV1> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BtreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok([Default::default()].into_iter().collect())
            }
        }
    };
}
#[doc(inline)]
pub use __impl_units_info_v1 as impl_units_info_v1;
