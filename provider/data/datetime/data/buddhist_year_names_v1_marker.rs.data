// @generated
/// Implement `DataProvider<BuddhistYearNamesV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_buddhist_year_names_v1_marker {
    ($ provider : ty) => {
        #[clippy::msrv = "1.70"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.70"]
        impl $provider {
            const DATA_BUDDHIST_YEAR_NAMES_V1_MARKER: icu_provider_baked::binary_search::Data<icu_provider_baked::binary_search::AttributesAndLocale, icu::datetime::provider::neo::BuddhistYearNamesV1Marker> = {
                type S = <icu::datetime::provider::neo::BuddhistYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable;
                const _3_AST: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0EB") })
                });
                const _3_BE: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD0\xB1.\xD1\x8D.") })
                });
                const _3_BR: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0A.B.") })
                });
                const _3_BS_CYRL: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD0\x91\xD0\x95") })
                });
                const _3_CA: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0eB") })
                });
                const _3_ET: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0BK") })
                });
                const _3_EU: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0BG") })
                });
                const _3_FA: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD8\xAA\xD9\x82\xD9\x88\xDB\x8C\xD9\x85 \xD8\xA8\xD9\x88\xD8\xAF\xD8\xA7\xDB\x8C\xDB\x8C") })
                });
                const _3_FF_ADLM: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xF0\x9E\xA4\x98\xF0\x9E\xA4\x84") })
                });
                const _3_FR: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0E. B.") })
                });
                const _3_GA: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0RB") })
                });
                const _3_HI: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xA4\xAC\xE0\xA5\x8C\xE0\xA4\xA6\xE0\xA5\x8D\xE0\xA4\xA7 \xE0\xA4\xB8\xE0\xA4\x82\xE0\xA4\xB5\xE0\xA4\xA4") })
                });
                const _3_IS: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0BD") })
                });
                const _3_KO: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xEB\xB6\x88\xEA\xB8\xB0") })
                });
                const _3_LO: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xBA\x9E.\xE0\xBA\xAA.") })
                });
                const _3_LV: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0B.E.") })
                });
                const _3_MR: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xA4\x87\xE0\xA4\xB8\xE0\xA4\xAA\xE0\xA5\x82.") })
                });
                const _3_PA: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xA8\x88\xE0\xA8\xB8\xE0\xA8\xB5\xE0\xA9\x80 \xE0\xA8\xAA\xE0\xA9\x82\xE0\xA8\xB0\xE0\xA8\xB5") })
                });
                const _3_PL: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0e.b.") })
                });
                const _3_SC: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0E.B.") })
                });
                const _3_SL: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0bud. kol.") })
                });
                const _3_TH: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xB8\x9E.\xE0\xB8\xA8.") })
                });
                const _3_UK: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD0\xB1. \xD0\xB5.") })
                });
                const _3_UND: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0BE") })
                });
                const _3_YUE: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE4\xBD\x9B\xE6\x9B\x86") })
                });
                const _3_YUE_HANS: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE4\xBD\x9B\xE5\x8E\x86") })
                });
                const _4_BR: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0AB") })
                });
                const _4_PA: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xA8\x88. \xE0\xA8\xAA\xE0\xA9\x82.") })
                });
                const _4_RU: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD0\xB1\xD1\x8D") })
                });
                const _4_UK: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD0\xB1.\xD0\xB5.") })
                });
                const _5_AR: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD8\xA7\xD9\x84\xD8\xAA\xD9\x82\xD9\x88\xD9\x8A\xD9\x85 \xD8\xA7\xD9\x84\xD8\xA8\xD9\x88\xD8\xB0\xD9\x8A") })
                });
                const _5_AST: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0era budista") })
                });
                const _5_BR: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0amzervezh voudaek") })
                });
                const _5_EL: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xCE\x92.\xCE\x95.") })
                });
                const _5_FF_ADLM: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xF0\x9E\xA4\x98\xF0\x9E\xA4\xAD\xF0\x9E\xA4\xAA\xF0\x9E\xA4\xA2\xF0\x9E\xA4\xA4 \xF0\x9E\xA4\x84\xF0\x9E\xA4\xB5\xF0\x9E\xA5\x85\xF0\x9E\xA4\xA3\xF0\x9E\xA4\xA2\xF0\x9E\xA4\xB2\xF0\x9E\xA4\xB3\xF0\x9E\xA4\xAE\xF0\x9E\xA4\xB1\xF0\x9E\xA4\xA2\xF0\x9E\xA4\xA4") })
                });
                const _5_FI: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0buddhalainen aika") })
                });
                const _5_FR: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xC3\xA8re bouddhique") })
                });
                const _5_HE: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD7\x94\xD7\xA1\xD7\xA4\xD7\x99\xD7\xA8\xD7\x94 \xD7\x94\xD7\x91\xD7\x95\xD7\x93\xD7\x94\xD7\x99\xD7\xA1\xD7\x98\xD7\x99\xD7\xAA") })
                });
                const _5_ID: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0Era Buddhis") })
                });
                const _5_IS: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0b\xC3\xBAddhadagatal") })
                });
                const _5_JA: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE4\xBB\x8F\xE6\x9A\xA6") })
                });
                const _5_LV: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0budistu \xC4\x93ra") })
                });
                const _5_MR: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xA4\x87\xE0\xA4\xB8\xE0\xA4\xB5\xE0\xA5\x80\xE0\xA4\xB8\xE0\xA4\xA8 \xE0\xA4\xAA\xE0\xA5\x82\xE0\xA4\xB0\xE0\xA5\x8D\xE0\xA4\xB5") })
                });
                const _5_RO: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0era budist\xC4\x83") })
                });
                const _5_RU: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD0\xB1\xD1\x83\xD0\xB4\xD0\xB4\xD0\xB8\xD0\xB9\xD1\x81\xD0\xBA\xD0\xB0\xD1\x8F \xD1\x8D\xD1\x80\xD0\xB0") })
                });
                const _5_SC: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0era buddhista") })
                });
                const _5_SL: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0budisti\xC4\x8Dni koledar") })
                });
                const _5_SV: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0Buddhistisk era") })
                });
                const _5_TH: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xB8\x9E\xE0\xB8\xB8\xE0\xB8\x97\xE0\xB8\x98\xE0\xB8\xA8\xE0\xB8\xB1\xE0\xB8\x81\xE0\xB8\xA3\xE0\xB8\xB2\xE0\xB8\x8A") })
                });
                const _5_UG: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0be") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD8\xA8\xDB\x87\xD8\xAF\xD8\xAF\xD8\xA7 \xD9\x8A\xD9\x89\xD9\x84\xD9\x86\xD8\xA7\xD9\x85\xDB\x95\xD8\xB3\xD9\x89") })
                });
                icu_provider_baked::binary_search::Data(&[(("3", "ast"), _3_AST), (("3", "be"), _3_BE), (("3", "br"), _3_BR), (("3", "bs-Cyrl"), _3_BS_CYRL), (("3", "ca"), _3_CA), (("3", "et"), _3_ET), (("3", "eu"), _3_EU), (("3", "fa"), _3_FA), (("3", "ff-Adlm"), _3_FF_ADLM), (("3", "fr"), _3_FR), (("3", "ga"), _3_GA), (("3", "hi"), _3_HI), (("3", "hu"), _3_ET), (("3", "id"), _3_AST), (("3", "is"), _3_IS), (("3", "it"), _3_AST), (("3", "ko"), _3_KO), (("3", "lo"), _3_LO), (("3", "lv"), _3_LV), (("3", "mr"), _3_MR), (("3", "pa"), _3_PA), (("3", "pl"), _3_PL), (("3", "ro"), _3_PL), (("3", "sc"), _3_SC), (("3", "sl"), _3_SL), (("3", "sr"), _3_BS_CYRL), (("3", "th"), _3_TH), (("3", "uk"), _3_UK), (("3", "und"), _3_UND), (("3", "yue"), _3_YUE), (("3", "yue-Hans"), _3_YUE_HANS), (("3", "zh"), _3_YUE_HANS), (("3", "zh-Hant"), _3_YUE), (("4", "ast"), _3_AST), (("4", "be"), _3_BE), (("4", "br"), _4_BR), (("4", "bs-Cyrl"), _3_BS_CYRL), (("4", "ca"), _3_CA), (("4", "et"), _3_ET), (("4", "eu"), _3_EU), (("4", "fa"), _3_FA), (("4", "ff-Adlm"), _3_FF_ADLM), (("4", "fr"), _3_AST), (("4", "ga"), _3_GA), (("4", "hi"), _3_HI), (("4", "hu"), _3_ET), (("4", "id"), _3_AST), (("4", "is"), _3_IS), (("4", "it"), _3_AST), (("4", "kgp"), _3_AST), (("4", "ko"), _3_KO), (("4", "lo"), _3_LO), (("4", "lv"), _3_LV), (("4", "mr"), _3_MR), (("4", "pa"), _4_PA), (("4", "pl"), _3_PL), (("4", "pt"), _3_AST), (("4", "pt-PT"), _3_UND), (("4", "ro"), _3_PL), (("4", "ru"), _4_RU), (("4", "sc"), _3_AST), (("4", "sl"), _3_ET), (("4", "sr"), _3_BS_CYRL), (("4", "th"), _3_TH), (("4", "uk"), _4_UK), (("4", "und"), _3_UND), (("4", "yrl"), _3_AST), (("4", "yue"), _3_YUE), (("4", "yue-Hans"), _3_YUE_HANS), (("4", "zh"), _3_YUE_HANS), (("4", "zh-Hant"), _3_YUE), (("5", "ar"), _5_AR), (("5", "ast"), _5_AST), (("5", "be"), _3_BE), (("5", "br"), _5_BR), (("5", "bs-Cyrl"), _3_BS_CYRL), (("5", "ca"), _3_CA), (("5", "de"), _3_LV), (("5", "el"), _5_EL), (("5", "et"), _3_ET), (("5", "eu"), _3_EU), (("5", "fa"), _3_FA), (("5", "ff-Adlm"), _5_FF_ADLM), (("5", "fi"), _5_FI), (("5", "fr"), _5_FR), (("5", "ga"), _3_GA), (("5", "he"), _5_HE), (("5", "hi"), _3_HI), (("5", "hu"), _3_ET), (("5", "id"), _5_ID), (("5", "is"), _5_IS), (("5", "it"), _3_AST), (("5", "ja"), _5_JA), (("5", "kgp"), _3_AST), (("5", "ko"), _3_KO), (("5", "lo"), _3_LO), (("5", "lv"), _5_LV), (("5", "mr"), _5_MR), (("5", "pa"), _3_PA), (("5", "pl"), _3_PL), (("5", "pt"), _3_AST), (("5", "pt-PT"), _3_UND), (("5", "ro"), _5_RO), (("5", "ru"), _5_RU), (("5", "sc"), _5_SC), (("5", "sl"), _5_SL), (("5", "sr"), _3_BS_CYRL), (("5", "sv"), _5_SV), (("5", "th"), _5_TH), (("5", "ug"), _5_UG), (("5", "uk"), _3_UK), (("5", "und"), _3_UND), (("5", "yrl"), _3_AST), (("5", "yue"), _3_YUE), (("5", "yue-Hans"), _3_YUE_HANS), (("5", "zh"), _3_YUE_HANS), (("5", "zh-Hant"), _3_YUE)])
            };
        }
        #[clippy::msrv = "1.70"]
        impl icu_provider::DataProvider<icu::datetime::provider::neo::BuddhistYearNamesV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::datetime::provider::neo::BuddhistYearNamesV1Marker>, icu_provider::DataError> {
                let mut metadata = icu_provider::DataResponseMetadata::default();
                let payload = if let Some(payload) = icu_provider_baked::DataStore::get(&Self::DATA_BUDDHIST_YEAR_NAMES_V1_MARKER, req) {
                    payload
                } else {
                    const FALLBACKER: icu::locale::fallback::LocaleFallbackerWithConfig<'static> = icu::locale::fallback::LocaleFallbacker::new().for_config(<icu::datetime::provider::neo::BuddhistYearNamesV1Marker as icu_provider::DataMarker>::INFO.fallback_config);
                    let mut fallback_iterator = FALLBACKER.fallback_for(req.locale.clone());
                    loop {
                        if let Some(payload) = icu_provider_baked::DataStore::get(&Self::DATA_BUDDHIST_YEAR_NAMES_V1_MARKER, icu_provider::DataRequest { locale: fallback_iterator.get(), ..req }) {
                            metadata.locale = Some(fallback_iterator.take());
                            break payload;
                        }
                        if fallback_iterator.get().is_und() {
                            return Err(icu_provider::DataErrorKind::MissingLocale.with_req(<icu::datetime::provider::neo::BuddhistYearNamesV1Marker as icu_provider::DataMarker>::INFO, req));
                        }
                        fallback_iterator.step();
                    }
                };
                Ok(icu_provider::DataResponse { payload: icu_provider::DataPayload::from_static_ref(payload), metadata })
            }
        }
    };
    ($ provider : ty , ITER) => {
        __impl_buddhist_year_names_v1_marker!($provider);
        #[clippy::msrv = "1.70"]
        impl icu_provider::IterableDataProvider<icu::datetime::provider::neo::BuddhistYearNamesV1Marker> for $provider {
            fn iter_requests(&self) -> Result<std::collections::HashSet<(icu_provider::DataLocale, icu_provider::DataMarkerAttributes)>, icu_provider::DataError> {
                Ok(icu_provider_baked::DataStore::iter(&Self::DATA_BUDDHIST_YEAR_NAMES_V1_MARKER).collect())
            }
        }
    };
}
#[doc(inline)]
pub use __impl_buddhist_year_names_v1_marker as impl_buddhist_year_names_v1_marker;
