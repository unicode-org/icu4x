// @generated
/// Implement `DataProvider<RocYearNamesV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
///
/// Using this implementation will embed the following data in the binary's data segment:
/// * 3347B[^1] for the lookup data structure (195 data identifiers)
/// * 8823B[^1] for the actual data (84 unique structs)
///
/// [^1]: these numbers can be smaller in practice due to linker deduplication
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_roc_year_names_v1_marker {
    ($ provider : ty) => {
        #[clippy::msrv = "1.70"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.70"]
        impl $provider {
            const DATA_ROC_YEAR_NAMES_V1_MARKER: icu_provider_baked::binary_search::Data<icu_provider_baked::binary_search::AttributesAndLocale<1usize, 8usize>, icu::datetime::provider::neo::RocYearNamesV1Marker> = icu_provider_baked::binary_search::Data(
                {
                    use icu_provider_baked::binary_search::tinystr::tinystr;
                    &[(tinystr!(1usize, "3"), tinystr!(8usize, "ar")), (tinystr!(1usize, "3"), tinystr!(8usize, "ast")), (tinystr!(1usize, "3"), tinystr!(8usize, "bn")), (tinystr!(1usize, "3"), tinystr!(8usize, "br")), (tinystr!(1usize, "3"), tinystr!(8usize, "bs")), (tinystr!(1usize, "3"), tinystr!(8usize, "bs-Cyrl")), (tinystr!(1usize, "3"), tinystr!(8usize, "cs")), (tinystr!(1usize, "3"), tinystr!(8usize, "da")), (tinystr!(1usize, "3"), tinystr!(8usize, "de")), (tinystr!(1usize, "3"), tinystr!(8usize, "el")), (tinystr!(1usize, "3"), tinystr!(8usize, "en")), (tinystr!(1usize, "3"), tinystr!(8usize, "es")), (tinystr!(1usize, "3"), tinystr!(8usize, "es-419")), (tinystr!(1usize, "3"), tinystr!(8usize, "eu")), (tinystr!(1usize, "3"), tinystr!(8usize, "fa")), (tinystr!(1usize, "3"), tinystr!(8usize, "ff-Adlm")), (tinystr!(1usize, "3"), tinystr!(8usize, "fi")), (tinystr!(1usize, "3"), tinystr!(8usize, "fil")), (tinystr!(1usize, "3"), tinystr!(8usize, "fr")), (tinystr!(1usize, "3"), tinystr!(8usize, "fy")), (tinystr!(1usize, "3"), tinystr!(8usize, "gd")), (tinystr!(1usize, "3"), tinystr!(8usize, "gu")), (tinystr!(1usize, "3"), tinystr!(8usize, "he")), (tinystr!(1usize, "3"), tinystr!(8usize, "hr")), (tinystr!(1usize, "3"), tinystr!(8usize, "hu")), (tinystr!(1usize, "3"), tinystr!(8usize, "id")), (tinystr!(1usize, "3"), tinystr!(8usize, "is")), (tinystr!(1usize, "3"), tinystr!(8usize, "it")), (tinystr!(1usize, "3"), tinystr!(8usize, "ja")), (tinystr!(1usize, "3"), tinystr!(8usize, "kn")), (tinystr!(1usize, "3"), tinystr!(8usize, "ko")), (tinystr!(1usize, "3"), tinystr!(8usize, "lb")), (tinystr!(1usize, "3"), tinystr!(8usize, "lo")), (tinystr!(1usize, "3"), tinystr!(8usize, "lt")), (tinystr!(1usize, "3"), tinystr!(8usize, "lv")), (tinystr!(1usize, "3"), tinystr!(8usize, "mk")), (tinystr!(1usize, "3"), tinystr!(8usize, "ml")), (tinystr!(1usize, "3"), tinystr!(8usize, "mr")), (tinystr!(1usize, "3"), tinystr!(8usize, "nl")), (tinystr!(1usize, "3"), tinystr!(8usize, "no")), (tinystr!(1usize, "3"), tinystr!(8usize, "pa")), (tinystr!(1usize, "3"), tinystr!(8usize, "pl")), (tinystr!(1usize, "3"), tinystr!(8usize, "pt")), (tinystr!(1usize, "3"), tinystr!(8usize, "ro")), (tinystr!(1usize, "3"), tinystr!(8usize, "ru")), (tinystr!(1usize, "3"), tinystr!(8usize, "sc")), (tinystr!(1usize, "3"), tinystr!(8usize, "sk")), (tinystr!(1usize, "3"), tinystr!(8usize, "sl")), (tinystr!(1usize, "3"), tinystr!(8usize, "so")), (tinystr!(1usize, "3"), tinystr!(8usize, "sr")), (tinystr!(1usize, "3"), tinystr!(8usize, "sr-Latn")), (tinystr!(1usize, "3"), tinystr!(8usize, "sv")), (tinystr!(1usize, "3"), tinystr!(8usize, "ta")), (tinystr!(1usize, "3"), tinystr!(8usize, "te")), (tinystr!(1usize, "3"), tinystr!(8usize, "th")), (tinystr!(1usize, "3"), tinystr!(8usize, "tr")), (tinystr!(1usize, "3"), tinystr!(8usize, "ug")), (tinystr!(1usize, "3"), tinystr!(8usize, "und")), (tinystr!(1usize, "3"), tinystr!(8usize, "ur")), (tinystr!(1usize, "3"), tinystr!(8usize, "vi")), (tinystr!(1usize, "3"), tinystr!(8usize, "yue")), (tinystr!(1usize, "3"), tinystr!(8usize, "yue-Hans")), (tinystr!(1usize, "3"), tinystr!(8usize, "zh")), (tinystr!(1usize, "3"), tinystr!(8usize, "zh-Hant")), (tinystr!(1usize, "4"), tinystr!(8usize, "ar")), (tinystr!(1usize, "4"), tinystr!(8usize, "ast")), (tinystr!(1usize, "4"), tinystr!(8usize, "bn")), (tinystr!(1usize, "4"), tinystr!(8usize, "br")), (tinystr!(1usize, "4"), tinystr!(8usize, "bs")), (tinystr!(1usize, "4"), tinystr!(8usize, "bs-Cyrl")), (tinystr!(1usize, "4"), tinystr!(8usize, "cs")), (tinystr!(1usize, "4"), tinystr!(8usize, "da")), (tinystr!(1usize, "4"), tinystr!(8usize, "de")), (tinystr!(1usize, "4"), tinystr!(8usize, "el")), (tinystr!(1usize, "4"), tinystr!(8usize, "en")), (tinystr!(1usize, "4"), tinystr!(8usize, "es")), (tinystr!(1usize, "4"), tinystr!(8usize, "es-419")), (tinystr!(1usize, "4"), tinystr!(8usize, "eu")), (tinystr!(1usize, "4"), tinystr!(8usize, "fa")), (tinystr!(1usize, "4"), tinystr!(8usize, "ff-Adlm")), (tinystr!(1usize, "4"), tinystr!(8usize, "fi")), (tinystr!(1usize, "4"), tinystr!(8usize, "fil")), (tinystr!(1usize, "4"), tinystr!(8usize, "fr")), (tinystr!(1usize, "4"), tinystr!(8usize, "fy")), (tinystr!(1usize, "4"), tinystr!(8usize, "gd")), (tinystr!(1usize, "4"), tinystr!(8usize, "gu")), (tinystr!(1usize, "4"), tinystr!(8usize, "he")), (tinystr!(1usize, "4"), tinystr!(8usize, "hr")), (tinystr!(1usize, "4"), tinystr!(8usize, "hu")), (tinystr!(1usize, "4"), tinystr!(8usize, "id")), (tinystr!(1usize, "4"), tinystr!(8usize, "is")), (tinystr!(1usize, "4"), tinystr!(8usize, "it")), (tinystr!(1usize, "4"), tinystr!(8usize, "ja")), (tinystr!(1usize, "4"), tinystr!(8usize, "kn")), (tinystr!(1usize, "4"), tinystr!(8usize, "ko")), (tinystr!(1usize, "4"), tinystr!(8usize, "lb")), (tinystr!(1usize, "4"), tinystr!(8usize, "lo")), (tinystr!(1usize, "4"), tinystr!(8usize, "lt")), (tinystr!(1usize, "4"), tinystr!(8usize, "lv")), (tinystr!(1usize, "4"), tinystr!(8usize, "mk")), (tinystr!(1usize, "4"), tinystr!(8usize, "ml")), (tinystr!(1usize, "4"), tinystr!(8usize, "mr")), (tinystr!(1usize, "4"), tinystr!(8usize, "ms")), (tinystr!(1usize, "4"), tinystr!(8usize, "nl")), (tinystr!(1usize, "4"), tinystr!(8usize, "no")), (tinystr!(1usize, "4"), tinystr!(8usize, "pa")), (tinystr!(1usize, "4"), tinystr!(8usize, "pl")), (tinystr!(1usize, "4"), tinystr!(8usize, "pt")), (tinystr!(1usize, "4"), tinystr!(8usize, "ro")), (tinystr!(1usize, "4"), tinystr!(8usize, "ru")), (tinystr!(1usize, "4"), tinystr!(8usize, "sc")), (tinystr!(1usize, "4"), tinystr!(8usize, "sk")), (tinystr!(1usize, "4"), tinystr!(8usize, "sl")), (tinystr!(1usize, "4"), tinystr!(8usize, "so")), (tinystr!(1usize, "4"), tinystr!(8usize, "sr")), (tinystr!(1usize, "4"), tinystr!(8usize, "sr-Latn")), (tinystr!(1usize, "4"), tinystr!(8usize, "sv")), (tinystr!(1usize, "4"), tinystr!(8usize, "ta")), (tinystr!(1usize, "4"), tinystr!(8usize, "te")), (tinystr!(1usize, "4"), tinystr!(8usize, "th")), (tinystr!(1usize, "4"), tinystr!(8usize, "tr")), (tinystr!(1usize, "4"), tinystr!(8usize, "ug")), (tinystr!(1usize, "4"), tinystr!(8usize, "und")), (tinystr!(1usize, "4"), tinystr!(8usize, "ur")), (tinystr!(1usize, "4"), tinystr!(8usize, "vi")), (tinystr!(1usize, "4"), tinystr!(8usize, "yue")), (tinystr!(1usize, "4"), tinystr!(8usize, "yue-Hans")), (tinystr!(1usize, "4"), tinystr!(8usize, "zh")), (tinystr!(1usize, "4"), tinystr!(8usize, "zh-Hant")), (tinystr!(1usize, "5"), tinystr!(8usize, "ar")), (tinystr!(1usize, "5"), tinystr!(8usize, "ast")), (tinystr!(1usize, "5"), tinystr!(8usize, "bn")), (tinystr!(1usize, "5"), tinystr!(8usize, "br")), (tinystr!(1usize, "5"), tinystr!(8usize, "bs")), (tinystr!(1usize, "5"), tinystr!(8usize, "bs-Cyrl")), (tinystr!(1usize, "5"), tinystr!(8usize, "ca")), (tinystr!(1usize, "5"), tinystr!(8usize, "cs")), (tinystr!(1usize, "5"), tinystr!(8usize, "da")), (tinystr!(1usize, "5"), tinystr!(8usize, "de")), (tinystr!(1usize, "5"), tinystr!(8usize, "el")), (tinystr!(1usize, "5"), tinystr!(8usize, "en")), (tinystr!(1usize, "5"), tinystr!(8usize, "es")), (tinystr!(1usize, "5"), tinystr!(8usize, "es-419")), (tinystr!(1usize, "5"), tinystr!(8usize, "eu")), (tinystr!(1usize, "5"), tinystr!(8usize, "fa")), (tinystr!(1usize, "5"), tinystr!(8usize, "ff-Adlm")), (tinystr!(1usize, "5"), tinystr!(8usize, "fi")), (tinystr!(1usize, "5"), tinystr!(8usize, "fil")), (tinystr!(1usize, "5"), tinystr!(8usize, "fr")), (tinystr!(1usize, "5"), tinystr!(8usize, "fy")), (tinystr!(1usize, "5"), tinystr!(8usize, "gd")), (tinystr!(1usize, "5"), tinystr!(8usize, "gu")), (tinystr!(1usize, "5"), tinystr!(8usize, "he")), (tinystr!(1usize, "5"), tinystr!(8usize, "hr")), (tinystr!(1usize, "5"), tinystr!(8usize, "hu")), (tinystr!(1usize, "5"), tinystr!(8usize, "id")), (tinystr!(1usize, "5"), tinystr!(8usize, "is")), (tinystr!(1usize, "5"), tinystr!(8usize, "it")), (tinystr!(1usize, "5"), tinystr!(8usize, "ja")), (tinystr!(1usize, "5"), tinystr!(8usize, "kn")), (tinystr!(1usize, "5"), tinystr!(8usize, "ko")), (tinystr!(1usize, "5"), tinystr!(8usize, "lb")), (tinystr!(1usize, "5"), tinystr!(8usize, "lo")), (tinystr!(1usize, "5"), tinystr!(8usize, "lt")), (tinystr!(1usize, "5"), tinystr!(8usize, "lv")), (tinystr!(1usize, "5"), tinystr!(8usize, "mk")), (tinystr!(1usize, "5"), tinystr!(8usize, "ml")), (tinystr!(1usize, "5"), tinystr!(8usize, "mr")), (tinystr!(1usize, "5"), tinystr!(8usize, "ms")), (tinystr!(1usize, "5"), tinystr!(8usize, "nl")), (tinystr!(1usize, "5"), tinystr!(8usize, "no")), (tinystr!(1usize, "5"), tinystr!(8usize, "pa")), (tinystr!(1usize, "5"), tinystr!(8usize, "pl")), (tinystr!(1usize, "5"), tinystr!(8usize, "pt")), (tinystr!(1usize, "5"), tinystr!(8usize, "ro")), (tinystr!(1usize, "5"), tinystr!(8usize, "ru")), (tinystr!(1usize, "5"), tinystr!(8usize, "sc")), (tinystr!(1usize, "5"), tinystr!(8usize, "sk")), (tinystr!(1usize, "5"), tinystr!(8usize, "sl")), (tinystr!(1usize, "5"), tinystr!(8usize, "so")), (tinystr!(1usize, "5"), tinystr!(8usize, "sr")), (tinystr!(1usize, "5"), tinystr!(8usize, "sr-Latn")), (tinystr!(1usize, "5"), tinystr!(8usize, "sv")), (tinystr!(1usize, "5"), tinystr!(8usize, "ta")), (tinystr!(1usize, "5"), tinystr!(8usize, "te")), (tinystr!(1usize, "5"), tinystr!(8usize, "th")), (tinystr!(1usize, "5"), tinystr!(8usize, "tr")), (tinystr!(1usize, "5"), tinystr!(8usize, "ug")), (tinystr!(1usize, "5"), tinystr!(8usize, "und")), (tinystr!(1usize, "5"), tinystr!(8usize, "ur")), (tinystr!(1usize, "5"), tinystr!(8usize, "vi")), (tinystr!(1usize, "5"), tinystr!(8usize, "yue")), (tinystr!(1usize, "5"), tinystr!(8usize, "yue-Hans")), (tinystr!(1usize, "5"), tinystr!(8usize, "zh")), (tinystr!(1usize, "5"), tinystr!(8usize, "zh-Hant"))]
                },
                {
                    type S = <icu::datetime::provider::neo::RocYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable;
                    const _3_AR: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x17\0\xD8\xAC\xD9\x85\xD9\x87\xD9\x88\xD8\xB1\xD9\x8A\xD8\xA9 \xD8\xA7\xD9\x84\xD8\xB5\xD9\x8ABefore R.O.C.") })
                    });
                    const _3_AST: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0MinguoA.R.D.C.") })
                    });
                    const _3_BN: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x1B\0\xE0\xA6\xAE\xE0\xA6\xBF\xE0\xA6\x99\xE0\xA7\x8D\xE0\xA6\x97\xE0\xA7\x81\xE0\xA6\xAF\xE0\xA6\xBC\xE0\xA6\xBE\xE0\xA6\x86\xE0\xA6\x97\xE0\xA7\x87 R.O.C.") })
                    });
                    const _3_BR: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x04\0R.S.a-raok R.S.") })
                    });
                    const _3_BS: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0R.O.C.prije R.O.C.") })
                    });
                    const _3_BS_CYRL: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x04\0\xD0\xA0\xD0\x9A\xD0\x9F\xD1\x80\xD0\xB5 \xD0\xA0\xD0\x9A") })
                    });
                    const _3_CS: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0ROCp\xC5\x99ed ROC") })
                    });
                    const _3_DA: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0Minguof\xC3\xB8r R.O.C.") })
                    });
                    const _3_DE: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0MinguoBefore R.O.C.") })
                    });
                    const _3_EL: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0R.O.C.\xCF\x80\xCF\x81\xCE\xBF R.O.C.") })
                    });
                    const _3_EN: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0MinguoB.R.O.C.") })
                    });
                    const _3_ES: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0minguoantes de RDC") })
                    });
                    const _3_ES_419: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0R.O.C.antes de R.O.C.") })
                    });
                    const _3_EU: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0R.O.C.R.O.C. aurretik") })
                    });
                    const _3_FA: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x15\0\xD8\xAA\xD9\x82\xD9\x88\xDB\x8C\xD9\x85 \xD9\x85\xDB\x8C\xD9\x86\xDA\xAF\xD9\x88\xD9\x82\xD8\xA8\xD9\x84 \xD8\xA7\xD8\xB2 R.O.C.") })
                    });
                    const _3_FF_ADLM: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x18\0\xF0\x9E\xA4\x83\xF0\x9E\xA4\xAD\xF0\x9E\xA4\xB2\xF0\x9E\xA4\xBA\xF0\x9E\xA4\xB5\xF0\x9E\xA4\xAE\xF0\x9E\xA4\x80\xF0\x9E\xA5\x8B\xF0\x9E\xA4\x81\xF0\x9E\xA4\x95") })
                    });
                    const _3_FI: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0Minguoe. Kiinan tasav.") })
                    });
                    const _3_FIL: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0MinguoBago ang R.O.C.") })
                    });
                    const _3_FR: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0RdCav. RdC") })
                    });
                    const _3_GD: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x08\0M\xC3\xADngu\xC3\xB3Ro PnS") })
                    });
                    const _3_GU: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x12\0\xE0\xAA\x86\xE0\xAA\xB0.\xE0\xAA\x93.\xE0\xAA\xB8\xE0\xAB\x80.\xE0\xAA\x86\xE0\xAA\xB0.\xE0\xAA\x93.\xE0\xAA\xB8\xE0\xAB\x80. \xE0\xAA\xAA\xE0\xAA\xB9\xE0\xAB\x87\xE0\xAA\xB2\xE0\xAA\xBE\xE0\xAA\x82") })
                    });
                    const _3_HE: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0R.O.C.\xD7\x9C\xD7\xA4\xD7\xA0\xD7\x99 R.O.C") })
                    });
                    const _3_HU: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0R.O.C.R.O.C. el\xC5\x91tt") })
                    });
                    const _3_ID: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0R.O.C.Sebelum R.O.C.") })
                    });
                    const _3_IS: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0Minguofyrir l\xC3\xBD\xC3\xB0v. K\xC3\xADna") })
                    });
                    const _3_IT: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0MinguoPrima di R.O.C.") })
                    });
                    const _3_JA: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0\xE6\xB0\x91\xE5\x9B\xBD\xE6\xB0\x91\xE5\x9B\xBD\xE5\x89\x8D") })
                    });
                    const _3_KN: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x0F\0\xE0\xB2\xAE\xE0\xB2\xBF\xE0\xB2\x82\xE0\xB2\x97\xE0\xB3\x8B\xE0\xB2\x86\xE0\xB2\xB0\xE0\xB3\x8D.\xE0\xB2\x93.\xE0\xB2\xB8\xE0\xB2\xBF.\xE0\xB2\x97\xE0\xB3\x86 \xE0\xB2\xAE\xE0\xB3\x81\xE0\xB2\x82\xE0\xB2\x9A\xE0\xB3\x86") })
                    });
                    const _3_KO: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x0C\0\xEC\xA4\x91\xED\x99\x94\xEB\xAF\xBC\xEA\xB5\xAD\xEC\xA4\x91\xED\x99\x94\xEB\xAF\xBC\xEA\xB5\xAD\xEC\xA0\x84") })
                    });
                    const _3_LO: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0R.O.C.\xE0\xBA\x81\xE0\xBB\x88\xE0\xBA\xAD\xE0\xBA\x99 R.O.C.") })
                    });
                    const _3_LT: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0R.O.C.Prie\xC5\xA1 R.O.C.") })
                    });
                    const _3_LV: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0Mi\xC5\x86gopirms republikas") })
                    });
                    const _3_MK: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x0C\0\xD0\xBC\xD0\xB8\xD0\xBD\xD0\xB3\xD1\x83\xD0\xBE\xD0\xBF\xD1\x80. \xD0\xA0.\xD0\x9A.") })
                    });
                    const _3_ML: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x15\0\xE0\xB4\xAE\xE0\xB4\xBF\xE0\xB4\x82\xE0\xB4\x97\xE0\xB5\x8D\xE0\xB4\xB5\xE0\xB5\x8BR.O.C-\xE0\xB4\xAF\xE0\xB5\x8D\xE2\x80\x8C\xE0\xB4\x95\xE0\xB5\x8D\xE0\xB4\x95\xE0\xB5\x8D \xE0\xB4\xAE\xE0\xB5\x81.") })
                    });
                    const _3_MR: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x0F\0\xE0\xA4\xAE\xE0\xA4\xBF\xE0\xA4\x82\xE0\xA4\x97\xE0\xA5\x82\xE0\xA4\x86\xE0\xA4\xB0.\xE0\xA4\x93.\xE0\xA4\xB8\xE0\xA5\x80. \xE0\xA4\x86\xE0\xA4\xA7\xE0\xA5\x80") })
                    });
                    const _3_NL: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0Minguovoor R.O.C.") })
                    });
                    const _3_NO: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0MinguoF\xC3\xB8r ROC") })
                    });
                    const _3_PA: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x0C\0\xE0\xA8\xAE\xE0\xA8\xBF\xE0\xA9\xB0\xE0\xA8\x97\xE0\xA8\x86\xE0\xA8\xB0.\xE0\xA8\x93.\xE0\xA8\xB8\xE0\xA9\x80 \xE0\xA8\xA4\xE0\xA9\x8B\xE0\xA8\x82 \xE0\xA8\xAA\xE0\xA8\xB9\xE0\xA8\xBF\xE0\xA8\xB2\xE0\xA8\xBE\xE0\xA8\x82") })
                    });
                    const _3_PL: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0ROCPrzed ROC") })
                    });
                    const _3_PT: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0MinguoAntes da R.C.") })
                    });
                    const _3_RO: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x04\0R.C.\xC3\xAE.R.C.") })
                    });
                    const _3_SC: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x05\0R.d.Ta.R.d.T.") })
                    });
                    const _3_SK: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0ROCpred ROC") })
                    });
                    const _3_SL: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x0E\0Minguo koledarpred RK") })
                    });
                    const _3_SO: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0MinguoKahor R.O.C.") })
                    });
                    const _3_SR_LATN: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x02\0RKPre RK") })
                    });
                    const _3_SV: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x04\0R.K.f\xC3\xB6re R.K.") })
                    });
                    const _3_TA: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0R.O.C.ROC\xE0\xAE\x95\xE0\xAF\x8D\xE0\xAE\x95\xE0\xAF\x81 \xE0\xAE\xAE\xE0\xAF\x81\xE0\xAE\xA9\xE0\xAF\x8D") })
                    });
                    const _3_TE: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0R.O.C.R.O.C. \xE0\xB0\xAA\xE0\xB1\x82\xE0\xB0\xB0\xE0\xB1\x8D\xE0\xB0\xB5\xE0\xB0\x82") })
                    });
                    const _3_TH: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x15\0\xE0\xB9\x84\xE0\xB8\x95\xE0\xB9\x89\xE0\xB8\xAB\xE0\xB8\xA7\xE0\xB8\xB1\xE0\xB8\x99\xE0\xB8\x9B\xE0\xB8\xB5\xE0\xB8\x81\xE0\xB9\x88\xE0\xB8\xAD\xE0\xB8\x99\xE0\xB9\x84\xE0\xB8\x95\xE0\xB9\x89\xE0\xB8\xAB\xE0\xB8\xA7\xE0\xB8\xB1\xE0\xB8\x99") })
                    });
                    const _3_UG: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\n\0\xD9\x85\xD9\x89\xD9\x86\xDA\xAF\xD9\x88Before R.O.C.") })
                    });
                    const _3_UND: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0R.O.C.Before R.O.C.") })
                    });
                    const _3_UR: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x15\0\xD8\xAC\xD9\x85\xDB\x81\xD9\x88\xD8\xB1\xDB\x8C\xDB\x81 \xDA\x86\xDB\x8C\xD9\x86\xD9\x82\xD8\xA8\xD9\x84 \xD8\xA7\xD8\xB2 \xD8\xAC\xD9\x85\xDB\x81\xD9\x88\xD8\xB1\xDB\x8C\xDB\x81 \xDA\x86\xDB\x8C\xD9\x86") })
                    });
                    const _3_VI: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0R.O.C.Tr\xC6\xB0\xE1\xBB\x9Bc R.O.C") })
                    });
                    const _3_YUE: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0\xE6\xB0\x91\xE5\x9C\x8B\xE6\xB0\x91\xE5\x9C\x8B\xE5\x89\x8D") })
                    });
                    const _4_DE: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0Minguov. VR China") })
                    });
                    const _4_IS: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0Minguofyrir lv.K.") })
                    });
                    const _4_LV: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0Mi\xC5\x86gopirms rep.") })
                    });
                    const _4_MS: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0R.O.C.Sblm R.O.C") })
                    });
                    const _4_PL: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0ROCprzed ROC") })
                    });
                    const _4_RU: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x0C\0\xD0\x9C\xD0\xB8\xD0\xBD\xD1\x8C\xD0\xB3\xD0\xBE\xD0\xB4\xD0\xBE \xD1\x80\xD0\xB5\xD1\x81\xD0\xBF.") })
                    });
                    const _4_SV: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x04\0R.K.f.R.K.") })
                    });
                    const _5_AST: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0Minguoantes de la R.D.C.") })
                    });
                    const _5_BR: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\r\0Republik Sinaa-raok Republik Sina") })
                    });
                    const _5_CA: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0ROCAbans de ROC") })
                    });
                    const _5_DE: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0Minguovor Volksrepublik China") })
                    });
                    const _5_FI: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0Minguoennen Kiinan tasavaltaa") })
                    });
                    const _5_FR: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0RdCavant RdC") })
                    });
                    const _5_GD: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x08\0M\xC3\xADngu\xC3\xB3Ro Ph. na S\xC3\xACne") })
                    });
                    const _5_HE: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0+\0\xD7\x9C\xD7\xA1\xD7\xA4\xD7\x99\xD7\xA8\xD7\xAA \xD7\x94\xD7\xA8\xD7\xA4\xD7\x95\xD7\x91\xD7\x9C\xD7\x99\xD7\xA7\xD7\x94 \xD7\xA9\xD7\x9C \xD7\xA1\xD7\x99\xD7\x9F\xD7\x9C\xD7\xA4\xD7\xA0\xD7\x99 \xD7\x94\xD7\xA8\xD7\xA4\xD7\x95\xD7\x91\xD7\x9C\xD7\x99\xD7\xA7\xD7\x94 \xD7\xA9\xD7\x9C \xD7\xA1\xD7\x99\xD7\x9F") })
                    });
                    const _5_IS: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0Minguofyrir l\xC3\xBD\xC3\xB0veldi K\xC3\xADna") })
                    });
                    const _5_LV: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0Mi\xC5\x86gopirms \xC4\xB6\xC4\xABnas Republikas dibin\xC4\x81\xC5\xA1anas") })
                    });
                    const _5_MK: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x0C\0\xD0\xBC\xD0\xB8\xD0\xBD\xD0\xB3\xD1\x83\xD0\xBE\xD0\xBF\xD1\x80\xD0\xB5\xD0\xB4 \xD0\xA0.\xD0\x9A.") })
                    });
                    const _5_ML: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x15\0\xE0\xB4\xAE\xE0\xB4\xBF\xE0\xB4\x82\xE0\xB4\x97\xE0\xB5\x8D\xE0\xB4\xB5\xE0\xB5\x8BR.O.C-\xE0\xB4\xAF\xE0\xB5\x8D\xE2\x80\x8C\xE0\xB4\x95\xE0\xB5\x8D\xE0\xB4\x95\xE0\xB5\x8D \xE0\xB4\xAE\xE0\xB5\x81\xE0\xB4\xAE\xE0\xB5\x8D\xE0\xB4\xAA\xE0\xB5\x8D") })
                    });
                    const _5_MS: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0R.O.C.Sebelum R.O.C") })
                    });
                    const _5_NO: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0MinguoF\xC3\xB8r R.O.C.") })
                    });
                    const _5_PA: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x0C\0\xE0\xA8\xAE\xE0\xA8\xBF\xE0\xA9\xB0\xE0\xA8\x97\xE0\xA8\x9A\xE0\xA9\x80\xE0\xA8\xA8 \xE0\xA8\xA6\xE0\xA9\x87 \xE0\xA8\x97\xE0\xA8\xA3\xE0\xA8\xB0\xE0\xA8\xBE\xE0\xA8\x9C \xE0\xA8\xA4\xE0\xA9\x8B\xE0\xA8\x82 \xE0\xA8\xAA\xE0\xA8\xB9\xE0\xA8\xBF\xE0\xA8\xB2\xE0\xA8\xBE\xE0\xA8\x82") })
                    });
                    const _5_RO: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x0F\0Republica China\xC3\xAEnainte de Republica China") })
                    });
                    const _5_RU: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x0C\0\xD0\x9C\xD0\xB8\xD0\xBD\xD1\x8C\xD0\xB3\xD0\xBE\xD0\xB4\xD0\xBE \xD0\xBE\xD1\x81\xD0\xBD\xD0\xBE\xD0\xB2\xD0\xB0\xD0\xBD\xD0\xB8\xD1\x8F \xD0\x9A\xD0\xB8\xD1\x82\xD0\xB0\xD0\xB9\xD1\x81\xD0\xBA\xD0\xBE\xD0\xB9 \xD1\x80\xD0\xB5\xD1\x81\xD0\xBF\xD1\x83\xD0\xB1\xD0\xBB\xD0\xB8\xD0\xBA\xD0\xB8") })
                    });
                    const _5_SC: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0R.d.T.in antis de sa R.d.T.") })
                    });
                    const _5_SV: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0Minguof\xC3\xB6re Republiken Kina") })
                    });
                    const _5_TA: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0R.O.C.R.O.C. -\xE0\xAE\x95\xE0\xAF\x8D\xE0\xAE\x95\xE0\xAF\x81 \xE0\xAE\xAE\xE0\xAF\x81\xE0\xAE\xA9\xE0\xAF\x8D\xE0\xAE\xAA\xE0\xAF\x81") })
                    });
                    const _5_TR: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0MinguoR.O.C. \xC3\x96ncesi") })
                    });
                    const _5_UG: &S = &icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0rocroc-inverse") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\n\0\xD9\x85\xD9\x89\xD9\x86\xDA\xAF\xD9\x88\xD8\xAC\xDB\x87\xDA\xAD\xD8\xAE\xDB\x87\xD8\xA7 \xD9\x85\xD9\x89\xD9\x86\xDA\xAF\xD9\x88\xD8\xAF\xD9\x89\xD9\x86 \xD8\xA8\xDB\x87\xD8\xB1\xDB\x87\xD9\x86") })
                    });
                    &[_3_AR, _3_AST, _3_BN, _3_BR, _3_BS, _3_BS_CYRL, _3_CS, _3_DA, _3_DE, _3_EL, _3_EN, _3_ES, _3_ES_419, _3_EU, _3_FA, _3_FF_ADLM, _3_FI, _3_FIL, _3_FR, _3_DE, _3_GD, _3_GU, _3_HE, _3_BS, _3_HU, _3_ID, _3_IS, _3_IT, _3_JA, _3_KN, _3_KO, _3_DE, _3_LO, _3_LT, _3_LV, _3_MK, _3_ML, _3_MR, _3_NL, _3_NO, _3_PA, _3_PL, _3_PT, _3_RO, _3_DE, _3_SC, _3_SK, _3_SL, _3_SO, _3_BS_CYRL, _3_SR_LATN, _3_SV, _3_TA, _3_TE, _3_TH, _3_DE, _3_UG, _3_UND, _3_UR, _3_VI, _3_YUE, _3_JA, _3_JA, _3_YUE, _3_AR, _3_AST, _3_BN, _3_BR, _3_BS, _3_BS_CYRL, _3_CS, _3_DA, _4_DE, _3_EL, _3_EN, _3_ES, _3_ES_419, _3_EU, _3_FA, _3_FF_ADLM, _3_FI, _3_FIL, _3_FR, _3_DE, _3_GD, _3_GU, _3_HE, _3_BS, _3_HU, _3_ID, _4_IS, _3_IT, _3_JA, _3_KN, _3_KO, _3_DE, _3_LO, _3_LT, _4_LV, _3_MK, _3_ML, _3_MR, _4_MS, _3_NL, _3_NO, _3_PA, _4_PL, _3_PT, _3_RO, _4_RU, _3_SC, _3_SK, _3_SL, _3_SO, _3_BS_CYRL, _3_SR_LATN, _4_SV, _3_TA, _3_TE, _3_TH, _3_DE, _3_UG, _3_UND, _3_UR, _3_VI, _3_YUE, _3_JA, _3_JA, _3_YUE, _3_AR, _5_AST, _3_BN, _5_BR, _3_BS, _3_BS_CYRL, _5_CA, _3_CS, _3_DA, _5_DE, _3_EL, _3_EN, _3_ES, _3_ES_419, _3_EU, _3_FA, _3_FF_ADLM, _5_FI, _3_FIL, _5_FR, _3_DE, _5_GD, _3_GU, _5_HE, _3_BS, _3_HU, _3_ID, _5_IS, _3_IT, _3_JA, _3_KN, _3_KO, _3_DE, _3_LO, _3_LT, _5_LV, _5_MK, _5_ML, _3_MR, _5_MS, _3_NL, _5_NO, _5_PA, _4_PL, _3_PT, _5_RO, _5_RU, _5_SC, _3_SK, _3_SL, _3_SO, _3_BS_CYRL, _3_SR_LATN, _5_SV, _5_TA, _3_TE, _3_TH, _5_TR, _5_UG, _3_UND, _3_UR, _3_VI, _3_YUE, _3_JA, _3_JA, _3_YUE]
                },
            );
        }
        #[clippy::msrv = "1.70"]
        impl icu_provider::DataProvider<icu::datetime::provider::neo::RocYearNamesV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::datetime::provider::neo::RocYearNamesV1Marker>, icu_provider::DataError> {
                let mut metadata = icu_provider::DataResponseMetadata::default();
                let payload = if let Some(payload) = icu_provider_baked::DataStore::get(&Self::DATA_ROC_YEAR_NAMES_V1_MARKER, req.id) {
                    payload
                } else {
                    const FALLBACKER: icu::locale::fallback::LocaleFallbackerWithConfig<'static> = icu::locale::fallback::LocaleFallbacker::new().for_config(<icu::datetime::provider::neo::RocYearNamesV1Marker as icu_provider::DataMarker>::INFO.fallback_config);
                    let mut fallback_iterator = FALLBACKER.fallback_for(req.id.locale.clone());
                    loop {
                        if let Some(payload) = icu_provider_baked::DataStore::get(&Self::DATA_ROC_YEAR_NAMES_V1_MARKER, icu_provider::DataIdentifierBorrowed::for_marker_attributes_and_locale(req.id.marker_attributes, fallback_iterator.get())) {
                            metadata.locale = Some(fallback_iterator.take());
                            break payload;
                        }
                        if fallback_iterator.get().is_und() {
                            return Err(icu_provider::DataErrorKind::IdentifierNotFound.with_req(<icu::datetime::provider::neo::RocYearNamesV1Marker as icu_provider::DataMarker>::INFO, req));
                        }
                        fallback_iterator.step();
                    }
                };
                Ok(icu_provider::DataResponse { payload: icu_provider::DataPayload::from_static_ref(payload), metadata })
            }
        }
    };
    ($ provider : ty , ITER) => {
        __impl_roc_year_names_v1_marker!($provider);
        #[clippy::msrv = "1.70"]
        impl icu_provider::IterableDataProvider<icu::datetime::provider::neo::RocYearNamesV1Marker> for $provider {
            fn iter_ids(&self) -> Result<std::collections::HashSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok(icu_provider_baked::DataStore::iter(&Self::DATA_ROC_YEAR_NAMES_V1_MARKER).collect())
            }
        }
    };
}
#[doc(inline)]
pub use __impl_roc_year_names_v1_marker as impl_roc_year_names_v1_marker;
