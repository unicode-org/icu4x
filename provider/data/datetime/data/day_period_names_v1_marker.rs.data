// @generated
/// Implement `DataProvider<DayPeriodNamesV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
///
/// Using this implementation will embed the following data in the binary's data segment:
/// * 18912B[^1] for the lookup data structure (944 data identifiers)
/// * 17661B[^1] for the actual data (293 unique structs)
///
/// [^1]: these numbers can be smaller in practice due to linker deduplication
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_day_period_names_v1_marker {
    ($ provider : ty) => {
        #[clippy::msrv = "1.70"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.70"]
        impl $provider {
            const DATA_DAY_PERIOD_NAMES_V1_MARKER: icu_provider_baked::binary_search::Data<icu_provider_baked::binary_search::AttributesAndLocale<2usize, 10usize>, icu::datetime::provider::neo::DayPeriodNamesV1Marker> = icu_provider_baked::binary_search::Data(
                {
                    use icu_provider_baked::binary_search::tinystr::tinystr;
                    &[(tinystr!(2usize, "3"), tinystr!(10usize, "af")), (tinystr!(2usize, "3"), tinystr!(10usize, "am")), (tinystr!(2usize, "3"), tinystr!(10usize, "ar")), (tinystr!(2usize, "3"), tinystr!(10usize, "as")), (tinystr!(2usize, "3"), tinystr!(10usize, "az")), (tinystr!(2usize, "3"), tinystr!(10usize, "bg")), (tinystr!(2usize, "3"), tinystr!(10usize, "blo")), (tinystr!(2usize, "3"), tinystr!(10usize, "br")), (tinystr!(2usize, "3"), tinystr!(10usize, "brx")), (tinystr!(2usize, "3"), tinystr!(10usize, "bs")), (tinystr!(2usize, "3"), tinystr!(10usize, "bs-Cyrl")), (tinystr!(2usize, "3"), tinystr!(10usize, "ca")), (tinystr!(2usize, "3"), tinystr!(10usize, "chr")), (tinystr!(2usize, "3"), tinystr!(10usize, "cs")), (tinystr!(2usize, "3"), tinystr!(10usize, "cy")), (tinystr!(2usize, "3"), tinystr!(10usize, "da")), (tinystr!(2usize, "3"), tinystr!(10usize, "de")), (tinystr!(2usize, "3"), tinystr!(10usize, "doi")), (tinystr!(2usize, "3"), tinystr!(10usize, "dsb")), (tinystr!(2usize, "3"), tinystr!(10usize, "el")), (tinystr!(2usize, "3"), tinystr!(10usize, "en")), (tinystr!(2usize, "3"), tinystr!(10usize, "en-001")), (tinystr!(2usize, "3"), tinystr!(10usize, "en-AU")), (tinystr!(2usize, "3"), tinystr!(10usize, "en-CA")), (tinystr!(2usize, "3"), tinystr!(10usize, "eo")), (tinystr!(2usize, "3"), tinystr!(10usize, "es")), (tinystr!(2usize, "3"), tinystr!(10usize, "es-419")), (tinystr!(2usize, "3"), tinystr!(10usize, "es-AR")), (tinystr!(2usize, "3"), tinystr!(10usize, "es-BO")), (tinystr!(2usize, "3"), tinystr!(10usize, "es-CL")), (tinystr!(2usize, "3"), tinystr!(10usize, "es-CO")), (tinystr!(2usize, "3"), tinystr!(10usize, "es-CR")), (tinystr!(2usize, "3"), tinystr!(10usize, "es-DO")), (tinystr!(2usize, "3"), tinystr!(10usize, "es-EC")), (tinystr!(2usize, "3"), tinystr!(10usize, "es-GT")), (tinystr!(2usize, "3"), tinystr!(10usize, "es-HN")), (tinystr!(2usize, "3"), tinystr!(10usize, "es-NI")), (tinystr!(2usize, "3"), tinystr!(10usize, "es-PA")), (tinystr!(2usize, "3"), tinystr!(10usize, "es-PE")), (tinystr!(2usize, "3"), tinystr!(10usize, "es-PR")), (tinystr!(2usize, "3"), tinystr!(10usize, "es-PY")), (tinystr!(2usize, "3"), tinystr!(10usize, "es-SV")), (tinystr!(2usize, "3"), tinystr!(10usize, "es-UY")), (tinystr!(2usize, "3"), tinystr!(10usize, "es-VE")), (tinystr!(2usize, "3"), tinystr!(10usize, "et")), (tinystr!(2usize, "3"), tinystr!(10usize, "eu")), (tinystr!(2usize, "3"), tinystr!(10usize, "fa")), (tinystr!(2usize, "3"), tinystr!(10usize, "ff-Adlm")), (tinystr!(2usize, "3"), tinystr!(10usize, "fi")), (tinystr!(2usize, "3"), tinystr!(10usize, "fil")), (tinystr!(2usize, "3"), tinystr!(10usize, "fr")), (tinystr!(2usize, "3"), tinystr!(10usize, "fr-CA")), (tinystr!(2usize, "3"), tinystr!(10usize, "fr-CH")), (tinystr!(2usize, "3"), tinystr!(10usize, "fr-CM")), (tinystr!(2usize, "3"), tinystr!(10usize, "fr-RE")), (tinystr!(2usize, "3"), tinystr!(10usize, "fr-SN")), (tinystr!(2usize, "3"), tinystr!(10usize, "ga")), (tinystr!(2usize, "3"), tinystr!(10usize, "gd")), (tinystr!(2usize, "3"), tinystr!(10usize, "gl")), (tinystr!(2usize, "3"), tinystr!(10usize, "gu")), (tinystr!(2usize, "3"), tinystr!(10usize, "ha")), (tinystr!(2usize, "3"), tinystr!(10usize, "he")), (tinystr!(2usize, "3"), tinystr!(10usize, "hi")), (tinystr!(2usize, "3"), tinystr!(10usize, "hi-Latn")), (tinystr!(2usize, "3"), tinystr!(10usize, "hr")), (tinystr!(2usize, "3"), tinystr!(10usize, "hsb")), (tinystr!(2usize, "3"), tinystr!(10usize, "hu")), (tinystr!(2usize, "3"), tinystr!(10usize, "hy")), (tinystr!(2usize, "3"), tinystr!(10usize, "id")), (tinystr!(2usize, "3"), tinystr!(10usize, "ig")), (tinystr!(2usize, "3"), tinystr!(10usize, "is")), (tinystr!(2usize, "3"), tinystr!(10usize, "it")), (tinystr!(2usize, "3"), tinystr!(10usize, "ja")), (tinystr!(2usize, "3"), tinystr!(10usize, "jv")), (tinystr!(2usize, "3"), tinystr!(10usize, "ka")), (tinystr!(2usize, "3"), tinystr!(10usize, "kea")), (tinystr!(2usize, "3"), tinystr!(10usize, "kgp")), (tinystr!(2usize, "3"), tinystr!(10usize, "kk")), (tinystr!(2usize, "3"), tinystr!(10usize, "km")), (tinystr!(2usize, "3"), tinystr!(10usize, "kn")), (tinystr!(2usize, "3"), tinystr!(10usize, "ko")), (tinystr!(2usize, "3"), tinystr!(10usize, "ku")), (tinystr!(2usize, "3"), tinystr!(10usize, "kxv")), (tinystr!(2usize, "3"), tinystr!(10usize, "ky")), (tinystr!(2usize, "3"), tinystr!(10usize, "lb")), (tinystr!(2usize, "3"), tinystr!(10usize, "lo")), (tinystr!(2usize, "3"), tinystr!(10usize, "lt")), (tinystr!(2usize, "3"), tinystr!(10usize, "lv")), (tinystr!(2usize, "3"), tinystr!(10usize, "mai")), (tinystr!(2usize, "3"), tinystr!(10usize, "mk")), (tinystr!(2usize, "3"), tinystr!(10usize, "ml")), (tinystr!(2usize, "3"), tinystr!(10usize, "mn")), (tinystr!(2usize, "3"), tinystr!(10usize, "mni")), (tinystr!(2usize, "3"), tinystr!(10usize, "mr")), (tinystr!(2usize, "3"), tinystr!(10usize, "ms")), (tinystr!(2usize, "3"), tinystr!(10usize, "my")), (tinystr!(2usize, "3"), tinystr!(10usize, "ne")), (tinystr!(2usize, "3"), tinystr!(10usize, "nl")), (tinystr!(2usize, "3"), tinystr!(10usize, "nn")), (tinystr!(2usize, "3"), tinystr!(10usize, "no")), (tinystr!(2usize, "3"), tinystr!(10usize, "nqo")), (tinystr!(2usize, "3"), tinystr!(10usize, "pa")), (tinystr!(2usize, "3"), tinystr!(10usize, "pcm")), (tinystr!(2usize, "3"), tinystr!(10usize, "pl")), (tinystr!(2usize, "3"), tinystr!(10usize, "pt")), (tinystr!(2usize, "3"), tinystr!(10usize, "pt-PT")), (tinystr!(2usize, "3"), tinystr!(10usize, "qu")), (tinystr!(2usize, "3"), tinystr!(10usize, "ro")), (tinystr!(2usize, "3"), tinystr!(10usize, "ru")), (tinystr!(2usize, "3"), tinystr!(10usize, "sah")), (tinystr!(2usize, "3"), tinystr!(10usize, "sd")), (tinystr!(2usize, "3"), tinystr!(10usize, "si")), (tinystr!(2usize, "3"), tinystr!(10usize, "sk")), (tinystr!(2usize, "3"), tinystr!(10usize, "sl")), (tinystr!(2usize, "3"), tinystr!(10usize, "so")), (tinystr!(2usize, "3"), tinystr!(10usize, "sq")), (tinystr!(2usize, "3"), tinystr!(10usize, "sr")), (tinystr!(2usize, "3"), tinystr!(10usize, "sr-BA")), (tinystr!(2usize, "3"), tinystr!(10usize, "sr-Latn")), (tinystr!(2usize, "3"), tinystr!(10usize, "sr-Latn-BA")), (tinystr!(2usize, "3"), tinystr!(10usize, "sr-ME")), (tinystr!(2usize, "3"), tinystr!(10usize, "sv")), (tinystr!(2usize, "3"), tinystr!(10usize, "sw")), (tinystr!(2usize, "3"), tinystr!(10usize, "syr")), (tinystr!(2usize, "3"), tinystr!(10usize, "szl")), (tinystr!(2usize, "3"), tinystr!(10usize, "ta")), (tinystr!(2usize, "3"), tinystr!(10usize, "te")), (tinystr!(2usize, "3"), tinystr!(10usize, "th")), (tinystr!(2usize, "3"), tinystr!(10usize, "ti")), (tinystr!(2usize, "3"), tinystr!(10usize, "tk")), (tinystr!(2usize, "3"), tinystr!(10usize, "to")), (tinystr!(2usize, "3"), tinystr!(10usize, "tr")), (tinystr!(2usize, "3"), tinystr!(10usize, "ug")), (tinystr!(2usize, "3"), tinystr!(10usize, "uk")), (tinystr!(2usize, "3"), tinystr!(10usize, "und")), (tinystr!(2usize, "3"), tinystr!(10usize, "ur")), (tinystr!(2usize, "3"), tinystr!(10usize, "uz")), (tinystr!(2usize, "3"), tinystr!(10usize, "uz-Cyrl")), (tinystr!(2usize, "3"), tinystr!(10usize, "vi")), (tinystr!(2usize, "3"), tinystr!(10usize, "wo")), (tinystr!(2usize, "3"), tinystr!(10usize, "xnr")), (tinystr!(2usize, "3"), tinystr!(10usize, "yo")), (tinystr!(2usize, "3"), tinystr!(10usize, "yo-BJ")), (tinystr!(2usize, "3"), tinystr!(10usize, "yrl")), (tinystr!(2usize, "3"), tinystr!(10usize, "yrl-CO")), (tinystr!(2usize, "3"), tinystr!(10usize, "yrl-VE")), (tinystr!(2usize, "3"), tinystr!(10usize, "yue")), (tinystr!(2usize, "3"), tinystr!(10usize, "yue-Hans")), (tinystr!(2usize, "3"), tinystr!(10usize, "zh")), (tinystr!(2usize, "3"), tinystr!(10usize, "zh-Hant")), (tinystr!(2usize, "3s"), tinystr!(10usize, "af")), (tinystr!(2usize, "3s"), tinystr!(10usize, "am")), (tinystr!(2usize, "3s"), tinystr!(10usize, "ar")), (tinystr!(2usize, "3s"), tinystr!(10usize, "as")), (tinystr!(2usize, "3s"), tinystr!(10usize, "az")), (tinystr!(2usize, "3s"), tinystr!(10usize, "bg")), (tinystr!(2usize, "3s"), tinystr!(10usize, "blo")), (tinystr!(2usize, "3s"), tinystr!(10usize, "br")), (tinystr!(2usize, "3s"), tinystr!(10usize, "brx")), (tinystr!(2usize, "3s"), tinystr!(10usize, "bs")), (tinystr!(2usize, "3s"), tinystr!(10usize, "bs-Cyrl")), (tinystr!(2usize, "3s"), tinystr!(10usize, "ca")), (tinystr!(2usize, "3s"), tinystr!(10usize, "chr")), (tinystr!(2usize, "3s"), tinystr!(10usize, "cs")), (tinystr!(2usize, "3s"), tinystr!(10usize, "cy")), (tinystr!(2usize, "3s"), tinystr!(10usize, "da")), (tinystr!(2usize, "3s"), tinystr!(10usize, "de")), (tinystr!(2usize, "3s"), tinystr!(10usize, "doi")), (tinystr!(2usize, "3s"), tinystr!(10usize, "dsb")), (tinystr!(2usize, "3s"), tinystr!(10usize, "el")), (tinystr!(2usize, "3s"), tinystr!(10usize, "en")), (tinystr!(2usize, "3s"), tinystr!(10usize, "en-001")), (tinystr!(2usize, "3s"), tinystr!(10usize, "en-AU")), (tinystr!(2usize, "3s"), tinystr!(10usize, "en-CA")), (tinystr!(2usize, "3s"), tinystr!(10usize, "eo")), (tinystr!(2usize, "3s"), tinystr!(10usize, "es")), (tinystr!(2usize, "3s"), tinystr!(10usize, "es-419")), (tinystr!(2usize, "3s"), tinystr!(10usize, "es-AR")), (tinystr!(2usize, "3s"), tinystr!(10usize, "es-BO")), (tinystr!(2usize, "3s"), tinystr!(10usize, "es-CL")), (tinystr!(2usize, "3s"), tinystr!(10usize, "es-CO")), (tinystr!(2usize, "3s"), tinystr!(10usize, "es-CR")), (tinystr!(2usize, "3s"), tinystr!(10usize, "es-DO")), (tinystr!(2usize, "3s"), tinystr!(10usize, "es-EC")), (tinystr!(2usize, "3s"), tinystr!(10usize, "es-GT")), (tinystr!(2usize, "3s"), tinystr!(10usize, "es-HN")), (tinystr!(2usize, "3s"), tinystr!(10usize, "es-MX")), (tinystr!(2usize, "3s"), tinystr!(10usize, "es-NI")), (tinystr!(2usize, "3s"), tinystr!(10usize, "es-PA")), (tinystr!(2usize, "3s"), tinystr!(10usize, "es-PE")), (tinystr!(2usize, "3s"), tinystr!(10usize, "es-PR")), (tinystr!(2usize, "3s"), tinystr!(10usize, "es-PY")), (tinystr!(2usize, "3s"), tinystr!(10usize, "es-SV")), (tinystr!(2usize, "3s"), tinystr!(10usize, "es-US")), (tinystr!(2usize, "3s"), tinystr!(10usize, "es-UY")), (tinystr!(2usize, "3s"), tinystr!(10usize, "es-VE")), (tinystr!(2usize, "3s"), tinystr!(10usize, "et")), (tinystr!(2usize, "3s"), tinystr!(10usize, "eu")), (tinystr!(2usize, "3s"), tinystr!(10usize, "fa")), (tinystr!(2usize, "3s"), tinystr!(10usize, "ff-Adlm")), (tinystr!(2usize, "3s"), tinystr!(10usize, "fi")), (tinystr!(2usize, "3s"), tinystr!(10usize, "fil")), (tinystr!(2usize, "3s"), tinystr!(10usize, "fr")), (tinystr!(2usize, "3s"), tinystr!(10usize, "fr-CA")), (tinystr!(2usize, "3s"), tinystr!(10usize, "fr-CH")), (tinystr!(2usize, "3s"), tinystr!(10usize, "fr-CM")), (tinystr!(2usize, "3s"), tinystr!(10usize, "fr-RE")), (tinystr!(2usize, "3s"), tinystr!(10usize, "fr-SN")), (tinystr!(2usize, "3s"), tinystr!(10usize, "ga")), (tinystr!(2usize, "3s"), tinystr!(10usize, "gd")), (tinystr!(2usize, "3s"), tinystr!(10usize, "gl")), (tinystr!(2usize, "3s"), tinystr!(10usize, "gu")), (tinystr!(2usize, "3s"), tinystr!(10usize, "ha")), (tinystr!(2usize, "3s"), tinystr!(10usize, "he")), (tinystr!(2usize, "3s"), tinystr!(10usize, "hi")), (tinystr!(2usize, "3s"), tinystr!(10usize, "hr")), (tinystr!(2usize, "3s"), tinystr!(10usize, "hsb")), (tinystr!(2usize, "3s"), tinystr!(10usize, "hu")), (tinystr!(2usize, "3s"), tinystr!(10usize, "hy")), (tinystr!(2usize, "3s"), tinystr!(10usize, "id")), (tinystr!(2usize, "3s"), tinystr!(10usize, "ig")), (tinystr!(2usize, "3s"), tinystr!(10usize, "is")), (tinystr!(2usize, "3s"), tinystr!(10usize, "it")), (tinystr!(2usize, "3s"), tinystr!(10usize, "ja")), (tinystr!(2usize, "3s"), tinystr!(10usize, "jv")), (tinystr!(2usize, "3s"), tinystr!(10usize, "ka")), (tinystr!(2usize, "3s"), tinystr!(10usize, "kea")), (tinystr!(2usize, "3s"), tinystr!(10usize, "kgp")), (tinystr!(2usize, "3s"), tinystr!(10usize, "kk")), (tinystr!(2usize, "3s"), tinystr!(10usize, "km")), (tinystr!(2usize, "3s"), tinystr!(10usize, "kn")), (tinystr!(2usize, "3s"), tinystr!(10usize, "ko")), (tinystr!(2usize, "3s"), tinystr!(10usize, "ku")), (tinystr!(2usize, "3s"), tinystr!(10usize, "kxv")), (tinystr!(2usize, "3s"), tinystr!(10usize, "ky")), (tinystr!(2usize, "3s"), tinystr!(10usize, "lb")), (tinystr!(2usize, "3s"), tinystr!(10usize, "lo")), (tinystr!(2usize, "3s"), tinystr!(10usize, "lt")), (tinystr!(2usize, "3s"), tinystr!(10usize, "lv")), (tinystr!(2usize, "3s"), tinystr!(10usize, "mai")), (tinystr!(2usize, "3s"), tinystr!(10usize, "mk")), (tinystr!(2usize, "3s"), tinystr!(10usize, "ml")), (tinystr!(2usize, "3s"), tinystr!(10usize, "mn")), (tinystr!(2usize, "3s"), tinystr!(10usize, "mni")), (tinystr!(2usize, "3s"), tinystr!(10usize, "mr")), (tinystr!(2usize, "3s"), tinystr!(10usize, "ms")), (tinystr!(2usize, "3s"), tinystr!(10usize, "my")), (tinystr!(2usize, "3s"), tinystr!(10usize, "ne")), (tinystr!(2usize, "3s"), tinystr!(10usize, "nl")), (tinystr!(2usize, "3s"), tinystr!(10usize, "nn")), (tinystr!(2usize, "3s"), tinystr!(10usize, "no")), (tinystr!(2usize, "3s"), tinystr!(10usize, "nqo")), (tinystr!(2usize, "3s"), tinystr!(10usize, "or")), (tinystr!(2usize, "3s"), tinystr!(10usize, "pa")), (tinystr!(2usize, "3s"), tinystr!(10usize, "pl")), (tinystr!(2usize, "3s"), tinystr!(10usize, "ps")), (tinystr!(2usize, "3s"), tinystr!(10usize, "pt")), (tinystr!(2usize, "3s"), tinystr!(10usize, "pt-PT")), (tinystr!(2usize, "3s"), tinystr!(10usize, "qu")), (tinystr!(2usize, "3s"), tinystr!(10usize, "ro")), (tinystr!(2usize, "3s"), tinystr!(10usize, "ru")), (tinystr!(2usize, "3s"), tinystr!(10usize, "sah")), (tinystr!(2usize, "3s"), tinystr!(10usize, "sd")), (tinystr!(2usize, "3s"), tinystr!(10usize, "si")), (tinystr!(2usize, "3s"), tinystr!(10usize, "sk")), (tinystr!(2usize, "3s"), tinystr!(10usize, "sl")), (tinystr!(2usize, "3s"), tinystr!(10usize, "so")), (tinystr!(2usize, "3s"), tinystr!(10usize, "sq")), (tinystr!(2usize, "3s"), tinystr!(10usize, "sr")), (tinystr!(2usize, "3s"), tinystr!(10usize, "sr-BA")), (tinystr!(2usize, "3s"), tinystr!(10usize, "sr-Latn")), (tinystr!(2usize, "3s"), tinystr!(10usize, "sr-Latn-BA")), (tinystr!(2usize, "3s"), tinystr!(10usize, "sr-ME")), (tinystr!(2usize, "3s"), tinystr!(10usize, "sv")), (tinystr!(2usize, "3s"), tinystr!(10usize, "sw")), (tinystr!(2usize, "3s"), tinystr!(10usize, "syr")), (tinystr!(2usize, "3s"), tinystr!(10usize, "szl")), (tinystr!(2usize, "3s"), tinystr!(10usize, "ta")), (tinystr!(2usize, "3s"), tinystr!(10usize, "te")), (tinystr!(2usize, "3s"), tinystr!(10usize, "th")), (tinystr!(2usize, "3s"), tinystr!(10usize, "ti")), (tinystr!(2usize, "3s"), tinystr!(10usize, "tk")), (tinystr!(2usize, "3s"), tinystr!(10usize, "to")), (tinystr!(2usize, "3s"), tinystr!(10usize, "tr")), (tinystr!(2usize, "3s"), tinystr!(10usize, "ug")), (tinystr!(2usize, "3s"), tinystr!(10usize, "uk")), (tinystr!(2usize, "3s"), tinystr!(10usize, "und")), (tinystr!(2usize, "3s"), tinystr!(10usize, "ur")), (tinystr!(2usize, "3s"), tinystr!(10usize, "uz")), (tinystr!(2usize, "3s"), tinystr!(10usize, "uz-Cyrl")), (tinystr!(2usize, "3s"), tinystr!(10usize, "vi")), (tinystr!(2usize, "3s"), tinystr!(10usize, "wo")), (tinystr!(2usize, "3s"), tinystr!(10usize, "xnr")), (tinystr!(2usize, "3s"), tinystr!(10usize, "yo")), (tinystr!(2usize, "3s"), tinystr!(10usize, "yo-BJ")), (tinystr!(2usize, "3s"), tinystr!(10usize, "yrl")), (tinystr!(2usize, "3s"), tinystr!(10usize, "yrl-CO")), (tinystr!(2usize, "3s"), tinystr!(10usize, "yrl-VE")), (tinystr!(2usize, "3s"), tinystr!(10usize, "yue")), (tinystr!(2usize, "3s"), tinystr!(10usize, "yue-Hans")), (tinystr!(2usize, "3s"), tinystr!(10usize, "zh")), (tinystr!(2usize, "3s"), tinystr!(10usize, "zh-Hant")), (tinystr!(2usize, "4"), tinystr!(10usize, "af")), (tinystr!(2usize, "4"), tinystr!(10usize, "am")), (tinystr!(2usize, "4"), tinystr!(10usize, "ar")), (tinystr!(2usize, "4"), tinystr!(10usize, "as")), (tinystr!(2usize, "4"), tinystr!(10usize, "ast")), (tinystr!(2usize, "4"), tinystr!(10usize, "az")), (tinystr!(2usize, "4"), tinystr!(10usize, "be")), (tinystr!(2usize, "4"), tinystr!(10usize, "bg")), (tinystr!(2usize, "4"), tinystr!(10usize, "blo")), (tinystr!(2usize, "4"), tinystr!(10usize, "br")), (tinystr!(2usize, "4"), tinystr!(10usize, "brx")), (tinystr!(2usize, "4"), tinystr!(10usize, "bs")), (tinystr!(2usize, "4"), tinystr!(10usize, "bs-Cyrl")), (tinystr!(2usize, "4"), tinystr!(10usize, "ca")), (tinystr!(2usize, "4"), tinystr!(10usize, "ceb")), (tinystr!(2usize, "4"), tinystr!(10usize, "chr")), (tinystr!(2usize, "4"), tinystr!(10usize, "cs")), (tinystr!(2usize, "4"), tinystr!(10usize, "cy")), (tinystr!(2usize, "4"), tinystr!(10usize, "da")), (tinystr!(2usize, "4"), tinystr!(10usize, "de")), (tinystr!(2usize, "4"), tinystr!(10usize, "de-LU")), (tinystr!(2usize, "4"), tinystr!(10usize, "doi")), (tinystr!(2usize, "4"), tinystr!(10usize, "dsb")), (tinystr!(2usize, "4"), tinystr!(10usize, "el")), (tinystr!(2usize, "4"), tinystr!(10usize, "en")), (tinystr!(2usize, "4"), tinystr!(10usize, "en-AU")), (tinystr!(2usize, "4"), tinystr!(10usize, "en-CA")), (tinystr!(2usize, "4"), tinystr!(10usize, "eo")), (tinystr!(2usize, "4"), tinystr!(10usize, "es")), (tinystr!(2usize, "4"), tinystr!(10usize, "es-419")), (tinystr!(2usize, "4"), tinystr!(10usize, "es-AR")), (tinystr!(2usize, "4"), tinystr!(10usize, "es-BO")), (tinystr!(2usize, "4"), tinystr!(10usize, "es-CL")), (tinystr!(2usize, "4"), tinystr!(10usize, "es-CO")), (tinystr!(2usize, "4"), tinystr!(10usize, "es-CR")), (tinystr!(2usize, "4"), tinystr!(10usize, "es-DO")), (tinystr!(2usize, "4"), tinystr!(10usize, "es-EC")), (tinystr!(2usize, "4"), tinystr!(10usize, "es-GT")), (tinystr!(2usize, "4"), tinystr!(10usize, "es-HN")), (tinystr!(2usize, "4"), tinystr!(10usize, "es-MX")), (tinystr!(2usize, "4"), tinystr!(10usize, "es-NI")), (tinystr!(2usize, "4"), tinystr!(10usize, "es-PA")), (tinystr!(2usize, "4"), tinystr!(10usize, "es-PE")), (tinystr!(2usize, "4"), tinystr!(10usize, "es-PR")), (tinystr!(2usize, "4"), tinystr!(10usize, "es-PY")), (tinystr!(2usize, "4"), tinystr!(10usize, "es-SV")), (tinystr!(2usize, "4"), tinystr!(10usize, "es-UY")), (tinystr!(2usize, "4"), tinystr!(10usize, "es-VE")), (tinystr!(2usize, "4"), tinystr!(10usize, "et")), (tinystr!(2usize, "4"), tinystr!(10usize, "eu")), (tinystr!(2usize, "4"), tinystr!(10usize, "fa")), (tinystr!(2usize, "4"), tinystr!(10usize, "ff-Adlm")), (tinystr!(2usize, "4"), tinystr!(10usize, "fi")), (tinystr!(2usize, "4"), tinystr!(10usize, "fil")), (tinystr!(2usize, "4"), tinystr!(10usize, "fr")), (tinystr!(2usize, "4"), tinystr!(10usize, "fr-CA")), (tinystr!(2usize, "4"), tinystr!(10usize, "fr-CD")), (tinystr!(2usize, "4"), tinystr!(10usize, "fr-CH")), (tinystr!(2usize, "4"), tinystr!(10usize, "fr-CM")), (tinystr!(2usize, "4"), tinystr!(10usize, "ga")), (tinystr!(2usize, "4"), tinystr!(10usize, "gd")), (tinystr!(2usize, "4"), tinystr!(10usize, "gl")), (tinystr!(2usize, "4"), tinystr!(10usize, "gu")), (tinystr!(2usize, "4"), tinystr!(10usize, "ha")), (tinystr!(2usize, "4"), tinystr!(10usize, "he")), (tinystr!(2usize, "4"), tinystr!(10usize, "hi")), (tinystr!(2usize, "4"), tinystr!(10usize, "hr")), (tinystr!(2usize, "4"), tinystr!(10usize, "hsb")), (tinystr!(2usize, "4"), tinystr!(10usize, "hu")), (tinystr!(2usize, "4"), tinystr!(10usize, "hy")), (tinystr!(2usize, "4"), tinystr!(10usize, "id")), (tinystr!(2usize, "4"), tinystr!(10usize, "ig")), (tinystr!(2usize, "4"), tinystr!(10usize, "is")), (tinystr!(2usize, "4"), tinystr!(10usize, "it")), (tinystr!(2usize, "4"), tinystr!(10usize, "ja")), (tinystr!(2usize, "4"), tinystr!(10usize, "jv")), (tinystr!(2usize, "4"), tinystr!(10usize, "ka")), (tinystr!(2usize, "4"), tinystr!(10usize, "kea")), (tinystr!(2usize, "4"), tinystr!(10usize, "kgp")), (tinystr!(2usize, "4"), tinystr!(10usize, "kk")), (tinystr!(2usize, "4"), tinystr!(10usize, "km")), (tinystr!(2usize, "4"), tinystr!(10usize, "kn")), (tinystr!(2usize, "4"), tinystr!(10usize, "ko")), (tinystr!(2usize, "4"), tinystr!(10usize, "kok")), (tinystr!(2usize, "4"), tinystr!(10usize, "ks")), (tinystr!(2usize, "4"), tinystr!(10usize, "ku")), (tinystr!(2usize, "4"), tinystr!(10usize, "kxv")), (tinystr!(2usize, "4"), tinystr!(10usize, "ky")), (tinystr!(2usize, "4"), tinystr!(10usize, "lb")), (tinystr!(2usize, "4"), tinystr!(10usize, "lo")), (tinystr!(2usize, "4"), tinystr!(10usize, "lt")), (tinystr!(2usize, "4"), tinystr!(10usize, "lv")), (tinystr!(2usize, "4"), tinystr!(10usize, "mai")), (tinystr!(2usize, "4"), tinystr!(10usize, "mk")), (tinystr!(2usize, "4"), tinystr!(10usize, "ml")), (tinystr!(2usize, "4"), tinystr!(10usize, "mn")), (tinystr!(2usize, "4"), tinystr!(10usize, "mni")), (tinystr!(2usize, "4"), tinystr!(10usize, "mr")), (tinystr!(2usize, "4"), tinystr!(10usize, "ms")), (tinystr!(2usize, "4"), tinystr!(10usize, "mt")), (tinystr!(2usize, "4"), tinystr!(10usize, "my")), (tinystr!(2usize, "4"), tinystr!(10usize, "ne")), (tinystr!(2usize, "4"), tinystr!(10usize, "nl")), (tinystr!(2usize, "4"), tinystr!(10usize, "no")), (tinystr!(2usize, "4"), tinystr!(10usize, "nqo")), (tinystr!(2usize, "4"), tinystr!(10usize, "or")), (tinystr!(2usize, "4"), tinystr!(10usize, "pa")), (tinystr!(2usize, "4"), tinystr!(10usize, "pcm")), (tinystr!(2usize, "4"), tinystr!(10usize, "pl")), (tinystr!(2usize, "4"), tinystr!(10usize, "ps")), (tinystr!(2usize, "4"), tinystr!(10usize, "pt")), (tinystr!(2usize, "4"), tinystr!(10usize, "pt-PT")), (tinystr!(2usize, "4"), tinystr!(10usize, "qu")), (tinystr!(2usize, "4"), tinystr!(10usize, "ro")), (tinystr!(2usize, "4"), tinystr!(10usize, "ru")), (tinystr!(2usize, "4"), tinystr!(10usize, "sah")), (tinystr!(2usize, "4"), tinystr!(10usize, "sc")), (tinystr!(2usize, "4"), tinystr!(10usize, "sd")), (tinystr!(2usize, "4"), tinystr!(10usize, "si")), (tinystr!(2usize, "4"), tinystr!(10usize, "sk")), (tinystr!(2usize, "4"), tinystr!(10usize, "sl")), (tinystr!(2usize, "4"), tinystr!(10usize, "so")), (tinystr!(2usize, "4"), tinystr!(10usize, "sq")), (tinystr!(2usize, "4"), tinystr!(10usize, "sr")), (tinystr!(2usize, "4"), tinystr!(10usize, "sr-BA")), (tinystr!(2usize, "4"), tinystr!(10usize, "sr-Latn")), (tinystr!(2usize, "4"), tinystr!(10usize, "sr-Latn-BA")), (tinystr!(2usize, "4"), tinystr!(10usize, "sr-ME")), (tinystr!(2usize, "4"), tinystr!(10usize, "sv")), (tinystr!(2usize, "4"), tinystr!(10usize, "sw")), (tinystr!(2usize, "4"), tinystr!(10usize, "syr")), (tinystr!(2usize, "4"), tinystr!(10usize, "szl")), (tinystr!(2usize, "4"), tinystr!(10usize, "ta")), (tinystr!(2usize, "4"), tinystr!(10usize, "te")), (tinystr!(2usize, "4"), tinystr!(10usize, "th")), (tinystr!(2usize, "4"), tinystr!(10usize, "ti")), (tinystr!(2usize, "4"), tinystr!(10usize, "tk")), (tinystr!(2usize, "4"), tinystr!(10usize, "to")), (tinystr!(2usize, "4"), tinystr!(10usize, "tr")), (tinystr!(2usize, "4"), tinystr!(10usize, "ug")), (tinystr!(2usize, "4"), tinystr!(10usize, "uk")), (tinystr!(2usize, "4"), tinystr!(10usize, "und")), (tinystr!(2usize, "4"), tinystr!(10usize, "ur")), (tinystr!(2usize, "4"), tinystr!(10usize, "uz")), (tinystr!(2usize, "4"), tinystr!(10usize, "uz-Cyrl")), (tinystr!(2usize, "4"), tinystr!(10usize, "vi")), (tinystr!(2usize, "4"), tinystr!(10usize, "wo")), (tinystr!(2usize, "4"), tinystr!(10usize, "xnr")), (tinystr!(2usize, "4"), tinystr!(10usize, "yo")), (tinystr!(2usize, "4"), tinystr!(10usize, "yo-BJ")), (tinystr!(2usize, "4"), tinystr!(10usize, "yrl")), (tinystr!(2usize, "4"), tinystr!(10usize, "yrl-CO")), (tinystr!(2usize, "4"), tinystr!(10usize, "yrl-VE")), (tinystr!(2usize, "4"), tinystr!(10usize, "yue")), (tinystr!(2usize, "4"), tinystr!(10usize, "yue-Hans")), (tinystr!(2usize, "4"), tinystr!(10usize, "zh")), (tinystr!(2usize, "4"), tinystr!(10usize, "zh-Hant")), (tinystr!(2usize, "4"), tinystr!(10usize, "zu")), (tinystr!(2usize, "4s"), tinystr!(10usize, "af")), (tinystr!(2usize, "4s"), tinystr!(10usize, "am")), (tinystr!(2usize, "4s"), tinystr!(10usize, "ar")), (tinystr!(2usize, "4s"), tinystr!(10usize, "as")), (tinystr!(2usize, "4s"), tinystr!(10usize, "ast")), (tinystr!(2usize, "4s"), tinystr!(10usize, "az")), (tinystr!(2usize, "4s"), tinystr!(10usize, "bg")), (tinystr!(2usize, "4s"), tinystr!(10usize, "blo")), (tinystr!(2usize, "4s"), tinystr!(10usize, "br")), (tinystr!(2usize, "4s"), tinystr!(10usize, "brx")), (tinystr!(2usize, "4s"), tinystr!(10usize, "bs")), (tinystr!(2usize, "4s"), tinystr!(10usize, "bs-Cyrl")), (tinystr!(2usize, "4s"), tinystr!(10usize, "ca")), (tinystr!(2usize, "4s"), tinystr!(10usize, "chr")), (tinystr!(2usize, "4s"), tinystr!(10usize, "cs")), (tinystr!(2usize, "4s"), tinystr!(10usize, "cy")), (tinystr!(2usize, "4s"), tinystr!(10usize, "da")), (tinystr!(2usize, "4s"), tinystr!(10usize, "de")), (tinystr!(2usize, "4s"), tinystr!(10usize, "de-AT")), (tinystr!(2usize, "4s"), tinystr!(10usize, "de-LI")), (tinystr!(2usize, "4s"), tinystr!(10usize, "doi")), (tinystr!(2usize, "4s"), tinystr!(10usize, "dsb")), (tinystr!(2usize, "4s"), tinystr!(10usize, "el")), (tinystr!(2usize, "4s"), tinystr!(10usize, "en")), (tinystr!(2usize, "4s"), tinystr!(10usize, "en-001")), (tinystr!(2usize, "4s"), tinystr!(10usize, "en-AU")), (tinystr!(2usize, "4s"), tinystr!(10usize, "en-CA")), (tinystr!(2usize, "4s"), tinystr!(10usize, "eo")), (tinystr!(2usize, "4s"), tinystr!(10usize, "es")), (tinystr!(2usize, "4s"), tinystr!(10usize, "es-419")), (tinystr!(2usize, "4s"), tinystr!(10usize, "es-AR")), (tinystr!(2usize, "4s"), tinystr!(10usize, "es-BO")), (tinystr!(2usize, "4s"), tinystr!(10usize, "es-CL")), (tinystr!(2usize, "4s"), tinystr!(10usize, "es-CO")), (tinystr!(2usize, "4s"), tinystr!(10usize, "es-CR")), (tinystr!(2usize, "4s"), tinystr!(10usize, "es-DO")), (tinystr!(2usize, "4s"), tinystr!(10usize, "es-EC")), (tinystr!(2usize, "4s"), tinystr!(10usize, "es-GT")), (tinystr!(2usize, "4s"), tinystr!(10usize, "es-HN")), (tinystr!(2usize, "4s"), tinystr!(10usize, "es-MX")), (tinystr!(2usize, "4s"), tinystr!(10usize, "es-NI")), (tinystr!(2usize, "4s"), tinystr!(10usize, "es-PA")), (tinystr!(2usize, "4s"), tinystr!(10usize, "es-PE")), (tinystr!(2usize, "4s"), tinystr!(10usize, "es-PR")), (tinystr!(2usize, "4s"), tinystr!(10usize, "es-PY")), (tinystr!(2usize, "4s"), tinystr!(10usize, "es-SV")), (tinystr!(2usize, "4s"), tinystr!(10usize, "es-US")), (tinystr!(2usize, "4s"), tinystr!(10usize, "es-UY")), (tinystr!(2usize, "4s"), tinystr!(10usize, "es-VE")), (tinystr!(2usize, "4s"), tinystr!(10usize, "et")), (tinystr!(2usize, "4s"), tinystr!(10usize, "eu")), (tinystr!(2usize, "4s"), tinystr!(10usize, "fa")), (tinystr!(2usize, "4s"), tinystr!(10usize, "ff-Adlm")), (tinystr!(2usize, "4s"), tinystr!(10usize, "fi")), (tinystr!(2usize, "4s"), tinystr!(10usize, "fil")), (tinystr!(2usize, "4s"), tinystr!(10usize, "fr")), (tinystr!(2usize, "4s"), tinystr!(10usize, "fr-CA")), (tinystr!(2usize, "4s"), tinystr!(10usize, "fr-CD")), (tinystr!(2usize, "4s"), tinystr!(10usize, "fr-CH")), (tinystr!(2usize, "4s"), tinystr!(10usize, "fr-CM")), (tinystr!(2usize, "4s"), tinystr!(10usize, "fr-RE")), (tinystr!(2usize, "4s"), tinystr!(10usize, "fr-SN")), (tinystr!(2usize, "4s"), tinystr!(10usize, "ga")), (tinystr!(2usize, "4s"), tinystr!(10usize, "gd")), (tinystr!(2usize, "4s"), tinystr!(10usize, "gl")), (tinystr!(2usize, "4s"), tinystr!(10usize, "gu")), (tinystr!(2usize, "4s"), tinystr!(10usize, "ha")), (tinystr!(2usize, "4s"), tinystr!(10usize, "he")), (tinystr!(2usize, "4s"), tinystr!(10usize, "hi")), (tinystr!(2usize, "4s"), tinystr!(10usize, "hi-Latn")), (tinystr!(2usize, "4s"), tinystr!(10usize, "hr")), (tinystr!(2usize, "4s"), tinystr!(10usize, "hsb")), (tinystr!(2usize, "4s"), tinystr!(10usize, "hu")), (tinystr!(2usize, "4s"), tinystr!(10usize, "hy")), (tinystr!(2usize, "4s"), tinystr!(10usize, "id")), (tinystr!(2usize, "4s"), tinystr!(10usize, "ig")), (tinystr!(2usize, "4s"), tinystr!(10usize, "is")), (tinystr!(2usize, "4s"), tinystr!(10usize, "it")), (tinystr!(2usize, "4s"), tinystr!(10usize, "ja")), (tinystr!(2usize, "4s"), tinystr!(10usize, "jv")), (tinystr!(2usize, "4s"), tinystr!(10usize, "ka")), (tinystr!(2usize, "4s"), tinystr!(10usize, "kea")), (tinystr!(2usize, "4s"), tinystr!(10usize, "kgp")), (tinystr!(2usize, "4s"), tinystr!(10usize, "kk")), (tinystr!(2usize, "4s"), tinystr!(10usize, "km")), (tinystr!(2usize, "4s"), tinystr!(10usize, "kn")), (tinystr!(2usize, "4s"), tinystr!(10usize, "ko")), (tinystr!(2usize, "4s"), tinystr!(10usize, "ku")), (tinystr!(2usize, "4s"), tinystr!(10usize, "kxv")), (tinystr!(2usize, "4s"), tinystr!(10usize, "ky")), (tinystr!(2usize, "4s"), tinystr!(10usize, "lb")), (tinystr!(2usize, "4s"), tinystr!(10usize, "lo")), (tinystr!(2usize, "4s"), tinystr!(10usize, "lt")), (tinystr!(2usize, "4s"), tinystr!(10usize, "lv")), (tinystr!(2usize, "4s"), tinystr!(10usize, "mai")), (tinystr!(2usize, "4s"), tinystr!(10usize, "mk")), (tinystr!(2usize, "4s"), tinystr!(10usize, "ml")), (tinystr!(2usize, "4s"), tinystr!(10usize, "mn")), (tinystr!(2usize, "4s"), tinystr!(10usize, "mni")), (tinystr!(2usize, "4s"), tinystr!(10usize, "mr")), (tinystr!(2usize, "4s"), tinystr!(10usize, "ms")), (tinystr!(2usize, "4s"), tinystr!(10usize, "mt")), (tinystr!(2usize, "4s"), tinystr!(10usize, "my")), (tinystr!(2usize, "4s"), tinystr!(10usize, "ne")), (tinystr!(2usize, "4s"), tinystr!(10usize, "nl")), (tinystr!(2usize, "4s"), tinystr!(10usize, "nn")), (tinystr!(2usize, "4s"), tinystr!(10usize, "no")), (tinystr!(2usize, "4s"), tinystr!(10usize, "nqo")), (tinystr!(2usize, "4s"), tinystr!(10usize, "or")), (tinystr!(2usize, "4s"), tinystr!(10usize, "pa")), (tinystr!(2usize, "4s"), tinystr!(10usize, "pl")), (tinystr!(2usize, "4s"), tinystr!(10usize, "ps")), (tinystr!(2usize, "4s"), tinystr!(10usize, "pt")), (tinystr!(2usize, "4s"), tinystr!(10usize, "pt-PT")), (tinystr!(2usize, "4s"), tinystr!(10usize, "qu")), (tinystr!(2usize, "4s"), tinystr!(10usize, "ro")), (tinystr!(2usize, "4s"), tinystr!(10usize, "ru")), (tinystr!(2usize, "4s"), tinystr!(10usize, "sah")), (tinystr!(2usize, "4s"), tinystr!(10usize, "sd")), (tinystr!(2usize, "4s"), tinystr!(10usize, "si")), (tinystr!(2usize, "4s"), tinystr!(10usize, "sk")), (tinystr!(2usize, "4s"), tinystr!(10usize, "sl")), (tinystr!(2usize, "4s"), tinystr!(10usize, "so")), (tinystr!(2usize, "4s"), tinystr!(10usize, "sq")), (tinystr!(2usize, "4s"), tinystr!(10usize, "sr")), (tinystr!(2usize, "4s"), tinystr!(10usize, "sr-BA")), (tinystr!(2usize, "4s"), tinystr!(10usize, "sr-Latn")), (tinystr!(2usize, "4s"), tinystr!(10usize, "sr-Latn-BA")), (tinystr!(2usize, "4s"), tinystr!(10usize, "sr-Latn-XK")), (tinystr!(2usize, "4s"), tinystr!(10usize, "sr-ME")), (tinystr!(2usize, "4s"), tinystr!(10usize, "sr-XK")), (tinystr!(2usize, "4s"), tinystr!(10usize, "sv")), (tinystr!(2usize, "4s"), tinystr!(10usize, "sw")), (tinystr!(2usize, "4s"), tinystr!(10usize, "syr")), (tinystr!(2usize, "4s"), tinystr!(10usize, "szl")), (tinystr!(2usize, "4s"), tinystr!(10usize, "ta")), (tinystr!(2usize, "4s"), tinystr!(10usize, "te")), (tinystr!(2usize, "4s"), tinystr!(10usize, "th")), (tinystr!(2usize, "4s"), tinystr!(10usize, "ti")), (tinystr!(2usize, "4s"), tinystr!(10usize, "tk")), (tinystr!(2usize, "4s"), tinystr!(10usize, "to")), (tinystr!(2usize, "4s"), tinystr!(10usize, "tr")), (tinystr!(2usize, "4s"), tinystr!(10usize, "ug")), (tinystr!(2usize, "4s"), tinystr!(10usize, "uk")), (tinystr!(2usize, "4s"), tinystr!(10usize, "und")), (tinystr!(2usize, "4s"), tinystr!(10usize, "ur")), (tinystr!(2usize, "4s"), tinystr!(10usize, "uz")), (tinystr!(2usize, "4s"), tinystr!(10usize, "uz-Cyrl")), (tinystr!(2usize, "4s"), tinystr!(10usize, "vi")), (tinystr!(2usize, "4s"), tinystr!(10usize, "wo")), (tinystr!(2usize, "4s"), tinystr!(10usize, "xnr")), (tinystr!(2usize, "4s"), tinystr!(10usize, "yo")), (tinystr!(2usize, "4s"), tinystr!(10usize, "yo-BJ")), (tinystr!(2usize, "4s"), tinystr!(10usize, "yrl")), (tinystr!(2usize, "4s"), tinystr!(10usize, "yrl-CO")), (tinystr!(2usize, "4s"), tinystr!(10usize, "yrl-VE")), (tinystr!(2usize, "4s"), tinystr!(10usize, "yue")), (tinystr!(2usize, "4s"), tinystr!(10usize, "yue-Hans")), (tinystr!(2usize, "4s"), tinystr!(10usize, "zh")), (tinystr!(2usize, "4s"), tinystr!(10usize, "zh-Hant")), (tinystr!(2usize, "5"), tinystr!(10usize, "af")), (tinystr!(2usize, "5"), tinystr!(10usize, "am")), (tinystr!(2usize, "5"), tinystr!(10usize, "ar")), (tinystr!(2usize, "5"), tinystr!(10usize, "as")), (tinystr!(2usize, "5"), tinystr!(10usize, "ast")), (tinystr!(2usize, "5"), tinystr!(10usize, "az")), (tinystr!(2usize, "5"), tinystr!(10usize, "bg")), (tinystr!(2usize, "5"), tinystr!(10usize, "bgc")), (tinystr!(2usize, "5"), tinystr!(10usize, "bho")), (tinystr!(2usize, "5"), tinystr!(10usize, "blo")), (tinystr!(2usize, "5"), tinystr!(10usize, "br")), (tinystr!(2usize, "5"), tinystr!(10usize, "brx")), (tinystr!(2usize, "5"), tinystr!(10usize, "bs")), (tinystr!(2usize, "5"), tinystr!(10usize, "bs-Cyrl")), (tinystr!(2usize, "5"), tinystr!(10usize, "ca")), (tinystr!(2usize, "5"), tinystr!(10usize, "chr")), (tinystr!(2usize, "5"), tinystr!(10usize, "cs")), (tinystr!(2usize, "5"), tinystr!(10usize, "cy")), (tinystr!(2usize, "5"), tinystr!(10usize, "da")), (tinystr!(2usize, "5"), tinystr!(10usize, "de")), (tinystr!(2usize, "5"), tinystr!(10usize, "doi")), (tinystr!(2usize, "5"), tinystr!(10usize, "dsb")), (tinystr!(2usize, "5"), tinystr!(10usize, "el")), (tinystr!(2usize, "5"), tinystr!(10usize, "en")), (tinystr!(2usize, "5"), tinystr!(10usize, "en-001")), (tinystr!(2usize, "5"), tinystr!(10usize, "en-AU")), (tinystr!(2usize, "5"), tinystr!(10usize, "en-CA")), (tinystr!(2usize, "5"), tinystr!(10usize, "en-IE")), (tinystr!(2usize, "5"), tinystr!(10usize, "eo")), (tinystr!(2usize, "5"), tinystr!(10usize, "es")), (tinystr!(2usize, "5"), tinystr!(10usize, "es-419")), (tinystr!(2usize, "5"), tinystr!(10usize, "es-AR")), (tinystr!(2usize, "5"), tinystr!(10usize, "es-BO")), (tinystr!(2usize, "5"), tinystr!(10usize, "es-CL")), (tinystr!(2usize, "5"), tinystr!(10usize, "es-CO")), (tinystr!(2usize, "5"), tinystr!(10usize, "es-CR")), (tinystr!(2usize, "5"), tinystr!(10usize, "es-DO")), (tinystr!(2usize, "5"), tinystr!(10usize, "es-EC")), (tinystr!(2usize, "5"), tinystr!(10usize, "es-GT")), (tinystr!(2usize, "5"), tinystr!(10usize, "es-HN")), (tinystr!(2usize, "5"), tinystr!(10usize, "es-NI")), (tinystr!(2usize, "5"), tinystr!(10usize, "es-PA")), (tinystr!(2usize, "5"), tinystr!(10usize, "es-PE")), (tinystr!(2usize, "5"), tinystr!(10usize, "es-PR")), (tinystr!(2usize, "5"), tinystr!(10usize, "es-PY")), (tinystr!(2usize, "5"), tinystr!(10usize, "es-SV")), (tinystr!(2usize, "5"), tinystr!(10usize, "es-UY")), (tinystr!(2usize, "5"), tinystr!(10usize, "es-VE")), (tinystr!(2usize, "5"), tinystr!(10usize, "et")), (tinystr!(2usize, "5"), tinystr!(10usize, "eu")), (tinystr!(2usize, "5"), tinystr!(10usize, "fa")), (tinystr!(2usize, "5"), tinystr!(10usize, "ff-Adlm")), (tinystr!(2usize, "5"), tinystr!(10usize, "fi")), (tinystr!(2usize, "5"), tinystr!(10usize, "fil")), (tinystr!(2usize, "5"), tinystr!(10usize, "fr")), (tinystr!(2usize, "5"), tinystr!(10usize, "fr-CA")), (tinystr!(2usize, "5"), tinystr!(10usize, "fr-CM")), (tinystr!(2usize, "5"), tinystr!(10usize, "fr-MA")), (tinystr!(2usize, "5"), tinystr!(10usize, "ga")), (tinystr!(2usize, "5"), tinystr!(10usize, "gd")), (tinystr!(2usize, "5"), tinystr!(10usize, "gl")), (tinystr!(2usize, "5"), tinystr!(10usize, "gu")), (tinystr!(2usize, "5"), tinystr!(10usize, "ha")), (tinystr!(2usize, "5"), tinystr!(10usize, "he")), (tinystr!(2usize, "5"), tinystr!(10usize, "hi")), (tinystr!(2usize, "5"), tinystr!(10usize, "hi-Latn")), (tinystr!(2usize, "5"), tinystr!(10usize, "hr")), (tinystr!(2usize, "5"), tinystr!(10usize, "hsb")), (tinystr!(2usize, "5"), tinystr!(10usize, "hu")), (tinystr!(2usize, "5"), tinystr!(10usize, "hy")), (tinystr!(2usize, "5"), tinystr!(10usize, "id")), (tinystr!(2usize, "5"), tinystr!(10usize, "ie")), (tinystr!(2usize, "5"), tinystr!(10usize, "ig")), (tinystr!(2usize, "5"), tinystr!(10usize, "is")), (tinystr!(2usize, "5"), tinystr!(10usize, "it")), (tinystr!(2usize, "5"), tinystr!(10usize, "ja")), (tinystr!(2usize, "5"), tinystr!(10usize, "jv")), (tinystr!(2usize, "5"), tinystr!(10usize, "ka")), (tinystr!(2usize, "5"), tinystr!(10usize, "kea")), (tinystr!(2usize, "5"), tinystr!(10usize, "kgp")), (tinystr!(2usize, "5"), tinystr!(10usize, "kk")), (tinystr!(2usize, "5"), tinystr!(10usize, "km")), (tinystr!(2usize, "5"), tinystr!(10usize, "kn")), (tinystr!(2usize, "5"), tinystr!(10usize, "ko")), (tinystr!(2usize, "5"), tinystr!(10usize, "kok")), (tinystr!(2usize, "5"), tinystr!(10usize, "ks")), (tinystr!(2usize, "5"), tinystr!(10usize, "ks-Deva")), (tinystr!(2usize, "5"), tinystr!(10usize, "ku")), (tinystr!(2usize, "5"), tinystr!(10usize, "kxv")), (tinystr!(2usize, "5"), tinystr!(10usize, "kxv-Deva")), (tinystr!(2usize, "5"), tinystr!(10usize, "kxv-Orya")), (tinystr!(2usize, "5"), tinystr!(10usize, "kxv-Telu")), (tinystr!(2usize, "5"), tinystr!(10usize, "ky")), (tinystr!(2usize, "5"), tinystr!(10usize, "lb")), (tinystr!(2usize, "5"), tinystr!(10usize, "lmo")), (tinystr!(2usize, "5"), tinystr!(10usize, "lo")), (tinystr!(2usize, "5"), tinystr!(10usize, "lt")), (tinystr!(2usize, "5"), tinystr!(10usize, "lv")), (tinystr!(2usize, "5"), tinystr!(10usize, "mai")), (tinystr!(2usize, "5"), tinystr!(10usize, "mk")), (tinystr!(2usize, "5"), tinystr!(10usize, "ml")), (tinystr!(2usize, "5"), tinystr!(10usize, "mn")), (tinystr!(2usize, "5"), tinystr!(10usize, "mni")), (tinystr!(2usize, "5"), tinystr!(10usize, "mr")), (tinystr!(2usize, "5"), tinystr!(10usize, "ms")), (tinystr!(2usize, "5"), tinystr!(10usize, "my")), (tinystr!(2usize, "5"), tinystr!(10usize, "ne")), (tinystr!(2usize, "5"), tinystr!(10usize, "nl")), (tinystr!(2usize, "5"), tinystr!(10usize, "nn")), (tinystr!(2usize, "5"), tinystr!(10usize, "no")), (tinystr!(2usize, "5"), tinystr!(10usize, "nqo")), (tinystr!(2usize, "5"), tinystr!(10usize, "pa")), (tinystr!(2usize, "5"), tinystr!(10usize, "pcm")), (tinystr!(2usize, "5"), tinystr!(10usize, "pl")), (tinystr!(2usize, "5"), tinystr!(10usize, "prg")), (tinystr!(2usize, "5"), tinystr!(10usize, "ps")), (tinystr!(2usize, "5"), tinystr!(10usize, "pt")), (tinystr!(2usize, "5"), tinystr!(10usize, "pt-PT")), (tinystr!(2usize, "5"), tinystr!(10usize, "qu")), (tinystr!(2usize, "5"), tinystr!(10usize, "raj")), (tinystr!(2usize, "5"), tinystr!(10usize, "ro")), (tinystr!(2usize, "5"), tinystr!(10usize, "ro-MD")), (tinystr!(2usize, "5"), tinystr!(10usize, "ru")), (tinystr!(2usize, "5"), tinystr!(10usize, "sa")), (tinystr!(2usize, "5"), tinystr!(10usize, "sah")), (tinystr!(2usize, "5"), tinystr!(10usize, "sat")), (tinystr!(2usize, "5"), tinystr!(10usize, "sd")), (tinystr!(2usize, "5"), tinystr!(10usize, "sd-Deva")), (tinystr!(2usize, "5"), tinystr!(10usize, "si")), (tinystr!(2usize, "5"), tinystr!(10usize, "sk")), (tinystr!(2usize, "5"), tinystr!(10usize, "sl")), (tinystr!(2usize, "5"), tinystr!(10usize, "so")), (tinystr!(2usize, "5"), tinystr!(10usize, "sq")), (tinystr!(2usize, "5"), tinystr!(10usize, "sr")), (tinystr!(2usize, "5"), tinystr!(10usize, "sr-BA")), (tinystr!(2usize, "5"), tinystr!(10usize, "sr-Latn")), (tinystr!(2usize, "5"), tinystr!(10usize, "sr-Latn-BA")), (tinystr!(2usize, "5"), tinystr!(10usize, "sr-ME")), (tinystr!(2usize, "5"), tinystr!(10usize, "sv")), (tinystr!(2usize, "5"), tinystr!(10usize, "sw")), (tinystr!(2usize, "5"), tinystr!(10usize, "syr")), (tinystr!(2usize, "5"), tinystr!(10usize, "szl")), (tinystr!(2usize, "5"), tinystr!(10usize, "ta")), (tinystr!(2usize, "5"), tinystr!(10usize, "te")), (tinystr!(2usize, "5"), tinystr!(10usize, "th")), (tinystr!(2usize, "5"), tinystr!(10usize, "ti")), (tinystr!(2usize, "5"), tinystr!(10usize, "tk")), (tinystr!(2usize, "5"), tinystr!(10usize, "to")), (tinystr!(2usize, "5"), tinystr!(10usize, "tr")), (tinystr!(2usize, "5"), tinystr!(10usize, "ug")), (tinystr!(2usize, "5"), tinystr!(10usize, "uk")), (tinystr!(2usize, "5"), tinystr!(10usize, "und")), (tinystr!(2usize, "5"), tinystr!(10usize, "ur")), (tinystr!(2usize, "5"), tinystr!(10usize, "uz")), (tinystr!(2usize, "5"), tinystr!(10usize, "uz-Cyrl")), (tinystr!(2usize, "5"), tinystr!(10usize, "vi")), (tinystr!(2usize, "5"), tinystr!(10usize, "vmw")), (tinystr!(2usize, "5"), tinystr!(10usize, "wo")), (tinystr!(2usize, "5"), tinystr!(10usize, "xnr")), (tinystr!(2usize, "5"), tinystr!(10usize, "yo")), (tinystr!(2usize, "5"), tinystr!(10usize, "yo-BJ")), (tinystr!(2usize, "5"), tinystr!(10usize, "yrl")), (tinystr!(2usize, "5"), tinystr!(10usize, "yrl-CO")), (tinystr!(2usize, "5"), tinystr!(10usize, "yrl-VE")), (tinystr!(2usize, "5"), tinystr!(10usize, "yue")), (tinystr!(2usize, "5"), tinystr!(10usize, "yue-Hans")), (tinystr!(2usize, "5"), tinystr!(10usize, "za")), (tinystr!(2usize, "5"), tinystr!(10usize, "zh")), (tinystr!(2usize, "5"), tinystr!(10usize, "zh-Hant")), (tinystr!(2usize, "5s"), tinystr!(10usize, "af")), (tinystr!(2usize, "5s"), tinystr!(10usize, "am")), (tinystr!(2usize, "5s"), tinystr!(10usize, "ar")), (tinystr!(2usize, "5s"), tinystr!(10usize, "as")), (tinystr!(2usize, "5s"), tinystr!(10usize, "ast")), (tinystr!(2usize, "5s"), tinystr!(10usize, "az")), (tinystr!(2usize, "5s"), tinystr!(10usize, "bg")), (tinystr!(2usize, "5s"), tinystr!(10usize, "blo")), (tinystr!(2usize, "5s"), tinystr!(10usize, "br")), (tinystr!(2usize, "5s"), tinystr!(10usize, "brx")), (tinystr!(2usize, "5s"), tinystr!(10usize, "bs")), (tinystr!(2usize, "5s"), tinystr!(10usize, "bs-Cyrl")), (tinystr!(2usize, "5s"), tinystr!(10usize, "ca")), (tinystr!(2usize, "5s"), tinystr!(10usize, "chr")), (tinystr!(2usize, "5s"), tinystr!(10usize, "cs")), (tinystr!(2usize, "5s"), tinystr!(10usize, "cy")), (tinystr!(2usize, "5s"), tinystr!(10usize, "da")), (tinystr!(2usize, "5s"), tinystr!(10usize, "de")), (tinystr!(2usize, "5s"), tinystr!(10usize, "doi")), (tinystr!(2usize, "5s"), tinystr!(10usize, "dsb")), (tinystr!(2usize, "5s"), tinystr!(10usize, "el")), (tinystr!(2usize, "5s"), tinystr!(10usize, "en")), (tinystr!(2usize, "5s"), tinystr!(10usize, "en-001")), (tinystr!(2usize, "5s"), tinystr!(10usize, "en-AU")), (tinystr!(2usize, "5s"), tinystr!(10usize, "en-CA")), (tinystr!(2usize, "5s"), tinystr!(10usize, "eo")), (tinystr!(2usize, "5s"), tinystr!(10usize, "es")), (tinystr!(2usize, "5s"), tinystr!(10usize, "es-419")), (tinystr!(2usize, "5s"), tinystr!(10usize, "es-AR")), (tinystr!(2usize, "5s"), tinystr!(10usize, "es-BO")), (tinystr!(2usize, "5s"), tinystr!(10usize, "es-CL")), (tinystr!(2usize, "5s"), tinystr!(10usize, "es-CO")), (tinystr!(2usize, "5s"), tinystr!(10usize, "es-CR")), (tinystr!(2usize, "5s"), tinystr!(10usize, "es-DO")), (tinystr!(2usize, "5s"), tinystr!(10usize, "es-EC")), (tinystr!(2usize, "5s"), tinystr!(10usize, "es-GT")), (tinystr!(2usize, "5s"), tinystr!(10usize, "es-HN")), (tinystr!(2usize, "5s"), tinystr!(10usize, "es-NI")), (tinystr!(2usize, "5s"), tinystr!(10usize, "es-PA")), (tinystr!(2usize, "5s"), tinystr!(10usize, "es-PE")), (tinystr!(2usize, "5s"), tinystr!(10usize, "es-PR")), (tinystr!(2usize, "5s"), tinystr!(10usize, "es-PY")), (tinystr!(2usize, "5s"), tinystr!(10usize, "es-SV")), (tinystr!(2usize, "5s"), tinystr!(10usize, "es-UY")), (tinystr!(2usize, "5s"), tinystr!(10usize, "es-VE")), (tinystr!(2usize, "5s"), tinystr!(10usize, "et")), (tinystr!(2usize, "5s"), tinystr!(10usize, "eu")), (tinystr!(2usize, "5s"), tinystr!(10usize, "fa")), (tinystr!(2usize, "5s"), tinystr!(10usize, "ff-Adlm")), (tinystr!(2usize, "5s"), tinystr!(10usize, "fi")), (tinystr!(2usize, "5s"), tinystr!(10usize, "fil")), (tinystr!(2usize, "5s"), tinystr!(10usize, "fr")), (tinystr!(2usize, "5s"), tinystr!(10usize, "fr-CA")), (tinystr!(2usize, "5s"), tinystr!(10usize, "fr-CH")), (tinystr!(2usize, "5s"), tinystr!(10usize, "fr-CM")), (tinystr!(2usize, "5s"), tinystr!(10usize, "fr-RE")), (tinystr!(2usize, "5s"), tinystr!(10usize, "fr-SN")), (tinystr!(2usize, "5s"), tinystr!(10usize, "ga")), (tinystr!(2usize, "5s"), tinystr!(10usize, "gd")), (tinystr!(2usize, "5s"), tinystr!(10usize, "gl")), (tinystr!(2usize, "5s"), tinystr!(10usize, "gu")), (tinystr!(2usize, "5s"), tinystr!(10usize, "ha")), (tinystr!(2usize, "5s"), tinystr!(10usize, "he")), (tinystr!(2usize, "5s"), tinystr!(10usize, "hi")), (tinystr!(2usize, "5s"), tinystr!(10usize, "hi-Latn")), (tinystr!(2usize, "5s"), tinystr!(10usize, "hr")), (tinystr!(2usize, "5s"), tinystr!(10usize, "hsb")), (tinystr!(2usize, "5s"), tinystr!(10usize, "hu")), (tinystr!(2usize, "5s"), tinystr!(10usize, "hy")), (tinystr!(2usize, "5s"), tinystr!(10usize, "id")), (tinystr!(2usize, "5s"), tinystr!(10usize, "ig")), (tinystr!(2usize, "5s"), tinystr!(10usize, "is")), (tinystr!(2usize, "5s"), tinystr!(10usize, "it")), (tinystr!(2usize, "5s"), tinystr!(10usize, "ja")), (tinystr!(2usize, "5s"), tinystr!(10usize, "jv")), (tinystr!(2usize, "5s"), tinystr!(10usize, "ka")), (tinystr!(2usize, "5s"), tinystr!(10usize, "kea")), (tinystr!(2usize, "5s"), tinystr!(10usize, "kgp")), (tinystr!(2usize, "5s"), tinystr!(10usize, "kk")), (tinystr!(2usize, "5s"), tinystr!(10usize, "km")), (tinystr!(2usize, "5s"), tinystr!(10usize, "kn")), (tinystr!(2usize, "5s"), tinystr!(10usize, "ko")), (tinystr!(2usize, "5s"), tinystr!(10usize, "ks-Deva")), (tinystr!(2usize, "5s"), tinystr!(10usize, "ku")), (tinystr!(2usize, "5s"), tinystr!(10usize, "kxv")), (tinystr!(2usize, "5s"), tinystr!(10usize, "ky")), (tinystr!(2usize, "5s"), tinystr!(10usize, "lb")), (tinystr!(2usize, "5s"), tinystr!(10usize, "lo")), (tinystr!(2usize, "5s"), tinystr!(10usize, "lt")), (tinystr!(2usize, "5s"), tinystr!(10usize, "lv")), (tinystr!(2usize, "5s"), tinystr!(10usize, "mai")), (tinystr!(2usize, "5s"), tinystr!(10usize, "mk")), (tinystr!(2usize, "5s"), tinystr!(10usize, "ml")), (tinystr!(2usize, "5s"), tinystr!(10usize, "mn")), (tinystr!(2usize, "5s"), tinystr!(10usize, "mni")), (tinystr!(2usize, "5s"), tinystr!(10usize, "mr")), (tinystr!(2usize, "5s"), tinystr!(10usize, "ms")), (tinystr!(2usize, "5s"), tinystr!(10usize, "my")), (tinystr!(2usize, "5s"), tinystr!(10usize, "ne")), (tinystr!(2usize, "5s"), tinystr!(10usize, "nl")), (tinystr!(2usize, "5s"), tinystr!(10usize, "nn")), (tinystr!(2usize, "5s"), tinystr!(10usize, "no")), (tinystr!(2usize, "5s"), tinystr!(10usize, "nqo")), (tinystr!(2usize, "5s"), tinystr!(10usize, "or")), (tinystr!(2usize, "5s"), tinystr!(10usize, "pa")), (tinystr!(2usize, "5s"), tinystr!(10usize, "pcm")), (tinystr!(2usize, "5s"), tinystr!(10usize, "pl")), (tinystr!(2usize, "5s"), tinystr!(10usize, "ps")), (tinystr!(2usize, "5s"), tinystr!(10usize, "pt")), (tinystr!(2usize, "5s"), tinystr!(10usize, "pt-PT")), (tinystr!(2usize, "5s"), tinystr!(10usize, "qu")), (tinystr!(2usize, "5s"), tinystr!(10usize, "ro")), (tinystr!(2usize, "5s"), tinystr!(10usize, "ro-MD")), (tinystr!(2usize, "5s"), tinystr!(10usize, "ru")), (tinystr!(2usize, "5s"), tinystr!(10usize, "sah")), (tinystr!(2usize, "5s"), tinystr!(10usize, "sd")), (tinystr!(2usize, "5s"), tinystr!(10usize, "si")), (tinystr!(2usize, "5s"), tinystr!(10usize, "sk")), (tinystr!(2usize, "5s"), tinystr!(10usize, "sl")), (tinystr!(2usize, "5s"), tinystr!(10usize, "so")), (tinystr!(2usize, "5s"), tinystr!(10usize, "sq")), (tinystr!(2usize, "5s"), tinystr!(10usize, "sr")), (tinystr!(2usize, "5s"), tinystr!(10usize, "sr-BA")), (tinystr!(2usize, "5s"), tinystr!(10usize, "sr-Latn")), (tinystr!(2usize, "5s"), tinystr!(10usize, "sr-Latn-BA")), (tinystr!(2usize, "5s"), tinystr!(10usize, "sr-ME")), (tinystr!(2usize, "5s"), tinystr!(10usize, "sv")), (tinystr!(2usize, "5s"), tinystr!(10usize, "sw")), (tinystr!(2usize, "5s"), tinystr!(10usize, "syr")), (tinystr!(2usize, "5s"), tinystr!(10usize, "szl")), (tinystr!(2usize, "5s"), tinystr!(10usize, "ta")), (tinystr!(2usize, "5s"), tinystr!(10usize, "te")), (tinystr!(2usize, "5s"), tinystr!(10usize, "th")), (tinystr!(2usize, "5s"), tinystr!(10usize, "ti")), (tinystr!(2usize, "5s"), tinystr!(10usize, "tk")), (tinystr!(2usize, "5s"), tinystr!(10usize, "to")), (tinystr!(2usize, "5s"), tinystr!(10usize, "tr")), (tinystr!(2usize, "5s"), tinystr!(10usize, "ug")), (tinystr!(2usize, "5s"), tinystr!(10usize, "uk")), (tinystr!(2usize, "5s"), tinystr!(10usize, "und")), (tinystr!(2usize, "5s"), tinystr!(10usize, "ur")), (tinystr!(2usize, "5s"), tinystr!(10usize, "uz")), (tinystr!(2usize, "5s"), tinystr!(10usize, "uz-Cyrl")), (tinystr!(2usize, "5s"), tinystr!(10usize, "vi")), (tinystr!(2usize, "5s"), tinystr!(10usize, "wo")), (tinystr!(2usize, "5s"), tinystr!(10usize, "xnr")), (tinystr!(2usize, "5s"), tinystr!(10usize, "yo")), (tinystr!(2usize, "5s"), tinystr!(10usize, "yo-BJ")), (tinystr!(2usize, "5s"), tinystr!(10usize, "yrl")), (tinystr!(2usize, "5s"), tinystr!(10usize, "yrl-CO")), (tinystr!(2usize, "5s"), tinystr!(10usize, "yrl-VE")), (tinystr!(2usize, "5s"), tinystr!(10usize, "yue")), (tinystr!(2usize, "5s"), tinystr!(10usize, "yue-Hans")), (tinystr!(2usize, "5s"), tinystr!(10usize, "zh")), (tinystr!(2usize, "5s"), tinystr!(10usize, "zh-Hant"))]
                },
                {
                    type S = <icu::datetime::provider::neo::DayPeriodNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable;
                    const _3S_CS: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x0F\0dop.odp.polednep\xC5\xAFlnoc") } };
                    const _3S_ES_419: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x04\0\x08\0a.m.p.m.mediod\xC3\xADa") } };
                    const _3S_ET: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\r\0AMPMkeskp\xC3\xA4evkesk\xC3\xB6\xC3\xB6") } };
                    const _3S_FI: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x03\0\x06\0\r\0ap.ip.keskip.keskiy\xC3\xB6") } };
                    const _3S_GL: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x08\0a.m.p.m.medianoite") } };
                    const _3S_HE: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x04\0AMPM\xD7\x97\xD7\xA6\xD7\x95\xD7\xAA") } };
                    const _3S_KA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x16\0AMPM\xE1\x83\xA8\xE1\x83\xA3\xE1\x83\x90\xE1\x83\x93\xE1\x83\xA6\xE1\x83\x94\xE1\x83\xA8\xE1\x83\xA3\xE1\x83\x90\xE1\x83\xA6\xE1\x83\x90\xE1\x83\x9B\xE1\x83\x94") } };
                    const _3S_KK: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x10\0AMPM\xD1\x82\xD0\xB0\xD0\xBB\xD1\x82\xD2\xAF\xD1\x81\xD1\x82\xD2\xAF\xD0\xBD \xD0\xB6\xD0\xB0\xD1\x80\xD1\x8B\xD0\xBC\xD1\x8B") } };
                    const _3S_KM: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\"\0AMPM\xE1\x9E\x90\xE1\x9F\x92\xE1\x9E\x84\xE1\x9F\x83\xE2\x80\x8B\xE1\x9E\x8F\xE1\x9F\x92\xE1\x9E\x9A\xE1\x9E\x84\xE1\x9F\x8B\xE1\x9E\xA2\xE1\x9E\x92\xE1\x9F\x92\xE1\x9E\x9A\xE1\x9E\xB6\xE1\x9E\x8F\xE1\x9F\x92\xE1\x9E\x9A") } };
                    const _3S_KN: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x1B\x000\x000\0\xE0\xB2\xAA\xE0\xB3\x82\xE0\xB2\xB0\xE0\xB3\x8D\xE0\xB2\xB5\xE0\xB2\xBE\xE0\xB2\xB9\xE0\xB3\x8D\xE0\xB2\xA8\xE0\xB2\x85\xE0\xB2\xAA\xE0\xB2\xB0\xE0\xB2\xBE\xE0\xB2\xB9\xE0\xB3\x8D\xE0\xB2\xA8\xE0\xB2\xAE\xE0\xB2\xA7\xE0\xB3\x8D\xE0\xB2\xAF\xE0\xB2\xB0\xE0\xB2\xBE\xE0\xB2\xA4\xE0\xB3\x8D\xE0\xB2\xB0\xE0\xB2\xBF") } };
                    const _3S_LO: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x18\x000\0<\0\xE0\xBA\x81\xE0\xBB\x88\xE0\xBA\xAD\xE0\xBA\x99\xE0\xBA\x97\xE0\xBB\x88\xE0\xBA\xBD\xE0\xBA\x87\xE0\xBA\xAB\xE0\xBA\xBC\xE0\xBA\xB1\xE0\xBA\x87\xE0\xBA\x97\xE0\xBB\x88\xE0\xBA\xBD\xE0\xBA\x87\xE0\xBA\x97\xE0\xBB\x88\xE0\xBA\xBD\xE0\xBA\x87\xE0\xBA\x97\xE0\xBB\x88\xE0\xBA\xBD\xE0\xBA\x87\xE2\x80\x8B\xE0\xBA\x84\xE0\xBA\xB7\xE0\xBA\x99") } };
                    const _3S_LT: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\n\0\x10\0\x1B\0prie\xC5\xA1pietpopietvidurdienisvidurnaktis") } };
                    const _3S_LV: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\t\0\x12\0\x17\0priek\xC5\xA1p.p\xC4\x93cpusd.pusd.pusnakts") } };
                    const _3S_MAI: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x1B\0\xE0\xA4\xAA\xE0\xA5\x82\xE0\xA4\xB0\xE0\xA5\x8D\xE0\xA4\xB5\xE0\xA4\xBE\xE0\xA4\xB9\xE0\xA5\x8D\xE0\xA4\xA8\xE0\xA4\x85\xE0\xA4\xAA\xE0\xA4\xB0\xE0\xA4\xBE\xE0\xA4\xB9\xE0\xA5\x8D\xE0\xA4\xA8") } };
                    const _3S_MK: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\r\0\x16\0\"\0\xD0\xBF\xD1\x80\xD0\xB5\xD1\x82\xD0\xBF\xD0\xBB.\xD0\xBF\xD0\xBE\xD0\xBF\xD0\xBB.\xD0\xBF\xD0\xBB\xD0\xB0\xD0\xB4\xD0\xBD\xD0\xB5\xD0\xBF\xD0\xBE\xD0\xBB\xD0\xBD\xD0\xBE\xD1\x9C") } };
                    const _3S_OR: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x1B\0\xE0\xAC\xAA\xE0\xAD\x82\xE0\xAC\xB0\xE0\xAD\x8D\xE0\xAC\xAC\xE0\xAC\xBE\xE0\xAC\xB9\xE0\xAD\x8D\xE0\xAC\xA8\xE0\xAC\x85\xE0\xAC\xAA\xE0\xAC\xB0\xE0\xAC\xBE\xE0\xAC\xB9\xE0\xAD\x8D\xE0\xAC\xA8") } };
                    const _3S_PL: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\r\0AMPMpo\xC5\x82udniep\xC3\xB3\xC5\x82noc") } };
                    const _3S_PS: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0\xD8\xBA.\xD9\x85.\xD8\xBA.\xD9\x88.") } };
                    const _3S_SD: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x17\0\xD8\xB5\xD8\xA8\xD8\xAD\xD8\x8C\xE2\x80\xAF\xD9\x85\xD9\x86\xD8\xAC\xD9\x87\xD9\x86\xD8\xAF\xD9\x85\xD9\x86\xD8\xAC\xD9\x87\xD9\x86\xD8\xAF\xD8\x8C\xE2\x80\xAF\xD8\xB4\xD8\xA7\xD9\x85") } };
                    const _3S_SK: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x08\0AMPMpol.poln.") } };
                    const _3S_SL: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\r\0dop.pop.pold.poln.") } };
                    const _3S_SO: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x02\0AMGD") } };
                    const _3S_SQ: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x10\0p.d.m.d.mesdit\xC3\xABmesnat\xC3\xAB") } };
                    const _3S_TH: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x1E\0<\0N\0\xE0\xB8\x81\xE0\xB9\x88\xE0\xB8\xAD\xE0\xB8\x99\xE0\xB9\x80\xE0\xB8\x97\xE0\xB8\xB5\xE0\xB9\x88\xE0\xB8\xA2\xE0\xB8\x87\xE0\xB8\xAB\xE0\xB8\xA5\xE0\xB8\xB1\xE0\xB8\x87\xE0\xB9\x80\xE0\xB8\x97\xE0\xB8\xB5\xE0\xB9\x88\xE0\xB8\xA2\xE0\xB8\x87\xE0\xB9\x80\xE0\xB8\x97\xE0\xB8\xB5\xE0\xB9\x88\xE0\xB8\xA2\xE0\xB8\x87\xE0\xB9\x80\xE0\xB8\x97\xE0\xB8\xB5\xE0\xB9\x88\xE0\xB8\xA2\xE0\xB8\x87\xE0\xB8\x84\xE0\xB8\xB7\xE0\xB8\x99") } };
                    const _3S_TK: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0g.\xC3\xB6\xC5\x88g.so\xC5\x88") } };
                    const _3S_UK: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x18\0\xD0\xB4\xD0\xBF\xD0\xBF\xD0\xBF\xD0\xBF\xD0\xBE\xD0\xBB\xD1\x83\xD0\xB4\xD0\xB5\xD0\xBD\xD1\x8C\xD0\xBF\xD1\x96\xD0\xB2\xD0\xBD\xD1\x96\xD1\x87") } };
                    const _3_AF: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x03\0\x06\0\x06\0vm.nm.middernag") } };
                    const _3_AM: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\t\0\x15\0\x1E\0\xE1\x8C\xA5\xE1\x8B\x8B\xE1\x89\xB5\xE1\x8A\xA8\xE1\x88\xB0\xE1\x8B\x93\xE1\x89\xB5\xE1\x89\x80\xE1\x89\xB5\xE1\x88\xAD\xE1\x8A\xA5\xE1\x8A\xA9\xE1\x88\x88 \xE1\x88\x8C\xE1\x88\x8A\xE1\x89\xB5") } };
                    const _3_AR: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x02\0\xD8\xB5\xD9\x85") } };
                    const _3_AS: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x1B\0\xE0\xA6\xAA\xE0\xA7\x82\xE0\xA7\xB0\xE0\xA7\x8D\xE0\xA6\xAC\xE0\xA6\xBE\xE0\xA6\xB9\xE0\xA7\x8D\xE0\xA6\xA8\xE0\xA6\x85\xE0\xA6\xAA\xE0\xA7\xB0\xE0\xA6\xBE\xE0\xA6\xB9\xE0\xA7\x8D\xE0\xA6\xA8") } };
                    const _3_AZ: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x0C\0AMPMg\xC3\xBCnortagec\xC9\x99yar\xC4\xB1") } };
                    const _3_BG: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x04\0ampm\xD0\xBF\xD0\xBE\xD0\xBB\xD1\x83\xD0\xBD\xD0\xBE\xD1\x89") } };
                    const _3_BLO: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\x001ka2ja") } };
                    const _3_BR: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x04\0A.M.G.M.") } };
                    const _3_BRX: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\t\0\xE0\xA4\xAB\xE0\xA5\x81\xE0\xA4\x82\xE0\xA4\xAC\xE0\xA5\x87\xE0\xA4\xB2\xE0\xA4\xBE\xE0\xA4\xB8\xE0\xA5\x87") } };
                    const _3_BS: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\t\0AMPMpodnepono\xC4\x87") } };
                    const _3_BS_CYRL: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x13\0!\0+\0\xD0\xBF\xD1\x80\xD0\xB5\xE2\x80\xAF\xD0\xBF\xD0\xBE\xD0\xB4\xD0\xBD\xD0\xB5\xD0\xBF\xD0\xBE\xD0\xBF\xD0\xBE\xD0\xB4\xD0\xBD\xD0\xB5\xD0\xBF\xD0\xBE\xD0\xB4\xD0\xBD\xD0\xB5\xD0\xBF\xD0\xBE\xD0\xBD\xD0\xBE\xD1\x9B") } };
                    const _3_CA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x07\0\x0E\0\x0E\0a.\xE2\x80\xAFm.p.\xE2\x80\xAFm.mitjanit") } };
                    const _3_CHR: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\t\0\x15\0\xE1\x8F\x8C\xE1\x8E\xBE\xE1\x8E\xB4\xE1\x8F\x92\xE1\x8E\xAF\xE1\x8F\xB1\xE1\x8E\xA2\xE1\x8E\xA2\xE1\x8E\xA6") } };
                    const _3_CS: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x0C\0dop.odp.pol.p\xC5\xAFln.") } };
                    const _3_CY: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x0E\0AMPMcanol dyddcanol nos") } };
                    const _3_DA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x04\0AMPMmidnat") } };
                    const _3_DE: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x04\0AMPMMitternacht") } };
                    const _3_DOI: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x0C\0\xE0\xA4\xB8\xE0\xA4\xB5\xE0\xA5\x87\xE0\xA4\xB0\xE0\xA4\xB8\xE2\x80\x99\xE0\xA4\x9E") } };
                    const _3_DSB: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x04\0dop.w\xC3\xB3tp.") } };
                    const _3_EL: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0\xCF\x80.\xCE\xBC.\xCE\xBC.\xCE\xBC.") } };
                    const _3_EN: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x08\0AMPMnoonmidnight") } };
                    const _3_EN_001: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x08\0ampmnoonmidnight") } };
                    const _3_EN_AU: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\n\0ampmmiddaymidnight") } };
                    const _3_EN_CA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x0C\0a.m.p.m.noonmidnight") } };
                    const _3_EO: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0atmptm") } };
                    const _3_ES: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x07\0\x0E\0a.\xE2\x80\xAFm.p.\xE2\x80\xAFm.del mediod\xC3\xADa") } };
                    const _3_ES_419: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x04\0\x08\0a.m.p.m.del mediod\xC3\xADa") } };
                    const _3_ES_AR: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x07\0\x0E\0a.\xE2\x80\xAFm.p.\xE2\x80\xAFm.mediod\xC3\xADa") } };
                    const _3_ES_CO: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x07\0\x0E\0a.\xE2\x80\xAFm.p.\xE2\x80\xAFm.m.") } };
                    const _3_ET: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x0F\0AMPMkeskp\xC3\xA4evalkesk\xC3\xB6\xC3\xB6l") } };
                    const _3_EU: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x04\0AMPMgauerdia") } };
                    const _3_FA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0\xD9\x82.\xD8\xB8.\xD8\xA8.\xD8\xB8.") } };
                    const _3_FF_ADLM: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x08\0\xF0\x9E\xA4\x80\xF0\x9E\xA4\x8E\xF0\x9E\xA4\x87\xF0\x9E\xA4\x8E") } };
                    const _3_FI: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x03\0\x06\0\r\0ap.ip.keskip.keskiy\xC3\xB6ll\xC3\xA4") } };
                    const _3_FIL: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x14\0AMPMtanghaling-tapathatinggabi") } };
                    const _3_FR: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x08\0AMPMmidiminuit") } };
                    const _3_FR_CA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x0C\0a.m.p.m.midiminuit") } };
                    const _3_FR_CH: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x08\0AMPMmidimin.") } };
                    const _3_FR_CM: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x0C\0mat.soirmidiminuit") } };
                    const _3_GA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x04\0r.n.i.n.") } };
                    const _3_GD: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x01\0mf") } };
                    const _3_GL: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x08\0a.m.p.m.da noite") } };
                    const _3_GU: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x04\0AMPM\xE0\xAA\xAE\xE0\xAA\xA7\xE0\xAB\x8D\xE0\xAA\xAF\xE0\xAA\xB0\xE0\xAA\xBE\xE0\xAA\xA4\xE0\xAB\x8D\xE0\xAA\xB0\xE0\xAA\xBF") } };
                    const _3_HA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x02\0SFYM") } };
                    const _3_HE: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x0C\0\x16\0\x16\0\xD7\x9C\xD7\xA4\xD7\xA0\xD7\x94\xD7\xB4\xD7\xA6\xD7\x90\xD7\x97\xD7\x94\xD7\xB4\xD7\xA6\xD7\x97\xD7\xA6\xD7\x95\xD7\xAA") } };
                    const _3_HI: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x04\0ampm\xE0\xA4\xAE\xE0\xA4\xA7\xE0\xA5\x8D\xE0\xA4\xAF\xE0\xA4\xB0\xE0\xA4\xBE\xE0\xA4\xA4\xE0\xA5\x8D\xE0\xA4\xB0\xE0\xA4\xBF") } };
                    const _3_HSB: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x04\0dop.pop.") } };
                    const _3_HU: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x03\0\x06\0\n\0de.du.d\xC3\xA9l\xC3\xA9jf\xC3\xA9l") } };
                    const _3_HY: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x0E\0AMPM\xD5\xAF\xD5\xA5\xD5\xBD\xD6\x85\xD6\x80\xD5\xAF\xD5\xA5\xD5\xBD\xD5\xA3\xD5\xAB\xD5\xB7\xD5\xA5\xD6\x80") } };
                    const _3_ID: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x0F\0AMPMtengah haritengah malam") } };
                    const _3_IG: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x04\0A.M.P.M.") } };
                    const _3_IS: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x0F\0f.h.e.h.h\xC3\xA1degimi\xC3\xB0n\xC3\xA6tti") } };
                    const _3_IT: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x0F\0AMPMmezzogiornomezzanotte") } };
                    const _3_JA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x06\0\x0C\0\x12\0\xE5\x8D\x88\xE5\x89\x8D\xE5\x8D\x88\xE5\xBE\x8C\xE6\xAD\xA3\xE5\x8D\x88\xE7\x9C\x9F\xE5\xA4\x9C\xE4\xB8\xAD") } };
                    const _3_JV: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x04\0IsukWengi") } };
                    const _3_KA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x14\0AMPM\xE1\x83\xA8\xE1\x83\xA3\xE1\x83\x90\xE1\x83\x93\xE1\x83\xA6.\xE1\x83\xA8\xE1\x83\xA3\xE1\x83\x90\xE1\x83\xA6\xE1\x83\x90\xE1\x83\x9B\xE1\x83\x94\xE1\x83\xA1") } };
                    const _3_KEA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x02\0ampm") } };
                    const _3_KGP: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x0E\0AMPMkur\xC3\xA3-kujukuty-si") } };
                    const _3_KK: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x0E\0AMPM\xD1\x82\xD2\xAF\xD1\x81\xD0\xBA\xD1\x96\xD1\x82\xD2\xAF\xD0\xBD \xD0\xB6\xD0\xB0\xD1\x80\xD1\x8B\xD0\xBC\xD1\x8B") } };
                    const _3_KM: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x1F\0AMPM\xE1\x9E\x90\xE1\x9F\x92\xE1\x9E\x84\xE1\x9F\x83\xE1\x9E\x8F\xE1\x9F\x92\xE1\x9E\x9A\xE1\x9E\x84\xE1\x9F\x8B\xE1\x9E\xA2\xE1\x9E\x92\xE1\x9F\x92\xE1\x9E\x9A\xE1\x9E\xB6\xE1\x9E\x8F\xE1\x9F\x92\xE1\x9E\x9A") } };
                    const _3_KN: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x1B\x000\x000\0\xE0\xB2\xAA\xE0\xB3\x82\xE0\xB2\xB0\xE0\xB3\x8D\xE0\xB2\xB5\xE0\xB2\xBE\xE0\xB2\xB9\xE0\xB3\x8D\xE0\xB2\xA8\xE0\xB2\x85\xE0\xB2\xAA\xE0\xB2\xB0\xE0\xB2\xBE\xE0\xB2\xB9\xE0\xB3\x8D\xE0\xB2\xA8\xE0\xB2\xAE\xE0\xB2\xA7\xE0\xB3\x8D\xE0\xB2\xAF \xE0\xB2\xB0\xE0\xB2\xBE\xE0\xB2\xA4\xE0\xB3\x8D\xE0\xB2\xB0\xE0\xB2\xBF") } };
                    const _3_KO: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\n\0AMPM\xEC\xA0\x95\xEC\x98\xA4\xEC\x9E\x90\xEC\xA0\x95") } };
                    const _3_KU: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x02\0BNPN") } };
                    const _3_KY: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x15\0\xD1\x82\xD2\xA3\xD1\x82\xD0\xBA\xD1\x87\xD0\xB0\xD0\xBA \xD1\x82\xD2\xAF\xD1\x88\xD1\x82\xD2\xAF\xD0\xBD \xD0\xBE\xD1\x80\xD1\x82\xD0\xBE\xD1\x81\xD1\x83") } };
                    const _3_LB: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x05\0moiesnom\xC3\xABttes") } };
                    const _3_LO: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x18\x000\0E\0\xE0\xBA\x81\xE0\xBB\x88\xE0\xBA\xAD\xE0\xBA\x99\xE0\xBA\x97\xE0\xBB\x88\xE0\xBA\xBD\xE0\xBA\x87\xE0\xBA\xAB\xE0\xBA\xBC\xE0\xBA\xB1\xE0\xBA\x87\xE0\xBA\x97\xE0\xBB\x88\xE0\xBA\xBD\xE0\xBA\x87\xE0\xBA\x95\xE0\xBA\xAD\xE0\xBA\x99\xE0\xBA\x97\xE0\xBB\x88\xE0\xBA\xBD\xE0\xBA\x87\xE0\xBA\x97\xE0\xBB\x88\xE0\xBA\xBD\xE0\xBA\x87\xE0\xBA\x84\xE0\xBA\xB7\xE0\xBA\x99") } };
                    const _3_LT: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\n\0\x10\0\x17\0prie\xC5\xA1pietpopietperpietvidurnaktis") } };
                    const _3_LV: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\t\0\x0F\0\x14\0priek\xC5\xA1p.p\xC4\x93cp.pusd.pusnakt\xC4\xAB") } };
                    const _3_MAI: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\t\0\xE0\xA4\xAD\xE0\xA5\x8B\xE0\xA4\xB0\xE0\xA4\xB8\xE0\xA4\xBE\xE0\xA4\x82\xE0\xA4\x9D") } };
                    const _3_MK: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\r\0\x16\0&\0\xD0\xBF\xD1\x80\xD0\xB5\xD1\x82\xD0\xBF\xD0\xBB.\xD0\xBF\xD0\xBE\xD0\xBF\xD0\xBB.\xD0\xBD\xD0\xB0\xD0\xBF\xD0\xBB\xD0\xB0\xD0\xB4\xD0\xBD\xD0\xB5\xD0\xBF\xD0\xBE\xD0\xBB\xD0\xBD\xD0\xBE\xD1\x9C") } };
                    const _3_ML: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x10\0AMPM\xE0\xB4\x89\xE0\xB4\x9A\xE0\xB5\x8D\xE0\xB4\x9A\xE0\xB4\x85\xE0\xB5\xBC\xE0\xB4\xA6\xE0\xB5\x8D\xE0\xB4\xA7\xE0\xB4\xB0\xE0\xB4\xBE\xE0\xB4\xA4\xE0\xB5\x8D\xE0\xB4\xB0\xE0\xB4\xBF") } };
                    const _3_MN: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x06\0\x0C\0\x19\0\xD2\xAF.\xD3\xA9.\xD2\xAF.\xD1\x85.\xD2\xAF\xD0\xB4 \xD0\xB4\xD1\x83\xD0\xBD\xD0\xB4\xD1\x88\xD3\xA9\xD0\xBD\xD3\xA9 \xD0\xB4\xD1\x83\xD0\xBD\xD0\xB4") } };
                    const _3_MNI: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x0F\0\xE0\xA6\xA8\xE0\xA7\x81\xE0\xA6\xAE\xE0\xA6\xBE\xE0\xA6\x82PM") } };
                    const _3_MR: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x1C\0AMPM\xE0\xA4\xAE\xE0\xA4\xA7\xE0\xA5\x8D\xE0\xA4\xAF\xE0\xA4\xBE\xE0\xA4\xA8\xE0\xA5\x8D\xE0\xA4\xB9\xE0\xA4\xAE\xE0\xA4\xA7\xE0\xA5\x8D\xE0\xA4\xAF\xE0\xA4\xB0\xE0\xA4\xBE\xE0\xA4\xA4\xE0\xA5\x8D\xE0\xA4\xB0") } };
                    const _3_MS: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x02\0PGPTG") } };
                    const _3_MY: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x0F\0\x18\x003\0\xE1\x80\x94\xE1\x80\xB6\xE1\x80\x94\xE1\x80\x80\xE1\x80\xBA\xE1\x80\x8A\xE1\x80\x94\xE1\x80\xB1\xE1\x80\x99\xE1\x80\xBD\xE1\x80\x94\xE1\x80\xBA\xE1\x80\xB8\xE1\x80\x90\xE1\x80\x8A\xE1\x80\xB7\xE1\x80\xBA\xE1\x80\x9E\xE1\x80\x94\xE1\x80\xBA\xE1\x80\xB8\xE1\x80\x81\xE1\x80\xB1\xE1\x80\xAB\xE1\x80\x84\xE1\x80\xBA\xE1\x80\x9A\xE1\x80\xB6") } };
                    const _3_NE: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x1B\x000\0H\0\xE0\xA4\xAA\xE0\xA5\x82\xE0\xA4\xB0\xE0\xA5\x8D\xE0\xA4\xB5\xE0\xA4\xBE\xE0\xA4\xB9\xE0\xA5\x8D\xE0\xA4\xA8\xE0\xA4\x85\xE0\xA4\xAA\xE0\xA4\xB0\xE0\xA4\xBE\xE0\xA4\xB9\xE0\xA5\x8D\xE0\xA4\xA8\xE0\xA4\xAE\xE0\xA4\xA7\xE0\xA5\x8D\xE0\xA4\xAF\xE0\xA4\xBE\xE0\xA4\xA8\xE0\xA5\x8D\xE0\xA4\xB9\xE0\xA4\xAE\xE0\xA4\xA7\xE0\xA5\x8D\xE0\xA4\xAF\xE0\xA4\xB0\xE0\xA4\xBE\xE0\xA4\xA4") } };
                    const _3_NL: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x08\0a.m.p.m.middernacht") } };
                    const _3_NN: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x08\0f.m.e.m.midn.") } };
                    const _3_NO: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x08\0a.m.p.m.midn.") } };
                    const _3_NQO: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x02\0\xDF\x9B\xDF\xA5") } };
                    const _3_PA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x0E\0\x1C\0\x1C\0\xE0\xA8\xAA\xE0\xA9\x82.\xE0\xA8\xA6\xE0\xA9\x81.\xE0\xA8\xAC\xE0\xA8\xBE.\xE0\xA8\xA6\xE0\xA9\x81.\xE0\xA8\x85\xE0\xA9\xB1\xE0\xA8\xA7\xE0\xA9\x80 \xE0\xA8\xB0\xE0\xA8\xBE\xE0\xA8\xA4") } };
                    const _3_PCM: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x02\0FMFI") } };
                    const _3_PL: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x0F\0AMPMw po\xC5\x82udnieo p\xC3\xB3\xC5\x82nocy") } };
                    const _3_PT: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x0C\0AMPMmeio-diameia-noite") } };
                    const _3_PT_PT: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x10\0a.m.p.m.meio-diameia-noite") } };
                    const _3_QU: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x04\0a.m.p.m.") } };
                    const _3_RO: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x0F\0a.m.p.m.amiaz\xC4\x83miezul nop\xC8\x9Bii") } };
                    const _3_RU: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\r\0AMPM\xD0\xBF\xD0\xBE\xD0\xBB\xD0\xB4.\xD0\xBF\xD0\xBE\xD0\xBB\xD0\xBD.") } };
                    const _3_SAH: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x04\0\xD0\xAD\xD0\x98\xD0\xAD\xD0\x9A") } };
                    const _3_SD: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x17\0\xD8\xB5\xD8\xA8\xD8\xAD\xD8\x8C\xE2\x80\xAF\xD9\x85\xD9\x86\xD8\xAC\xD9\x87\xD9\x86\xD8\xAF\xD8\xB4\xD8\xA7\xD9\x85\xD8\x8C\xE2\x80\xAF\xD9\x85\xD9\x86\xD8\xAC\xD9\x87\xD9\x86\xD8\xAF") } };
                    const _3_SI: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x0B\0\x13\x001\0\xE0\xB6\xB4\xE0\xB7\x99.\xE0\xB7\x80.\xE0\xB6\xB4.\xE0\xB7\x80.\xE0\xB6\xB8\xE0\xB6\xB0\xE0\xB7\x8A\xE2\x80\x8D\xE0\xB6\xBA\xE0\xB7\x8F\xE0\xB7\x84\xE0\xB7\x8A\xE0\xB6\xB1\xE0\xB6\xBA\xE0\xB6\xB8\xE0\xB7\x90\xE0\xB6\xAF\xE0\xB7\x92\xE0\xB6\xBA\xE0\xB6\xB8") } };
                    const _3_SK: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\n\0AMPMnapol.o poln.") } };
                    const _3_SL: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x0E\0dop.pop.opold.opoln.") } };
                    const _3_SO: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x02\0GHGD") } };
                    const _3_SQ: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x13\0p.d.m.d.e mesdit\xC3\xABse mesnat\xC3\xABs") } };
                    const _3_SR: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x0E\0AMPM\xD0\xBF\xD0\xBE\xD0\xB4\xD0\xBD\xD0\xB5\xD0\xBF\xD0\xBE\xD0\xBD\xD0\xBE\xD1\x9B") } };
                    const _3_SR_BA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x17\0(\x002\0\xD0\xBF\xD1\x80\xD0\xB8\xD1\x98\xD0\xB5\xE2\x80\xAF\xD0\xBF\xD0\xBE\xD0\xB4\xD0\xBD\xD0\xB5\xD0\xBF\xD0\xBE\xE2\x80\xAF\xD0\xBF\xD0\xBE\xD0\xB4\xD0\xBD\xD0\xB5\xD0\xBF\xD0\xBE\xD0\xB4\xD0\xBD\xD0\xB5\xD0\xBF\xD0\xBE\xD0\xBD\xD0\xBE\xD1\x9B") } };
                    const _3_SR_LATN_BA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\r\0\x17\0\x1C\0prije\xE2\x80\xAFpodnepo\xE2\x80\xAFpodnepodnepono\xC4\x87") } };
                    const _3_SV: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x04\0fmemmidnatt") } };
                    const _3_SW: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x0C\0AMPMadhuhurisaa sita za usiku") } };
                    const _3_SYR: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\t\0\xDC\x8F\xDC\xA9\xDC\x9B\xE2\x80\x8C\xDC\x8F\xDC\x92\xDC\x9B\xE2\x80\x8C") } };
                    const _3_SZL: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x0F\0do\xE2\x80\xAFpo\xC5\x82edni\xC5\x8Fpo\xE2\x80\xAFpo\xC5\x82edniu") } };
                    const _3_TA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x19\0AMPM\xE0\xAE\xA8\xE0\xAE\xA3\xE0\xAF\x8D\xE0\xAE\xAA\xE0\xAE\x95\xE0\xAE\xB2\xE0\xAF\x8D\xE0\xAE\xA8\xE0\xAE\xB3\xE0\xAF\x8D\xE0\xAE\xB3\xE0\xAE\xBF\xE0\xAE\xB0\xE0\xAE\xB5\xE0\xAF\x81") } };
                    const _3_TE: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x04\0AMPM\xE0\xB0\x85\xE0\xB0\xB0\xE0\xB1\x8D\xE0\xB0\xA7\xE0\xB0\xB0\xE0\xB0\xBE\xE0\xB0\xA4\xE0\xB1\x8D\xE0\xB0\xB0\xE0\xB0\xBF") } };
                    const _3_TH: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x16\0AMPM\xE0\xB9\x80\xE0\xB8\x97\xE0\xB8\xB5\xE0\xB9\x88\xE0\xB8\xA2\xE0\xB8\x87\xE0\xB9\x80\xE0\xB8\x97\xE0\xB8\xB5\xE0\xB9\x88\xE0\xB8\xA2\xE0\xB8\x87\xE0\xB8\x84\xE0\xB8\xB7\xE0\xB8\x99") } };
                    const _3_TI: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x08\0\xE1\x89\x85.\xE1\x89\x80.\xE1\x8B\xB5.\xE1\x89\x80.") } };
                    const _3_TK: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x07\0go.\xC3\xB6\xC5\x88go.so\xC5\x88") } };
                    const _3_TO: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x02\0HHEA") } };
                    const _3_TR: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x07\0\r\0\xC3\x96\xC3\x96\xC3\x96S\xC3\xB6\xC4\x9Flegece yar\xC4\xB1s\xC4\xB1") } };
                    const _3_UG: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x05\0\xDA\x86.\xD8\xA8\xDA\x86.\xD9\x83") } };
                    const _3_UK: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x16\0\xD0\xB4\xD0\xBF\xD0\xBF\xD0\xBF\xD0\xBE\xD0\xBF\xD1\x96\xD0\xB2\xD0\xB4\xD0\xBD\xD1\x96\xD0\xBE\xD0\xBF\xD1\x96\xD0\xB2\xD0\xBD\xD0\xBE\xD1\x87\xD1\x96") } };
                    const _3_UND: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x02\0AMPM") } };
                    const _3_UR: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x04\0AMPM\xD8\xA2\xD8\xAF\xDA\xBE\xDB\x8C \xD8\xB1\xD8\xA7\xD8\xAA") } };
                    const _3_UZ: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x0E\0TOTKtush paytiyarim tun") } };
                    const _3_UZ_CYRL: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x19\0\xD0\xA2\xD0\x9E\xD0\xA2\xD0\x9A\xD1\x82\xD1\x83\xD1\x88 \xD0\xBF\xD0\xB0\xD0\xB9\xD1\x82\xD0\xB8\xD1\x8F\xD1\x80\xD0\xB8\xD0\xBC \xD1\x82\xD1\x83\xD0\xBD") } };
                    const _3_VI: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x06\0SACHTRn\xE1\xBB\xADa \xC4\x91\xC3\xAAm") } };
                    const _3_WO: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0SubNgo") } };
                    const _3_XNR: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x12\0\xE0\xA4\xAD\xE0\xA5\x8D\xE0\xA4\xAF\xE0\xA4\xBE\xE0\xA4\x97\xE0\xA4\xBE\xE0\xA4\xA6\xE0\xA4\xAA\xE0\xA5\x87\xE0\xA4\xB9\xE0\xA4\xB0\xE0\xA4\xBE/\xE0\xA4\xB8\xE0\xA4\x82\xE0\xA4\x9C\xE0\xA4\xBE") } };
                    const _3_YO: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\n\0\xC3\x80\xC3\xA1r\xE1\xBB\x8D\xCC\x80\xE1\xBB\x8C\xCC\x80s\xC3\xA1n") } };
                    const _3_YO_BJ: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\t\0\xC3\x80\xC3\xA1r\xC9\x94\xCC\x80\xC6\x86\xCC\x80s\xC3\xA1n") } };
                    const _3_YRL: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x18\0AMPMiand\xC3\xA9-ara-pyturep\xC3\xA9pituna pyterup\xC3\xA9") } };
                    const _3_YRL_CO: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x07\0\x0E\0\"\0a.\xE2\x80\xAFm.p.\xE2\x80\xAFm.iand\xC3\xA9-ara-pyturep\xC3\xA9pituna pyterup\xC3\xA9") } };
                    const _3_YUE: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x06\0\x0C\0\x0C\0\xE4\xB8\x8A\xE5\x8D\x88\xE4\xB8\x8B\xE5\x8D\x88\xE5\x8D\x88\xE5\xA4\x9C") } };
                    const _4S_AM: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x03\0\x06\0\x0F\0\xE1\x8C\xA0\xE1\x8A\xA8\xE1\x89\x80\xE1\x89\xB5\xE1\x88\xAD\xE1\x8A\xA5\xE1\x8A\xA9\xE1\x88\x88 \xE1\x88\x8C\xE1\x88\x8A\xE1\x89\xB5") } };
                    const _4S_DE_AT: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x03\0\x06\0\x06\0vm.nm.Mitternacht") } };
                    const _4S_EN_CA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x08\0ampmnoonmid") } };
                    const _4S_HI: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x04\0ampm\xE0\xA4\x86\xE0\xA4\xA7\xE0\xA5\x80 \xE0\xA4\xB0\xE0\xA4\xBE\xE0\xA4\xA4") } };
                    const _4S_IS: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x0B\0f.h.e.h.hd.mn.") } };
                    const _4S_LO: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x18\x000\0E\0\xE0\xBA\x81\xE0\xBB\x88\xE0\xBA\xAD\xE0\xBA\x99\xE0\xBA\x97\xE0\xBB\x88\xE0\xBA\xBD\xE0\xBA\x87\xE0\xBA\xAB\xE0\xBA\xBC\xE0\xBA\xB1\xE0\xBA\x87\xE0\xBA\x97\xE0\xBB\x88\xE0\xBA\xBD\xE0\xBA\x87\xE0\xBA\x95\xE0\xBA\xAD\xE0\xBA\x99\xE0\xBA\x97\xE0\xBB\x88\xE0\xBA\xBD\xE0\xBA\x87\xE0\xBA\x97\xE0\xBB\x88\xE0\xBA\xBD\xE0\xBA\x87\xE2\x80\x8B\xE0\xBA\x84\xE0\xBA\xB7\xE0\xBA\x99") } };
                    const _4S_LT: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x08\0\x0C\0\x17\0pr.\xE2\x80\xAFp.pop.vidurdienisvidurnaktis") } };
                    const _4S_MR: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x07\0AMPM\xE0\xA4\xAE\xE0\xA4\xAE.\xE0\xA4\xB0\xE0\xA4\xBE.") } };
                    const _4S_NN: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x08\0f.m.e.m.mn.") } };
                    const _4S_NO: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x08\0a.m.p.m.mn.") } };
                    const _4S_OR: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x02\0AM\xE0\xAC\x85\xE0\xAC\xAA\xE0\xAC\xB0\xE0\xAC\xBE\xE0\xAC\xB9\xE0\xAD\x8D\xE0\xAC\xA8") } };
                    const _4S_PL: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x01\0\x02\0\x07\0appo\xC5\x82.p\xC3\xB3\xC5\x82n.") } };
                    const _4S_SR: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x13\0$\0.\0\xD0\xBF\xD1\x80\xD0\xB5\xE2\x80\xAF\xD0\xBF\xD0\xBE\xD0\xB4\xD0\xBD\xD0\xB5\xD0\xBF\xD0\xBE\xE2\x80\xAF\xD0\xBF\xD0\xBE\xD0\xB4\xD0\xBD\xD0\xB5\xD0\xBF\xD0\xBE\xD0\xB4\xD0\xBD\xD0\xB5\xD0\xBF\xD0\xBE\xD0\xBD\xD0\xBE\xD1\x9B") } };
                    const _4S_SR_BA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x03\0\r\0\xD0\xB0p\xD0\xBF\xD0\xBE\xD0\xB4\xD0\xBD\xD0\xB5\xD0\xBF\xD0\xBE\xD0\xBD\xD0\xBE\xD1\x9B") } };
                    const _4S_SR_LATN: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x0B\0\x15\0\x1A\0pre\xE2\x80\xAFpodnepo\xE2\x80\xAFpodnepodnepono\xC4\x87") } };
                    const _4S_SR_LATN_BA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x01\0\x02\0\x07\0appodnepono\xC4\x87") } };
                    const _4S_SR_XK: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x01\0\x02\0\x0C\0ap\xD0\xBF\xD0\xBE\xD0\xB4\xD0\xBD\xD0\xB5\xD0\xBF\xD0\xBE\xD0\xBD\xD0\xBE\xD1\x9B") } };
                    const _4S_SW: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x16\0AMPMsaa sita za mchanasaa sita za usiku") } };
                    const _4S_VI: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\t\0SACHtr\xC6\xB0an\xE1\xBB\xADa \xC4\x91\xC3\xAAm") } };
                    const _4_AF: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x01\0\x02\0\x02\0vnmn") } };
                    const _4_AM: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x03\0\x06\0\t\0\xE1\x8C\xA0\xE1\x8A\xA8\xE1\x89\x80\xE1\x8A\xA5\xE1\x8A\xA9\xE1\x88\x88 \xE1\x88\x8C\xE1\x88\x8A\xE1\x89\xB5") } };
                    const _4_AST: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x01\0ap") } };
                    const _4_AZ: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x01\0\x02\0\x03\0apggec\xC9\x99yar\xC4\xB1") } };
                    const _4_BR: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x02\0amgm") } };
                    const _4_BRX: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\t\0\xE0\xA4\xAB\xE0\xA5\x81\xE0\xA4\x82\xE0\xA4\xAC\xE0\xA5\x87") } };
                    const _4_BS: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\n\0\x11\0\x16\0prijepodnepopodnepodnepono\xC4\x87") } };
                    const _4_CHR: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x03\0\x06\0\xE1\x8F\x8C\xE1\x8F\x92\xE1\x8E\xA2") } };
                    const _4_CS: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x0C\0dop.odp.pol.p\xC5\xAFl.") } };
                    const _4_CY: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x01\0\x02\0\x0C\0bhcanol dyddcanol nos") } };
                    const _4_DA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x01\0\x02\0\x02\0apmidnat") } };
                    const _4_DE_LU: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x05\0\x0B\0\x0B\0vorm.nachm.Mitternacht") } };
                    const _4_EL: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x04\0\xCF\x80\xCE\xBC\xCE\xBC\xCE\xBC") } };
                    const _4_EN: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x01\0\x02\0\x03\0apnmi") } };
                    const _4_EN_CA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x05\0ampmnmid") } };
                    const _4_EU: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x01\0\x02\0\x02\0gagauerd.") } };
                    const _4_FA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x02\0\xD9\x82\xD8\xA8") } };
                    const _4_FF_ADLM: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x04\0\xF0\x9E\xA4\xA2\xF0\x9E\xA4\xA9") } };
                    const _4_FI: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x03\0\x06\0\t\0ap.ip.kp.ky.") } };
                    const _4_FIL: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x14\0ampmtanghaling-tapathatinggabi") } };
                    const _4_FR_CA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x01\0\x02\0\x06\0apmidiminuit") } };
                    const _4_GU: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x04\0AMPM\xE0\xAA\xAE.\xE0\xAA\xB0\xE0\xAA\xBE\xE0\xAA\xA4\xE0\xAB\x8D\xE0\xAA\xB0\xE0\xAA\xBF") } };
                    const _4_HY: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x0B\0\xD5\xA1\xD5\xB0\xD5\xAF\xD6\x85\xE2\x80\xA4\xD5\xAF\xD5\xA3\xE2\x80\xA4") } };
                    const _4_IS: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x06\0f.e.h.mn.") } };
                    const _4_IT: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x0F\0m.p.mezzogiornomezzanotte") } };
                    const _4_KA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x01\0\x02\0\x12\0ap\xE1\x83\xA8\xE1\x83\xA3\xE1\x83\x90\xE1\x83\x93\xE1\x83\xA6.\xE1\x83\xA8\xE1\x83\xA3\xE1\x83\x90\xE1\x83\xA6\xE1\x83\x90\xE1\x83\x9B\xE1\x83\x94\xE1\x83\xA1") } };
                    const _4_KK: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x0E\0AMPM\xD1\x82\xD2\xAF\xD1\x81\xD0\xBA\xD1\x96\xD1\x82\xD2\xAF\xD0\xBD\xD0\xB3\xD1\x96") } };
                    const _4_KM: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x01\0\x02\0\x1D\0ap\xE1\x9E\x90\xE1\x9F\x92\xE1\x9E\x84\xE1\x9F\x83\xE1\x9E\x8F\xE1\x9F\x92\xE1\x9E\x9A\xE1\x9E\x84\xE1\x9F\x8B\xE1\x9E\xA2\xE1\x9E\x92\xE1\x9F\x92\xE1\x9E\x9A\xE1\x9E\xB6\xE1\x9E\x8F\xE1\x9F\x92\xE1\x9E\x9A") } };
                    const _4_KN: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x06\0\t\0\t\0\xE0\xB2\xAA\xE0\xB3\x82\xE0\xB2\x85\xE0\xB2\xAE\xE0\xB2\xA7\xE0\xB3\x8D\xE0\xB2\xAF\xE0\xB2\xB0\xE0\xB2\xBE\xE0\xB2\xA4\xE0\xB3\x8D\xE0\xB2\xB0\xE0\xB2\xBF") } };
                    const _4_KU: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x02\0bnpn") } };
                    const _4_KY: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x0C\0\xD1\x82\xD2\xA3\xD1\x82\xD0\xBA\xD1\x87\xD1\x82\xD1\x82\xD2\xAF\xD0\xBD \xD0\xBE\xD1\x80\xD1\x82") } };
                    const _4_LB: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x03\0mo.nom\xC3\xAB.") } };
                    const _4_LT: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x08\0\x0C\0\x13\0pr.\xE2\x80\xAFp.pop.perpietvidurnaktis") } };
                    const _4_MK: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\r\0\x16\0\x1F\0\xD0\xBF\xD1\x80\xD0\xB5\xD1\x82\xD0\xBF\xD0\xBB.\xD0\xBF\xD0\xBE\xD0\xBF\xD0\xBB.\xD0\xBD\xD0\xB0\xD0\xBF\xD0\xBB.\xD0\xBF\xD0\xBE\xD0\xBB\xD0\xBD.") } };
                    const _4_ML: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x10\0AMPM\xE0\xB4\x89\xE0\xB4\x9A\xE0\xB5\x8D\xE0\xB4\x9A\xE0\xB4\x85") } };
                    const _4_MR: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x01\0\x02\0\x08\0ap\xE0\xA4\xA6\xE0\xA5\x81\xE0\xA4\xAE.\xE0\xA4\xB0\xE0\xA4\xBE.") } };
                    const _4_NO: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x01\0\x02\0\x02\0apmn.") } };
                    const _4_OR: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0\xE0\xAC\xAA\xE0\xAD\x82\xE0\xAC\x85") } };
                    const _4_PA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x0B\0\x0B\0\xE0\xA8\xB8.\xE0\xA8\xB8\xE0\xA8\xBC.\xE0\xA8\x85\xE0\xA9\xB1\xE0\xA8\xA7\xE0\xA9\x80 \xE0\xA8\xB0\xE0\xA8\xBE\xE0\xA8\xA4") } };
                    const _4_PL: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x01\0\x02\0\t\0apw po\xC5\x82.o p\xC3\xB3\xC5\x82n.") } };
                    const _4_SC: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x02\0m.b.") } };
                    const _4_SI: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x06\0\t\0\x0C\0\xE0\xB6\xB4\xE0\xB7\x99\xE0\xB6\xB4\xE0\xB6\xB8\xE0\xB6\xB8\xE0\xB7\x90") } };
                    const _4_SK: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x08\0AMPMnap.o poln.") } };
                    const _4_SL: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x01\0\x02\0\x07\0dp12.0024.00") } };
                    const _4_SO: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x01\0hd") } };
                    const _4_SV: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x04\0fmemmidn.") } };
                    const _4_SW: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\n\0ampmmchanausiku") } };
                    const _4_SYR: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x07\0\xDC\x8F\xDC\xA9\xE2\x80\x8C\xDC\x8F\xDC\x92\xE2\x80\x8C") } };
                    const _4_TA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x0E\0AMPM\xE0\xAE\xA8\xE0\xAE\xA3\xE0\xAF\x8D.\xE0\xAE\xA8\xE0\xAE\xB3\xE0\xAF\x8D.") } };
                    const _4_TE: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x03\0\t\0\t\0\xE0\xB0\x89\xE0\xB0\xB8\xE0\xB0\xBE\xE0\xB0\x85\xE0\xB0\xB0\xE0\xB1\x8D\xE0\xB0\xA7\xE0\xB0\xB0\xE0\xB0\xBE\xE0\xB0\xA4\xE0\xB1\x8D\xE0\xB0\xB0\xE0\xB0\xBF") } };
                    const _4_TH: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x01\0\x02\0\x14\0ap\xE0\xB9\x80\xE0\xB8\x97\xE0\xB8\xB5\xE0\xB9\x88\xE0\xB8\xA2\xE0\xB8\x87\xE0\xB9\x80\xE0\xB8\x97\xE0\xB8\xB5\xE0\xB9\x88\xE0\xB8\xA2\xE0\xB8\x87\xE0\xB8\x84\xE0\xB8\xB7\xE0\xB8\x99") } };
                    const _4_TK: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x04\0\xC3\xB6\xC5\x88so\xC5\x88") } };
                    const _4_TR: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x07\0\t\0\xC3\xB6\xC3\xB6\xC3\xB6s\xC3\xB6gece") } };
                    const _4_UG: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x02\0\xD8\xA8\xD9\x83") } };
                    const _4_UK: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x0E\0\xD0\xB4\xD0\xBF\xD0\xBF\xD0\xBF\xD0\xB4\xD0\xBD\xD1\x8F\xD0\xBD\xD0\xBE\xD1\x87\xD1\x96") } };
                    const _4_UR: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x01\0\x02\0\x02\0ap\xD8\xA2\xD8\xAF\xDA\xBE\xDB\x8C \xD8\xB1\xD8\xA7\xD8\xAA") } };
                    const _4_VI: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x01\0\x02\0\x04\0sctrn\xE1\xBB\xADa \xC4\x91\xC3\xAAm") } };
                    const _5S_AR: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x0C\0\xD8\xB5\xD8\xA8\xD8\xA7\xD8\xAD\xD9\x8B\xD8\xA7\xD9\x85\xD8\xB3\xD8\xA7\xD8\xA1\xD9\x8B") } };
                    const _5S_AST: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x07\0ma\xC3\xB1anatarde") } };
                    const _5S_FI: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x03\0\x06\0\x12\0ap.ip.keskip\xC3\xA4iv\xC3\xA4keskiy\xC3\xB6") } };
                    const _5S_KS_DEVA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\"\0\xE0\xA4\xA6\xE0\xA5\x81\xE0\xA4\xAA\xE0\xA4\xB9\xE0\xA4\xB0 \xE0\xA4\xAC\xE0\xA5\x8D\xE0\xA4\xB0\xE0\xA5\x8B\xE0\xA4\x82\xE0\xA4\xA0\xE0\xA4\xA6\xE0\xA5\x81\xE0\xA4\xAA\xE0\xA4\xB9\xE0\xA4\xB0\xE0\xA4\xAA\xE0\xA4\xA4\xE0\xA5\x96") } };
                    const _5S_LV: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x0F\0\x1B\0'\0priek\xC5\xA1pusdienap\xC4\x93cpusdienapusdienlaikspusnakts") } };
                    const _5S_PT_PT: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x06\0\x0B\0\x13\0manh\xC3\xA3tardemeio-diameia-noite") } };
                    const _5S_SK: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x0C\0AMPMpoludniepolnoc") } };
                    const _5S_SL: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x08\0\x10\0\x16\0dopoldnepopoldnepoldnepolno\xC4\x8D") } };
                    const _5S_SQ: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x08\0\x0F\0\x17\0paraditepasditemesdit\xC3\xABmesnat\xC3\xAB") } };
                    const _5S_SV: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\n\0\x15\0\x15\0f\xC3\xB6rmiddageftermiddagmidnatt") } };
                    const _5_AST: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\r\0de la ma\xC3\xB1anade la tarde") } };
                    const _5_BG: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\n\0\x14\0\x14\0\xD0\xBF\xD1\x80.\xD0\xBE\xD0\xB1.\xD1\x81\xD0\xBB.\xD0\xBE\xD0\xB1.\xD0\xBF\xD0\xBE\xD0\xBB\xD1\x83\xD0\xBD\xD0\xBE\xD1\x89") } };
                    const _5_BGC: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x0C\0\xE0\xA4\xA4\xE0\xA4\xA1\xE0\xA4\x95\xE0\xA5\x87\xE0\xA4\xB8\xE0\xA4\xBE\xE0\xA4\x82\xE0\xA4\x9D") } };
                    const _5_BLO: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x11\0\xCA\x8Ashil\xC3\xA8 k\xCA\x8Abo\xC9\x96u\xCA\x8Ashil\xC3\xA8 k\xCA\x8Asas\xCA\x8A") } };
                    const _5_BS_CYRL: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x15\0.\08\0\xD0\xBF\xD1\x80\xD0\xB8\xD1\x98\xD0\xB5 \xD0\xBF\xD0\xBE\xD0\xB4\xD0\xBD\xD0\xB5\xD0\xBF\xD0\xBE\xD1\x81\xD0\xBB\xD0\xB8\xD1\x98\xD0\xB5 \xD0\xBF\xD0\xBE\xD0\xB4\xD0\xBD\xD0\xB5\xD0\xBF\xD0\xBE\xD0\xB4\xD0\xBD\xD0\xB5\xD0\xBF\xD0\xBE\xD0\xBD\xD0\xBE\xD1\x9B") } };
                    const _5_CA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x06\0\x0C\0\x0C\0a.\xC2\xA0m.p.\xC2\xA0m.mitjanit") } };
                    const _5_CHR: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\t\0\x1B\0\xE1\x8F\x8C\xE1\x8E\xBE\xE1\x8E\xB4\xE1\x8F\x92\xE1\x8E\xAF\xE1\x8F\xB1\xE1\x8E\xA2\xE1\x8F\x97\xE1\x8F\xA2\xE1\x8E\xA2\xE1\x8E\xA6") } };
                    const _5_CY: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x0E\0ybyhcanol dyddcanol nos") } };
                    const _5_DOI: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x0C\0\xE0\xA4\xB8\xE0\xA4\xB5\xE0\xA5\x87\xE0\xA4\xB0\xE0\xA4\xA6\xE0\xA4\xAA\xE0\xA5\x88\xE0\xA4\xB9\xE0\xA4\xB0 \xE0\xA4\xAC\xE0\xA4\xBE\xE0\xA4\xA6") } };
                    const _5_DSB: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\n\0dopo\xC5\x82dnjaw\xC3\xB3tpo\xC5\x82dnja") } };
                    const _5_ES: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x06\0\x0C\0a.\xC2\xA0m.p.\xC2\xA0m.del mediod\xC3\xADa") } };
                    const _5_ES_AR: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x06\0\x0C\0a.\xC2\xA0m.p.\xC2\xA0m.mediod\xC3\xADa") } };
                    const _5_ES_CO: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x03\0\0\0\0\0\x06\0\x0C\0a.\xC2\xA0m.p.\xC2\xA0m.m.") } };
                    const _5_FA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\xD9\x82\xD8\xA8\xD9\x84\xE2\x80\x8C\xD8\xA7\xD8\xB2\xD8\xB8\xD9\x87\xD8\xB1\xD8\xA8\xD8\xB9\xD8\xAF\xD8\xA7\xD8\xB2\xD8\xB8\xD9\x87\xD8\xB1") } };
                    const _5_FI: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x03\0\x06\0\x16\0ap.ip.keskip\xC3\xA4iv\xC3\xA4ll\xC3\xA4keskiy\xC3\xB6ll\xC3\xA4") } };
                    const _5_FR_CM: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x05\0\t\0\r\0matinsoirmidiminuit") } };
                    const _5_HA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x06\0SafiyaYamma") } };
                    const _5_HI_LATN: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x0C\0AMPMMadhyanhaadhi raat") } };
                    const _5_HSB: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\n\0dopo\xC5\x82dnjapopo\xC5\x82dnju") } };
                    const _5_HY: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x12\0AMPM\xD5\xAF\xD5\xA5\xD5\xBD\xD6\x85\xD6\x80\xD5\xAB\xD5\xB6\xD5\xAF\xD5\xA5\xD5\xBD\xD5\xA3\xD5\xAB\xD5\xB7\xD5\xA5\xD6\x80\xD5\xAB\xD5\xB6") } };
                    const _5_IE: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\n\0ante mid\xC3\xADpos mid\xC3\xAD") } };
                    const _5_IG: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x0F\0N\xE2\x80\x99\xE1\xBB\xA5t\xE1\xBB\xA5t\xE1\xBB\xA5N\xE2\x80\x99abali") } };
                    const _5_KA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x19\0AMPM\xE1\x83\xA8\xE1\x83\xA3\xE1\x83\x90\xE1\x83\x93\xE1\x83\xA6\xE1\x83\x94\xE1\x83\xA1\xE1\x83\xA8\xE1\x83\xA3\xE1\x83\x90\xE1\x83\xA6\xE1\x83\x90\xE1\x83\x9B\xE1\x83\x94\xE1\x83\xA1") } };
                    const _5_KO: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x06\0\x0C\0\x12\0\xEC\x98\xA4\xEC\xA0\x84\xEC\x98\xA4\xED\x9B\x84\xEC\xA0\x95\xEC\x98\xA4\xEC\x9E\x90\xEC\xA0\x95") } };
                    const _5_KOK: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x0C\0\xE0\xA4\xB8\xE0\xA4\x95\xE0\xA4\xBE\xE0\xA4\xB3\xE0\xA4\xB8\xE0\xA4\xBE\xE0\xA4\x82\xE0\xA4\x9C") } };
                    const _5_KS: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x0B\0\xD8\xA7\xDB\x92 \xD8\xA7\xDB\x8C\xD9\x85\xD9\xBE\xDB\x8C \xD8\xA7\xDB\x8C\xD9\x85") } };
                    const _5_KS_DEVA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\r\0\xE0\xA4\xAF\xE0\xA5\x87 \xE0\xA4\x8F\xE0\xA4\xAE\xE0\xA4\xAA\xE0\xA5\x80 \xE0\xA4\x8F\xE0\xA4\xAE") } };
                    const _5_KXV_DEVA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\n\0\xE0\xA4\x8F \xE0\xA4\x8F\xE0\xA4\xAE\xE0\xA4\xAA\xE0\xA5\x80 \xE0\xA4\x8F\xE0\xA4\xAE") } };
                    const _5_KXV_ORYA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\n\0\xE0\xAC\x8F \xE0\xAC\x8F\xE0\xAC\xAE\xE0\xAC\xAA\xE0\xAC\xBF \xE0\xAC\x8F\xE0\xAC\xAE") } };
                    const _5_KXV_TELU: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\r\0\xE0\xB0\x8E \xE0\xB0\x8E\xE0\xB0\xAE\xE0\xB1\x8D\xE0\xB0\xAA\xE0\xB0\xBF \xE0\xB0\x8E\xE0\xB0\xAE\xE0\xB1\x8D") } };
                    const _5_KY: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\n\0%\x002\0\xD1\x82\xD0\xB0\xD2\xA3\xD0\xBA\xD1\x8B\xD1\x82\xD2\xAF\xD1\x88\xD1\x82\xD3\xA9\xD0\xBD \xD0\xBA\xD0\xB8\xD0\xB9\xD0\xB8\xD0\xBD\xD0\xBA\xD0\xB8\xD1\x87\xD0\xB0\xD0\xBA \xD1\x82\xD2\xAF\xD1\x88\xD1\x82\xD2\xAF\xD0\xBD \xD0\xBE\xD1\x80\xD1\x82\xD0\xBE\xD1\x81\xD1\x83") } };
                    const _5_LMO: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\t\0del matinde sira") } };
                    const _5_LV: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x10\0\x1D\0*\0priek\xC5\xA1pusdien\xC4\x81p\xC4\x93cpusdien\xC4\x81pusdienlaik\xC4\x81pusnakt\xC4\xAB") } };
                    const _5_MNI: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\n\0\xE0\xA6\x8F \xE0\xA6\x8F\xE0\xA6\xAE\xE0\xA6\xAA\xE0\xA6\xBF \xE0\xA6\x8F\xE0\xA6\xAE") } };
                    const _5_NN: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x08\0f.m.e.m.midnatt") } };
                    const _5_NO: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x08\0a.m.p.m.midnatt") } };
                    const _5_PCM: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x0E\0F\xE1\xBB\x8D m\xE1\xBB\x8D\xCC\x81ninF\xE1\xBB\x8D \xC3\xADvnin") } };
                    const _5_PRG: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x0B\0ankst\xC4\x81inanpa pussideinan") } };
                    const _5_PT_PT: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\t\0\x11\0\x19\0da manh\xC3\xA3da tardemeio-diameia-noite") } };
                    const _5_RAJ: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x0F\0\xE0\xA4\xB8\xE0\xA4\xAC\xE0\xA5\x87\xE0\xA4\xB0\xE0\xA5\x87\xE0\xA4\xB8\xE0\xA4\xBE\xE0\xA4\x82\xE0\xA4\xAE") } };
                    const _5_RO: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x12\0a.m.p.m.la amiaz\xC4\x83la miezul nop\xC8\x9Bii") } };
                    const _5_RU: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x12\0AMPM\xD0\xBF\xD0\xBE\xD0\xBB\xD0\xB4\xD0\xB5\xD0\xBD\xD1\x8C\xD0\xBF\xD0\xBE\xD0\xBB\xD0\xBD\xD0\xBE\xD1\x87\xD1\x8C") } };
                    const _5_SAT: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x0F\0\xE1\xB1\xA5\xE1\xB1\xAE\xE1\xB1\x9B\xE1\xB1\x9F\xE1\xB1\x9C\xE1\xB1\xA7\xE1\xB1\xA4\xE1\xB1\xAB\xE1\xB1\x9F\xE1\xB1\xB9") } };
                    const _5_SD: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x15\0\xD8\xB5\xD8\xA8\xD8\xAD\xD8\x8C \xD9\x85\xD9\x86\xD8\xAC\xD9\x87\xD9\x86\xD8\xAF\xD9\x85\xD9\x86\xD8\xAC\xD9\x87\xD9\x86\xD8\xAF\xD8\x8C \xD8\xB4\xD8\xA7\xD9\x85") } };
                    const _5_SD_DEVA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x16\0\xE0\xA4\xB8\xE0\xA5\x81\xE0\xA4\xAC\xE0\xA5\x81\xE0\xA4\xB9 \xE0\xA4\x9C\xE0\xA4\xBE\xE0\xA4\xB6\xE0\xA4\xBE\xE0\xA4\xAE \xE0\xA4\x9C\xE0\xA4\xBE") } };
                    const _5_SK: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x02\0\x04\0\x0E\0AMPMnapoludnieo polnoci") } };
                    const _5_SL: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x04\0\x08\0\x0F\0dop.pop.opoldneopolno\xC4\x8Di") } };
                    const _5_SQ: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x0B\0\x15\0 \0e paraditese pasditese mesdit\xC3\xABse mesnat\xC3\xABs") } };
                    const _5_SR_BA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x15\0$\0.\0\xD0\xBF\xD1\x80\xD0\xB8\xD1\x98\xD0\xB5 \xD0\xBF\xD0\xBE\xD0\xB4\xD0\xBD\xD0\xB5\xD0\xBF\xD0\xBE \xD0\xBF\xD0\xBE\xD0\xB4\xD0\xBD\xD0\xB5\xD0\xBF\xD0\xBE\xD0\xB4\xD0\xBD\xD0\xB5\xD0\xBF\xD0\xBE\xD0\xBD\xD0\xBE\xD1\x9B") } };
                    const _5_SR_LATN_BA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x0B\0\x13\0\x18\0prije podnepo podnepodnepono\xC4\x87") } };
                    const _5_SZL: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\r\0do po\xC5\x82edni\xC5\x8Fpo po\xC5\x82edniu") } };
                    const _5_TK: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0g\xC3\xBCnortadan \xC3\xB6\xC5\x88g\xC3\xBCnortadan so\xC5\x88") } };
                    const _5_TO: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\n\0hengihengiefiafi") } };
                    const _5_UG: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x17\0\xDA\x86\xDB\x88\xD8\xB4\xD8\xAA\xD9\x89\xD9\x86 \xD8\xA8\xDB\x87\xD8\xB1\xDB\x87\xD9\x86\xDA\x86\xDB\x88\xD8\xB4\xD8\xAA\xD9\x89\xD9\x86 \xD9\x83\xDB\x90\xD9\x8A\xD9\x89\xD9\x86") } };
                    const _5_VMW: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x07\0vaasisumakaaripi") } };
                    const _5_YRL_CO: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x04\0\0\0\0\0\x06\0\x0C\0 \0a.\xC2\xA0m.p.\xC2\xA0m.iand\xC3\xA9-ara-pyturep\xC3\xA9pituna pyterup\xC3\xA9") } };
                    const _5_ZA: &S = &icu::datetime::provider::neo::LinearNamesV1 { symbols: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x07\0banhaetbanringzgvaq") } };
                    &[_3_AF, _3_AM, _3_AR, _3_AS, _3_AZ, _3_BG, _3_BLO, _3_BR, _3_BRX, _3_BS, _3_BS_CYRL, _3_CA, _3_CHR, _3_CS, _3_CY, _3_DA, _3_DE, _3_DOI, _3_DSB, _3_EL, _3_EN, _3_EN_001, _3_EN_AU, _3_EN_CA, _3_EO, _3_ES, _3_ES_419, _3_ES_AR, _3_ES, _3_ES, _3_ES_CO, _3_ES, _3_ES, _3_ES, _3_ES, _3_ES, _3_ES, _3_ES_AR, _3_ES, _3_ES, _3_ES, _3_ES, _3_ES, _3_ES, _3_ET, _3_EU, _3_FA, _3_FF_ADLM, _3_FI, _3_FIL, _3_FR, _3_FR_CA, _3_FR_CH, _3_FR_CM, _3_FR_CH, _3_FR_CH, _3_GA, _3_GD, _3_GL, _3_GU, _3_HA, _3_HE, _3_HI, _3_EN, _3_BS, _3_HSB, _3_HU, _3_HY, _3_ID, _3_IG, _3_IS, _3_IT, _3_JA, _3_JV, _3_KA, _3_KEA, _3_KGP, _3_KK, _3_KM, _3_KN, _3_KO, _3_KU, _3_KEA, _3_KY, _3_LB, _3_LO, _3_LT, _3_LV, _3_MAI, _3_MK, _3_ML, _3_MN, _3_MNI, _3_MR, _3_MS, _3_MY, _3_NE, _3_NL, _3_NN, _3_NO, _3_NQO, _3_PA, _3_PCM, _3_PL, _3_PT, _3_PT_PT, _3_QU, _3_RO, _3_RU, _3_SAH, _3_SD, _3_SI, _3_SK, _3_SL, _3_SO, _3_SQ, _3_SR, _3_SR_BA, _3_BS, _3_SR_LATN_BA, _3_SR_LATN_BA, _3_SV, _3_SW, _3_SYR, _3_SZL, _3_TA, _3_TE, _3_TH, _3_TI, _3_TK, _3_TO, _3_TR, _3_UG, _3_UK, _3_UND, _3_UR, _3_UZ, _3_UZ_CYRL, _3_VI, _3_WO, _3_XNR, _3_YO, _3_YO_BJ, _3_YRL, _3_YRL_CO, _3_YRL_CO, _3_YUE, _3_YUE, _3_YUE, _3_YUE, _3_AF, _3_AM, _3_AR, _3_AS, _3_AZ, _3_BG, _3_BLO, _3_BR, _3_BRX, _3_BS, _3_BS_CYRL, _3_CA, _3_CHR, _3S_CS, _3_CY, _3_DA, _3_DE, _3_DOI, _3_DSB, _3_EL, _3_EN, _3_EN_001, _3_EN_AU, _3_EN_CA, _3_EO, _3_ES_AR, _3S_ES_419, _3_ES_AR, _3_ES_AR, _3_ES_AR, _3_ES_CO, _3_ES_AR, _3_ES_AR, _3_ES_AR, _3_ES_AR, _3_ES_AR, _3_ES_AR, _3_ES_AR, _3_ES_AR, _3_ES_AR, _3_ES_AR, _3_ES_AR, _3_ES_AR, _3_ES_AR, _3_ES_AR, _3_ES_AR, _3S_ET, _3_EU, _3_FA, _3_FF_ADLM, _3S_FI, _3_FIL, _3_FR, _3_FR_CA, _3_FR_CH, _3_FR_CM, _3_FR_CH, _3_FR_CH, _3_GA, _3_GD, _3S_GL, _3_GU, _3_HA, _3S_HE, _3_HI, _3_BS, _3_HSB, _3_HU, _3_HY, _3_ID, _3_IG, _3_IS, _3_IT, _3_JA, _3_JV, _3S_KA, _3_KEA, _3_KGP, _3S_KK, _3S_KM, _3S_KN, _3_KO, _3_KU, _3_KEA, _3_KY, _3_LB, _3S_LO, _3S_LT, _3S_LV, _3S_MAI, _3S_MK, _3_ML, _3_MN, _3_MNI, _3_MR, _3_MS, _3_MY, _3_NE, _3_NL, _3_NN, _3_NO, _3_NQO, _3S_OR, _3_PA, _3S_PL, _3S_PS, _3_PT, _3_PT_PT, _3_QU, _3_RO, _3_RU, _3_SAH, _3S_SD, _3_SI, _3S_SK, _3S_SL, _3S_SO, _3S_SQ, _3_SR, _3_SR_BA, _3_BS, _3_SR_LATN_BA, _3_SR_LATN_BA, _3_SV, _3_SW, _3_SYR, _3_SZL, _3_TA, _3_TE, _3S_TH, _3_TI, _3S_TK, _3_TO, _3_TR, _3_UG, _3S_UK, _3_UND, _3_UR, _3_UZ, _3_UZ_CYRL, _3_VI, _3_WO, _3_XNR, _3_YO, _3_YO_BJ, _3_YRL, _3_YRL_CO, _3_YRL_CO, _3_YUE, _3_YUE, _3_YUE, _3_YUE, _4_AF, _4_AM, _3_AR, _3_AS, _4_AST, _4_AZ, _3_KEA, _3_BG, _3_BLO, _4_BR, _4_BRX, _4_BS, _3_BS_CYRL, _3_CA, _4_AST, _4_CHR, _4_CS, _4_CY, _4_DA, _3_DE, _4_DE_LU, _3_DOI, _3_DSB, _4_EL, _4_EN, _3_EN_AU, _4_EN_CA, _3_EO, _3_ES, _3_ES_419, _3_ES_AR, _3_ES, _3_ES, _3_ES_CO, _3_ES, _3_ES_AR, _3_ES, _3_ES, _3_ES, _3_ES, _3_ES, _3_ES_AR, _3_ES, _3_ES, _3_ES, _3_ES, _3_ES, _3_ES, _3_ET, _4_EU, _4_FA, _4_FF_ADLM, _4_FI, _4_FIL, _3_FR, _4_FR_CA, _3_FR_CH, _3_FR_CH, _3_FR_CM, _3_GA, _3_GD, _3_GL, _4_GU, _3_HA, _3_HE, _3_HI, _3_BS, _3_HSB, _3_HU, _4_HY, _3_ID, _3_IG, _4_IS, _4_IT, _3_JA, _3_JV, _4_KA, _3_KEA, _3_KGP, _4_KK, _4_KM, _4_KN, _3_KO, _4_AST, _4_AST, _4_KU, _4_AST, _4_KY, _4_LB, _3_LO, _4_LT, _3_LV, _3_MAI, _4_MK, _4_ML, _3_MN, _3_MNI, _4_MR, _4_AST, _3_KEA, _3_MY, _3_NE, _3_NL, _4_NO, _3_NQO, _4_OR, _4_PA, _3_PCM, _4_PL, _3S_PS, _3_PT, _3_PT_PT, _3_QU, _3_RO, _3_RU, _3_SAH, _4_SC, _3S_SD, _4_SI, _4_SK, _4_SL, _4_SO, _3_SQ, _3_SR, _3_SR_BA, _3_BS, _3_SR_LATN_BA, _3_SR_LATN_BA, _4_SV, _4_SW, _4_SYR, _3_SZL, _4_TA, _4_TE, _4_TH, _3_TI, _4_TK, _3_TO, _4_TR, _4_UG, _4_UK, _3_UND, _4_UR, _3_UZ, _3_UZ_CYRL, _4_VI, _3_WO, _3_XNR, _3_YO, _3_YO_BJ, _3_YRL, _3_YRL_CO, _3_YRL_CO, _3_YUE, _3_YUE, _3_YUE, _3_YUE, _4_AST, _4_AF, _4S_AM, _3_AR, _3_AS, _4_AST, _3_AZ, _3_BG, _3_BLO, _3_BR, _3_BRX, _4_BS, _3_BS_CYRL, _3_CA, _3_CHR, _4_CS, _3_CY, _3_DA, _3_DE, _4S_DE_AT, _4S_DE_AT, _3_DOI, _3_DSB, _4_EL, _3_EN, _3_EN_001, _3_EN_AU, _4S_EN_CA, _3_EO, _3_ES_AR, _3S_ES_419, _3_ES_CO, _3_ES_AR, _3_ES_AR, _3_ES_CO, _3_ES_AR, _3_ES_CO, _3_ES_AR, _3_ES_AR, _3_ES_AR, _3_ES_AR, _3_ES_AR, _3_ES_AR, _3_ES_AR, _3_ES_AR, _3_ES_CO, _3_ES_AR, _3_ES_AR, _3_ES_AR, _3_ES_CO, _3S_ET, _3_EU, _4_FA, _3_FF_ADLM, _4_FI, _3_FIL, _3_FR, _3_FR_CA, _3_FR_CH, _3_FR_CH, _3_FR_CM, _3_FR_CH, _3_FR_CH, _3_GA, _3_GD, _3S_GL, _3_GU, _3_HA, _3_HE, _4S_HI, _3_EN, _3_BS, _3_HSB, _3_HU, _3_HY, _3_ID, _3_IG, _4S_IS, _4_IT, _3_JA, _3_JV, _3S_KA, _3_KEA, _3_KGP, _3S_KK, _3S_KM, _3S_KN, _3_KO, _3_KU, _4_AST, _3_KY, _3_LB, _4S_LO, _4S_LT, _3S_LV, _3S_MAI, _3S_MK, _3_ML, _3_MN, _3_MNI, _4S_MR, _4_AST, _3_KEA, _3_MY, _3_NE, _3_NL, _4S_NN, _4S_NO, _3_NQO, _4S_OR, _3_PA, _4S_PL, _3S_PS, _3_PT, _3_PT_PT, _3_QU, _3_RO, _3_RU, _3_SAH, _3S_SD, _3_SI, _3S_SK, _4_SL, _3S_SO, _3S_SQ, _4S_SR, _4S_SR_BA, _4S_SR_LATN, _4S_SR_LATN_BA, _4S_SR_LATN_BA, _4S_SR_LATN_BA, _4S_SR_XK, _4_SV, _4S_SW, _3_SYR, _3_SZL, _4_TA, _3_TE, _3S_TH, _3_TI, _4_TK, _3_TO, _3_TR, _3_UG, _3S_UK, _3_UND, _3_UR, _3_UZ, _3_UZ_CYRL, _4S_VI, _3_WO, _3_XNR, _3_YO, _3_YO_BJ, _3_YRL, _3_YRL_CO, _3_YRL_CO, _3_YUE, _3_YUE, _3_YUE, _3_YUE, _3_AF, _3_AM, _3_AR, _3_AS, _5_AST, _3_AZ, _5_BG, _5_BGC, _3_MAI, _5_BLO, _3_BR, _3_BRX, _4_BS, _5_BS_CYRL, _5_CA, _5_CHR, _3S_CS, _5_CY, _3_DA, _3_DE, _5_DOI, _5_DSB, _3_EL, _3_EN, _3_EN_001, _3_EN_AU, _3_EN_CA, _3_EN_CA, _3_EO, _5_ES, _3_ES_419, _5_ES_AR, _5_ES, _5_ES, _5_ES_CO, _5_ES, _5_ES, _5_ES, _5_ES, _5_ES, _5_ES, _5_ES_AR, _5_ES, _5_ES, _5_ES, _5_ES, _5_ES, _5_ES, _3_ET, _3_EU, _5_FA, _3_FF_ADLM, _5_FI, _3_FIL, _3_FR, _3_FR_CA, _5_FR_CM, _3_FR_CA, _3_GA, _3_GD, _3_GL, _3_GU, _5_HA, _3_HE, _3_HI, _5_HI_LATN, _3_BS, _5_HSB, _3_HU, _5_HY, _3_ID, _5_IE, _5_IG, _3_IS, _3_IT, _3_JA, _3_JV, _5_KA, _3_KEA, _3_KGP, _3_KK, _3_KM, _3_KN, _5_KO, _5_KOK, _5_KS, _5_KS_DEVA, _3_KU, _3_KEA, _5_KXV_DEVA, _5_KXV_ORYA, _5_KXV_TELU, _5_KY, _3_LB, _5_LMO, _3_LO, _3_LT, _5_LV, _3_MAI, _3_MK, _3_ML, _3_MN, _5_MNI, _3_MR, _3_MS, _3_MY, _3_NE, _3_NL, _5_NN, _5_NO, _3_NQO, _3_PA, _5_PCM, _3_PL, _5_PRG, _3S_PS, _3_PT, _5_PT_PT, _3_QU, _5_RAJ, _5_RO, _3_RO, _5_RU, _3S_MAI, _3_SAH, _5_SAT, _5_SD, _5_SD_DEVA, _3_SI, _5_SK, _5_SL, _3_SO, _5_SQ, _3_SR, _5_SR_BA, _3_BS, _5_SR_LATN_BA, _5_SR_LATN_BA, _3_SV, _4S_SW, _3_SYR, _5_SZL, _3_TA, _3_TE, _3S_TH, _3_TI, _5_TK, _5_TO, _3_TR, _5_UG, _3_UK, _3_UND, _3_UR, _3_UZ, _3_UZ_CYRL, _4S_VI, _5_VMW, _3_WO, _3_XNR, _3_YO, _3_YO_BJ, _3_YRL, _5_YRL_CO, _5_YRL_CO, _3_YUE, _3_YUE, _5_ZA, _3_YUE, _3_YUE, _3_AF, _3_AM, _5S_AR, _3_AS, _5S_AST, _3_AZ, _3_BG, _3_BLO, _3_BR, _3_BRX, _4_BS, _5_BS_CYRL, _5_CA, _5_CHR, _3S_CS, _3_CY, _3_DA, _3_DE, _3_DOI, _5_DSB, _3_EL, _3_EN, _3_EN_001, _3_EN_AU, _3_EN_CA, _3_EO, _5_ES_AR, _3S_ES_419, _5_ES_AR, _5_ES_AR, _5_ES_AR, _5_ES_CO, _5_ES_AR, _5_ES_AR, _5_ES_AR, _5_ES_AR, _5_ES_AR, _5_ES_AR, _5_ES_AR, _5_ES_AR, _5_ES_AR, _5_ES_AR, _5_ES_AR, _5_ES_AR, _5_ES_AR, _3S_ET, _3_EU, _5_FA, _3_FF_ADLM, _5S_FI, _3_FIL, _3_FR, _3_FR_CA, _3_FR_CH, _5_FR_CM, _3_FR_CH, _3_FR_CH, _3_GA, _3_GD, _3S_GL, _3_GU, _3_HA, _3S_HE, _3_HI, _5_HI_LATN, _3_BS, _5_HSB, _3_HU, _3_HY, _3_ID, _3_IG, _3_IS, _3_IT, _3_JA, _3_JV, _3S_KA, _3_KEA, _3_KGP, _3S_KK, _3S_KM, _3S_KN, _5_KO, _5S_KS_DEVA, _3_KU, _3_KEA, _5_KY, _3_LB, _3_LO, _3S_LT, _5S_LV, _3S_MAI, _3S_MK, _3_ML, _3_MN, _3_MNI, _3_MR, _3_MS, _3_MY, _3_NE, _3_NL, _5_NN, _5_NO, _3_NQO, _3S_OR, _3_PA, _5_PCM, _3S_PL, _3S_PS, _3_PT, _5S_PT_PT, _3_QU, _5_RO, _3_RO, _5_RU, _3_SAH, _5_SD, _3_SI, _5S_SK, _5S_SL, _3_SO, _5S_SQ, _3_SR, _5_SR_BA, _3_BS, _5_SR_LATN_BA, _5_SR_LATN_BA, _5S_SV, _4S_SW, _3_SYR, _5_SZL, _3_TA, _3_TE, _3S_TH, _3_TI, _5_TK, _3_TO, _3_TR, _3_UG, _3S_UK, _3_UND, _3_UR, _3_UZ, _3_UZ_CYRL, _4S_VI, _3_WO, _3_XNR, _3_YO, _3_YO_BJ, _3_YRL, _5_YRL_CO, _5_YRL_CO, _3_YUE, _3_YUE, _3_YUE, _3_YUE]
                },
            );
        }
        #[clippy::msrv = "1.70"]
        impl icu_provider::DataProvider<icu::datetime::provider::neo::DayPeriodNamesV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::datetime::provider::neo::DayPeriodNamesV1Marker>, icu_provider::DataError> {
                let mut metadata = icu_provider::DataResponseMetadata::default();
                let payload = if let Some(payload) = icu_provider_baked::DataStore::get(&Self::DATA_DAY_PERIOD_NAMES_V1_MARKER, req.id) {
                    payload
                } else {
                    const FALLBACKER: icu::locale::fallback::LocaleFallbackerWithConfig<'static> = icu::locale::fallback::LocaleFallbacker::new().for_config(<icu::datetime::provider::neo::DayPeriodNamesV1Marker as icu_provider::DataMarker>::INFO.fallback_config);
                    let mut fallback_iterator = FALLBACKER.fallback_for(req.id.locale.clone());
                    loop {
                        if let Some(payload) = icu_provider_baked::DataStore::get(&Self::DATA_DAY_PERIOD_NAMES_V1_MARKER, icu_provider::DataIdentifierBorrowed::for_marker_attributes_and_locale(req.id.marker_attributes, fallback_iterator.get())) {
                            metadata.locale = Some(fallback_iterator.take());
                            break payload;
                        }
                        if fallback_iterator.get().is_und() {
                            return Err(icu_provider::DataErrorKind::IdentifierNotFound.with_req(<icu::datetime::provider::neo::DayPeriodNamesV1Marker as icu_provider::DataMarker>::INFO, req));
                        }
                        fallback_iterator.step();
                    }
                };
                Ok(icu_provider::DataResponse { payload: icu_provider::DataPayload::from_static_ref(payload), metadata })
            }
        }
    };
    ($ provider : ty , ITER) => {
        __impl_day_period_names_v1_marker!($provider);
        #[clippy::msrv = "1.70"]
        impl icu_provider::IterableDataProvider<icu::datetime::provider::neo::DayPeriodNamesV1Marker> for $provider {
            fn iter_ids(&self) -> Result<std::collections::HashSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok(icu_provider_baked::DataStore::iter(&Self::DATA_DAY_PERIOD_NAMES_V1_MARKER).collect())
            }
        }
    };
}
#[doc(inline)]
pub use __impl_day_period_names_v1_marker as impl_day_period_names_v1_marker;
