// @generated
/// Implement `DataProvider<TimezoneMetazonePeriodsV1>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
///
/// Using this implementation will embed the following data in the binary's data segment:
/// * 7421B[^1] for the singleton data struct
///
/// [^1]: these numbers can be smaller in practice due to linker deduplication
///
/// This macro requires the following crates:
/// * `icu`
/// * `icu_provider`
/// * `zerovec`
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_timezone_metazone_periods_v1 {
    ($ provider : ty) => {
        #[clippy::msrv = "1.82"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.82"]
        impl $provider {
            #[doc(hidden)]
            pub const SINGLETON_TIMEZONE_METAZONE_PERIODS_V1: &'static <icu::datetime::provider::time_zones::TimezoneMetazonePeriodsV1 as icu_provider::DynamicDataMarker>::DataStruct = &icu::datetime::provider::time_zones::MetazonePeriod {
                list: unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap2d::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"adalv\0\0\0aedxb\0\0\0afkbl\0\0\0aganu\0\0\0aiaxa\0\0\0altia\0\0\0amevn\0\0\0ancur\0\0\0aolad\0\0\0aqcas\0\0\0aqdav\0\0\0aqddu\0\0\0aqmaw\0\0\0aqmcm\0\0\0aqplm\0\0\0aqrot\0\0\0aqsyw\0\0\0aqtrl\0\0\0aqvos\0\0\0arbue\0\0\0arcor\0\0\0arctc\0\0\0arirj\0\0\0arjuj\0\0\0arluq\0\0\0armdz\0\0\0arrgl\0\0\0arsla\0\0\0artuc\0\0\0aruaq\0\0\0arush\0\0\0asppg\0\0\0atvie\0\0\0auadl\0\0\0aubhq\0\0\0aubne\0\0\0audrw\0\0\0aueuc\0\0\0auhba\0\0\0auldc\0\0\0auldh\0\0\0aumel\0\0\0aumqi\0\0\0auper\0\0\0ausyd\0\0\0awaua\0\0\0azbak\0\0\0basjj\0\0\0bbbgi\0\0\0bddac\0\0\0bebru\0\0\0bfoua\0\0\0bgsof\0\0\0bhbah\0\0\0bibjm\0\0\0bjptn\0\0\0bmbda\0\0\0bnbwn\0\0\0bolpb\0\0\0bqkra\0\0\0braux\0\0\0brbel\0\0\0brbvb\0\0\0brcgb\0\0\0brcgr\0\0\0brern\0\0\0brfen\0\0\0brfor\0\0\0brmao\0\0\0brmcz\0\0\0brpvh\0\0\0brrbr\0\0\0brrec\0\0\0brsao\0\0\0brssa\0\0\0brstm\0\0\0bsnas\0\0\0btthi\0\0\0bwgbe\0\0\0bymsq\0\0\0bzbze\0\0\0cacfq\0\0\0caedm\0\0\0cafne\0\0\0caglb\0\0\0cagoo\0\0\0cahal\0\0\0caiql\0\0\0camon\0\0\0careb\0\0\0careg\0\0\0casjf\0\0\0cator\0\0\0cavan\0\0\0cawnp\0\0\0caybx\0\0\0caycb\0\0\0cayda\0\0\0caydq\0\0\0cayek\0\0\0cayev\0\0\0cayxy\0\0\0cayyn\0\0\0cayzs\0\0\0cccck\0\0\0cdfbm\0\0\0cdfih\0\0\0cfbgf\0\0\0cgbzv\0\0\0chzrh\0\0\0ciabj\0\0\0ckrar\0\0\0clipc\0\0\0clpuq\0\0\0clscl\0\0\0cmdla\0\0\0cnsha\0\0\0cnurc\0\0\0cobog\0\0\0crsjo\0\0\0cuhav\0\0\0cvrai\0\0\0cxxch\0\0\0cyfmg\0\0\0cynic\0\0\0czprg\0\0\0deber\0\0\0debsngn\0djjib\0\0\0dkcph\0\0\0dmdom\0\0\0dosdq\0\0\0dzalg\0\0\0ecgps\0\0\0ecgye\0\0\0eetll\0\0\0egcai\0\0\0eheai\0\0\0erasm\0\0\0esceu\0\0\0eslpa\0\0\0esmad\0\0\0etadd\0\0\0fihel\0\0\0fimhq\0\0\0fjsuv\0\0\0fkpsy\0\0\0fmksa\0\0\0fmpni\0\0\0fmtkk\0\0\0fotho\0\0\0frpar\0\0\0galbv\0\0\0gazastrpgblon\0\0\0gdgnd\0\0\0getbs\0\0\0gfcay\0\0\0gggci\0\0\0ghacc\0\0\0gigib\0\0\0gldkshvnglgoh\0\0\0globy\0\0\0glthu\0\0\0gmbjl\0\0\0gmt\0\0\0\0\0gncky\0\0\0gpbbr\0\0\0gpmsb\0\0\0gpsbh\0\0\0gqssg\0\0\0grath\0\0\0gsgrv\0\0\0gtgua\0\0\0gugum\0\0\0gwoxb\0\0\0gygeo\0\0\0hebron\0\0hkhkg\0\0\0hntgu\0\0\0hrzag\0\0\0htpap\0\0\0hubud\0\0\0iddjj\0\0\0idjkt\0\0\0idmak\0\0\0idpnk\0\0\0iedub\0\0\0imdgs\0\0\0inccu\0\0\0iodga\0\0\0iqbgw\0\0\0irthr\0\0\0isrey\0\0\0itrom\0\0\0jeruslm\0jesth\0\0\0jmkin\0\0\0joamm\0\0\0jptyo\0\0\0kenbo\0\0\0kgfru\0\0\0khpnh\0\0\0kicxi\0\0\0kipho\0\0\0kitrw\0\0\0kmyva\0\0\0knbas\0\0\0kpfnj\0\0\0krsel\0\0\0kwkwi\0\0\0kygec\0\0\0kzaau\0\0\0kzakx\0\0\0kzala\0\0\0kzguw\0\0\0kzksn\0\0\0kzkzo\0\0\0kzura\0\0\0lavte\0\0\0lbbey\0\0\0lccas\0\0\0livdz\0\0\0lkcmb\0\0\0lrmlw\0\0\0lsmsu\0\0\0ltvno\0\0\0lulux\0\0\0lvrix\0\0\0lytip\0\0\0macas\0\0\0mcmon\0\0\0mdkiv\0\0\0metgd\0\0\0mgtnr\0\0\0mhkwa\0\0\0mhmaj\0\0\0mkskp\0\0\0mlbko\0\0\0mmrgn\0\0\0mnhvd\0\0\0mnuln\0\0\0momfm\0\0\0mpspn\0\0\0mqfdf\0\0\0mrnkc\0\0\0msmni\0\0\0mtmla\0\0\0muplu\0\0\0mvmle\0\0\0mwblz\0\0\0mxchi\0\0\0mxcjs\0\0\0mxcun\0\0\0mxhmo\0\0\0mxmam\0\0\0mxmex\0\0\0mxmid\0\0\0mxmty\0\0\0mxmzt\0\0\0mxoji\0\0\0mxpvr\0\0\0mxtij\0\0\0mykch\0\0\0mykul\0\0\0mzmpm\0\0\0nawdh\0\0\0ncnou\0\0\0nenim\0\0\0nfnlk\0\0\0nglos\0\0\0nimga\0\0\0nlams\0\0\0noosl\0\0\0npktm\0\0\0nrinu\0\0\0nuiue\0\0\0nzakl\0\0\0nzcht\0\0\0ommct\0\0\0papty\0\0\0pelim\0\0\0pfgmr\0\0\0pfnhv\0\0\0pfppt\0\0\0pgpom\0\0\0pgraw\0\0\0phmnl\0\0\0pkkhi\0\0\0plwaw\0\0\0pmmqc\0\0\0pnpcn\0\0\0prsju\0\0\0ptfnc\0\0\0ptlis\0\0\0ptpdl\0\0\0pwror\0\0\0pyasu\0\0\0qadoh\0\0\0rereu\0\0\0robuh\0\0\0rsbeg\0\0\0ruasf\0\0\0ruchita\0rudyr\0\0\0rugdx\0\0\0ruikt\0\0\0rukgd\0\0\0rukhndg\0rukra\0\0\0rukuf\0\0\0rumow\0\0\0runoz\0\0\0ruoms\0\0\0ruovb\0\0\0rupkc\0\0\0rurtw\0\0\0rusred\0\0ruuly\0\0\0ruunera\0ruuus\0\0\0ruvog\0\0\0ruvvo\0\0\0ruyek\0\0\0ruyks\0\0\0rwkgl\0\0\0saruh\0\0\0sbhir\0\0\0scmaw\0\0\0sdkrt\0\0\0sesto\0\0\0sgsin\0\0\0shshn\0\0\0silju\0\0\0sjlyr\0\0\0skbts\0\0\0slfna\0\0\0smsai\0\0\0sndkr\0\0\0somgq\0\0\0srpbm\0\0\0ssjub\0\0\0sttms\0\0\0svsal\0\0\0sxphi\0\0\0sydam\0\0\0szqmn\0\0\0tcgdt\0\0\0tdndj\0\0\0tfpfr\0\0\0tglfw\0\0\0thbkk\0\0\0tjdyu\0\0\0tkfko\0\0\0tldil\0\0\0tmasb\0\0\0tntun\0\0\0totbu\0\0\0trist\0\0\0ttpos\0\0\0tvfun\0\0\0twtpe\0\0\0tzdar\0\0\0uaiev\0\0\0uasip\0\0\0ugkla\0\0\0umawk\0\0\0ummdy\0\0\0usadk\0\0\0usaeg\0\0\0usanc\0\0\0usboi\0\0\0uschi\0\0\0usden\0\0\0usdet\0\0\0ushnl\0\0\0usind\0\0\0usinvev\0usjnu\0\0\0usknx\0\0\0uslax\0\0\0uslui\0\0\0usmnm\0\0\0usmoc\0\0\0usmtm\0\0\0usndcnt\0usndnsl\0usnyc\0\0\0usoea\0\0\0usome\0\0\0usphx\0\0\0ussit\0\0\0ustel\0\0\0uswlz\0\0\0uswsq\0\0\0usxul\0\0\0usyak\0\0\0uymvd\0\0\0uzskd\0\0\0uztas\0\0\0vavat\0\0\0vcsvd\0\0\0veccs\0\0\0vgtov\0\0\0vistt\0\0\0vnsgn\0\0\0vuvli\0\0\0wfmau\0\0\0wsapw\0\0\0yeade\0\0\0ytmam\0\0\0zajnb\0\0\0zmlun\0\0\0zwhre\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x01\0\0\0\x02\0\0\0\x03\0\0\0\x04\0\0\0\x05\0\0\0\x06\0\0\0\x07\0\0\0\x08\0\0\0\t\0\0\0\x16\0\0\0\x17\0\0\0\x18\0\0\0\x19\0\0\0\x1A\0\0\0\x1C\0\0\0\x1D\0\0\0\x1E\0\0\0\x1F\0\0\0 \0\0\0!\0\0\0\"\0\0\0#\0\0\0$\0\0\0%\0\0\0&\0\0\0'\0\0\0(\0\0\0)\0\0\0*\0\0\0+\0\0\0,\0\0\0-\0\0\0.\0\0\0/\0\0\x000\0\0\x001\0\0\x002\0\0\x003\0\0\x004\0\0\x005\0\0\x006\0\0\x007\0\0\08\0\0\09\0\0\0:\0\0\0;\0\0\0<\0\0\0=\0\0\0>\0\0\0?\0\0\0@\0\0\0A\0\0\0B\0\0\0C\0\0\0D\0\0\0E\0\0\0F\0\0\0G\0\0\0H\0\0\0I\0\0\0J\0\0\0K\0\0\0L\0\0\0M\0\0\0N\0\0\0O\0\0\0P\0\0\0Q\0\0\0R\0\0\0S\0\0\0T\0\0\0U\0\0\0V\0\0\0W\0\0\0X\0\0\0Y\0\0\0Z\0\0\0[\0\0\0\\\0\0\0]\0\0\0^\0\0\0_\0\0\0`\0\0\0b\0\0\0c\0\0\0d\0\0\0e\0\0\0f\0\0\0g\0\0\0h\0\0\0i\0\0\0j\0\0\0k\0\0\0l\0\0\0m\0\0\0n\0\0\0o\0\0\0q\0\0\0r\0\0\0s\0\0\0t\0\0\0v\0\0\0w\0\0\0x\0\0\0y\0\0\0z\0\0\0{\0\0\0|\0\0\0}\0\0\0~\0\0\0\x7F\0\0\0\x80\0\0\0\x81\0\0\0\x83\0\0\0\x84\0\0\0\x85\0\0\0\x86\0\0\0\x87\0\0\0\x88\0\0\0\x89\0\0\0\x8A\0\0\0\x8B\0\0\0\x8C\0\0\0\x8E\0\0\0\x8F\0\0\0\x90\0\0\0\x91\0\0\0\x92\0\0\0\x93\0\0\0\x94\0\0\0\x95\0\0\0\x96\0\0\0\x97\0\0\0\x98\0\0\0\x99\0\0\0\x9A\0\0\0\x9B\0\0\0\x9D\0\0\0\x9E\0\0\0\x9F\0\0\0\xA0\0\0\0\xA1\0\0\0\xA2\0\0\0\xA3\0\0\0\xA4\0\0\0\xA5\0\0\0\xA6\0\0\0\xA7\0\0\0\xA8\0\0\0\xA9\0\0\0\xAA\0\0\0\xAB\0\0\0\xAC\0\0\0\xAD\0\0\0\xAE\0\0\0\xAF\0\0\0\xB0\0\0\0\xB1\0\0\0\xB2\0\0\0\xB3\0\0\0\xB4\0\0\0\xB5\0\0\0\xB7\0\0\0\xB9\0\0\0\xBA\0\0\0\xBB\0\0\0\xBC\0\0\0\xBD\0\0\0\xBE\0\0\0\xBF\0\0\0\xC0\0\0\0\xC1\0\0\0\xC2\0\0\0\xC3\0\0\0\xC4\0\0\0\xC5\0\0\0\xC6\0\0\0\xC7\0\0\0\xC8\0\0\0\xC9\0\0\0\xCA\0\0\0\xCB\0\0\0\xCC\0\0\0\xCD\0\0\0\xCE\0\0\0\xCF\0\0\0\xD0\0\0\0\xD1\0\0\0\xD2\0\0\0\xD3\0\0\0\xD4\0\0\0\xD5\0\0\0\xD6\0\0\0\xD7\0\0\0\xD8\0\0\0\xD9\0\0\0\xDA\0\0\0\xDB\0\0\0\xDC\0\0\0\xDE\0\0\0\xDF\0\0\0\xE0\0\0\0\xE1\0\0\0\xE2\0\0\0\xE3\0\0\0\xE4\0\0\0\xE5\0\0\0\xE6\0\0\0\xE7\0\0\0\xEA\0\0\0\xEB\0\0\0\xEC\0\0\0\xED\0\0\0\xEF\0\0\0\xF1\0\0\0\xF3\0\0\0\xF5\0\0\0\xF7\0\0\0\xFA\0\0\0\xFC\0\0\0\xFD\0\0\0\xFE\0\0\0\xFF\0\0\0\0\x01\0\0\x01\x01\0\0\x02\x01\0\0\x03\x01\0\0\x04\x01\0\0\x05\x01\0\0\x06\x01\0\0\x07\x01\0\0\t\x01\0\0\n\x01\0\0\x0B\x01\0\0\x0C\x01\0\0\r\x01\0\0\x0E\x01\0\0\x0F\x01\0\0\x10\x01\0\0\x11\x01\0\0\x12\x01\0\0\x13\x01\0\0\x14\x01\0\0\x15\x01\0\0\x16\x01\0\0\x17\x01\0\0\x18\x01\0\0\x19\x01\0\0\x1A\x01\0\0\x1B\x01\0\0\x1C\x01\0\0\x1D\x01\0\0\x1F\x01\0\0\"\x01\0\0$\x01\0\0%\x01\0\0&\x01\0\0'\x01\0\0(\x01\0\0)\x01\0\0*\x01\0\0,\x01\0\0-\x01\0\0.\x01\0\0/\x01\0\x000\x01\0\x001\x01\0\x003\x01\0\x004\x01\0\x005\x01\0\x006\x01\0\x007\x01\0\08\x01\0\09\x01\0\0:\x01\0\0;\x01\0\0<\x01\0\0=\x01\0\0>\x01\0\0?\x01\0\0@\x01\0\0A\x01\0\0B\x01\0\0C\x01\0\0D\x01\0\0E\x01\0\0F\x01\0\0G\x01\0\0H\x01\0\0I\x01\0\0J\x01\0\0K\x01\0\0L\x01\0\0M\x01\0\0N\x01\0\0O\x01\0\0P\x01\0\0Q\x01\0\0R\x01\0\0S\x01\0\0T\x01\0\0U\x01\0\0V\x01\0\0X\x01\0\0Z\x01\0\0[\x01\0\0\\\x01\0\0]\x01\0\0^\x01\0\0_\x01\0\0`\x01\0\0a\x01\0\0b\x01\0\0c\x01\0\0d\x01\0\0e\x01\0\0f\x01\0\0h\x01\0\0i\x01\0\0k\x01\0\0l\x01\0\0m\x01\0\0n\x01\0\0o\x01\0\0p\x01\0\0q\x01\0\0r\x01\0\0s\x01\0\0t\x01\0\0u\x01\0\0w\x01\0\0x\x01\0\0y\x01\0\0z\x01\0\0{\x01\0\0|\x01\0\0}\x01\0\0~\x01\0\0\x7F\x01\0\0\x80\x01\0\0\x81\x01\0\0\x82\x01\0\0\x84\x01\0\0\x87\x01\0\0\x88\x01\0\0\x89\x01\0\0\x8B\x01\0\0\x8C\x01\0\0\x8F\x01\0\0\x90\x01\0\0\x91\x01\0\0\x92\x01\0\0\x93\x01\0\0\x94\x01\0\0\x95\x01\0\0\x96\x01\0\0\x97\x01\0\0\x98\x01\0\0\x99\x01\0\0\x9B\x01\0\0\x9C\x01\0\0\x9D\x01\0\0\x9E\x01\0\0\x9F\x01\0\0\xA0\x01\0\0\xA1\x01\0\0\xA2\x01\0\0\xA3\x01\0\0\xA4\x01\0\0\xA5\x01\0\0\xA6\x01\0\0\xA7\x01\0\0\xA8\x01\0\0\xA9\x01\0\0\xAA\x01\0\0\xAB\x01\0\0\xAC\x01\0\0\xAD\x01\0\0\xAE\x01\0\0\xAF\x01\0\0\xB0\x01\0\0\xB1\x01\0\0\xB2\x01\0\0\xB3\x01\0\0\xB4\x01\0\0\xB8\x01\0\0\xB9\x01\0\0\xBA\x01\0\0\xBB\x01\0\0\xBC\x01\0\0\xBD\x01\0\0\xBE\x01\0\0\xBF\x01\0\0\xC0\x01\0\0\xC1\x01\0\0\xC2\x01\0\0\xC3\x01\0\0\xC4\x01\0\0\xC5\x01\0\0\xC6\x01\0\0\xC7\x01\0\0\xC8\x01\0\0\xC9\x01\0\0\xCA\x01\0\0\xCB\x01\0\0\xCC\x01\0\0\xCD\x01\0\0\xCE\x01\0\0\xCF\x01\0\0\xD0\x01\0\0\xD1\x01\0\0\xD2\x01\0\0\xD3\x01\0\0\xD4\x01\0\0\xD5\x01\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x90\x9F\x0B\0\0\0\0\0\0\0\0\0\xE4\x8B\x16\0\xE0\n\x19\0D\xC8\x19\0\x10\x17\x1A\0`S\x1A\0\xCC\x9E\x1A\0@\xD9\x1A\0\0(\x1B\0Td\x1B\0\x80\xB0\x1B\0\xD4\xEC\x1B\0\09\x1C\0@t\x1C\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xAC\x98\x06\0\x1C\x1B\x19\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xD0\xA9\x0B\0\xF0p\x12\0\xF0p\x12\0\x90\xA4\x0B\0\x10H\x15\0\xB0\x95\x12\0\xF0p\x12\0\xD0\xA9\x0B\0Pn\x12\0\x10~\x12\0\xF0p\x12\0\xF0e\x07\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xB8\xF8\x05\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x90\x96\x0B\0\0\0\0\0\0\0\0\0H\xA8\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xB0J\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x000w\x17\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x000w\x17\0\0\0\0\0\0\0\0\0\0\0\0\0P\x96\x14\0\0\0\0\0\xAA~\t\0\0\0\0\0\xB8\xFA\x17\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0h,\x18\0\0\0\0\0\xE8\x12\n\0\0\0\0\0<~\x10\0\0\0\0\0\xC0\xE5\x13\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\xB8\x10\0\xA4\x0B\x02\0\xBC2\x1B\0\xA4l\x01\0\0\xB8\x10\0\x08\xFD\x04\0\0\0\0\0\xBC2\x1B\0\xE4>\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x1C\x1B\x19\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0t\xFA\x18\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0X\x8B\x10\0\xC0\x0F\x06\0\x94\x8F\x08\0\0\0\0\0\xFCI\n\0\0\0\0\0\xA4\\\x03\0\x08\x1F\x1A\0\0\0\0\0\x80\x99\x07\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xF8\xE8\r\0\x88\xFA\0\0\0\0\0\0\xF0`\x0B\0\0\0\0\0\x88\xFA\0\0\0\0\0\0\0\0\0\0\x0C\xE9\r\0\0\0\0\0\x04\x04\x1D\0h\x03\x06\0\xE4\x05\x1D\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x98\x92\x10\0\xC4\xAC\x02\0\0\0\0\0\xF8\xE8\r\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0 \xA1\t\0\x88\xFA\0\0\x88\xFA\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x88\xFA\0\0\0\0\0\0\0\0\0\0\xD8B\x1C\0\0\0\0\0\0\0\0\0\xF0\x96\x0B\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x1Ch\x18\0\xDC\xDC\x19\0\0\0\0\0\0\0\0\0\0\0\0\0\xB8\xA2\x12\0\x88\xFA\x1C\0\xB4\xA2\x12\0\x88\xFA\x1C\0\xB0\xA2\x12\0\x88\xFA\x1C\0\xB8\xA2\x12\0\x88\xFA\x1C\0\xB4\xA2\x12\0\x88\xFA\x1C\0\xB4\xA2\x12\0(3\x1A\0\x88\xFA\x1C\0\xB8\xA2\x12\0\x88\xFA\x1C\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xCAi\x13\0#?\x01\0\0\0\0\0\xA4\xF5\x0F\0\0\0\0\0\xFCI\n\0 q\x17\0|\x8F\x08\0\x08\x1F\x1A\0\0\0\0\x004\xE2\n\0\0\0\0\0\0\0\0\0\x90\xA5\x0C\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0@\x08\x10\0\x98\x92\x10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x84\x1E\x0F\0\xC0C\x1C\0\x84\x1E\x0F\0\xC0C\x1C\0XO\x1C\0\x18K\x0F\0@\x1F\x18\0\0\0\0\0\0\0\0\0\0\0\0\0\x1C\xDE\x06\0\0\0\0\0\0\0\0\0\x84\x1E\x0F\0\xC0C\x1C\0\xC4\x89\x15\0\0\0\0\0\x80k\x06\0\x80k\x06\0\0\0\0\0\xD8\xF4\x0C\0\x98\x94\x19\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0Tr\x0E\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xE0\x11\x18\0\0\0\0\0L\xA8\0\0\0\0\0\0\xF0\x86\x05\0\0\0\0\0\0\0\0\0\0\0\0\0\xC4\n\x0E\0\x04\x8D\x0C\0\0\0\0\0\0\0\0\0\xB0J\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\xE6\x0B\0\x9C\xBC\x18\0@\xFA\x17\0\x88\xBC\x18\08\xFA\x17\0\0\0\0\0\0\0\0\0\\\xFA\x17\0\x14O\x16\0\0\0\0\0\xE0\xA1\x0B\0\xE0\xCB\x0B\0L\xFA\x17\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\xE6\x0B\0\x1C\x1B\x19\08\xFA\x17\0\xE0\xCB\x0B\0\x9C\xBC\x18\0\x10O\x16\0\0\0\0\0\0\0\0\0\0\0\0\0\xD8\xCB\x0B\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0H\x12\x10\0\x94\x97\x19\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xEE%\x03\0H\x12\x10\0\x14U\x1B\0\0\0\0\0\x84\xAE\x19\0d7\x1A\0\0\0\0\0\0\0\0\0\0\0\0\0\xD4B\x1C\0\0\0\0\0\0\0\0\0\\,\x18\0|\xC8\x19\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0T\x9A\x0B\0\0\0\0\0@n\x10\0P\xAC\x0B\0\0\0\0\0\0\0\0\0t/\x08\0\x14\xFA\x18\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\08\xF7\n\0\xA0\xAB\x17\0\0\0\0\0\0\0\0\0\xF0e\x07\0\x88q\x07\0\x1C\x94\x02\0\x84q\x07\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xECe\x07\0\0\0\0\0\0\0\0\0\x84q\x07\0\x1Ce\x13\0\0\0\0\0\x1C\x94\x02\0\\\xC7\x01\0<~\x10\0\0\0\0\0\xA8\x85\x18\0\xC8!\x1A\0\xA8>\x1A\0\x005\x0C\0\xC0\x17\x12\0\0\0\0\0\xFC>\x14\0\x84q\x07\0\0\0\0\0\x84q\x07\0\x1Ce\x13\0\xC0\xE5\x13\0\xFC>\x14\0 \xDB\x15\0\x84q\x07\0\0\0\0\0H\x97\x0B\0H\x97\x0B\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xC0\xE9\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"2B\x04\x16\x162\x14\x16\x06\x1A\"\x1A\"\x1A\"\x1A\"\x1A\"\x1A\"\x1A-.cm&\0\x81\x8Ae\x99\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x13\x842\x17\x17\x19\x17\x18\x19\x19[\x19\x19\x1A\x19\x16\x1B2\x16\x1D2e3\x12\x02\x06\x16!\x1F\x16  \t\t\t\x01q \t \t\x01    \x0B\x1E\x02g\n\x0C\x0C\r\x0C\x16\x16\x16\x0B\x16\n\nl\x0B\r\n\x16\x0C\r\x9E\x0C\n\x0C\r\x9E\n\x0B)\x02\x06\x06\x062e+/&\0&\x06'\0*\n,#(3\x003222\x032\x16\x162:1335\0\x03252\x033376V}\x9052\x063e\x16<8ee2e@?>?\x16eee\x16\x16\x16\x063\x87\n$eC3E\n2\x0B2JLGLeeHK\x12Me2Oe\x0B3\0P\x03XIZz=\x03\x16U~UU\x12\x0BSTSTQTSTQTQSTSTI3\x162He\x0532335\x00232\x03^^2ehFf'$\x16e\x162b`\x02d\nd\n\x0C\n\x0Bd\n\n\n\nd\x0C\n\n\r__\x02\x06\x02j\x06p\x06\n22kinm%B\x0Bx;a\x8Bv\0yt2{|\x1655\x1Cuw\x12\x8032g\0N\x9C\x0E]N3\x9CW\x83gWsrRg\0\0g\0\x97\x82\x98\x97\x9D\x9C\x02\x12\x88\x85\x03\x022\x86e222e2e\x03\x89\x03\x02e\x06e\n\x163\0\x05\x0B\x16\x0B\x069eI\x8D\x8E0\x912\x8F3\0\x16\x92\x8C\x033g\x03\x9A\x84D\x0B\x08\x0C\n\x0C\x0BD\x0B\x0B\x08\n\r\x0B\n\x0B\r\x08\r\x08\n\n\x0B\x0B\x08\x0C\x08\n\x0B\x0B\n\x08\x93\x94\x942\x16\x96\x16\x16I\x95\x9B\x0F\x12\x03\x05\x02\x02") })
                },
            };
            #[doc(hidden)]
            pub const SINGLETON_TIMEZONE_METAZONE_PERIODS_V1_CHECKSUM: u64 = 1484489054199371178u64;
        }
        #[clippy::msrv = "1.82"]
        impl icu_provider::DataProvider<icu::datetime::provider::time_zones::TimezoneMetazonePeriodsV1> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::datetime::provider::time_zones::TimezoneMetazonePeriodsV1>, icu_provider::DataError> {
                if req.id.locale.is_unknown() {
                    Ok(icu_provider::DataResponse { payload: icu_provider::DataPayload::from_static_ref(Self::SINGLETON_TIMEZONE_METAZONE_PERIODS_V1), metadata: icu_provider::DataResponseMetadata::default().with_checksum(Self::SINGLETON_TIMEZONE_METAZONE_PERIODS_V1_CHECKSUM) })
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::datetime::provider::time_zones::TimezoneMetazonePeriodsV1 as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
    };
    ($ provider : ty , ITER) => {
        __impl_timezone_metazone_periods_v1!($provider);
        #[clippy::msrv = "1.82"]
        impl icu_provider::IterableDataProvider<icu::datetime::provider::time_zones::TimezoneMetazonePeriodsV1> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BtreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok([Default::default()].into_iter().collect())
            }
        }
    };
    ($ provider : ty , DRY) => {
        __impl_timezone_metazone_periods_v1!($provider);
        #[clippy::msrv = "1.82"]
        impl icu_provider::DryDataProvider<icu::datetime::provider::time_zones::TimezoneMetazonePeriodsV1> for $provider {
            fn dry_load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponseMetadata, icu_provider::DataError> {
                if req.id.locale.is_unknown() {
                    Ok(icu_provider::DataResponseMetadata::default().with_checksum(Self::SINGLETON_TIMEZONE_METAZONE_PERIODS_V1_CHECKSUM))
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::datetime::provider::time_zones::TimezoneMetazonePeriodsV1 as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
    };
    ($ provider : ty , DRY , ITER) => {
        __impl_timezone_metazone_periods_v1!($provider);
        #[clippy::msrv = "1.82"]
        impl icu_provider::DryDataProvider<icu::datetime::provider::time_zones::TimezoneMetazonePeriodsV1> for $provider {
            fn dry_load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponseMetadata, icu_provider::DataError> {
                if req.id.locale.is_unknown() {
                    Ok(icu_provider::DataResponseMetadata::default().with_checksum(Self::SINGLETON_TIMEZONE_METAZONE_PERIODS_V1_CHECKSUM))
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::datetime::provider::time_zones::TimezoneMetazonePeriodsV1 as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
        #[clippy::msrv = "1.82"]
        impl icu_provider::IterableDataProvider<icu::datetime::provider::time_zones::TimezoneMetazonePeriodsV1> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BtreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok([Default::default()].into_iter().collect())
            }
        }
    };
}
#[doc(inline)]
pub use __impl_timezone_metazone_periods_v1 as impl_timezone_metazone_periods_v1;
