// @generated
/// Implement `DataProvider<DateTimePatternV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
///
/// Using this implementation will embed the following data in the binary's data segment:
/// * 2601B for the lookup data structure (637 data identifiers)
/// * 393B[^1] for the actual data (10 unique structs)
///
/// [^1]: these numbers can be smaller in practice due to linker deduplication
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_date_time_pattern_v1_marker {
    ($ provider : ty) => {
        #[clippy::msrv = "1.70"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.70"]
        impl $provider {
            const DATA_DATE_TIME_PATTERN_V1_MARKER: icu_provider_baked::zerotrie::Data<icu::datetime::provider::neo::DateTimePatternV1Marker> = icu_provider_baked::zerotrie::Data { trie: icu_provider_baked::zerotrie::ZeroTrieSimpleAscii { store: b"\xE1zabcdefghijklmnopqrstuvwxyz\0\0\x01\x01\x02\x02\x02\x03\x03\x03\x04\x05\x05\x06\x06\x06\x06\x06\x07\x08\x08\t\t\t\t[\xFAf\xA4\x10\x87\xC3;\x95\xB3\xB8\x14\xAC\x02 \x8E\x9C\xD9\xF4{\xDB\n\x187z\xC5fmrsz\r\x1A'D\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x81\x81\x81\x81\xC2\x1Et\x0C\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\xC7eghlnrs\r*8FSp\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\xC2\x1Ec\x0C\xC4flms\x01\x02\x03\x82\x82\x82\x82\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80o\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80o\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\xC2\x1Ex\x0C\xC4flms\x01\x02\x03\x82\x82\x82\x80\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\xC2\x1E-\x0C\xC4flms\x01\x02\x03\x82\x82\x80\x80Cyrl\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\xC6aehsvy\r\x1B)FS\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x80b\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82r\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\xC2\x1Ew\x0C\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\x1E\xC4flms\x01\x02\x03\x82\x82\x80\x80\xC4aeos\r\x1A(\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82i\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82b\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\xC6lnostu\r,9FS\x1E\xC4flms\x01\x02\x03\x83\x83\x82\x82\xC2\x1E-\x0C\xC4flms\x01\x02\x03\x82\x82\x82\x82MV\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x84\x84\x84\x84\xC6afiory\r\x1F<I^\x1E\xC4flms\x01\x02\x03\x85\x85\x89\x89-Adlm\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\xC2\x1El\x0C\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\xC2\x1E-\x0C\xC4flms\x01\x02\x03\x82\x82\x82\x80ML\x1Es\x82\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\xC4adlu\r\x1A'\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\xC7aeirsuy\r\x1A5BP]\x1E\xC4flms\x01\x02\x03\x80\x82\x82\x82\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\xC2\x1E-\x0C\xC4flms\x01\x02\x03\x82\x82\x82\x82Latn\x1E\xC2ms\x01\x80\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80b\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\xC6adegst\r\x1A'4A\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\x1E\xC4flms\x01\x02\x03\x80\x80\x82\x82\xC2av\r\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x82\x82\xCBaegkmnosuxy\r\x1B)6CPm\x8E\x9B\xE2\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82a\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82p\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\xC2\x1Ek\x0C\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\xC2\x1E-\x0C\xC4flms\x01\x02\x03\x82\x82\x82\x82Deva\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80v\xC2\x1E-\x0C\xC4flms\x01\x02\x03\x82\x82\x82\x82\xC3DOT\x10 eva\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80rya\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80elu\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\xC6bimotv\r\x1B)6C\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80j\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80o\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\xC9aiklnrsty\x0E\x1B(5R_lyi\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\xC2\x1Ei\x0C\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\x1E\xC4flms\x01\x02\x03\x80\x80\x82\x82\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\xC6delnoq\x0E\x1B(/<s\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x82\x82\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\x1E\xC2fl\x01\x80\x88\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82o\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\xC2cr\r\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\xC6aclrst\r\x1B(6C\x1E\xC4flms\x01\x02\x03\x80\x80\x82\x82m\x1E\xC4flms\x01\x02\x03\x82\x82\x80\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x82\x82g\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\xC2\x1E-\x0C\xC4flms\x01\x02\x03\x80\x80\x80\x80PT\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82u\x1E\xC4flms\x01\x02\x03\x80\x86\x80\x80\xC4amou\x0E\x1B(j\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\xCEacdikloqruvwyz,9Zgt\x81\x8E\x9B\xBC\xC9\xD6\xE3\xF1\xC3\x1Eht\x0C\x19\xC4flms\x01\x02\x03\x82\x82\x82\x82\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\xC2\x1E-\x0C\xC4flms\x01\x02\x03\x80\x80\x80\x80Deva\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x82\x82\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\xC2\x1E-\x0C\xC4flms\x01\x02\x03\x80\x80\x80\x80Latn\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80r\x1E\xC4flms\x01\x02\x03\x81\x81\x81\x81l\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\xC9aeghikort\r\x1A'4AN[h\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\xC5gknrz\r\x1A(5\x1E\xC4flms\x01\x02\x03\x80\x80\x81\x81\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82d\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\xC2\x1E-\x0C\xC4flms\x01\x02\x03\x82\x82\x82\x82Cyrl\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\xC3eim\x0E\x1Bc\x1E\xC4flms\x01\x02\x03\x82\x82\x82\x82\x1E\xC4flms\x01\x02\x03\x86\x86\x86\x86w\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80o\x1E\xC4flms\x01\x02\x03\x83\x83\x83\x83\xC2hn\r\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80r\x1E\xC4flms\x01\x02\x03\x87\x87\x82\x82\xC3oru\r\x1B\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80l\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80e\xC2\x1E-\x0C\xC4flms\x01\x02\x03\x80\x80\x80\x80Hans\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\xC3ahu\r.\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\xC2\x1E-\x0C\xC4flms\x01\x02\x03\x80\x80\x80\x80Hant\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80\x1E\xC4flms\x01\x02\x03\x80\x80\x80\x80" }, values: &[icu::datetime::provider::neo::DateTimePatternV1 { pattern: icu::datetime::pattern::runtime::GenericPattern { items: unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x80\0\x01\0\0 \x80\0\0") } } }, icu::datetime::provider::neo::DateTimePatternV1 { pattern: icu::datetime::pattern::runtime::GenericPattern { items: unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x80\0\x01\0\x06\x0C\0\0 \x80\0\0") } } }, icu::datetime::provider::neo::DateTimePatternV1 { pattern: icu::datetime::pattern::runtime::GenericPattern { items: unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x80\0\x01\0\0,\0\0 \x80\0\0") } } }, icu::datetime::provider::neo::DateTimePatternV1 { pattern: icu::datetime::pattern::runtime::GenericPattern { items: unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x80\0\x01\0\0 \0\0-\0\0 \x80\0\0") } } }, icu::datetime::provider::neo::DateTimePatternV1 { pattern: icu::datetime::pattern::runtime::GenericPattern { items: unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x80\0\x01\0\0 \0\0(\x80\0\0\0\0)") } } }, icu::datetime::provider::neo::DateTimePatternV1 { pattern: icu::datetime::pattern::runtime::GenericPattern { items: unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x80\0\x01\0\x06\x0C\0\0 \0\x063\0\x06'\0\x069\0\x06*\0\0 \x80\0\0") } } }, icu::datetime::provider::neo::DateTimePatternV1 { pattern: icu::datetime::pattern::runtime::GenericPattern { items: unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x80\0\0\0\0 \x80\0\x01") } } }, icu::datetime::provider::neo::DateTimePatternV1 { pattern: icu::datetime::pattern::runtime::GenericPattern { items: unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x80\0\x01\0\0 \0\t\x1C\0\tK\0\0 \x80\0\0") } } }, icu::datetime::provider::neo::DateTimePatternV1 { pattern: icu::datetime::pattern::runtime::GenericPattern { items: unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x80\0\x01\0\0 \0\0k\0\0l\0\0.\0\0 \x80\0\0") } } }, icu::datetime::provider::neo::DateTimePatternV1 { pattern: icu::datetime::pattern::runtime::GenericPattern { items: unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x80\0\x01\0\x06\x0C\0 \x0F\0\0 \x80\0\0") } } }] };
        }
        #[clippy::msrv = "1.70"]
        impl icu_provider::DataProvider<icu::datetime::provider::neo::DateTimePatternV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::datetime::provider::neo::DateTimePatternV1Marker>, icu_provider::DataError> {
                let mut metadata = icu_provider::DataResponseMetadata::default();
                let payload = if let Some(payload) = icu_provider_baked::DataStore::get(&Self::DATA_DATE_TIME_PATTERN_V1_MARKER, req.id) {
                    payload
                } else {
                    const FALLBACKER: icu::locale::fallback::LocaleFallbackerWithConfig<'static> = icu::locale::fallback::LocaleFallbacker::new().for_config(<icu::datetime::provider::neo::DateTimePatternV1Marker as icu_provider::DataMarker>::INFO.fallback_config);
                    let mut fallback_iterator = FALLBACKER.fallback_for(req.id.locale.clone());
                    loop {
                        if let Some(payload) = icu_provider_baked::DataStore::get(&Self::DATA_DATE_TIME_PATTERN_V1_MARKER, icu_provider::DataIdentifierBorrowed::for_marker_attributes_and_locale(req.id.marker_attributes, fallback_iterator.get())) {
                            metadata.locale = Some(fallback_iterator.take());
                            break payload;
                        }
                        if fallback_iterator.get().is_und() {
                            return Err(icu_provider::DataErrorKind::IdentifierNotFound.with_req(<icu::datetime::provider::neo::DateTimePatternV1Marker as icu_provider::DataMarker>::INFO, req));
                        }
                        fallback_iterator.step();
                    }
                };
                Ok(icu_provider::DataResponse { payload: icu_provider::DataPayload::from_static_ref(payload), metadata })
            }
        }
    };
    ($ provider : ty , ITER) => {
        __impl_date_time_pattern_v1_marker!($provider);
        #[clippy::msrv = "1.70"]
        impl icu_provider::IterableDataProvider<icu::datetime::provider::neo::DateTimePatternV1Marker> for $provider {
            fn iter_ids(&self) -> Result<std::collections::HashSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok(icu_provider_baked::DataStore::iter(&Self::DATA_DATE_TIME_PATTERN_V1_MARKER).collect())
            }
        }
    };
}
#[doc(inline)]
pub use __impl_date_time_pattern_v1_marker as impl_date_time_pattern_v1_marker;
