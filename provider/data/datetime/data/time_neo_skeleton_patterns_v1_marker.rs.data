// @generated
/// Implement `DataProvider<TimeNeoSkeletonPatternsV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
///
/// Using this implementation will embed the following data in the binary's data segment:
/// * 12149B[^1] for the lookup data structure (577 data identifiers)
/// * 3558B[^1] for the actual data (61 unique structs)
///
/// [^1]: these numbers can be smaller in practice due to linker deduplication
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_time_neo_skeleton_patterns_v1_marker {
    ($ provider : ty) => {
        #[clippy::msrv = "1.70"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.70"]
        impl $provider {
            const DATA_TIME_NEO_SKELETON_PATTERNS_V1_MARKER: icu_provider_baked::binary_search::Data<icu_provider_baked::binary_search::AttributesAndLocale<3usize, 10usize>, icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker> = icu_provider_baked::binary_search::Data(
                {
                    use icu_provider_baked::binary_search::tinystr::tinystr;
                    &[(tinystr!(3usize, "a1"), tinystr!(10usize, "af-NA")), (tinystr!(3usize, "a1"), tinystr!(10usize, "am")), (tinystr!(3usize, "a1"), tinystr!(10usize, "ar")), (tinystr!(3usize, "a1"), tinystr!(10usize, "ar-IL")), (tinystr!(3usize, "a1"), tinystr!(10usize, "ar-KM")), (tinystr!(3usize, "a1"), tinystr!(10usize, "ar-MA")), (tinystr!(3usize, "a1"), tinystr!(10usize, "as")), (tinystr!(3usize, "a1"), tinystr!(10usize, "bg")), (tinystr!(3usize, "a1"), tinystr!(10usize, "bgc")), (tinystr!(3usize, "a1"), tinystr!(10usize, "bho")), (tinystr!(3usize, "a1"), tinystr!(10usize, "bn")), (tinystr!(3usize, "a1"), tinystr!(10usize, "brx")), (tinystr!(3usize, "a1"), tinystr!(10usize, "ca")), (tinystr!(3usize, "a1"), tinystr!(10usize, "ceb")), (tinystr!(3usize, "a1"), tinystr!(10usize, "chr")), (tinystr!(3usize, "a1"), tinystr!(10usize, "cs")), (tinystr!(3usize, "a1"), tinystr!(10usize, "da")), (tinystr!(3usize, "a1"), tinystr!(10usize, "doi")), (tinystr!(3usize, "a1"), tinystr!(10usize, "dsb")), (tinystr!(3usize, "a1"), tinystr!(10usize, "el")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-150")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-AI")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-BI")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-BW")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-BZ")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-CC")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-CK")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-CM")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-CX")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-DG")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-DK")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-FI")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-FK")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-GB")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-GG")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-GI")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-ID")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-IE")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-IL")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-IM")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-IO")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-JE")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-KE")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-MG")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-MS")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-MT")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-MU")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-MV")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-NF")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-NG")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-NR")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-NU")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-PN")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-RW")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-SC")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-SH")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-SX")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-TK")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-TV")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-TZ")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-UG")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-ZA")), (tinystr!(3usize, "a1"), tinystr!(10usize, "en-ZW")), (tinystr!(3usize, "a1"), tinystr!(10usize, "es")), (tinystr!(3usize, "a1"), tinystr!(10usize, "es-419")), (tinystr!(3usize, "a1"), tinystr!(10usize, "es-BR")), (tinystr!(3usize, "a1"), tinystr!(10usize, "es-BZ")), (tinystr!(3usize, "a1"), tinystr!(10usize, "es-PH")), (tinystr!(3usize, "a1"), tinystr!(10usize, "fa")), (tinystr!(3usize, "a1"), tinystr!(10usize, "ff-Adlm-GH")), (tinystr!(3usize, "a1"), tinystr!(10usize, "ff-Adlm-GM")), (tinystr!(3usize, "a1"), tinystr!(10usize, "ff-Adlm-LR")), (tinystr!(3usize, "a1"), tinystr!(10usize, "ff-Adlm-MR")), (tinystr!(3usize, "a1"), tinystr!(10usize, "ff-Adlm-SL")), (tinystr!(3usize, "a1"), tinystr!(10usize, "fi")), (tinystr!(3usize, "a1"), tinystr!(10usize, "fil")), (tinystr!(3usize, "a1"), tinystr!(10usize, "fr-CA")), (tinystr!(3usize, "a1"), tinystr!(10usize, "fr-DJ")), (tinystr!(3usize, "a1"), tinystr!(10usize, "fr-DZ")), (tinystr!(3usize, "a1"), tinystr!(10usize, "fr-MR")), (tinystr!(3usize, "a1"), tinystr!(10usize, "fr-SY")), (tinystr!(3usize, "a1"), tinystr!(10usize, "fr-TD")), (tinystr!(3usize, "a1"), tinystr!(10usize, "fr-TN")), (tinystr!(3usize, "a1"), tinystr!(10usize, "fr-VU")), (tinystr!(3usize, "a1"), tinystr!(10usize, "gu")), (tinystr!(3usize, "a1"), tinystr!(10usize, "ha-GH")), (tinystr!(3usize, "a1"), tinystr!(10usize, "he")), (tinystr!(3usize, "a1"), tinystr!(10usize, "hi")), (tinystr!(3usize, "a1"), tinystr!(10usize, "hsb")), (tinystr!(3usize, "a1"), tinystr!(10usize, "hu")), (tinystr!(3usize, "a1"), tinystr!(10usize, "id")), (tinystr!(3usize, "a1"), tinystr!(10usize, "ja")), (tinystr!(3usize, "a1"), tinystr!(10usize, "km")), (tinystr!(3usize, "a1"), tinystr!(10usize, "kn")), (tinystr!(3usize, "a1"), tinystr!(10usize, "ko")), (tinystr!(3usize, "a1"), tinystr!(10usize, "ko-CN")), (tinystr!(3usize, "a1"), tinystr!(10usize, "kok")), (tinystr!(3usize, "a1"), tinystr!(10usize, "ks")), (tinystr!(3usize, "a1"), tinystr!(10usize, "ks-Deva")), (tinystr!(3usize, "a1"), tinystr!(10usize, "kxv")), (tinystr!(3usize, "a1"), tinystr!(10usize, "lo")), (tinystr!(3usize, "a1"), tinystr!(10usize, "mai")), (tinystr!(3usize, "a1"), tinystr!(10usize, "mi")), (tinystr!(3usize, "a1"), tinystr!(10usize, "ml")), (tinystr!(3usize, "a1"), tinystr!(10usize, "mni")), (tinystr!(3usize, "a1"), tinystr!(10usize, "mr")), (tinystr!(3usize, "a1"), tinystr!(10usize, "ms")), (tinystr!(3usize, "a1"), tinystr!(10usize, "ms-ID")), (tinystr!(3usize, "a1"), tinystr!(10usize, "my")), (tinystr!(3usize, "a1"), tinystr!(10usize, "ne-IN")), (tinystr!(3usize, "a1"), tinystr!(10usize, "or")), (tinystr!(3usize, "a1"), tinystr!(10usize, "pa")), (tinystr!(3usize, "a1"), tinystr!(10usize, "ps")), (tinystr!(3usize, "a1"), tinystr!(10usize, "ps-PK")), (tinystr!(3usize, "a1"), tinystr!(10usize, "pt-MO")), (tinystr!(3usize, "a1"), tinystr!(10usize, "qu")), (tinystr!(3usize, "a1"), tinystr!(10usize, "raj")), (tinystr!(3usize, "a1"), tinystr!(10usize, "sa")), (tinystr!(3usize, "a1"), tinystr!(10usize, "sat")), (tinystr!(3usize, "a1"), tinystr!(10usize, "sd")), (tinystr!(3usize, "a1"), tinystr!(10usize, "sd-Deva")), (tinystr!(3usize, "a1"), tinystr!(10usize, "si")), (tinystr!(3usize, "a1"), tinystr!(10usize, "sk")), (tinystr!(3usize, "a1"), tinystr!(10usize, "so")), (tinystr!(3usize, "a1"), tinystr!(10usize, "so-KE")), (tinystr!(3usize, "a1"), tinystr!(10usize, "sq")), (tinystr!(3usize, "a1"), tinystr!(10usize, "sq-MK")), (tinystr!(3usize, "a1"), tinystr!(10usize, "sq-XK")), (tinystr!(3usize, "a1"), tinystr!(10usize, "su")), (tinystr!(3usize, "a1"), tinystr!(10usize, "syr")), (tinystr!(3usize, "a1"), tinystr!(10usize, "ta")), (tinystr!(3usize, "a1"), tinystr!(10usize, "ta-LK")), (tinystr!(3usize, "a1"), tinystr!(10usize, "te")), (tinystr!(3usize, "a1"), tinystr!(10usize, "ti")), (tinystr!(3usize, "a1"), tinystr!(10usize, "to")), (tinystr!(3usize, "a1"), tinystr!(10usize, "tr-CY")), (tinystr!(3usize, "a1"), tinystr!(10usize, "tt")), (tinystr!(3usize, "a1"), tinystr!(10usize, "und")), (tinystr!(3usize, "a1"), tinystr!(10usize, "ur")), (tinystr!(3usize, "a1"), tinystr!(10usize, "xnr")), (tinystr!(3usize, "a1"), tinystr!(10usize, "yo")), (tinystr!(3usize, "a1"), tinystr!(10usize, "yrl-CO")), (tinystr!(3usize, "a1"), tinystr!(10usize, "yrl-VE")), (tinystr!(3usize, "a1"), tinystr!(10usize, "yue")), (tinystr!(3usize, "a1"), tinystr!(10usize, "zh-HK")), (tinystr!(3usize, "a1"), tinystr!(10usize, "zh-Hant")), (tinystr!(3usize, "a1"), tinystr!(10usize, "zh-MO")), (tinystr!(3usize, "a1"), tinystr!(10usize, "zh-SG")), (tinystr!(3usize, "j"), tinystr!(10usize, "af-NA")), (tinystr!(3usize, "j"), tinystr!(10usize, "am")), (tinystr!(3usize, "j"), tinystr!(10usize, "ar")), (tinystr!(3usize, "j"), tinystr!(10usize, "ar-IL")), (tinystr!(3usize, "j"), tinystr!(10usize, "ar-KM")), (tinystr!(3usize, "j"), tinystr!(10usize, "ar-MA")), (tinystr!(3usize, "j"), tinystr!(10usize, "as")), (tinystr!(3usize, "j"), tinystr!(10usize, "bg")), (tinystr!(3usize, "j"), tinystr!(10usize, "bgc")), (tinystr!(3usize, "j"), tinystr!(10usize, "bho")), (tinystr!(3usize, "j"), tinystr!(10usize, "bn")), (tinystr!(3usize, "j"), tinystr!(10usize, "brx")), (tinystr!(3usize, "j"), tinystr!(10usize, "bs")), (tinystr!(3usize, "j"), tinystr!(10usize, "ca")), (tinystr!(3usize, "j"), tinystr!(10usize, "ceb")), (tinystr!(3usize, "j"), tinystr!(10usize, "chr")), (tinystr!(3usize, "j"), tinystr!(10usize, "cs")), (tinystr!(3usize, "j"), tinystr!(10usize, "de")), (tinystr!(3usize, "j"), tinystr!(10usize, "doi")), (tinystr!(3usize, "j"), tinystr!(10usize, "dsb")), (tinystr!(3usize, "j"), tinystr!(10usize, "el")), (tinystr!(3usize, "j"), tinystr!(10usize, "en")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-150")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-AI")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-BI")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-BW")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-BZ")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-CC")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-CK")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-CM")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-CX")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-DG")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-FK")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-GB")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-GG")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-GI")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-ID")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-IE")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-IL")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-IM")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-IO")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-JE")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-KE")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-MG")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-MS")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-MT")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-MU")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-MV")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-NF")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-NG")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-NR")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-NU")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-PN")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-RW")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-SC")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-SH")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-SX")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-TK")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-TV")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-TZ")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-UG")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-ZA")), (tinystr!(3usize, "j"), tinystr!(10usize, "en-ZW")), (tinystr!(3usize, "j"), tinystr!(10usize, "es-419")), (tinystr!(3usize, "j"), tinystr!(10usize, "es-BR")), (tinystr!(3usize, "j"), tinystr!(10usize, "es-BZ")), (tinystr!(3usize, "j"), tinystr!(10usize, "es-MX")), (tinystr!(3usize, "j"), tinystr!(10usize, "es-PH")), (tinystr!(3usize, "j"), tinystr!(10usize, "fa")), (tinystr!(3usize, "j"), tinystr!(10usize, "ff-Adlm-GH")), (tinystr!(3usize, "j"), tinystr!(10usize, "ff-Adlm-GM")), (tinystr!(3usize, "j"), tinystr!(10usize, "ff-Adlm-LR")), (tinystr!(3usize, "j"), tinystr!(10usize, "ff-Adlm-MR")), (tinystr!(3usize, "j"), tinystr!(10usize, "ff-Adlm-SL")), (tinystr!(3usize, "j"), tinystr!(10usize, "fi")), (tinystr!(3usize, "j"), tinystr!(10usize, "fil")), (tinystr!(3usize, "j"), tinystr!(10usize, "fr-CA")), (tinystr!(3usize, "j"), tinystr!(10usize, "fr-DJ")), (tinystr!(3usize, "j"), tinystr!(10usize, "fr-DZ")), (tinystr!(3usize, "j"), tinystr!(10usize, "fr-MR")), (tinystr!(3usize, "j"), tinystr!(10usize, "fr-SY")), (tinystr!(3usize, "j"), tinystr!(10usize, "fr-TD")), (tinystr!(3usize, "j"), tinystr!(10usize, "fr-TN")), (tinystr!(3usize, "j"), tinystr!(10usize, "fr-VU")), (tinystr!(3usize, "j"), tinystr!(10usize, "gu")), (tinystr!(3usize, "j"), tinystr!(10usize, "ha-GH")), (tinystr!(3usize, "j"), tinystr!(10usize, "he")), (tinystr!(3usize, "j"), tinystr!(10usize, "hi")), (tinystr!(3usize, "j"), tinystr!(10usize, "hsb")), (tinystr!(3usize, "j"), tinystr!(10usize, "hu")), (tinystr!(3usize, "j"), tinystr!(10usize, "hy")), (tinystr!(3usize, "j"), tinystr!(10usize, "ja")), (tinystr!(3usize, "j"), tinystr!(10usize, "km")), (tinystr!(3usize, "j"), tinystr!(10usize, "kn")), (tinystr!(3usize, "j"), tinystr!(10usize, "ko")), (tinystr!(3usize, "j"), tinystr!(10usize, "ko-CN")), (tinystr!(3usize, "j"), tinystr!(10usize, "kok")), (tinystr!(3usize, "j"), tinystr!(10usize, "ks")), (tinystr!(3usize, "j"), tinystr!(10usize, "ks-Deva")), (tinystr!(3usize, "j"), tinystr!(10usize, "kxv")), (tinystr!(3usize, "j"), tinystr!(10usize, "mai")), (tinystr!(3usize, "j"), tinystr!(10usize, "mi")), (tinystr!(3usize, "j"), tinystr!(10usize, "mk")), (tinystr!(3usize, "j"), tinystr!(10usize, "ml")), (tinystr!(3usize, "j"), tinystr!(10usize, "mn")), (tinystr!(3usize, "j"), tinystr!(10usize, "mni")), (tinystr!(3usize, "j"), tinystr!(10usize, "mr")), (tinystr!(3usize, "j"), tinystr!(10usize, "ms")), (tinystr!(3usize, "j"), tinystr!(10usize, "ms-ID")), (tinystr!(3usize, "j"), tinystr!(10usize, "ne-IN")), (tinystr!(3usize, "j"), tinystr!(10usize, "or")), (tinystr!(3usize, "j"), tinystr!(10usize, "pa")), (tinystr!(3usize, "j"), tinystr!(10usize, "ps")), (tinystr!(3usize, "j"), tinystr!(10usize, "ps-PK")), (tinystr!(3usize, "j"), tinystr!(10usize, "pt-MO")), (tinystr!(3usize, "j"), tinystr!(10usize, "qu")), (tinystr!(3usize, "j"), tinystr!(10usize, "raj")), (tinystr!(3usize, "j"), tinystr!(10usize, "sa")), (tinystr!(3usize, "j"), tinystr!(10usize, "sat")), (tinystr!(3usize, "j"), tinystr!(10usize, "sd")), (tinystr!(3usize, "j"), tinystr!(10usize, "sd-Deva")), (tinystr!(3usize, "j"), tinystr!(10usize, "sk")), (tinystr!(3usize, "j"), tinystr!(10usize, "so")), (tinystr!(3usize, "j"), tinystr!(10usize, "so-KE")), (tinystr!(3usize, "j"), tinystr!(10usize, "sq")), (tinystr!(3usize, "j"), tinystr!(10usize, "sq-MK")), (tinystr!(3usize, "j"), tinystr!(10usize, "sq-XK")), (tinystr!(3usize, "j"), tinystr!(10usize, "syr")), (tinystr!(3usize, "j"), tinystr!(10usize, "ta")), (tinystr!(3usize, "j"), tinystr!(10usize, "ta-LK")), (tinystr!(3usize, "j"), tinystr!(10usize, "te")), (tinystr!(3usize, "j"), tinystr!(10usize, "ti")), (tinystr!(3usize, "j"), tinystr!(10usize, "to")), (tinystr!(3usize, "j"), tinystr!(10usize, "tr-CY")), (tinystr!(3usize, "j"), tinystr!(10usize, "und")), (tinystr!(3usize, "j"), tinystr!(10usize, "ur")), (tinystr!(3usize, "j"), tinystr!(10usize, "vi")), (tinystr!(3usize, "j"), tinystr!(10usize, "xnr")), (tinystr!(3usize, "j"), tinystr!(10usize, "yrl-CO")), (tinystr!(3usize, "j"), tinystr!(10usize, "yrl-VE")), (tinystr!(3usize, "j"), tinystr!(10usize, "yue")), (tinystr!(3usize, "j"), tinystr!(10usize, "yue-Hans")), (tinystr!(3usize, "j"), tinystr!(10usize, "zh")), (tinystr!(3usize, "j"), tinystr!(10usize, "zh-Hant")), (tinystr!(3usize, "j"), tinystr!(10usize, "zh-SG")), (tinystr!(3usize, "jm"), tinystr!(10usize, "af-NA")), (tinystr!(3usize, "jm"), tinystr!(10usize, "am")), (tinystr!(3usize, "jm"), tinystr!(10usize, "ar")), (tinystr!(3usize, "jm"), tinystr!(10usize, "ar-IL")), (tinystr!(3usize, "jm"), tinystr!(10usize, "ar-KM")), (tinystr!(3usize, "jm"), tinystr!(10usize, "ar-MA")), (tinystr!(3usize, "jm"), tinystr!(10usize, "as")), (tinystr!(3usize, "jm"), tinystr!(10usize, "bg")), (tinystr!(3usize, "jm"), tinystr!(10usize, "bgc")), (tinystr!(3usize, "jm"), tinystr!(10usize, "bho")), (tinystr!(3usize, "jm"), tinystr!(10usize, "bn")), (tinystr!(3usize, "jm"), tinystr!(10usize, "brx")), (tinystr!(3usize, "jm"), tinystr!(10usize, "ca")), (tinystr!(3usize, "jm"), tinystr!(10usize, "ceb")), (tinystr!(3usize, "jm"), tinystr!(10usize, "chr")), (tinystr!(3usize, "jm"), tinystr!(10usize, "cs")), (tinystr!(3usize, "jm"), tinystr!(10usize, "da")), (tinystr!(3usize, "jm"), tinystr!(10usize, "doi")), (tinystr!(3usize, "jm"), tinystr!(10usize, "el")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-150")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-AI")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-BI")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-BW")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-BZ")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-CC")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-CK")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-CM")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-CX")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-DG")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-DK")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-FI")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-FK")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-GB")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-GG")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-GI")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-ID")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-IE")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-IL")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-IM")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-IO")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-JE")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-KE")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-MG")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-MS")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-MT")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-MU")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-MV")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-NF")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-NG")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-NR")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-NU")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-PN")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-RW")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-SC")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-SH")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-SX")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-TK")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-TV")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-TZ")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-UG")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-ZA")), (tinystr!(3usize, "jm"), tinystr!(10usize, "en-ZW")), (tinystr!(3usize, "jm"), tinystr!(10usize, "es-419")), (tinystr!(3usize, "jm"), tinystr!(10usize, "es-BR")), (tinystr!(3usize, "jm"), tinystr!(10usize, "es-BZ")), (tinystr!(3usize, "jm"), tinystr!(10usize, "es-MX")), (tinystr!(3usize, "jm"), tinystr!(10usize, "es-PH")), (tinystr!(3usize, "jm"), tinystr!(10usize, "fa")), (tinystr!(3usize, "jm"), tinystr!(10usize, "ff-Adlm-GH")), (tinystr!(3usize, "jm"), tinystr!(10usize, "ff-Adlm-GM")), (tinystr!(3usize, "jm"), tinystr!(10usize, "ff-Adlm-LR")), (tinystr!(3usize, "jm"), tinystr!(10usize, "ff-Adlm-MR")), (tinystr!(3usize, "jm"), tinystr!(10usize, "ff-Adlm-SL")), (tinystr!(3usize, "jm"), tinystr!(10usize, "fi")), (tinystr!(3usize, "jm"), tinystr!(10usize, "fil")), (tinystr!(3usize, "jm"), tinystr!(10usize, "fr-CA")), (tinystr!(3usize, "jm"), tinystr!(10usize, "fr-DJ")), (tinystr!(3usize, "jm"), tinystr!(10usize, "fr-DZ")), (tinystr!(3usize, "jm"), tinystr!(10usize, "fr-MR")), (tinystr!(3usize, "jm"), tinystr!(10usize, "fr-SY")), (tinystr!(3usize, "jm"), tinystr!(10usize, "fr-TD")), (tinystr!(3usize, "jm"), tinystr!(10usize, "fr-TN")), (tinystr!(3usize, "jm"), tinystr!(10usize, "fr-VU")), (tinystr!(3usize, "jm"), tinystr!(10usize, "gu")), (tinystr!(3usize, "jm"), tinystr!(10usize, "ha-GH")), (tinystr!(3usize, "jm"), tinystr!(10usize, "he")), (tinystr!(3usize, "jm"), tinystr!(10usize, "hi")), (tinystr!(3usize, "jm"), tinystr!(10usize, "hu")), (tinystr!(3usize, "jm"), tinystr!(10usize, "hy")), (tinystr!(3usize, "jm"), tinystr!(10usize, "id")), (tinystr!(3usize, "jm"), tinystr!(10usize, "ja")), (tinystr!(3usize, "jm"), tinystr!(10usize, "km")), (tinystr!(3usize, "jm"), tinystr!(10usize, "kn")), (tinystr!(3usize, "jm"), tinystr!(10usize, "ko")), (tinystr!(3usize, "jm"), tinystr!(10usize, "ko-CN")), (tinystr!(3usize, "jm"), tinystr!(10usize, "kok")), (tinystr!(3usize, "jm"), tinystr!(10usize, "ks")), (tinystr!(3usize, "jm"), tinystr!(10usize, "ks-Deva")), (tinystr!(3usize, "jm"), tinystr!(10usize, "kxv")), (tinystr!(3usize, "jm"), tinystr!(10usize, "mai")), (tinystr!(3usize, "jm"), tinystr!(10usize, "mi")), (tinystr!(3usize, "jm"), tinystr!(10usize, "mk")), (tinystr!(3usize, "jm"), tinystr!(10usize, "ml")), (tinystr!(3usize, "jm"), tinystr!(10usize, "mni")), (tinystr!(3usize, "jm"), tinystr!(10usize, "mr")), (tinystr!(3usize, "jm"), tinystr!(10usize, "ms")), (tinystr!(3usize, "jm"), tinystr!(10usize, "ms-ID")), (tinystr!(3usize, "jm"), tinystr!(10usize, "ne-IN")), (tinystr!(3usize, "jm"), tinystr!(10usize, "or")), (tinystr!(3usize, "jm"), tinystr!(10usize, "pa")), (tinystr!(3usize, "jm"), tinystr!(10usize, "ps")), (tinystr!(3usize, "jm"), tinystr!(10usize, "ps-PK")), (tinystr!(3usize, "jm"), tinystr!(10usize, "pt-MO")), (tinystr!(3usize, "jm"), tinystr!(10usize, "qu")), (tinystr!(3usize, "jm"), tinystr!(10usize, "raj")), (tinystr!(3usize, "jm"), tinystr!(10usize, "sa")), (tinystr!(3usize, "jm"), tinystr!(10usize, "sat")), (tinystr!(3usize, "jm"), tinystr!(10usize, "sd")), (tinystr!(3usize, "jm"), tinystr!(10usize, "sd-Deva")), (tinystr!(3usize, "jm"), tinystr!(10usize, "sk")), (tinystr!(3usize, "jm"), tinystr!(10usize, "so")), (tinystr!(3usize, "jm"), tinystr!(10usize, "so-KE")), (tinystr!(3usize, "jm"), tinystr!(10usize, "sq")), (tinystr!(3usize, "jm"), tinystr!(10usize, "sq-MK")), (tinystr!(3usize, "jm"), tinystr!(10usize, "sq-XK")), (tinystr!(3usize, "jm"), tinystr!(10usize, "syr")), (tinystr!(3usize, "jm"), tinystr!(10usize, "ta")), (tinystr!(3usize, "jm"), tinystr!(10usize, "ta-LK")), (tinystr!(3usize, "jm"), tinystr!(10usize, "te")), (tinystr!(3usize, "jm"), tinystr!(10usize, "ti")), (tinystr!(3usize, "jm"), tinystr!(10usize, "to")), (tinystr!(3usize, "jm"), tinystr!(10usize, "tr-CY")), (tinystr!(3usize, "jm"), tinystr!(10usize, "und")), (tinystr!(3usize, "jm"), tinystr!(10usize, "ur")), (tinystr!(3usize, "jm"), tinystr!(10usize, "xnr")), (tinystr!(3usize, "jm"), tinystr!(10usize, "yrl-CO")), (tinystr!(3usize, "jm"), tinystr!(10usize, "yrl-VE")), (tinystr!(3usize, "jm"), tinystr!(10usize, "yue")), (tinystr!(3usize, "jm"), tinystr!(10usize, "zh-Hant")), (tinystr!(3usize, "jm"), tinystr!(10usize, "zh-SG")), (tinystr!(3usize, "jms"), tinystr!(10usize, "af-NA")), (tinystr!(3usize, "jms"), tinystr!(10usize, "am")), (tinystr!(3usize, "jms"), tinystr!(10usize, "ar")), (tinystr!(3usize, "jms"), tinystr!(10usize, "ar-IL")), (tinystr!(3usize, "jms"), tinystr!(10usize, "ar-KM")), (tinystr!(3usize, "jms"), tinystr!(10usize, "ar-MA")), (tinystr!(3usize, "jms"), tinystr!(10usize, "as")), (tinystr!(3usize, "jms"), tinystr!(10usize, "bg")), (tinystr!(3usize, "jms"), tinystr!(10usize, "bgc")), (tinystr!(3usize, "jms"), tinystr!(10usize, "bho")), (tinystr!(3usize, "jms"), tinystr!(10usize, "bn")), (tinystr!(3usize, "jms"), tinystr!(10usize, "brx")), (tinystr!(3usize, "jms"), tinystr!(10usize, "ca")), (tinystr!(3usize, "jms"), tinystr!(10usize, "ceb")), (tinystr!(3usize, "jms"), tinystr!(10usize, "chr")), (tinystr!(3usize, "jms"), tinystr!(10usize, "cs")), (tinystr!(3usize, "jms"), tinystr!(10usize, "da")), (tinystr!(3usize, "jms"), tinystr!(10usize, "doi")), (tinystr!(3usize, "jms"), tinystr!(10usize, "el")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-150")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-AI")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-BI")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-BW")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-BZ")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-CC")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-CK")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-CM")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-CX")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-DG")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-DK")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-FI")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-FK")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-GB")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-GG")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-GI")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-ID")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-IE")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-IL")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-IM")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-IO")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-JE")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-KE")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-MG")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-MS")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-MT")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-MU")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-MV")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-NF")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-NG")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-NR")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-NU")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-PN")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-RW")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-SC")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-SH")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-SX")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-TK")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-TV")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-TZ")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-UG")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-ZA")), (tinystr!(3usize, "jms"), tinystr!(10usize, "en-ZW")), (tinystr!(3usize, "jms"), tinystr!(10usize, "es-419")), (tinystr!(3usize, "jms"), tinystr!(10usize, "es-BR")), (tinystr!(3usize, "jms"), tinystr!(10usize, "es-BZ")), (tinystr!(3usize, "jms"), tinystr!(10usize, "es-MX")), (tinystr!(3usize, "jms"), tinystr!(10usize, "es-PH")), (tinystr!(3usize, "jms"), tinystr!(10usize, "et")), (tinystr!(3usize, "jms"), tinystr!(10usize, "fa")), (tinystr!(3usize, "jms"), tinystr!(10usize, "ff-Adlm-GH")), (tinystr!(3usize, "jms"), tinystr!(10usize, "ff-Adlm-GM")), (tinystr!(3usize, "jms"), tinystr!(10usize, "ff-Adlm-LR")), (tinystr!(3usize, "jms"), tinystr!(10usize, "ff-Adlm-MR")), (tinystr!(3usize, "jms"), tinystr!(10usize, "ff-Adlm-SL")), (tinystr!(3usize, "jms"), tinystr!(10usize, "fi")), (tinystr!(3usize, "jms"), tinystr!(10usize, "fil")), (tinystr!(3usize, "jms"), tinystr!(10usize, "fr-CA")), (tinystr!(3usize, "jms"), tinystr!(10usize, "fr-DJ")), (tinystr!(3usize, "jms"), tinystr!(10usize, "fr-DZ")), (tinystr!(3usize, "jms"), tinystr!(10usize, "fr-MR")), (tinystr!(3usize, "jms"), tinystr!(10usize, "fr-SY")), (tinystr!(3usize, "jms"), tinystr!(10usize, "fr-TD")), (tinystr!(3usize, "jms"), tinystr!(10usize, "fr-TN")), (tinystr!(3usize, "jms"), tinystr!(10usize, "fr-VU")), (tinystr!(3usize, "jms"), tinystr!(10usize, "gu")), (tinystr!(3usize, "jms"), tinystr!(10usize, "ha-GH")), (tinystr!(3usize, "jms"), tinystr!(10usize, "he")), (tinystr!(3usize, "jms"), tinystr!(10usize, "hi")), (tinystr!(3usize, "jms"), tinystr!(10usize, "hu")), (tinystr!(3usize, "jms"), tinystr!(10usize, "hy")), (tinystr!(3usize, "jms"), tinystr!(10usize, "id")), (tinystr!(3usize, "jms"), tinystr!(10usize, "ja")), (tinystr!(3usize, "jms"), tinystr!(10usize, "km")), (tinystr!(3usize, "jms"), tinystr!(10usize, "kn")), (tinystr!(3usize, "jms"), tinystr!(10usize, "ko")), (tinystr!(3usize, "jms"), tinystr!(10usize, "ko-CN")), (tinystr!(3usize, "jms"), tinystr!(10usize, "kok")), (tinystr!(3usize, "jms"), tinystr!(10usize, "ks")), (tinystr!(3usize, "jms"), tinystr!(10usize, "ks-Deva")), (tinystr!(3usize, "jms"), tinystr!(10usize, "kxv")), (tinystr!(3usize, "jms"), tinystr!(10usize, "mai")), (tinystr!(3usize, "jms"), tinystr!(10usize, "mi")), (tinystr!(3usize, "jms"), tinystr!(10usize, "mk")), (tinystr!(3usize, "jms"), tinystr!(10usize, "ml")), (tinystr!(3usize, "jms"), tinystr!(10usize, "mni")), (tinystr!(3usize, "jms"), tinystr!(10usize, "mr")), (tinystr!(3usize, "jms"), tinystr!(10usize, "ms")), (tinystr!(3usize, "jms"), tinystr!(10usize, "ms-ID")), (tinystr!(3usize, "jms"), tinystr!(10usize, "ne-IN")), (tinystr!(3usize, "jms"), tinystr!(10usize, "or")), (tinystr!(3usize, "jms"), tinystr!(10usize, "pa")), (tinystr!(3usize, "jms"), tinystr!(10usize, "ps")), (tinystr!(3usize, "jms"), tinystr!(10usize, "ps-PK")), (tinystr!(3usize, "jms"), tinystr!(10usize, "pt-MO")), (tinystr!(3usize, "jms"), tinystr!(10usize, "qu")), (tinystr!(3usize, "jms"), tinystr!(10usize, "raj")), (tinystr!(3usize, "jms"), tinystr!(10usize, "sa")), (tinystr!(3usize, "jms"), tinystr!(10usize, "sat")), (tinystr!(3usize, "jms"), tinystr!(10usize, "sd")), (tinystr!(3usize, "jms"), tinystr!(10usize, "sd-Deva")), (tinystr!(3usize, "jms"), tinystr!(10usize, "sk")), (tinystr!(3usize, "jms"), tinystr!(10usize, "so")), (tinystr!(3usize, "jms"), tinystr!(10usize, "so-KE")), (tinystr!(3usize, "jms"), tinystr!(10usize, "sq")), (tinystr!(3usize, "jms"), tinystr!(10usize, "sq-MK")), (tinystr!(3usize, "jms"), tinystr!(10usize, "sq-XK")), (tinystr!(3usize, "jms"), tinystr!(10usize, "syr")), (tinystr!(3usize, "jms"), tinystr!(10usize, "ta")), (tinystr!(3usize, "jms"), tinystr!(10usize, "ta-LK")), (tinystr!(3usize, "jms"), tinystr!(10usize, "te")), (tinystr!(3usize, "jms"), tinystr!(10usize, "ti")), (tinystr!(3usize, "jms"), tinystr!(10usize, "to")), (tinystr!(3usize, "jms"), tinystr!(10usize, "tr-CY")), (tinystr!(3usize, "jms"), tinystr!(10usize, "und")), (tinystr!(3usize, "jms"), tinystr!(10usize, "ur")), (tinystr!(3usize, "jms"), tinystr!(10usize, "xnr")), (tinystr!(3usize, "jms"), tinystr!(10usize, "yrl-CO")), (tinystr!(3usize, "jms"), tinystr!(10usize, "yrl-VE")), (tinystr!(3usize, "jms"), tinystr!(10usize, "yue")), (tinystr!(3usize, "jms"), tinystr!(10usize, "zh-Hant")), (tinystr!(3usize, "jms"), tinystr!(10usize, "zh-SG"))]
                },
                {
                    type S = <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable;
                    const _A1_AF_NA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x16\0\x03\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0 /\x80`\x01\x02\x80q\x01\0\0:\x80\x80\x02\0 /\x80`\x01") } };
                    const _A1_AM: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x16\0\x03\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0\0 \x80`\x01\x02\x80q\x01\0\0:\x80\x80\x02\0\0 \x80`\x01") } };
                    const _A1_AR_IL: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\x03\x80r\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\x80r\x01\0\0:\x80\x80\x02") } };
                    const _A1_AR_KM: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\x03\x80r\x02\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\x80r\x02\0\0:\x80\x80\x02") } };
                    const _A1_AS: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x16\0\x03\x80`\x01\0\0 \x80q\x01\0\0.\x80\x80\x02\0\0.\x80\x90\x02\x02\x80`\x01\0\0 \x80q\x01\0\0.\x80\x80\x02") } };
                    const _A1_BRX: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x16\0\x03\x80`\x01\0\0 \x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\x80`\x01\0\0 \0\t(\0\t?\0\0 \x80q\x01\0\0:\x80\x80\x02") } };
                    const _A1_DA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\x03\x80r\x02\0\0.\x80\x80\x02\0\0.\x80\x90\x02\x02\x80r\x02\0\0.\x80\x80\x02") } };
                    const _A1_EN_FI: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\x03\x80r\x01\0\0.\x80\x80\x02\0\0.\x80\x90\x02\x02\x80r\x01\0\0.\x80\x80\x02") } };
                    const _A1_FR_CA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0(\0\x03\x80r\x02\0\0 \0\0h\0\0 \x80\x80\x02\0\0 \0\0m\0\0i\0\0n\0\0 \x80\x90\x02\0\0 \0\0s\x02\x80r\x02\0\0 \0\0h\0\0 \x80\x80\x02") } };
                    const _A1_GU: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x16\0\x03\x80q\x02\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0\0 \x80`\x01\x02\x80q\x02\0\0:\x80\x80\x02\0\0 \x80`\x01") } };
                    const _A1_HSB: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\x03\x80r\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\x80r\x01\0\0:\x80\x80\x02\0\0 \0\0h\0\0o\0\0d\0\x01z\0\0.") } };
                    const _A1_KO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x16\0\x03\x80`\x01\0\0 \x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\x80`\x01\0\0 \x80q\x01\0\0:\x80\x80\x02") } };
                    const _A1_YO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\x03\x80r\x01\0\0:\x80\x80\x01\0\0:\x80\x90\x01\x02\x80r\x01\0\0:\x80\x80\x01") } };
                    const _A1_YUE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\x03\x80`\x01\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\x80`\x01\x80q\x01\0\0:\x80\x80\x02") } };
                    const _A1_ZH_HANT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\x03\0\0B\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\0\0B\x80q\x01\0\0:\x80\x80\x02") } };
                    const _JMS_AF_NA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80q\x02\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0 /\x80`\x01") } };
                    const _JMS_AM: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0\0 \x80`\x01") } };
                    const _JMS_AR_IL: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80r\x02\0\0:\x80\x80\x02\0\0:\x80\x90\x02") } };
                    const _JMS_BG: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80r\x02\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0\0 \0\x04G\0\0.") } };
                    const _JMS_BRX: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80`\x01\0 /\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02") } };
                    const _JMS_CA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80r\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02") } };
                    const _JMS_DA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80r\x02\0\0.\x80\x80\x02\0\0.\x80\x90\x02") } };
                    const _JMS_EL: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0 /\x80`\x01") } };
                    const _JMS_EN_FI: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80r\x01\0\0.\x80\x80\x02\0\0.\x80\x90\x02") } };
                    const _JMS_FR_CA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80r\x02\0\0 \0\0h\0\0 \x80\x80\x02\0\0 \0\0m\0\0i\0\0n\0\0 \x80\x90\x02\0\0 \0\0s") } };
                    const _JMS_GU: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80q\x02\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0\0 \x80`\x01") } };
                    const _JMS_KO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80`\x01\0\0 \x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02") } };
                    const _JMS_YUE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80`\x01\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02") } };
                    const _JMS_ZH_HANT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\0\0B\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02") } };
                    const _JM_AF_NA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80q\x02\0\0:\x80\x80\x02\0 /\x80`\x01") } };
                    const _JM_AM: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80q\x01\0\0:\x80\x80\x02\0\0 \x80`\x01") } };
                    const _JM_AR_IL: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80r\x02\0\0:\x80\x80\x02") } };
                    const _JM_BG: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80r\x02\0\0:\x80\x80\x02\0\0 \0\x04G\0\0.") } };
                    const _JM_BRX: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80`\x01\0\0 \x80q\x01\0\0:\x80\x80\x02") } };
                    const _JM_CA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80r\x01\0\0:\x80\x80\x02") } };
                    const _JM_DA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80r\x02\0\0.\x80\x80\x02") } };
                    const _JM_EL: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80q\x01\0\0:\x80\x80\x02\0 /\x80`\x01") } };
                    const _JM_EN_FI: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80r\x01\0\0.\x80\x80\x02") } };
                    const _JM_FR_CA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80r\x02\0\0 \0\0h\0\0 \x80\x80\x02") } };
                    const _JM_GU: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80q\x02\0\0:\x80\x80\x02\0\0 \x80`\x01") } };
                    const _JM_YUE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80`\x01\x80q\x01\0\0:\x80\x80\x02") } };
                    const _JM_ZH_HANT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\0\0B\x80q\x01\0\0:\x80\x80\x02") } };
                    const _J_AF_NA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80q\x01\0 /\x80`\x01") } };
                    const _J_AM: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80q\x01\0\0 \x80`\x01") } };
                    const _J_AR_IL: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02") } };
                    const _J_BG: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02\0\0 \0\x04G\0\0.") } };
                    const _J_BRX: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80`\x01\0\0 \x80q\x01") } };
                    const _J_BS: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x01") } };
                    const _J_DE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02\0\0 \0\0U\0\0h\0\0r") } };
                    const _J_DSB: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02\0\0 \0\0h\0\0o\0\0d\0\x01z\0\0.") } };
                    const _J_ES_MX: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80q\x02\0 /\x80`\x01") } };
                    const _J_FR_CA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02\0\0 \0\0h") } };
                    const _J_JA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x01\0fB") } };
                    const _J_KO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80`\x01\0\0 \x80q\x01\0\xC2\xDC") } };
                    const _J_KO_CN: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x01\0\xC2\xDC") } };
                    const _J_MN: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02\0\0 \0\x04F") } };
                    const _J_VI: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02\0\0 \0\0g\0\0i\0\x1E\xDD") } };
                    const _J_YUE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80`\x01\x80q\x01\0fB") } };
                    const _J_YUE_HANS: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x01\0e\xF6") } };
                    const _J_ZH_HANT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\0\0B\x80q\x01\0fB") } };
                    const _J_ZH_SG: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80`\x01\x80q\x01\0e\xF6") } };
                    &[_A1_AF_NA, _A1_AM, _A1_AM, _A1_AR_IL, _A1_AR_KM, _A1_AR_KM, _A1_AS, _A1_AR_IL, _A1_AM, _A1_AM, _A1_AM, _A1_BRX, _A1_AR_IL, _A1_AF_NA, _A1_AM, _A1_AR_IL, _A1_DA, _A1_AM, _A1_AR_IL, _A1_AF_NA, _A1_AF_NA, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_DA, _A1_EN_FI, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_DA, _A1_AR_KM, _A1_AR_IL, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_KM, _A1_AR_IL, _A1_AF_NA, _A1_AR_KM, _A1_AR_KM, _A1_AF_NA, _A1_AR_IL, _A1_AM, _A1_AM, _A1_AM, _A1_AM, _A1_AM, _A1_EN_FI, _A1_AF_NA, _A1_FR_CA, _A1_AF_NA, _A1_AF_NA, _A1_AF_NA, _A1_AF_NA, _A1_AF_NA, _A1_AF_NA, _A1_AF_NA, _A1_GU, _A1_AF_NA, _A1_AR_IL, _A1_AM, _A1_HSB, _A1_AR_IL, _A1_DA, _A1_AR_IL, _A1_AM, _A1_GU, _A1_KO, _A1_AR_KM, _A1_AM, _A1_AM, _A1_KO, _A1_AF_NA, _A1_AR_IL, _A1_AM, _A1_AF_NA, _A1_AM, _A1_AM, _A1_AM, _A1_AF_NA, _A1_DA, _A1_AR_IL, _A1_AM, _A1_AM, _A1_AM, _A1_AR_IL, _A1_AM, _A1_AF_NA, _A1_AF_NA, _A1_AM, _A1_AM, _A1_AM, _A1_AM, _A1_AM, _A1_DA, _A1_AR_IL, _A1_AF_NA, _A1_AR_KM, _A1_AF_NA, _A1_AR_KM, _A1_AR_KM, _A1_EN_FI, _A1_AM, _A1_AM, _A1_AR_KM, _A1_AM, _A1_AM, _A1_AF_NA, _A1_AF_NA, _A1_AR_IL, _A1_AR_KM, _A1_AM, _A1_AM, _A1_YO, _A1_AF_NA, _A1_AF_NA, _A1_YUE, _A1_YUE, _A1_ZH_HANT, _A1_YUE, _A1_YUE, _J_AF_NA, _J_AM, _J_AM, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AM, _J_BG, _J_AM, _J_AM, _J_AM, _J_BRX, _J_BS, _J_BS, _J_AM, _J_AM, _J_BS, _J_DE, _J_AM, _J_DSB, _J_AF_NA, _J_AF_NA, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_BS, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AR_IL, _J_AF_NA, _J_AR_IL, _J_AR_IL, _J_ES_MX, _J_AF_NA, _J_BS, _J_AM, _J_AM, _J_AM, _J_AM, _J_AM, _J_BS, _J_AF_NA, _J_FR_CA, _J_AF_NA, _J_AF_NA, _J_AF_NA, _J_AF_NA, _J_AF_NA, _J_AF_NA, _J_AF_NA, _J_AM, _J_AM, _J_BS, _J_AM, _J_DSB, _J_BS, _J_BS, _J_JA, _J_AM, _J_AM, _J_KO, _J_KO_CN, _J_AM, _J_AM, _J_AM, _J_AM, _J_AM, _J_AM, _J_BS, _J_AM, _J_MN, _J_AM, _J_AM, _J_AF_NA, _J_AR_IL, _J_AM, _J_AM, _J_AM, _J_BS, _J_AM, _J_AF_NA, _J_AF_NA, _J_AM, _J_AM, _J_AM, _J_AM, _J_AM, _J_BS, _J_AM, _J_AR_IL, _J_AF_NA, _J_AR_IL, _J_AR_IL, _J_AM, _J_AM, _J_AR_IL, _J_AM, _J_AM, _J_AF_NA, _J_AF_NA, _J_AR_IL, _J_AM, _J_VI, _J_AM, _J_AF_NA, _J_AF_NA, _J_YUE, _J_YUE_HANS, _J_YUE_HANS, _J_ZH_HANT, _J_ZH_SG, _JM_AF_NA, _JM_AM, _JM_AM, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AM, _JM_BG, _JM_AM, _JM_AM, _JM_AM, _JM_BRX, _JM_CA, _JM_AM, _JM_AM, _JM_CA, _JM_DA, _JM_AM, _JM_EL, _JM_EL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_DA, _JM_EN_FI, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_DA, _JM_AR_IL, _JM_CA, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_AR_IL, _JM_EL, _JM_AR_IL, _JM_AR_IL, _JM_AF_NA, _JM_EL, _JM_CA, _JM_AM, _JM_AM, _JM_AM, _JM_AM, _JM_AM, _JM_EN_FI, _JM_EL, _JM_FR_CA, _JM_EL, _JM_EL, _JM_EL, _JM_EL, _JM_EL, _JM_EL, _JM_EL, _JM_GU, _JM_AM, _JM_CA, _JM_AM, _JM_CA, _JM_CA, _JM_DA, _JM_CA, _JM_AM, _JM_AM, _JM_BRX, _JM_AR_IL, _JM_AM, _JM_AM, _JM_AM, _JM_AM, _JM_AM, _JM_AM, _JM_CA, _JM_AM, _JM_AM, _JM_AM, _JM_EL, _JM_AR_IL, _JM_AM, _JM_AM, _JM_AM, _JM_CA, _JM_AM, _JM_EL, _JM_EL, _JM_AM, _JM_AM, _JM_AM, _JM_AM, _JM_AM, _JM_CA, _JM_AM, _JM_AR_IL, _JM_EL, _JM_AR_IL, _JM_AR_IL, _JM_AM, _JM_AM, _JM_AR_IL, _JM_AM, _JM_AM, _JM_EL, _JM_EL, _JM_AR_IL, _JM_AM, _JM_AM, _JM_EL, _JM_EL, _JM_YUE, _JM_ZH_HANT, _JM_YUE, _JMS_AF_NA, _JMS_AM, _JMS_AM, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AM, _JMS_BG, _JMS_AM, _JMS_AM, _JMS_AM, _JMS_BRX, _JMS_CA, _JMS_AM, _JMS_AM, _JMS_CA, _JMS_DA, _JMS_AM, _JMS_EL, _JMS_EL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_DA, _JMS_EN_FI, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_DA, _JMS_AR_IL, _JMS_CA, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AR_IL, _JMS_EL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AF_NA, _JMS_EL, _JMS_CA, _JMS_CA, _JMS_AM, _JMS_AM, _JMS_AM, _JMS_AM, _JMS_AM, _JMS_EN_FI, _JMS_EL, _JMS_FR_CA, _JMS_EL, _JMS_EL, _JMS_EL, _JMS_EL, _JMS_EL, _JMS_EL, _JMS_EL, _JMS_GU, _JMS_AM, _JMS_CA, _JMS_AM, _JMS_CA, _JMS_CA, _JMS_DA, _JMS_CA, _JMS_AM, _JMS_AM, _JMS_KO, _JMS_AR_IL, _JMS_AM, _JMS_AM, _JMS_AM, _JMS_AM, _JMS_AM, _JMS_AM, _JMS_CA, _JMS_AM, _JMS_AM, _JMS_AM, _JMS_EL, _JMS_AR_IL, _JMS_AM, _JMS_AM, _JMS_AM, _JMS_CA, _JMS_AM, _JMS_EL, _JMS_EL, _JMS_AM, _JMS_AM, _JMS_AM, _JMS_AM, _JMS_AM, _JMS_CA, _JMS_AM, _JMS_AR_IL, _JMS_EL, _JMS_AR_IL, _JMS_AR_IL, _JMS_AM, _JMS_AM, _JMS_AR_IL, _JMS_AM, _JMS_AM, _JMS_EL, _JMS_EL, _JMS_AR_IL, _JMS_AM, _JMS_AM, _JMS_EL, _JMS_EL, _JMS_YUE, _JMS_ZH_HANT, _JMS_YUE]
                },
            );
        }
        #[clippy::msrv = "1.70"]
        impl icu_provider::DataProvider<icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker>, icu_provider::DataError> {
                let mut metadata = icu_provider::DataResponseMetadata::default();
                let payload = if let Some(payload) = icu_provider_baked::DataStore::get(&Self::DATA_TIME_NEO_SKELETON_PATTERNS_V1_MARKER, req.id) {
                    payload
                } else {
                    const FALLBACKER: icu::locale::fallback::LocaleFallbackerWithConfig<'static> = icu::locale::fallback::LocaleFallbacker::new().for_config(<icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DataMarker>::INFO.fallback_config);
                    let mut fallback_iterator = FALLBACKER.fallback_for(req.id.locale.clone());
                    loop {
                        if let Some(payload) = icu_provider_baked::DataStore::get(&Self::DATA_TIME_NEO_SKELETON_PATTERNS_V1_MARKER, icu_provider::DataIdentifierBorrowed::for_marker_attributes_and_locale(req.id.marker_attributes, fallback_iterator.get())) {
                            metadata.locale = Some(fallback_iterator.take());
                            break payload;
                        }
                        if fallback_iterator.get().is_und() {
                            return Err(icu_provider::DataErrorKind::IdentifierNotFound.with_req(<icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DataMarker>::INFO, req));
                        }
                        fallback_iterator.step();
                    }
                };
                Ok(icu_provider::DataResponse { payload: icu_provider::DataPayload::from_static_ref(payload), metadata })
            }
        }
    };
    ($ provider : ty , ITER) => {
        __impl_time_neo_skeleton_patterns_v1_marker!($provider);
        #[clippy::msrv = "1.70"]
        impl icu_provider::IterableDataProvider<icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker> for $provider {
            fn iter_ids(&self) -> Result<std::collections::HashSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok(icu_provider_baked::DataStore::iter(&Self::DATA_TIME_NEO_SKELETON_PATTERNS_V1_MARKER).collect())
            }
        }
    };
}
#[doc(inline)]
pub use __impl_time_neo_skeleton_patterns_v1_marker as impl_time_neo_skeleton_patterns_v1_marker;
