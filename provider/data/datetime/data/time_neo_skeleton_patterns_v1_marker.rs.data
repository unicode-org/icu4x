// @generated
/// Implement `DataProvider<TimeNeoSkeletonPatternsV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_time_neo_skeleton_patterns_v1_marker {
    ($ provider : ty) => {
        #[clippy::msrv = "1.70"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.70"]
        impl $provider {
            const DATA_TIME_NEO_SKELETON_PATTERNS_V1_MARKER: icu_provider_baked::binary_search::Data<icu_provider_baked::binary_search::AttributesAndLocale, icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker> = {
                type S = <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable;
                const _A1_AF_NA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x16\0\x03\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0 /\x80`\x01\x02\x80q\x01\0\0:\x80\x80\x02\0 /\x80`\x01") } };
                const _A1_AM: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x16\0\x03\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0\0 \x80`\x01\x02\x80q\x01\0\0:\x80\x80\x02\0\0 \x80`\x01") } };
                const _A1_AR_IL: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\x03\x80r\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\x80r\x01\0\0:\x80\x80\x02") } };
                const _A1_AR_KM: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\x03\x80r\x02\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\x80r\x02\0\0:\x80\x80\x02") } };
                const _A1_AS: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x16\0\x03\x80`\x01\0\0 \x80q\x01\0\0.\x80\x80\x02\0\0.\x80\x90\x02\x02\x80`\x01\0\0 \x80q\x01\0\0.\x80\x80\x02") } };
                const _A1_BRX: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x16\0\x03\x80`\x01\0\0 \x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\x80`\x01\0\0 \0\t(\0\t?\0\0 \x80q\x01\0\0:\x80\x80\x02") } };
                const _A1_DA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\x03\x80r\x02\0\0.\x80\x80\x02\0\0.\x80\x90\x02\x02\x80r\x02\0\0.\x80\x80\x02") } };
                const _A1_EN_FI: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\x03\x80r\x01\0\0.\x80\x80\x02\0\0.\x80\x90\x02\x02\x80r\x01\0\0.\x80\x80\x02") } };
                const _A1_FR_CA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0(\0\x03\x80r\x02\0\0 \0\0h\0\0 \x80\x80\x02\0\0 \0\0m\0\0i\0\0n\0\0 \x80\x90\x02\0\0 \0\0s\x02\x80r\x02\0\0 \0\0h\0\0 \x80\x80\x02") } };
                const _A1_GU: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x16\0\x03\x80q\x02\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0\0 \x80`\x01\x02\x80q\x02\0\0:\x80\x80\x02\0\0 \x80`\x01") } };
                const _A1_HSB: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\x03\x80r\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\x80r\x01\0\0:\x80\x80\x02\0\0 \0\0h\0\0o\0\0d\0\x01z\0\0.") } };
                const _A1_KO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x16\0\x03\x80`\x01\0\0 \x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\x80`\x01\0\0 \x80q\x01\0\0:\x80\x80\x02") } };
                const _A1_YO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\x03\x80r\x01\0\0:\x80\x80\x01\0\0:\x80\x90\x01\x02\x80r\x01\0\0:\x80\x80\x01") } };
                const _A1_YUE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\x03\x80`\x01\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\x80`\x01\x80q\x01\0\0:\x80\x80\x02") } };
                const _A1_ZH_HANT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\x03\0\0B\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\0\0B\x80q\x01\0\0:\x80\x80\x02") } };
                const _JMS_AF_NA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80q\x02\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0 /\x80`\x01") } };
                const _JMS_AM: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0\0 \x80`\x01") } };
                const _JMS_AR_IL: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80r\x02\0\0:\x80\x80\x02\0\0:\x80\x90\x02") } };
                const _JMS_BG: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80r\x02\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0\0 \0\x04G\0\0.") } };
                const _JMS_BRX: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80`\x01\0 /\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02") } };
                const _JMS_CA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80r\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02") } };
                const _JMS_DA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80r\x02\0\0.\x80\x80\x02\0\0.\x80\x90\x02") } };
                const _JMS_EL: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0 /\x80`\x01") } };
                const _JMS_EN_FI: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80r\x01\0\0.\x80\x80\x02\0\0.\x80\x90\x02") } };
                const _JMS_FR_CA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80r\x02\0\0 \0\0h\0\0 \x80\x80\x02\0\0 \0\0m\0\0i\0\0n\0\0 \x80\x90\x02\0\0 \0\0s") } };
                const _JMS_GU: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80q\x02\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0\0 \x80`\x01") } };
                const _JMS_KO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80`\x01\0\0 \x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02") } };
                const _JMS_YUE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80`\x01\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02") } };
                const _JMS_ZH_HANT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\0\0B\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02") } };
                const _JM_AF_NA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80q\x02\0\0:\x80\x80\x02\0 /\x80`\x01") } };
                const _JM_AM: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80q\x01\0\0:\x80\x80\x02\0\0 \x80`\x01") } };
                const _JM_AR_IL: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80r\x02\0\0:\x80\x80\x02") } };
                const _JM_BG: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80r\x02\0\0:\x80\x80\x02\0\0 \0\x04G\0\0.") } };
                const _JM_BRX: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80`\x01\0\0 \x80q\x01\0\0:\x80\x80\x02") } };
                const _JM_CA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80r\x01\0\0:\x80\x80\x02") } };
                const _JM_DA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80r\x02\0\0.\x80\x80\x02") } };
                const _JM_EL: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80q\x01\0\0:\x80\x80\x02\0 /\x80`\x01") } };
                const _JM_EN_FI: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80r\x01\0\0.\x80\x80\x02") } };
                const _JM_FR_CA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80r\x02\0\0 \0\0h\0\0 \x80\x80\x02") } };
                const _JM_GU: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80q\x02\0\0:\x80\x80\x02\0\0 \x80`\x01") } };
                const _JM_YUE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80`\x01\x80q\x01\0\0:\x80\x80\x02") } };
                const _JM_ZH_HANT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\0\0B\x80q\x01\0\0:\x80\x80\x02") } };
                const _J_AF_NA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80q\x01\0 /\x80`\x01") } };
                const _J_AM: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80q\x01\0\0 \x80`\x01") } };
                const _J_AR_IL: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02") } };
                const _J_BG: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02\0\0 \0\x04G\0\0.") } };
                const _J_BRX: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80`\x01\0\0 \x80q\x01") } };
                const _J_BS: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x01") } };
                const _J_DE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02\0\0 \0\0U\0\0h\0\0r") } };
                const _J_DSB: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02\0\0 \0\0h\0\0o\0\0d\0\x01z\0\0.") } };
                const _J_ES_MX: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80q\x02\0 /\x80`\x01") } };
                const _J_FR_CA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02\0\0 \0\0h") } };
                const _J_JA: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x01\0fB") } };
                const _J_KO: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80`\x01\0\0 \x80q\x01\0\xC2\xDC") } };
                const _J_KO_CN: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x01\0\xC2\xDC") } };
                const _J_MN: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02\0\0 \0\x04F") } };
                const _J_VI: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02\0\0 \0\0g\0\0i\0\x1E\xDD") } };
                const _J_YUE: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80`\x01\x80q\x01\0fB") } };
                const _J_YUE_HANS: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x01\0e\xF6") } };
                const _J_ZH_HANT: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\0\0B\x80q\x01\0fB") } };
                const _J_ZH_SG: &S = &icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80`\x01\x80q\x01\0e\xF6") } };
                icu_provider_baked::binary_search::Data(&[(("a1", "af-NA"), _A1_AF_NA), (("a1", "am"), _A1_AM), (("a1", "ar"), _A1_AM), (("a1", "ar-IL"), _A1_AR_IL), (("a1", "ar-KM"), _A1_AR_KM), (("a1", "ar-MA"), _A1_AR_KM), (("a1", "as"), _A1_AS), (("a1", "bg"), _A1_AR_IL), (("a1", "bgc"), _A1_AM), (("a1", "bho"), _A1_AM), (("a1", "bn"), _A1_AM), (("a1", "brx"), _A1_BRX), (("a1", "ca"), _A1_AR_IL), (("a1", "ceb"), _A1_AF_NA), (("a1", "chr"), _A1_AM), (("a1", "cs"), _A1_AR_IL), (("a1", "da"), _A1_DA), (("a1", "doi"), _A1_AM), (("a1", "dsb"), _A1_AR_IL), (("a1", "el"), _A1_AF_NA), (("a1", "en"), _A1_AF_NA), (("a1", "en-150"), _A1_AR_KM), (("a1", "en-AI"), _A1_AR_KM), (("a1", "en-BI"), _A1_AR_KM), (("a1", "en-BW"), _A1_AR_KM), (("a1", "en-BZ"), _A1_AR_KM), (("a1", "en-CC"), _A1_AR_KM), (("a1", "en-CK"), _A1_AR_KM), (("a1", "en-CM"), _A1_AR_KM), (("a1", "en-CX"), _A1_AR_KM), (("a1", "en-DG"), _A1_AR_KM), (("a1", "en-DK"), _A1_DA), (("a1", "en-FI"), _A1_EN_FI), (("a1", "en-FK"), _A1_AR_KM), (("a1", "en-GB"), _A1_AR_KM), (("a1", "en-GG"), _A1_AR_KM), (("a1", "en-GI"), _A1_AR_KM), (("a1", "en-ID"), _A1_DA), (("a1", "en-IE"), _A1_AR_KM), (("a1", "en-IL"), _A1_AR_IL), (("a1", "en-IM"), _A1_AR_KM), (("a1", "en-IO"), _A1_AR_KM), (("a1", "en-JE"), _A1_AR_KM), (("a1", "en-KE"), _A1_AR_KM), (("a1", "en-MG"), _A1_AR_KM), (("a1", "en-MS"), _A1_AR_KM), (("a1", "en-MT"), _A1_AR_KM), (("a1", "en-MU"), _A1_AR_KM), (("a1", "en-MV"), _A1_AR_KM), (("a1", "en-NF"), _A1_AR_KM), (("a1", "en-NG"), _A1_AR_KM), (("a1", "en-NR"), _A1_AR_KM), (("a1", "en-NU"), _A1_AR_KM), (("a1", "en-PN"), _A1_AR_KM), (("a1", "en-RW"), _A1_AR_KM), (("a1", "en-SC"), _A1_AR_KM), (("a1", "en-SH"), _A1_AR_KM), (("a1", "en-SX"), _A1_AR_KM), (("a1", "en-TK"), _A1_AR_KM), (("a1", "en-TV"), _A1_AR_KM), (("a1", "en-TZ"), _A1_AR_KM), (("a1", "en-UG"), _A1_AR_KM), (("a1", "en-ZA"), _A1_AR_KM), (("a1", "en-ZW"), _A1_AR_KM), (("a1", "es"), _A1_AR_IL), (("a1", "es-419"), _A1_AF_NA), (("a1", "es-BR"), _A1_AR_KM), (("a1", "es-BZ"), _A1_AR_KM), (("a1", "es-PH"), _A1_AF_NA), (("a1", "fa"), _A1_AR_IL), (("a1", "ff-Adlm-GH"), _A1_AM), (("a1", "ff-Adlm-GM"), _A1_AM), (("a1", "ff-Adlm-LR"), _A1_AM), (("a1", "ff-Adlm-MR"), _A1_AM), (("a1", "ff-Adlm-SL"), _A1_AM), (("a1", "fi"), _A1_EN_FI), (("a1", "fil"), _A1_AF_NA), (("a1", "fr-CA"), _A1_FR_CA), (("a1", "fr-DJ"), _A1_AF_NA), (("a1", "fr-DZ"), _A1_AF_NA), (("a1", "fr-MR"), _A1_AF_NA), (("a1", "fr-SY"), _A1_AF_NA), (("a1", "fr-TD"), _A1_AF_NA), (("a1", "fr-TN"), _A1_AF_NA), (("a1", "fr-VU"), _A1_AF_NA), (("a1", "gu"), _A1_GU), (("a1", "ha-GH"), _A1_AF_NA), (("a1", "he"), _A1_AR_IL), (("a1", "hi"), _A1_AM), (("a1", "hsb"), _A1_HSB), (("a1", "hu"), _A1_AR_IL), (("a1", "id"), _A1_DA), (("a1", "ja"), _A1_AR_IL), (("a1", "km"), _A1_AM), (("a1", "kn"), _A1_GU), (("a1", "ko"), _A1_KO), (("a1", "ko-CN"), _A1_AR_KM), (("a1", "kok"), _A1_AM), (("a1", "ks"), _A1_AM), (("a1", "ks-Deva"), _A1_KO), (("a1", "kxv"), _A1_AF_NA), (("a1", "lo"), _A1_AR_IL), (("a1", "mai"), _A1_AM), (("a1", "mi"), _A1_AF_NA), (("a1", "ml"), _A1_AM), (("a1", "mni"), _A1_AM), (("a1", "mr"), _A1_AM), (("a1", "ms"), _A1_AF_NA), (("a1", "ms-ID"), _A1_DA), (("a1", "my"), _A1_AR_IL), (("a1", "ne-IN"), _A1_AM), (("a1", "or"), _A1_AM), (("a1", "pa"), _A1_AM), (("a1", "ps"), _A1_AR_IL), (("a1", "ps-PK"), _A1_AM), (("a1", "pt-MO"), _A1_AF_NA), (("a1", "qu"), _A1_AF_NA), (("a1", "raj"), _A1_AM), (("a1", "sa"), _A1_AM), (("a1", "sat"), _A1_AM), (("a1", "sd"), _A1_AM), (("a1", "sd-Deva"), _A1_AM), (("a1", "si"), _A1_DA), (("a1", "sk"), _A1_AR_IL), (("a1", "so"), _A1_AF_NA), (("a1", "so-KE"), _A1_AR_KM), (("a1", "sq"), _A1_AF_NA), (("a1", "sq-MK"), _A1_AR_KM), (("a1", "sq-XK"), _A1_AR_KM), (("a1", "su"), _A1_EN_FI), (("a1", "syr"), _A1_AM), (("a1", "ta"), _A1_AM), (("a1", "ta-LK"), _A1_AR_KM), (("a1", "te"), _A1_AM), (("a1", "ti"), _A1_AM), (("a1", "to"), _A1_AF_NA), (("a1", "tr-CY"), _A1_AF_NA), (("a1", "tt"), _A1_AR_IL), (("a1", "und"), _A1_AR_KM), (("a1", "ur"), _A1_AM), (("a1", "xnr"), _A1_AM), (("a1", "yo"), _A1_YO), (("a1", "yrl-CO"), _A1_AF_NA), (("a1", "yrl-VE"), _A1_AF_NA), (("a1", "yue"), _A1_YUE), (("a1", "zh-HK"), _A1_YUE), (("a1", "zh-Hant"), _A1_ZH_HANT), (("a1", "zh-MO"), _A1_YUE), (("a1", "zh-SG"), _A1_YUE), (("j", "af-NA"), _J_AF_NA), (("j", "am"), _J_AM), (("j", "ar"), _J_AM), (("j", "ar-IL"), _J_AR_IL), (("j", "ar-KM"), _J_AR_IL), (("j", "ar-MA"), _J_AR_IL), (("j", "as"), _J_AM), (("j", "bg"), _J_BG), (("j", "bgc"), _J_AM), (("j", "bho"), _J_AM), (("j", "bn"), _J_AM), (("j", "brx"), _J_BRX), (("j", "bs"), _J_BS), (("j", "ca"), _J_BS), (("j", "ceb"), _J_AM), (("j", "chr"), _J_AM), (("j", "cs"), _J_BS), (("j", "de"), _J_DE), (("j", "doi"), _J_AM), (("j", "dsb"), _J_DSB), (("j", "el"), _J_AF_NA), (("j", "en"), _J_AF_NA), (("j", "en-150"), _J_AR_IL), (("j", "en-AI"), _J_AR_IL), (("j", "en-BI"), _J_AR_IL), (("j", "en-BW"), _J_AR_IL), (("j", "en-BZ"), _J_AR_IL), (("j", "en-CC"), _J_AR_IL), (("j", "en-CK"), _J_AR_IL), (("j", "en-CM"), _J_AR_IL), (("j", "en-CX"), _J_AR_IL), (("j", "en-DG"), _J_AR_IL), (("j", "en-FK"), _J_AR_IL), (("j", "en-GB"), _J_AR_IL), (("j", "en-GG"), _J_AR_IL), (("j", "en-GI"), _J_AR_IL), (("j", "en-ID"), _J_AR_IL), (("j", "en-IE"), _J_AR_IL), (("j", "en-IL"), _J_BS), (("j", "en-IM"), _J_AR_IL), (("j", "en-IO"), _J_AR_IL), (("j", "en-JE"), _J_AR_IL), (("j", "en-KE"), _J_AR_IL), (("j", "en-MG"), _J_AR_IL), (("j", "en-MS"), _J_AR_IL), (("j", "en-MT"), _J_AR_IL), (("j", "en-MU"), _J_AR_IL), (("j", "en-MV"), _J_AR_IL), (("j", "en-NF"), _J_AR_IL), (("j", "en-NG"), _J_AR_IL), (("j", "en-NR"), _J_AR_IL), (("j", "en-NU"), _J_AR_IL), (("j", "en-PN"), _J_AR_IL), (("j", "en-RW"), _J_AR_IL), (("j", "en-SC"), _J_AR_IL), (("j", "en-SH"), _J_AR_IL), (("j", "en-SX"), _J_AR_IL), (("j", "en-TK"), _J_AR_IL), (("j", "en-TV"), _J_AR_IL), (("j", "en-TZ"), _J_AR_IL), (("j", "en-UG"), _J_AR_IL), (("j", "en-ZA"), _J_AR_IL), (("j", "en-ZW"), _J_AR_IL), (("j", "es-419"), _J_AF_NA), (("j", "es-BR"), _J_AR_IL), (("j", "es-BZ"), _J_AR_IL), (("j", "es-MX"), _J_ES_MX), (("j", "es-PH"), _J_AF_NA), (("j", "fa"), _J_BS), (("j", "ff-Adlm-GH"), _J_AM), (("j", "ff-Adlm-GM"), _J_AM), (("j", "ff-Adlm-LR"), _J_AM), (("j", "ff-Adlm-MR"), _J_AM), (("j", "ff-Adlm-SL"), _J_AM), (("j", "fi"), _J_BS), (("j", "fil"), _J_AF_NA), (("j", "fr-CA"), _J_FR_CA), (("j", "fr-DJ"), _J_AF_NA), (("j", "fr-DZ"), _J_AF_NA), (("j", "fr-MR"), _J_AF_NA), (("j", "fr-SY"), _J_AF_NA), (("j", "fr-TD"), _J_AF_NA), (("j", "fr-TN"), _J_AF_NA), (("j", "fr-VU"), _J_AF_NA), (("j", "gu"), _J_AM), (("j", "ha-GH"), _J_AM), (("j", "he"), _J_BS), (("j", "hi"), _J_AM), (("j", "hsb"), _J_DSB), (("j", "hu"), _J_BS), (("j", "hy"), _J_BS), (("j", "ja"), _J_JA), (("j", "km"), _J_AM), (("j", "kn"), _J_AM), (("j", "ko"), _J_KO), (("j", "ko-CN"), _J_KO_CN), (("j", "kok"), _J_AM), (("j", "ks"), _J_AM), (("j", "ks-Deva"), _J_AM), (("j", "kxv"), _J_AM), (("j", "mai"), _J_AM), (("j", "mi"), _J_AM), (("j", "mk"), _J_BS), (("j", "ml"), _J_AM), (("j", "mn"), _J_MN), (("j", "mni"), _J_AM), (("j", "mr"), _J_AM), (("j", "ms"), _J_AF_NA), (("j", "ms-ID"), _J_AR_IL), (("j", "ne-IN"), _J_AM), (("j", "or"), _J_AM), (("j", "pa"), _J_AM), (("j", "ps"), _J_BS), (("j", "ps-PK"), _J_AM), (("j", "pt-MO"), _J_AF_NA), (("j", "qu"), _J_AF_NA), (("j", "raj"), _J_AM), (("j", "sa"), _J_AM), (("j", "sat"), _J_AM), (("j", "sd"), _J_AM), (("j", "sd-Deva"), _J_AM), (("j", "sk"), _J_BS), (("j", "so"), _J_AM), (("j", "so-KE"), _J_AR_IL), (("j", "sq"), _J_AF_NA), (("j", "sq-MK"), _J_AR_IL), (("j", "sq-XK"), _J_AR_IL), (("j", "syr"), _J_AM), (("j", "ta"), _J_AM), (("j", "ta-LK"), _J_AR_IL), (("j", "te"), _J_AM), (("j", "ti"), _J_AM), (("j", "to"), _J_AF_NA), (("j", "tr-CY"), _J_AF_NA), (("j", "und"), _J_AR_IL), (("j", "ur"), _J_AM), (("j", "vi"), _J_VI), (("j", "xnr"), _J_AM), (("j", "yrl-CO"), _J_AF_NA), (("j", "yrl-VE"), _J_AF_NA), (("j", "yue"), _J_YUE), (("j", "yue-Hans"), _J_YUE_HANS), (("j", "zh"), _J_YUE_HANS), (("j", "zh-Hant"), _J_ZH_HANT), (("j", "zh-SG"), _J_ZH_SG), (("jm", "af-NA"), _JM_AF_NA), (("jm", "am"), _JM_AM), (("jm", "ar"), _JM_AM), (("jm", "ar-IL"), _JM_AR_IL), (("jm", "ar-KM"), _JM_AR_IL), (("jm", "ar-MA"), _JM_AR_IL), (("jm", "as"), _JM_AM), (("jm", "bg"), _JM_BG), (("jm", "bgc"), _JM_AM), (("jm", "bho"), _JM_AM), (("jm", "bn"), _JM_AM), (("jm", "brx"), _JM_BRX), (("jm", "ca"), _JM_CA), (("jm", "ceb"), _JM_AM), (("jm", "chr"), _JM_AM), (("jm", "cs"), _JM_CA), (("jm", "da"), _JM_DA), (("jm", "doi"), _JM_AM), (("jm", "el"), _JM_EL), (("jm", "en"), _JM_EL), (("jm", "en-150"), _JM_AR_IL), (("jm", "en-AI"), _JM_AR_IL), (("jm", "en-BI"), _JM_AR_IL), (("jm", "en-BW"), _JM_AR_IL), (("jm", "en-BZ"), _JM_AR_IL), (("jm", "en-CC"), _JM_AR_IL), (("jm", "en-CK"), _JM_AR_IL), (("jm", "en-CM"), _JM_AR_IL), (("jm", "en-CX"), _JM_AR_IL), (("jm", "en-DG"), _JM_AR_IL), (("jm", "en-DK"), _JM_DA), (("jm", "en-FI"), _JM_EN_FI), (("jm", "en-FK"), _JM_AR_IL), (("jm", "en-GB"), _JM_AR_IL), (("jm", "en-GG"), _JM_AR_IL), (("jm", "en-GI"), _JM_AR_IL), (("jm", "en-ID"), _JM_DA), (("jm", "en-IE"), _JM_AR_IL), (("jm", "en-IL"), _JM_CA), (("jm", "en-IM"), _JM_AR_IL), (("jm", "en-IO"), _JM_AR_IL), (("jm", "en-JE"), _JM_AR_IL), (("jm", "en-KE"), _JM_AR_IL), (("jm", "en-MG"), _JM_AR_IL), (("jm", "en-MS"), _JM_AR_IL), (("jm", "en-MT"), _JM_AR_IL), (("jm", "en-MU"), _JM_AR_IL), (("jm", "en-MV"), _JM_AR_IL), (("jm", "en-NF"), _JM_AR_IL), (("jm", "en-NG"), _JM_AR_IL), (("jm", "en-NR"), _JM_AR_IL), (("jm", "en-NU"), _JM_AR_IL), (("jm", "en-PN"), _JM_AR_IL), (("jm", "en-RW"), _JM_AR_IL), (("jm", "en-SC"), _JM_AR_IL), (("jm", "en-SH"), _JM_AR_IL), (("jm", "en-SX"), _JM_AR_IL), (("jm", "en-TK"), _JM_AR_IL), (("jm", "en-TV"), _JM_AR_IL), (("jm", "en-TZ"), _JM_AR_IL), (("jm", "en-UG"), _JM_AR_IL), (("jm", "en-ZA"), _JM_AR_IL), (("jm", "en-ZW"), _JM_AR_IL), (("jm", "es-419"), _JM_EL), (("jm", "es-BR"), _JM_AR_IL), (("jm", "es-BZ"), _JM_AR_IL), (("jm", "es-MX"), _JM_AF_NA), (("jm", "es-PH"), _JM_EL), (("jm", "fa"), _JM_CA), (("jm", "ff-Adlm-GH"), _JM_AM), (("jm", "ff-Adlm-GM"), _JM_AM), (("jm", "ff-Adlm-LR"), _JM_AM), (("jm", "ff-Adlm-MR"), _JM_AM), (("jm", "ff-Adlm-SL"), _JM_AM), (("jm", "fi"), _JM_EN_FI), (("jm", "fil"), _JM_EL), (("jm", "fr-CA"), _JM_FR_CA), (("jm", "fr-DJ"), _JM_EL), (("jm", "fr-DZ"), _JM_EL), (("jm", "fr-MR"), _JM_EL), (("jm", "fr-SY"), _JM_EL), (("jm", "fr-TD"), _JM_EL), (("jm", "fr-TN"), _JM_EL), (("jm", "fr-VU"), _JM_EL), (("jm", "gu"), _JM_GU), (("jm", "ha-GH"), _JM_AM), (("jm", "he"), _JM_CA), (("jm", "hi"), _JM_AM), (("jm", "hu"), _JM_CA), (("jm", "hy"), _JM_CA), (("jm", "id"), _JM_DA), (("jm", "ja"), _JM_CA), (("jm", "km"), _JM_AM), (("jm", "kn"), _JM_AM), (("jm", "ko"), _JM_BRX), (("jm", "ko-CN"), _JM_AR_IL), (("jm", "kok"), _JM_AM), (("jm", "ks"), _JM_AM), (("jm", "ks-Deva"), _JM_AM), (("jm", "kxv"), _JM_AM), (("jm", "mai"), _JM_AM), (("jm", "mi"), _JM_AM), (("jm", "mk"), _JM_CA), (("jm", "ml"), _JM_AM), (("jm", "mni"), _JM_AM), (("jm", "mr"), _JM_AM), (("jm", "ms"), _JM_EL), (("jm", "ms-ID"), _JM_AR_IL), (("jm", "ne-IN"), _JM_AM), (("jm", "or"), _JM_AM), (("jm", "pa"), _JM_AM), (("jm", "ps"), _JM_CA), (("jm", "ps-PK"), _JM_AM), (("jm", "pt-MO"), _JM_EL), (("jm", "qu"), _JM_EL), (("jm", "raj"), _JM_AM), (("jm", "sa"), _JM_AM), (("jm", "sat"), _JM_AM), (("jm", "sd"), _JM_AM), (("jm", "sd-Deva"), _JM_AM), (("jm", "sk"), _JM_CA), (("jm", "so"), _JM_AM), (("jm", "so-KE"), _JM_AR_IL), (("jm", "sq"), _JM_EL), (("jm", "sq-MK"), _JM_AR_IL), (("jm", "sq-XK"), _JM_AR_IL), (("jm", "syr"), _JM_AM), (("jm", "ta"), _JM_AM), (("jm", "ta-LK"), _JM_AR_IL), (("jm", "te"), _JM_AM), (("jm", "ti"), _JM_AM), (("jm", "to"), _JM_EL), (("jm", "tr-CY"), _JM_EL), (("jm", "und"), _JM_AR_IL), (("jm", "ur"), _JM_AM), (("jm", "xnr"), _JM_AM), (("jm", "yrl-CO"), _JM_EL), (("jm", "yrl-VE"), _JM_EL), (("jm", "yue"), _JM_YUE), (("jm", "zh-Hant"), _JM_ZH_HANT), (("jm", "zh-SG"), _JM_YUE), (("jms", "af-NA"), _JMS_AF_NA), (("jms", "am"), _JMS_AM), (("jms", "ar"), _JMS_AM), (("jms", "ar-IL"), _JMS_AR_IL), (("jms", "ar-KM"), _JMS_AR_IL), (("jms", "ar-MA"), _JMS_AR_IL), (("jms", "as"), _JMS_AM), (("jms", "bg"), _JMS_BG), (("jms", "bgc"), _JMS_AM), (("jms", "bho"), _JMS_AM), (("jms", "bn"), _JMS_AM), (("jms", "brx"), _JMS_BRX), (("jms", "ca"), _JMS_CA), (("jms", "ceb"), _JMS_AM), (("jms", "chr"), _JMS_AM), (("jms", "cs"), _JMS_CA), (("jms", "da"), _JMS_DA), (("jms", "doi"), _JMS_AM), (("jms", "el"), _JMS_EL), (("jms", "en"), _JMS_EL), (("jms", "en-150"), _JMS_AR_IL), (("jms", "en-AI"), _JMS_AR_IL), (("jms", "en-BI"), _JMS_AR_IL), (("jms", "en-BW"), _JMS_AR_IL), (("jms", "en-BZ"), _JMS_AR_IL), (("jms", "en-CC"), _JMS_AR_IL), (("jms", "en-CK"), _JMS_AR_IL), (("jms", "en-CM"), _JMS_AR_IL), (("jms", "en-CX"), _JMS_AR_IL), (("jms", "en-DG"), _JMS_AR_IL), (("jms", "en-DK"), _JMS_DA), (("jms", "en-FI"), _JMS_EN_FI), (("jms", "en-FK"), _JMS_AR_IL), (("jms", "en-GB"), _JMS_AR_IL), (("jms", "en-GG"), _JMS_AR_IL), (("jms", "en-GI"), _JMS_AR_IL), (("jms", "en-ID"), _JMS_DA), (("jms", "en-IE"), _JMS_AR_IL), (("jms", "en-IL"), _JMS_CA), (("jms", "en-IM"), _JMS_AR_IL), (("jms", "en-IO"), _JMS_AR_IL), (("jms", "en-JE"), _JMS_AR_IL), (("jms", "en-KE"), _JMS_AR_IL), (("jms", "en-MG"), _JMS_AR_IL), (("jms", "en-MS"), _JMS_AR_IL), (("jms", "en-MT"), _JMS_AR_IL), (("jms", "en-MU"), _JMS_AR_IL), (("jms", "en-MV"), _JMS_AR_IL), (("jms", "en-NF"), _JMS_AR_IL), (("jms", "en-NG"), _JMS_AR_IL), (("jms", "en-NR"), _JMS_AR_IL), (("jms", "en-NU"), _JMS_AR_IL), (("jms", "en-PN"), _JMS_AR_IL), (("jms", "en-RW"), _JMS_AR_IL), (("jms", "en-SC"), _JMS_AR_IL), (("jms", "en-SH"), _JMS_AR_IL), (("jms", "en-SX"), _JMS_AR_IL), (("jms", "en-TK"), _JMS_AR_IL), (("jms", "en-TV"), _JMS_AR_IL), (("jms", "en-TZ"), _JMS_AR_IL), (("jms", "en-UG"), _JMS_AR_IL), (("jms", "en-ZA"), _JMS_AR_IL), (("jms", "en-ZW"), _JMS_AR_IL), (("jms", "es-419"), _JMS_EL), (("jms", "es-BR"), _JMS_AR_IL), (("jms", "es-BZ"), _JMS_AR_IL), (("jms", "es-MX"), _JMS_AF_NA), (("jms", "es-PH"), _JMS_EL), (("jms", "et"), _JMS_CA), (("jms", "fa"), _JMS_CA), (("jms", "ff-Adlm-GH"), _JMS_AM), (("jms", "ff-Adlm-GM"), _JMS_AM), (("jms", "ff-Adlm-LR"), _JMS_AM), (("jms", "ff-Adlm-MR"), _JMS_AM), (("jms", "ff-Adlm-SL"), _JMS_AM), (("jms", "fi"), _JMS_EN_FI), (("jms", "fil"), _JMS_EL), (("jms", "fr-CA"), _JMS_FR_CA), (("jms", "fr-DJ"), _JMS_EL), (("jms", "fr-DZ"), _JMS_EL), (("jms", "fr-MR"), _JMS_EL), (("jms", "fr-SY"), _JMS_EL), (("jms", "fr-TD"), _JMS_EL), (("jms", "fr-TN"), _JMS_EL), (("jms", "fr-VU"), _JMS_EL), (("jms", "gu"), _JMS_GU), (("jms", "ha-GH"), _JMS_AM), (("jms", "he"), _JMS_CA), (("jms", "hi"), _JMS_AM), (("jms", "hu"), _JMS_CA), (("jms", "hy"), _JMS_CA), (("jms", "id"), _JMS_DA), (("jms", "ja"), _JMS_CA), (("jms", "km"), _JMS_AM), (("jms", "kn"), _JMS_AM), (("jms", "ko"), _JMS_KO), (("jms", "ko-CN"), _JMS_AR_IL), (("jms", "kok"), _JMS_AM), (("jms", "ks"), _JMS_AM), (("jms", "ks-Deva"), _JMS_AM), (("jms", "kxv"), _JMS_AM), (("jms", "mai"), _JMS_AM), (("jms", "mi"), _JMS_AM), (("jms", "mk"), _JMS_CA), (("jms", "ml"), _JMS_AM), (("jms", "mni"), _JMS_AM), (("jms", "mr"), _JMS_AM), (("jms", "ms"), _JMS_EL), (("jms", "ms-ID"), _JMS_AR_IL), (("jms", "ne-IN"), _JMS_AM), (("jms", "or"), _JMS_AM), (("jms", "pa"), _JMS_AM), (("jms", "ps"), _JMS_CA), (("jms", "ps-PK"), _JMS_AM), (("jms", "pt-MO"), _JMS_EL), (("jms", "qu"), _JMS_EL), (("jms", "raj"), _JMS_AM), (("jms", "sa"), _JMS_AM), (("jms", "sat"), _JMS_AM), (("jms", "sd"), _JMS_AM), (("jms", "sd-Deva"), _JMS_AM), (("jms", "sk"), _JMS_CA), (("jms", "so"), _JMS_AM), (("jms", "so-KE"), _JMS_AR_IL), (("jms", "sq"), _JMS_EL), (("jms", "sq-MK"), _JMS_AR_IL), (("jms", "sq-XK"), _JMS_AR_IL), (("jms", "syr"), _JMS_AM), (("jms", "ta"), _JMS_AM), (("jms", "ta-LK"), _JMS_AR_IL), (("jms", "te"), _JMS_AM), (("jms", "ti"), _JMS_AM), (("jms", "to"), _JMS_EL), (("jms", "tr-CY"), _JMS_EL), (("jms", "und"), _JMS_AR_IL), (("jms", "ur"), _JMS_AM), (("jms", "xnr"), _JMS_AM), (("jms", "yrl-CO"), _JMS_EL), (("jms", "yrl-VE"), _JMS_EL), (("jms", "yue"), _JMS_YUE), (("jms", "zh-Hant"), _JMS_ZH_HANT), (("jms", "zh-SG"), _JMS_YUE)])
            };
        }
        #[clippy::msrv = "1.70"]
        impl icu_provider::DataProvider<icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker>, icu_provider::DataError> {
                let mut metadata = icu_provider::DataResponseMetadata::default();
                let payload = if let Some(payload) = icu_provider_baked::DataStore::get(&Self::DATA_TIME_NEO_SKELETON_PATTERNS_V1_MARKER, req.id) {
                    payload
                } else {
                    const FALLBACKER: icu::locale::fallback::LocaleFallbackerWithConfig<'static> = icu::locale::fallback::LocaleFallbacker::new().for_config(<icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DataMarker>::INFO.fallback_config);
                    let mut fallback_iterator = FALLBACKER.fallback_for(req.id.locale.clone());
                    loop {
                        if let Some(payload) = icu_provider_baked::DataStore::get(&Self::DATA_TIME_NEO_SKELETON_PATTERNS_V1_MARKER, icu_provider::DataIdentifierBorrowed::for_marker_attributes_and_locale(req.id.marker_attributes, fallback_iterator.get())) {
                            metadata.locale = Some(fallback_iterator.take());
                            break payload;
                        }
                        if fallback_iterator.get().is_und() {
                            return Err(icu_provider::DataErrorKind::MissingLocale.with_req(<icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DataMarker>::INFO, req));
                        }
                        fallback_iterator.step();
                    }
                };
                Ok(icu_provider::DataResponse { payload: icu_provider::DataPayload::from_static_ref(payload), metadata })
            }
        }
    };
    ($ provider : ty , ITER) => {
        __impl_time_neo_skeleton_patterns_v1_marker!($provider);
        #[clippy::msrv = "1.70"]
        impl icu_provider::IterableDataProvider<icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker> for $provider {
            fn iter_ids(&self) -> Result<std::collections::HashSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok(icu_provider_baked::DataStore::iter(&Self::DATA_TIME_NEO_SKELETON_PATTERNS_V1_MARKER).collect())
            }
        }
    };
}
#[doc(inline)]
pub use __impl_time_neo_skeleton_patterns_v1_marker as impl_time_neo_skeleton_patterns_v1_marker;
