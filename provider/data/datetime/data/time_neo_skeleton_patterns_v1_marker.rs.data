// @generated
/// Implement `DataProvider<TimeNeoSkeletonPatternsV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
///
/// Using this implementation will embed the following data in the binary's data segment:
/// * 2752B for the lookup data structure (577 data identifiers)
/// * 3558B[^1] for the actual data (61 unique structs)
///
/// [^1]: these numbers can be smaller in practice due to linker deduplication
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_time_neo_skeleton_patterns_v1_marker {
    ($ provider : ty) => {
        #[clippy::msrv = "1.70"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.70"]
        impl $provider {
            const DATA_TIME_NEO_SKELETON_PATTERNS_V1_MARKER: icu_provider_baked::zerotrie::Data<icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker> = icu_provider_baked::zerotrie::Data { trie: icu_provider_baked::zerotrie::ZeroTrieSimpleAscii { store: b"\xE1yabcdefghijklmnopqrstuvxyz\0\0\x01\x01\x04\x06\x06\x06\x06\x06\x07\x07\x07\x07\x07\x08\x08\x08\t\t\t\t\t\n\x7F\xDD#V\xEB\x10 \x7F\x8D\x9D.3\xC6\xD9\xE92AR'\x97\xBA\xBF\xD0\x19\xC4fmrs\x11 h-NA\x1E\xC2aj\x021\x80\x8Fm\x90\x12s\x90\x1F\x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 \xC2\x1E-\x0E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 \xC3IKM\x10 L\x1E\xC2aj\x021\x82\x90\x01m\x90\x14s\x90!M\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!A\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\x1E\xC2aj\x021\x84\x90\0m\x90\x13s\x90 \xC5ghnrs!1@P\xC2\x1Ec\x0E\xC2aj\x021\x82\x90\x02m\x90\x15s\x90\"\x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 o\x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 \x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 x\x1E\xC2aj\x021\x85\x90\x03m\x90\x16s\x90#\x1Ej\x90\x04\xC4aehs\x0F\x1F/\x1E\xC2aj\x021\x82\x90\x04m\x90\x17s\x90$b\x1E\xC2aj\x021\x80\x90\0m\x90\x13s\x90 r\x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 \x1E\xC2aj\x021\x82\x90\x04m\x90\x17s\x90$\xC4aeos\r\x11!\x1E\xC2aj\x021\x86m\x90\x18s\x90%\x1Ej\x90\x05i\x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 b\x1E\xC2aj\x021\x82\x90\x06\xE1dlnst\0\x03\x03\x0E(\x83\x1E\xC2aj\x021\x80\x8Fm\x90\x19s\x90&\xE1b\x1E-\0\r\xC2aj\x021\x80\x8Fm\x90\x19s\x90&\xE1r1ABCDFGIJKMNPRSTUZ\0\0\0\0\0\0\x01\x01\x01\x01\x01\x02\x02\x02\x02\x02\x02\x11!T\x98\xB8\xD8\x0B`p\x80\xD5\x19)9l\x9F\xAF50\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!I\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\xC3IWZ\x0F\x1E\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\xC4CKMX\x0F\x1E-\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\xC2GK\x0F\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\x1E\xC2aj\x021\x86m\x90\x18s\x90%\xC2IK\r\x1E\xC2aj\x021\x87m\x90\x1As\x90'\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\xC3BGI\x0F\x1E\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\xC5DELMO\x0F\x1E-<\x1E\xC2aj\x021\x86\x90\x01m\x90\x18s\x90%\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\x1E\xC2aj\x021\x82\x90\x04m\x90\x17s\x90$\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!E\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!E\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\xC5GSTUV\x0F\x1E-<\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\xC4FGRU\x0F\x1E-\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!N\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!W\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\xC3CHX\x0F\x1E\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\xC3KVZ\x0F\x1E\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!G\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\xC2AW\x0F\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\xC2\x1E-\x03a1\x82\xC44BMP\x102=19\x1E\xC2aj\x021\x80\x8Fm\x90\x19s\x90&\xC2RZ\x0F\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!X\x1Ej\x90\x07m\x90\x12s\x90\x1FH\x1E\xC2aj\x021\x80\x8Fm\x90\x19s\x90&\x1Ejms\x90$\xE1dafir\0\0\0\x0Fo\x8F\x1E\xC2aj\x021\x82\x90\x04m\x90\x17s\x90$-Adlm-\xC4GLMS\"2B\xC2HM\x0F\x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 \x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 R\x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 R\x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 L\x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 \xC2\x1El\x0E\xC2aj\x021\x87\x90\x04m\x90\x1As\x90'\x1E\xC2aj\x021\x80\x8Fm\x90\x19s\x90&-\xC6CDMSTV\x100?NnA\x1E\xC2aj\x021\x88\x90\x08m\x90\x1Bs\x90(\xC2JZ\x0E\x1E\xC2aj\x021\x80\x8Fm\x90\x19s\x90&\x1E\xC2aj\x021\x80\x8Fm\x90\x19s\x90&R\x1E\xC2aj\x021\x80\x8Fm\x90\x19s\x90&Y\x1E\xC2aj\x021\x80\x8Fm\x90\x19s\x90&\xC2DN\x0E\x1E\xC2aj\x021\x80\x8Fm\x90\x19s\x90&\x1E\xC2aj\x021\x80\x8Fm\x90\x19s\x90&U\x1E\xC2aj\x021\x80\x8Fm\x90\x19s\x90&u\x1E\xC2aj\x021\x89\x90\0m\x90\x1Cs\x90)\xC6aeisuy\x12!0:I-GH\x1E\xC2aj\x021\x80\x90\0m\x90\x13s\x90 \x1E\xC2aj\x021\x82\x90\x04m\x90\x17s\x90$\x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 b\x1E\xC2aj\x021\x8A\x90\x06\x1E\xC2aj\x021\x82\x90\x04m\x90\x17s\x90$\x1Ej\x90\x04m\x90\x17s\x90$d\x1E\xC2aj\x021\x86m\x90\x18s\x90%a\x1E\xC2aj\x021\x82\x90\tm\x90\x17s\x90$\xC5mnosx\x0F\x1ERw\x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 \x1E\xC2aj\x021\x89\x90\0m\x90\x13s\x90 \xC3\x1E-k\x0E\x1F\xC2aj\x021\x8B\x90\nm\x90\x16s\x90*CN\x1E\xC2aj\x021\x83\x90\x0Bm\x90\x14s\x90!\x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 \xC2\x1E-\x0E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 Deva\x1E\xC2aj\x021\x8B\x90\0m\x90\x13s\x90 v\x1E\xC2aj\x021\x80\x90\0m\x90\x13s\x90 o\x1Ea1\x82\xC8aiklnrsy\x10\x1F)8N]\x7Fi\x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 \x1E\xC2aj\x021\x80\x90\0m\x90\x13s\x90 \x1Ej\x90\x04m\x90\x17s\x90$\x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 \xC2\x1Ei\x03j\x90\x0C\x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 \x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 \xC2\x1E-\r\xC2aj\x021\x80\x8Fm\x90\x19s\x90&ID\x1E\xC2aj\x021\x86\x90\x01m\x90\x14s\x90!\x1Ea1\x82e-IN\x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 r\x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 \xC3ast\x0F2\x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 \xC2\x1E-\x0E\xC2aj\x021\x82\x90\x04m\x90\x17s\x90$PK\x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 -MO\x1E\xC2aj\x021\x80\x8Fm\x90\x19s\x90&u\x1E\xC2aj\x021\x80\x8Fm\x90\x19s\x90&aj\x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 \xC8adikoquy!FJY|\xB1\xB5\xC2\x1Et\x0E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 \x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 \xC2\x1E-\x0E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 Deva\x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 \x1Ea1\x86\x1E\xC2aj\x021\x82\x90\x04m\x90\x17s\x90$\xC2\x1E-\x0E\xC2aj\x021\x80\x90\0m\x90\x13s\x90 KE\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\xC2\x1E-\r\xC2aj\x021\x80\x8Fm\x90\x19s\x90&\xC2MX\x10K\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!K\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\x1Ea1\x87r\x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 \xC6aeiort#2AO`\xC2\x1E-\x0E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 LK\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 \x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 \x1E\xC2aj\x021\x80\x8Fm\x90\x19s\x90&-CY\x1E\xC2aj\x021\x80\x8Fm\x90\x19s\x90&\x1Ea1\x82\xC2nr\x10d\x1E\xC2aj\x021\x83\x90\x01m\x90\x14s\x90!\x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 i\x1Ej\x90\rnr\x1E\xC2aj\x021\x81\x90\0m\x90\x13s\x90 \xC3oru\x04(\x1Ea1\x8Cl-\xC2CV\x0FO\x1E\xC2aj\x021\x80\x8Fm\x90\x19s\x90&E\x1E\xC2aj\x021\x80\x8Fm\x90\x19s\x90&e\xC2\x1E-\x0E\xC2aj\x021\x8D\x90\x0Em\x90\x1Ds\x90+Hans\x1Ej\x90\x0Fh\xC2\x1E-\x03j\x90\x0F\xC3HMS\x19\x1E\xC2Ka\x04\x1Ea1\x8Dnt\x1E\xC2aj\x021\x8E\x90\x11m\x90\x1Es\x90,O\x1Ea1\x8DG\x1E\xC2aj\x021\x8D\x90\x10m\x90\x1Ds\x90+" }, values: &[icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x16\0\x03\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0 /\x80`\x01\x02\x80q\x01\0\0:\x80\x80\x02\0 /\x80`\x01") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x16\0\x03\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0\0 \x80`\x01\x02\x80q\x01\0\0:\x80\x80\x02\0\0 \x80`\x01") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\x03\x80r\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\x80r\x01\0\0:\x80\x80\x02") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\x03\x80r\x02\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\x80r\x02\0\0:\x80\x80\x02") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x16\0\x03\x80`\x01\0\0 \x80q\x01\0\0.\x80\x80\x02\0\0.\x80\x90\x02\x02\x80`\x01\0\0 \x80q\x01\0\0.\x80\x80\x02") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x16\0\x03\x80`\x01\0\0 \x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\x80`\x01\0\0 \0\t(\0\t?\0\0 \x80q\x01\0\0:\x80\x80\x02") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\x03\x80r\x02\0\0.\x80\x80\x02\0\0.\x80\x90\x02\x02\x80r\x02\0\0.\x80\x80\x02") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\x03\x80r\x01\0\0.\x80\x80\x02\0\0.\x80\x90\x02\x02\x80r\x01\0\0.\x80\x80\x02") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0(\0\x03\x80r\x02\0\0 \0\0h\0\0 \x80\x80\x02\0\0 \0\0m\0\0i\0\0n\0\0 \x80\x90\x02\0\0 \0\0s\x02\x80r\x02\0\0 \0\0h\0\0 \x80\x80\x02") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x16\0\x03\x80q\x02\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0\0 \x80`\x01\x02\x80q\x02\0\0:\x80\x80\x02\0\0 \x80`\x01") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\x03\x80r\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\x80r\x01\0\0:\x80\x80\x02\0\0 \0\0h\0\0o\0\0d\0\x01z\0\0.") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x16\0\x03\x80`\x01\0\0 \x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\x80`\x01\0\0 \x80q\x01\0\0:\x80\x80\x02") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\x03\x80r\x01\0\0:\x80\x80\x01\0\0:\x80\x90\x01\x02\x80r\x01\0\0:\x80\x80\x01") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\x03\x80`\x01\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\x80`\x01\x80q\x01\0\0:\x80\x80\x02") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\x03\0\0B\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\0\0B\x80q\x01\0\0:\x80\x80\x02") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80q\x01\0 /\x80`\x01") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80q\x01\0\0 \x80`\x01") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02\0\0 \0\x04G\0\0.") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80`\x01\0\0 \x80q\x01") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x01") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02\0\0 \0\0U\0\0h\0\0r") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02\0\0 \0\0h\0\0o\0\0d\0\x01z\0\0.") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80q\x02\0 /\x80`\x01") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02\0\0 \0\0h") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x01\0fB") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80`\x01\0\0 \x80q\x01\0\xC2\xDC") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x01\0\xC2\xDC") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02\0\0 \0\x04F") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02\0\0 \0\0g\0\0i\0\x1E\xDD") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80`\x01\x80q\x01\0fB") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x01\0e\xF6") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80`\x01\x80q\x01\0e\xF6") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\0\0B\x80q\x01\0fB") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80q\x02\0\0:\x80\x80\x02\0 /\x80`\x01") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80q\x01\0\0:\x80\x80\x02\0\0 \x80`\x01") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80r\x02\0\0:\x80\x80\x02") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80r\x02\0\0:\x80\x80\x02\0\0 \0\x04G\0\0.") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80`\x01\0\0 \x80q\x01\0\0:\x80\x80\x02") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80r\x01\0\0:\x80\x80\x02") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80r\x02\0\0.\x80\x80\x02") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80q\x01\0\0:\x80\x80\x02\0 /\x80`\x01") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80r\x01\0\0.\x80\x80\x02") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80r\x02\0\0 \0\0h\0\0 \x80\x80\x02") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80q\x02\0\0:\x80\x80\x02\0\0 \x80`\x01") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80`\x01\x80q\x01\0\0:\x80\x80\x02") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\0\0B\x80q\x01\0\0:\x80\x80\x02") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80q\x02\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0 /\x80`\x01") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0\0 \x80`\x01") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80r\x02\0\0:\x80\x80\x02\0\0:\x80\x90\x02") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80r\x02\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0\0 \0\x04G\0\0.") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80`\x01\0 /\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80r\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80r\x02\0\0.\x80\x80\x02\0\0.\x80\x90\x02") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0 /\x80`\x01") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80r\x01\0\0.\x80\x80\x02\0\0.\x80\x90\x02") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80r\x02\0\0 \0\0h\0\0 \x80\x80\x02\0\0 \0\0m\0\0i\0\0n\0\0 \x80\x90\x02\0\0 \0\0s") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80q\x02\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0\0 \x80`\x01") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80`\x01\0\0 \x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80`\x01\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02") } }, icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\0\0B\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02") } }] };
        }
        #[clippy::msrv = "1.70"]
        impl icu_provider::DataProvider<icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker>, icu_provider::DataError> {
                let mut metadata = icu_provider::DataResponseMetadata::default();
                let payload = if let Some(payload) = icu_provider_baked::DataStore::get(&Self::DATA_TIME_NEO_SKELETON_PATTERNS_V1_MARKER, req.id) {
                    payload
                } else {
                    const FALLBACKER: icu::locale::fallback::LocaleFallbackerWithConfig<'static> = icu::locale::fallback::LocaleFallbacker::new().for_config(<icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DataMarker>::INFO.fallback_config);
                    let mut fallback_iterator = FALLBACKER.fallback_for(req.id.locale.clone());
                    loop {
                        if let Some(payload) = icu_provider_baked::DataStore::get(&Self::DATA_TIME_NEO_SKELETON_PATTERNS_V1_MARKER, icu_provider::DataIdentifierBorrowed::for_marker_attributes_and_locale(req.id.marker_attributes, fallback_iterator.get())) {
                            metadata.locale = Some(fallback_iterator.take());
                            break payload;
                        }
                        if fallback_iterator.get().is_und() {
                            return Err(icu_provider::DataErrorKind::IdentifierNotFound.with_req(<icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DataMarker>::INFO, req));
                        }
                        fallback_iterator.step();
                    }
                };
                Ok(icu_provider::DataResponse { payload: icu_provider::DataPayload::from_static_ref(payload), metadata })
            }
        }
    };
    ($ provider : ty , ITER) => {
        __impl_time_neo_skeleton_patterns_v1_marker!($provider);
        #[clippy::msrv = "1.70"]
        impl icu_provider::IterableDataProvider<icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BTreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok(icu_provider_baked::DataStore::iter(&Self::DATA_TIME_NEO_SKELETON_PATTERNS_V1_MARKER).collect())
            }
        }
    };
}
#[doc(inline)]
pub use __impl_time_neo_skeleton_patterns_v1_marker as impl_time_neo_skeleton_patterns_v1_marker;
