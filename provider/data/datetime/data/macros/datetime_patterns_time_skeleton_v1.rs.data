// @generated
/// Implement `DataProvider<TimeNeoSkeletonPatternsV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_datetime_patterns_time_skeleton_v1 {
    ($ provider : ty) => {
        #[clippy::msrv = "1.70"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.70"]
        impl icu_provider::DataProvider<icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker>, icu_provider::DataError> {
                static ZH_HANT_X_J: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\0\0B\x80q\x01\0fB") } };
                static BRX_X_J: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80`\x01\0\0 \x80q\x01") } };
                static KO_X_J: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80`\x01\0\0 \x80q\x01\0\xC2\xDC") } };
                static ZH_SG_X_J: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80`\x01\x80q\x01\0e\xF6") } };
                static YUE_X_J: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80`\x01\x80q\x01\0fB") } };
                static AF_NA_X_J: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80q\x01\0 /\x80`\x01") } };
                static AM_X_J: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80q\x01\0\0 \x80`\x01") } };
                static ES_MX_X_J: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80q\x02\0 /\x80`\x01") } };
                static BS_X_J: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x01") } };
                static KO_CN_X_J: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x01\0\xC2\xDC") } };
                static YUE_HANS_X_J: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x01\0e\xF6") } };
                static JA_X_J: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x01\0fB") } };
                static AR_IL_X_J: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02") } };
                static DE_X_J: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02\0\0 \0\0U\0\0h\0\0r") } };
                static VI_X_J: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02\0\0 \0\0g\0\0i\0\x1E\xDD") } };
                static FR_CA_X_J: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02\0\0 \0\0h") } };
                static DSB_X_J: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02\0\0 \0\0h\0\0o\0\0d\0\x01z\0\0.") } };
                static MN_X_J: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02\0\0 \0\x04F") } };
                static BG_X_J: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x01\x80r\x02\0\0 \0\x04G\0\0.") } };
                static ZH_HANT_X_JM: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\0\0B\x80q\x01\0\0:\x80\x80\x02") } };
                static BRX_X_JM: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80`\x01\0\0 \x80q\x01\0\0:\x80\x80\x02") } };
                static YUE_X_JM: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80`\x01\x80q\x01\0\0:\x80\x80\x02") } };
                static EL_X_JM: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80q\x01\0\0:\x80\x80\x02\0 /\x80`\x01") } };
                static AM_X_JM: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80q\x01\0\0:\x80\x80\x02\0\0 \x80`\x01") } };
                static AF_NA_X_JM: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80q\x02\0\0:\x80\x80\x02\0 /\x80`\x01") } };
                static GU_X_JM: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80q\x02\0\0:\x80\x80\x02\0\0 \x80`\x01") } };
                static EN_FI_X_JM: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80r\x01\0\0.\x80\x80\x02") } };
                static CA_X_JM: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80r\x01\0\0:\x80\x80\x02") } };
                static FR_CA_X_JM: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80r\x02\0\0 \0\0h\0\0 \x80\x80\x02") } };
                static DA_X_JM: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80r\x02\0\0.\x80\x80\x02") } };
                static AR_IL_X_JM: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80r\x02\0\0:\x80\x80\x02") } };
                static BG_X_JM: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x02\x80r\x02\0\0:\x80\x80\x02\0\0 \0\x04G\0\0.") } };
                static ZH_HANT_X_JMS: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\0\0B\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02") } };
                static BRX_X_JMS: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80`\x01\0 /\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02") } };
                static KO_X_JMS: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80`\x01\0\0 \x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02") } };
                static YUE_X_JMS: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80`\x01\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02") } };
                static EL_X_JMS: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0 /\x80`\x01") } };
                static AM_X_JMS: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0\0 \x80`\x01") } };
                static AF_NA_X_JMS: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80q\x02\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0 /\x80`\x01") } };
                static GU_X_JMS: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80q\x02\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0\0 \x80`\x01") } };
                static EN_FI_X_JMS: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80r\x01\0\0.\x80\x80\x02\0\0.\x80\x90\x02") } };
                static CA_X_JMS: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80r\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02") } };
                static FR_CA_X_JMS: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80r\x02\0\0 \0\0h\0\0 \x80\x80\x02\0\0 \0\0m\0\0i\0\0n\0\0 \x80\x90\x02\0\0 \0\0s") } };
                static DA_X_JMS: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80r\x02\0\0.\x80\x80\x02\0\0.\x80\x90\x02") } };
                static AR_IL_X_JMS: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80r\x02\0\0:\x80\x80\x02\0\0:\x80\x90\x02") } };
                static BG_X_JMS: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: false, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\x03\x80r\x02\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0\0 \0\x04G\0\0.") } };
                static FR_CA_X_A1: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0(\0\x03\x80r\x02\0\0 \0\0h\0\0 \x80\x80\x02\0\0 \0\0m\0\0i\0\0n\0\0 \x80\x90\x02\0\0 \0\0s\x02\x80r\x02\0\0 \0\0h\0\0 \x80\x80\x02") } };
                static EN_FI_X_A1: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\x03\x80r\x01\0\0.\x80\x80\x02\0\0.\x80\x90\x02\x02\x80r\x01\0\0.\x80\x80\x02") } };
                static YO_X_A1: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\x03\x80r\x01\0\0:\x80\x80\x01\0\0:\x80\x90\x01\x02\x80r\x01\0\0:\x80\x80\x01") } };
                static AR_IL_X_A1: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\x03\x80r\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\x80r\x01\0\0:\x80\x80\x02") } };
                static HSB_X_A1: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\x03\x80r\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\x80r\x01\0\0:\x80\x80\x02\0\0 \0\0h\0\0o\0\0d\0\x01z\0\0.") } };
                static DA_X_A1: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\x03\x80r\x02\0\0.\x80\x80\x02\0\0.\x80\x90\x02\x02\x80r\x02\0\0.\x80\x80\x02") } };
                static AR_KM_X_A1: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x10\0\x03\x80r\x02\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\x80r\x02\0\0:\x80\x80\x02") } };
                static ZH_HANT_X_A1: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\x03\0\0B\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\0\0B\x80q\x01\0\0:\x80\x80\x02") } };
                static YUE_X_A1: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0\x03\x80`\x01\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\x80`\x01\x80q\x01\0\0:\x80\x80\x02") } };
                static AS_X_A1: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x16\0\x03\x80`\x01\0\0 \x80q\x01\0\0.\x80\x80\x02\0\0.\x80\x90\x02\x02\x80`\x01\0\0 \x80q\x01\0\0.\x80\x80\x02") } };
                static BRX_X_A1: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x16\0\x03\x80`\x01\0\0 \x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\x80`\x01\0\0 \0\t(\0\t?\0\0 \x80q\x01\0\0:\x80\x80\x02") } };
                static KO_X_A1: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x16\0\x03\x80`\x01\0\0 \x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\x02\x80`\x01\0\0 \x80q\x01\0\0:\x80\x80\x02") } };
                static AF_NA_X_A1: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x16\0\x03\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0 /\x80`\x01\x02\x80q\x01\0\0:\x80\x80\x02\0 /\x80`\x01") } };
                static AM_X_A1: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x16\0\x03\x80q\x01\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0\0 \x80`\x01\x02\x80q\x01\0\0:\x80\x80\x02\0\0 \x80`\x01") } };
                static GU_X_A1: <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::PackedSkeletonDataV1 { index_info: icu::datetime::provider::neo::SkeletonDataIndex { has_long: false, has_medium: true, has_plurals: false }, patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x16\0\x03\x80q\x02\0\0:\x80\x80\x02\0\0:\x80\x90\x02\0\0 \x80`\x01\x02\x80q\x02\0\0:\x80\x80\x02\0\0 \x80`\x01") } };
                static DATA: [(&str, &<icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable); 577usize] = [("af-NA-x-a1", &AF_NA_X_A1), ("af-NA-x-j", &AF_NA_X_J), ("af-NA-x-jm", &AF_NA_X_JM), ("af-NA-x-jms", &AF_NA_X_JMS), ("am-x-a1", &AM_X_A1), ("am-x-j", &AM_X_J), ("am-x-jm", &AM_X_JM), ("am-x-jms", &AM_X_JMS), ("ar-IL-x-a1", &AR_IL_X_A1), ("ar-IL-x-j", &AR_IL_X_J), ("ar-IL-x-jm", &AR_IL_X_JM), ("ar-IL-x-jms", &AR_IL_X_JMS), ("ar-KM-x-a1", &AR_KM_X_A1), ("ar-KM-x-j", &AR_IL_X_J), ("ar-KM-x-jm", &AR_IL_X_JM), ("ar-KM-x-jms", &AR_IL_X_JMS), ("ar-MA-x-a1", &AR_KM_X_A1), ("ar-MA-x-j", &AR_IL_X_J), ("ar-MA-x-jm", &AR_IL_X_JM), ("ar-MA-x-jms", &AR_IL_X_JMS), ("ar-x-a1", &AM_X_A1), ("ar-x-j", &AM_X_J), ("ar-x-jm", &AM_X_JM), ("ar-x-jms", &AM_X_JMS), ("as-x-a1", &AS_X_A1), ("as-x-j", &AM_X_J), ("as-x-jm", &AM_X_JM), ("as-x-jms", &AM_X_JMS), ("bg-x-a1", &AR_IL_X_A1), ("bg-x-j", &BG_X_J), ("bg-x-jm", &BG_X_JM), ("bg-x-jms", &BG_X_JMS), ("bgc-x-a1", &AM_X_A1), ("bgc-x-j", &AM_X_J), ("bgc-x-jm", &AM_X_JM), ("bgc-x-jms", &AM_X_JMS), ("bho-x-a1", &AM_X_A1), ("bho-x-j", &AM_X_J), ("bho-x-jm", &AM_X_JM), ("bho-x-jms", &AM_X_JMS), ("bn-x-a1", &AM_X_A1), ("bn-x-j", &AM_X_J), ("bn-x-jm", &AM_X_JM), ("bn-x-jms", &AM_X_JMS), ("brx-x-a1", &BRX_X_A1), ("brx-x-j", &BRX_X_J), ("brx-x-jm", &BRX_X_JM), ("brx-x-jms", &BRX_X_JMS), ("bs-x-j", &BS_X_J), ("ca-x-a1", &AR_IL_X_A1), ("ca-x-j", &BS_X_J), ("ca-x-jm", &CA_X_JM), ("ca-x-jms", &CA_X_JMS), ("ceb-x-a1", &AF_NA_X_A1), ("ceb-x-j", &AM_X_J), ("ceb-x-jm", &AM_X_JM), ("ceb-x-jms", &AM_X_JMS), ("chr-x-a1", &AM_X_A1), ("chr-x-j", &AM_X_J), ("chr-x-jm", &AM_X_JM), ("chr-x-jms", &AM_X_JMS), ("cs-x-a1", &AR_IL_X_A1), ("cs-x-j", &BS_X_J), ("cs-x-jm", &CA_X_JM), ("cs-x-jms", &CA_X_JMS), ("da-x-a1", &DA_X_A1), ("da-x-jm", &DA_X_JM), ("da-x-jms", &DA_X_JMS), ("de-x-j", &DE_X_J), ("doi-x-a1", &AM_X_A1), ("doi-x-j", &AM_X_J), ("doi-x-jm", &AM_X_JM), ("doi-x-jms", &AM_X_JMS), ("dsb-x-a1", &AR_IL_X_A1), ("dsb-x-j", &DSB_X_J), ("el-x-a1", &AF_NA_X_A1), ("el-x-j", &AF_NA_X_J), ("el-x-jm", &EL_X_JM), ("el-x-jms", &EL_X_JMS), ("en-150-x-a1", &AR_KM_X_A1), ("en-150-x-j", &AR_IL_X_J), ("en-150-x-jm", &AR_IL_X_JM), ("en-150-x-jms", &AR_IL_X_JMS), ("en-AI-x-a1", &AR_KM_X_A1), ("en-AI-x-j", &AR_IL_X_J), ("en-AI-x-jm", &AR_IL_X_JM), ("en-AI-x-jms", &AR_IL_X_JMS), ("en-BI-x-a1", &AR_KM_X_A1), ("en-BI-x-j", &AR_IL_X_J), ("en-BI-x-jm", &AR_IL_X_JM), ("en-BI-x-jms", &AR_IL_X_JMS), ("en-BW-x-a1", &AR_KM_X_A1), ("en-BW-x-j", &AR_IL_X_J), ("en-BW-x-jm", &AR_IL_X_JM), ("en-BW-x-jms", &AR_IL_X_JMS), ("en-BZ-x-a1", &AR_KM_X_A1), ("en-BZ-x-j", &AR_IL_X_J), ("en-BZ-x-jm", &AR_IL_X_JM), ("en-BZ-x-jms", &AR_IL_X_JMS), ("en-CC-x-a1", &AR_KM_X_A1), ("en-CC-x-j", &AR_IL_X_J), ("en-CC-x-jm", &AR_IL_X_JM), ("en-CC-x-jms", &AR_IL_X_JMS), ("en-CK-x-a1", &AR_KM_X_A1), ("en-CK-x-j", &AR_IL_X_J), ("en-CK-x-jm", &AR_IL_X_JM), ("en-CK-x-jms", &AR_IL_X_JMS), ("en-CM-x-a1", &AR_KM_X_A1), ("en-CM-x-j", &AR_IL_X_J), ("en-CM-x-jm", &AR_IL_X_JM), ("en-CM-x-jms", &AR_IL_X_JMS), ("en-CX-x-a1", &AR_KM_X_A1), ("en-CX-x-j", &AR_IL_X_J), ("en-CX-x-jm", &AR_IL_X_JM), ("en-CX-x-jms", &AR_IL_X_JMS), ("en-DG-x-a1", &AR_KM_X_A1), ("en-DG-x-j", &AR_IL_X_J), ("en-DG-x-jm", &AR_IL_X_JM), ("en-DG-x-jms", &AR_IL_X_JMS), ("en-DK-x-a1", &DA_X_A1), ("en-DK-x-jm", &DA_X_JM), ("en-DK-x-jms", &DA_X_JMS), ("en-FI-x-a1", &EN_FI_X_A1), ("en-FI-x-jm", &EN_FI_X_JM), ("en-FI-x-jms", &EN_FI_X_JMS), ("en-FK-x-a1", &AR_KM_X_A1), ("en-FK-x-j", &AR_IL_X_J), ("en-FK-x-jm", &AR_IL_X_JM), ("en-FK-x-jms", &AR_IL_X_JMS), ("en-GB-x-a1", &AR_KM_X_A1), ("en-GB-x-j", &AR_IL_X_J), ("en-GB-x-jm", &AR_IL_X_JM), ("en-GB-x-jms", &AR_IL_X_JMS), ("en-GG-x-a1", &AR_KM_X_A1), ("en-GG-x-j", &AR_IL_X_J), ("en-GG-x-jm", &AR_IL_X_JM), ("en-GG-x-jms", &AR_IL_X_JMS), ("en-GI-x-a1", &AR_KM_X_A1), ("en-GI-x-j", &AR_IL_X_J), ("en-GI-x-jm", &AR_IL_X_JM), ("en-GI-x-jms", &AR_IL_X_JMS), ("en-ID-x-a1", &DA_X_A1), ("en-ID-x-j", &AR_IL_X_J), ("en-ID-x-jm", &DA_X_JM), ("en-ID-x-jms", &DA_X_JMS), ("en-IE-x-a1", &AR_KM_X_A1), ("en-IE-x-j", &AR_IL_X_J), ("en-IE-x-jm", &AR_IL_X_JM), ("en-IE-x-jms", &AR_IL_X_JMS), ("en-IL-x-a1", &AR_IL_X_A1), ("en-IL-x-j", &BS_X_J), ("en-IL-x-jm", &CA_X_JM), ("en-IL-x-jms", &CA_X_JMS), ("en-IM-x-a1", &AR_KM_X_A1), ("en-IM-x-j", &AR_IL_X_J), ("en-IM-x-jm", &AR_IL_X_JM), ("en-IM-x-jms", &AR_IL_X_JMS), ("en-IO-x-a1", &AR_KM_X_A1), ("en-IO-x-j", &AR_IL_X_J), ("en-IO-x-jm", &AR_IL_X_JM), ("en-IO-x-jms", &AR_IL_X_JMS), ("en-JE-x-a1", &AR_KM_X_A1), ("en-JE-x-j", &AR_IL_X_J), ("en-JE-x-jm", &AR_IL_X_JM), ("en-JE-x-jms", &AR_IL_X_JMS), ("en-KE-x-a1", &AR_KM_X_A1), ("en-KE-x-j", &AR_IL_X_J), ("en-KE-x-jm", &AR_IL_X_JM), ("en-KE-x-jms", &AR_IL_X_JMS), ("en-MG-x-a1", &AR_KM_X_A1), ("en-MG-x-j", &AR_IL_X_J), ("en-MG-x-jm", &AR_IL_X_JM), ("en-MG-x-jms", &AR_IL_X_JMS), ("en-MS-x-a1", &AR_KM_X_A1), ("en-MS-x-j", &AR_IL_X_J), ("en-MS-x-jm", &AR_IL_X_JM), ("en-MS-x-jms", &AR_IL_X_JMS), ("en-MT-x-a1", &AR_KM_X_A1), ("en-MT-x-j", &AR_IL_X_J), ("en-MT-x-jm", &AR_IL_X_JM), ("en-MT-x-jms", &AR_IL_X_JMS), ("en-MU-x-a1", &AR_KM_X_A1), ("en-MU-x-j", &AR_IL_X_J), ("en-MU-x-jm", &AR_IL_X_JM), ("en-MU-x-jms", &AR_IL_X_JMS), ("en-MV-x-a1", &AR_KM_X_A1), ("en-MV-x-j", &AR_IL_X_J), ("en-MV-x-jm", &AR_IL_X_JM), ("en-MV-x-jms", &AR_IL_X_JMS), ("en-NF-x-a1", &AR_KM_X_A1), ("en-NF-x-j", &AR_IL_X_J), ("en-NF-x-jm", &AR_IL_X_JM), ("en-NF-x-jms", &AR_IL_X_JMS), ("en-NG-x-a1", &AR_KM_X_A1), ("en-NG-x-j", &AR_IL_X_J), ("en-NG-x-jm", &AR_IL_X_JM), ("en-NG-x-jms", &AR_IL_X_JMS), ("en-NR-x-a1", &AR_KM_X_A1), ("en-NR-x-j", &AR_IL_X_J), ("en-NR-x-jm", &AR_IL_X_JM), ("en-NR-x-jms", &AR_IL_X_JMS), ("en-NU-x-a1", &AR_KM_X_A1), ("en-NU-x-j", &AR_IL_X_J), ("en-NU-x-jm", &AR_IL_X_JM), ("en-NU-x-jms", &AR_IL_X_JMS), ("en-PN-x-a1", &AR_KM_X_A1), ("en-PN-x-j", &AR_IL_X_J), ("en-PN-x-jm", &AR_IL_X_JM), ("en-PN-x-jms", &AR_IL_X_JMS), ("en-RW-x-a1", &AR_KM_X_A1), ("en-RW-x-j", &AR_IL_X_J), ("en-RW-x-jm", &AR_IL_X_JM), ("en-RW-x-jms", &AR_IL_X_JMS), ("en-SC-x-a1", &AR_KM_X_A1), ("en-SC-x-j", &AR_IL_X_J), ("en-SC-x-jm", &AR_IL_X_JM), ("en-SC-x-jms", &AR_IL_X_JMS), ("en-SH-x-a1", &AR_KM_X_A1), ("en-SH-x-j", &AR_IL_X_J), ("en-SH-x-jm", &AR_IL_X_JM), ("en-SH-x-jms", &AR_IL_X_JMS), ("en-SX-x-a1", &AR_KM_X_A1), ("en-SX-x-j", &AR_IL_X_J), ("en-SX-x-jm", &AR_IL_X_JM), ("en-SX-x-jms", &AR_IL_X_JMS), ("en-TK-x-a1", &AR_KM_X_A1), ("en-TK-x-j", &AR_IL_X_J), ("en-TK-x-jm", &AR_IL_X_JM), ("en-TK-x-jms", &AR_IL_X_JMS), ("en-TV-x-a1", &AR_KM_X_A1), ("en-TV-x-j", &AR_IL_X_J), ("en-TV-x-jm", &AR_IL_X_JM), ("en-TV-x-jms", &AR_IL_X_JMS), ("en-TZ-x-a1", &AR_KM_X_A1), ("en-TZ-x-j", &AR_IL_X_J), ("en-TZ-x-jm", &AR_IL_X_JM), ("en-TZ-x-jms", &AR_IL_X_JMS), ("en-UG-x-a1", &AR_KM_X_A1), ("en-UG-x-j", &AR_IL_X_J), ("en-UG-x-jm", &AR_IL_X_JM), ("en-UG-x-jms", &AR_IL_X_JMS), ("en-ZA-x-a1", &AR_KM_X_A1), ("en-ZA-x-j", &AR_IL_X_J), ("en-ZA-x-jm", &AR_IL_X_JM), ("en-ZA-x-jms", &AR_IL_X_JMS), ("en-ZW-x-a1", &AR_KM_X_A1), ("en-ZW-x-j", &AR_IL_X_J), ("en-ZW-x-jm", &AR_IL_X_JM), ("en-ZW-x-jms", &AR_IL_X_JMS), ("en-x-a1", &AF_NA_X_A1), ("en-x-j", &AF_NA_X_J), ("en-x-jm", &EL_X_JM), ("en-x-jms", &EL_X_JMS), ("es-419-x-a1", &AF_NA_X_A1), ("es-419-x-j", &AF_NA_X_J), ("es-419-x-jm", &EL_X_JM), ("es-419-x-jms", &EL_X_JMS), ("es-BR-x-a1", &AR_KM_X_A1), ("es-BR-x-j", &AR_IL_X_J), ("es-BR-x-jm", &AR_IL_X_JM), ("es-BR-x-jms", &AR_IL_X_JMS), ("es-BZ-x-a1", &AR_KM_X_A1), ("es-BZ-x-j", &AR_IL_X_J), ("es-BZ-x-jm", &AR_IL_X_JM), ("es-BZ-x-jms", &AR_IL_X_JMS), ("es-MX-x-j", &ES_MX_X_J), ("es-MX-x-jm", &AF_NA_X_JM), ("es-MX-x-jms", &AF_NA_X_JMS), ("es-PH-x-a1", &AF_NA_X_A1), ("es-PH-x-j", &AF_NA_X_J), ("es-PH-x-jm", &EL_X_JM), ("es-PH-x-jms", &EL_X_JMS), ("es-x-a1", &AR_IL_X_A1), ("et-x-jms", &CA_X_JMS), ("fa-x-a1", &AR_IL_X_A1), ("fa-x-j", &BS_X_J), ("fa-x-jm", &CA_X_JM), ("fa-x-jms", &CA_X_JMS), ("ff-Adlm-GH-x-a1", &AM_X_A1), ("ff-Adlm-GH-x-j", &AM_X_J), ("ff-Adlm-GH-x-jm", &AM_X_JM), ("ff-Adlm-GH-x-jms", &AM_X_JMS), ("ff-Adlm-GM-x-a1", &AM_X_A1), ("ff-Adlm-GM-x-j", &AM_X_J), ("ff-Adlm-GM-x-jm", &AM_X_JM), ("ff-Adlm-GM-x-jms", &AM_X_JMS), ("ff-Adlm-LR-x-a1", &AM_X_A1), ("ff-Adlm-LR-x-j", &AM_X_J), ("ff-Adlm-LR-x-jm", &AM_X_JM), ("ff-Adlm-LR-x-jms", &AM_X_JMS), ("ff-Adlm-MR-x-a1", &AM_X_A1), ("ff-Adlm-MR-x-j", &AM_X_J), ("ff-Adlm-MR-x-jm", &AM_X_JM), ("ff-Adlm-MR-x-jms", &AM_X_JMS), ("ff-Adlm-SL-x-a1", &AM_X_A1), ("ff-Adlm-SL-x-j", &AM_X_J), ("ff-Adlm-SL-x-jm", &AM_X_JM), ("ff-Adlm-SL-x-jms", &AM_X_JMS), ("fi-x-a1", &EN_FI_X_A1), ("fi-x-j", &BS_X_J), ("fi-x-jm", &EN_FI_X_JM), ("fi-x-jms", &EN_FI_X_JMS), ("fil-x-a1", &AF_NA_X_A1), ("fil-x-j", &AF_NA_X_J), ("fil-x-jm", &EL_X_JM), ("fil-x-jms", &EL_X_JMS), ("fr-CA-x-a1", &FR_CA_X_A1), ("fr-CA-x-j", &FR_CA_X_J), ("fr-CA-x-jm", &FR_CA_X_JM), ("fr-CA-x-jms", &FR_CA_X_JMS), ("fr-DJ-x-a1", &AF_NA_X_A1), ("fr-DJ-x-j", &AF_NA_X_J), ("fr-DJ-x-jm", &EL_X_JM), ("fr-DJ-x-jms", &EL_X_JMS), ("fr-DZ-x-a1", &AF_NA_X_A1), ("fr-DZ-x-j", &AF_NA_X_J), ("fr-DZ-x-jm", &EL_X_JM), ("fr-DZ-x-jms", &EL_X_JMS), ("fr-MR-x-a1", &AF_NA_X_A1), ("fr-MR-x-j", &AF_NA_X_J), ("fr-MR-x-jm", &EL_X_JM), ("fr-MR-x-jms", &EL_X_JMS), ("fr-SY-x-a1", &AF_NA_X_A1), ("fr-SY-x-j", &AF_NA_X_J), ("fr-SY-x-jm", &EL_X_JM), ("fr-SY-x-jms", &EL_X_JMS), ("fr-TD-x-a1", &AF_NA_X_A1), ("fr-TD-x-j", &AF_NA_X_J), ("fr-TD-x-jm", &EL_X_JM), ("fr-TD-x-jms", &EL_X_JMS), ("fr-TN-x-a1", &AF_NA_X_A1), ("fr-TN-x-j", &AF_NA_X_J), ("fr-TN-x-jm", &EL_X_JM), ("fr-TN-x-jms", &EL_X_JMS), ("fr-VU-x-a1", &AF_NA_X_A1), ("fr-VU-x-j", &AF_NA_X_J), ("fr-VU-x-jm", &EL_X_JM), ("fr-VU-x-jms", &EL_X_JMS), ("gu-x-a1", &GU_X_A1), ("gu-x-j", &AM_X_J), ("gu-x-jm", &GU_X_JM), ("gu-x-jms", &GU_X_JMS), ("ha-GH-x-a1", &AF_NA_X_A1), ("ha-GH-x-j", &AM_X_J), ("ha-GH-x-jm", &AM_X_JM), ("ha-GH-x-jms", &AM_X_JMS), ("he-x-a1", &AR_IL_X_A1), ("he-x-j", &BS_X_J), ("he-x-jm", &CA_X_JM), ("he-x-jms", &CA_X_JMS), ("hi-x-a1", &AM_X_A1), ("hi-x-j", &AM_X_J), ("hi-x-jm", &AM_X_JM), ("hi-x-jms", &AM_X_JMS), ("hsb-x-a1", &HSB_X_A1), ("hsb-x-j", &DSB_X_J), ("hu-x-a1", &AR_IL_X_A1), ("hu-x-j", &BS_X_J), ("hu-x-jm", &CA_X_JM), ("hu-x-jms", &CA_X_JMS), ("hy-x-j", &BS_X_J), ("hy-x-jm", &CA_X_JM), ("hy-x-jms", &CA_X_JMS), ("id-x-a1", &DA_X_A1), ("id-x-jm", &DA_X_JM), ("id-x-jms", &DA_X_JMS), ("ja-x-a1", &AR_IL_X_A1), ("ja-x-j", &JA_X_J), ("ja-x-jm", &CA_X_JM), ("ja-x-jms", &CA_X_JMS), ("km-x-a1", &AM_X_A1), ("km-x-j", &AM_X_J), ("km-x-jm", &AM_X_JM), ("km-x-jms", &AM_X_JMS), ("kn-x-a1", &GU_X_A1), ("kn-x-j", &AM_X_J), ("kn-x-jm", &AM_X_JM), ("kn-x-jms", &AM_X_JMS), ("ko-CN-x-a1", &AR_KM_X_A1), ("ko-CN-x-j", &KO_CN_X_J), ("ko-CN-x-jm", &AR_IL_X_JM), ("ko-CN-x-jms", &AR_IL_X_JMS), ("ko-x-a1", &KO_X_A1), ("ko-x-j", &KO_X_J), ("ko-x-jm", &BRX_X_JM), ("ko-x-jms", &KO_X_JMS), ("kok-x-a1", &AM_X_A1), ("kok-x-j", &AM_X_J), ("kok-x-jm", &AM_X_JM), ("kok-x-jms", &AM_X_JMS), ("ks-Deva-x-a1", &KO_X_A1), ("ks-Deva-x-j", &AM_X_J), ("ks-Deva-x-jm", &AM_X_JM), ("ks-Deva-x-jms", &AM_X_JMS), ("ks-x-a1", &AM_X_A1), ("ks-x-j", &AM_X_J), ("ks-x-jm", &AM_X_JM), ("ks-x-jms", &AM_X_JMS), ("kxv-x-a1", &AF_NA_X_A1), ("kxv-x-j", &AM_X_J), ("kxv-x-jm", &AM_X_JM), ("kxv-x-jms", &AM_X_JMS), ("lo-x-a1", &AR_IL_X_A1), ("mai-x-a1", &AM_X_A1), ("mai-x-j", &AM_X_J), ("mai-x-jm", &AM_X_JM), ("mai-x-jms", &AM_X_JMS), ("mi-x-a1", &AF_NA_X_A1), ("mi-x-j", &AM_X_J), ("mi-x-jm", &AM_X_JM), ("mi-x-jms", &AM_X_JMS), ("mk-x-j", &BS_X_J), ("mk-x-jm", &CA_X_JM), ("mk-x-jms", &CA_X_JMS), ("ml-x-a1", &AM_X_A1), ("ml-x-j", &AM_X_J), ("ml-x-jm", &AM_X_JM), ("ml-x-jms", &AM_X_JMS), ("mn-x-j", &MN_X_J), ("mni-x-a1", &AM_X_A1), ("mni-x-j", &AM_X_J), ("mni-x-jm", &AM_X_JM), ("mni-x-jms", &AM_X_JMS), ("mr-x-a1", &AM_X_A1), ("mr-x-j", &AM_X_J), ("mr-x-jm", &AM_X_JM), ("mr-x-jms", &AM_X_JMS), ("ms-ID-x-a1", &DA_X_A1), ("ms-ID-x-j", &AR_IL_X_J), ("ms-ID-x-jm", &AR_IL_X_JM), ("ms-ID-x-jms", &AR_IL_X_JMS), ("ms-x-a1", &AF_NA_X_A1), ("ms-x-j", &AF_NA_X_J), ("ms-x-jm", &EL_X_JM), ("ms-x-jms", &EL_X_JMS), ("my-x-a1", &AR_IL_X_A1), ("ne-IN-x-a1", &AM_X_A1), ("ne-IN-x-j", &AM_X_J), ("ne-IN-x-jm", &AM_X_JM), ("ne-IN-x-jms", &AM_X_JMS), ("or-x-a1", &AM_X_A1), ("or-x-j", &AM_X_J), ("or-x-jm", &AM_X_JM), ("or-x-jms", &AM_X_JMS), ("pa-x-a1", &AM_X_A1), ("pa-x-j", &AM_X_J), ("pa-x-jm", &AM_X_JM), ("pa-x-jms", &AM_X_JMS), ("ps-PK-x-a1", &AM_X_A1), ("ps-PK-x-j", &AM_X_J), ("ps-PK-x-jm", &AM_X_JM), ("ps-PK-x-jms", &AM_X_JMS), ("ps-x-a1", &AR_IL_X_A1), ("ps-x-j", &BS_X_J), ("ps-x-jm", &CA_X_JM), ("ps-x-jms", &CA_X_JMS), ("pt-MO-x-a1", &AF_NA_X_A1), ("pt-MO-x-j", &AF_NA_X_J), ("pt-MO-x-jm", &EL_X_JM), ("pt-MO-x-jms", &EL_X_JMS), ("qu-x-a1", &AF_NA_X_A1), ("qu-x-j", &AF_NA_X_J), ("qu-x-jm", &EL_X_JM), ("qu-x-jms", &EL_X_JMS), ("raj-x-a1", &AM_X_A1), ("raj-x-j", &AM_X_J), ("raj-x-jm", &AM_X_JM), ("raj-x-jms", &AM_X_JMS), ("sa-x-a1", &AM_X_A1), ("sa-x-j", &AM_X_J), ("sa-x-jm", &AM_X_JM), ("sa-x-jms", &AM_X_JMS), ("sat-x-a1", &AM_X_A1), ("sat-x-j", &AM_X_J), ("sat-x-jm", &AM_X_JM), ("sat-x-jms", &AM_X_JMS), ("sd-Deva-x-a1", &AM_X_A1), ("sd-Deva-x-j", &AM_X_J), ("sd-Deva-x-jm", &AM_X_JM), ("sd-Deva-x-jms", &AM_X_JMS), ("sd-x-a1", &AM_X_A1), ("sd-x-j", &AM_X_J), ("sd-x-jm", &AM_X_JM), ("sd-x-jms", &AM_X_JMS), ("si-x-a1", &DA_X_A1), ("sk-x-a1", &AR_IL_X_A1), ("sk-x-j", &BS_X_J), ("sk-x-jm", &CA_X_JM), ("sk-x-jms", &CA_X_JMS), ("so-KE-x-a1", &AR_KM_X_A1), ("so-KE-x-j", &AR_IL_X_J), ("so-KE-x-jm", &AR_IL_X_JM), ("so-KE-x-jms", &AR_IL_X_JMS), ("so-x-a1", &AF_NA_X_A1), ("so-x-j", &AM_X_J), ("so-x-jm", &AM_X_JM), ("so-x-jms", &AM_X_JMS), ("sq-MK-x-a1", &AR_KM_X_A1), ("sq-MK-x-j", &AR_IL_X_J), ("sq-MK-x-jm", &AR_IL_X_JM), ("sq-MK-x-jms", &AR_IL_X_JMS), ("sq-XK-x-a1", &AR_KM_X_A1), ("sq-XK-x-j", &AR_IL_X_J), ("sq-XK-x-jm", &AR_IL_X_JM), ("sq-XK-x-jms", &AR_IL_X_JMS), ("sq-x-a1", &AF_NA_X_A1), ("sq-x-j", &AF_NA_X_J), ("sq-x-jm", &EL_X_JM), ("sq-x-jms", &EL_X_JMS), ("su-x-a1", &EN_FI_X_A1), ("syr-x-a1", &AM_X_A1), ("syr-x-j", &AM_X_J), ("syr-x-jm", &AM_X_JM), ("syr-x-jms", &AM_X_JMS), ("ta-LK-x-a1", &AR_KM_X_A1), ("ta-LK-x-j", &AR_IL_X_J), ("ta-LK-x-jm", &AR_IL_X_JM), ("ta-LK-x-jms", &AR_IL_X_JMS), ("ta-x-a1", &AM_X_A1), ("ta-x-j", &AM_X_J), ("ta-x-jm", &AM_X_JM), ("ta-x-jms", &AM_X_JMS), ("te-x-a1", &AM_X_A1), ("te-x-j", &AM_X_J), ("te-x-jm", &AM_X_JM), ("te-x-jms", &AM_X_JMS), ("ti-x-a1", &AM_X_A1), ("ti-x-j", &AM_X_J), ("ti-x-jm", &AM_X_JM), ("ti-x-jms", &AM_X_JMS), ("to-x-a1", &AF_NA_X_A1), ("to-x-j", &AF_NA_X_J), ("to-x-jm", &EL_X_JM), ("to-x-jms", &EL_X_JMS), ("tr-CY-x-a1", &AF_NA_X_A1), ("tr-CY-x-j", &AF_NA_X_J), ("tr-CY-x-jm", &EL_X_JM), ("tr-CY-x-jms", &EL_X_JMS), ("tt-x-a1", &AR_IL_X_A1), ("und-x-a1", &AR_KM_X_A1), ("und-x-j", &AR_IL_X_J), ("und-x-jm", &AR_IL_X_JM), ("und-x-jms", &AR_IL_X_JMS), ("ur-x-a1", &AM_X_A1), ("ur-x-j", &AM_X_J), ("ur-x-jm", &AM_X_JM), ("ur-x-jms", &AM_X_JMS), ("vi-x-j", &VI_X_J), ("xnr-x-a1", &AM_X_A1), ("xnr-x-j", &AM_X_J), ("xnr-x-jm", &AM_X_JM), ("xnr-x-jms", &AM_X_JMS), ("yo-x-a1", &YO_X_A1), ("yrl-CO-x-a1", &AF_NA_X_A1), ("yrl-CO-x-j", &AF_NA_X_J), ("yrl-CO-x-jm", &EL_X_JM), ("yrl-CO-x-jms", &EL_X_JMS), ("yrl-VE-x-a1", &AF_NA_X_A1), ("yrl-VE-x-j", &AF_NA_X_J), ("yrl-VE-x-jm", &EL_X_JM), ("yrl-VE-x-jms", &EL_X_JMS), ("yue-Hans-x-j", &YUE_HANS_X_J), ("yue-x-a1", &YUE_X_A1), ("yue-x-j", &YUE_X_J), ("yue-x-jm", &YUE_X_JM), ("yue-x-jms", &YUE_X_JMS), ("zh-HK-x-a1", &YUE_X_A1), ("zh-Hant-x-a1", &ZH_HANT_X_A1), ("zh-Hant-x-j", &ZH_HANT_X_J), ("zh-Hant-x-jm", &ZH_HANT_X_JM), ("zh-Hant-x-jms", &ZH_HANT_X_JMS), ("zh-MO-x-a1", &YUE_X_A1), ("zh-SG-x-a1", &YUE_X_A1), ("zh-SG-x-j", &ZH_SG_X_J), ("zh-SG-x-jm", &YUE_X_JM), ("zh-SG-x-jms", &YUE_X_JMS), ("zh-x-j", &YUE_HANS_X_J)];
                fn lookup(req: icu_provider::DataRequest) -> Option<&'static <icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DynamicDataMarker>::Yokeable> {
                    DATA.binary_search_by(|(k, _)| req.legacy_cmp(k.as_bytes()).reverse()).map(|i| (*unsafe { DATA.get_unchecked(i) }).1).ok()
                }
                let mut metadata = icu_provider::DataResponseMetadata::default();
                let payload = if let Some(payload) = lookup(req) {
                    payload
                } else {
                    const FALLBACKER: icu::locale::fallback::LocaleFallbackerWithConfig<'static> = icu::locale::fallback::LocaleFallbacker::new().for_config(<icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DataMarker>::INFO.fallback_config);
                    let mut fallback_iterator = FALLBACKER.fallback_for(req.locale.clone());
                    loop {
                        if let Some(payload) = lookup(icu_provider::DataRequest { locale: fallback_iterator.get(), ..req }) {
                            metadata.locale = Some(fallback_iterator.take());
                            break payload;
                        }
                        if fallback_iterator.get().is_und() {
                            return Err(icu_provider::DataErrorKind::MissingLocale.with_req(<icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker as icu_provider::DataMarker>::INFO, req));
                        }
                        fallback_iterator.step();
                    }
                };
                Ok(icu_provider::DataResponse { payload: Some(icu_provider::DataPayload::from_static_ref(payload)), metadata })
            }
        }
    };
}
/// Implement `IterableDataProvider<TimeNeoSkeletonPatternsV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `DatagenDriver` for this marker.
#[doc(hidden)]
#[macro_export]
macro_rules! __impliterable_datetime_patterns_time_skeleton_v1 {
    ($ provider : ty) => {
        #[clippy::msrv = "1.70"]
        impl icu_provider::datagen::IterableDataProvider<icu::datetime::provider::neo::TimeNeoSkeletonPatternsV1Marker> for $provider {
            fn supported_requests(&self) -> Result<std::collections::HashSet<(icu_provider::DataLocale, icu_provider::DataMarkerAttributes)>, icu_provider::DataError> {
                Ok(["af-NA-x-a1", "af-NA-x-j", "af-NA-x-jm", "af-NA-x-jms", "am-x-a1", "am-x-j", "am-x-jm", "am-x-jms", "ar-IL-x-a1", "ar-IL-x-j", "ar-IL-x-jm", "ar-IL-x-jms", "ar-KM-x-a1", "ar-KM-x-j", "ar-KM-x-jm", "ar-KM-x-jms", "ar-MA-x-a1", "ar-MA-x-j", "ar-MA-x-jm", "ar-MA-x-jms", "ar-x-a1", "ar-x-j", "ar-x-jm", "ar-x-jms", "as-x-a1", "as-x-j", "as-x-jm", "as-x-jms", "bg-x-a1", "bg-x-j", "bg-x-jm", "bg-x-jms", "bgc-x-a1", "bgc-x-j", "bgc-x-jm", "bgc-x-jms", "bho-x-a1", "bho-x-j", "bho-x-jm", "bho-x-jms", "bn-x-a1", "bn-x-j", "bn-x-jm", "bn-x-jms", "brx-x-a1", "brx-x-j", "brx-x-jm", "brx-x-jms", "bs-x-j", "ca-x-a1", "ca-x-j", "ca-x-jm", "ca-x-jms", "ceb-x-a1", "ceb-x-j", "ceb-x-jm", "ceb-x-jms", "chr-x-a1", "chr-x-j", "chr-x-jm", "chr-x-jms", "cs-x-a1", "cs-x-j", "cs-x-jm", "cs-x-jms", "da-x-a1", "da-x-jm", "da-x-jms", "de-x-j", "doi-x-a1", "doi-x-j", "doi-x-jm", "doi-x-jms", "dsb-x-a1", "dsb-x-j", "el-x-a1", "el-x-j", "el-x-jm", "el-x-jms", "en-150-x-a1", "en-150-x-j", "en-150-x-jm", "en-150-x-jms", "en-AI-x-a1", "en-AI-x-j", "en-AI-x-jm", "en-AI-x-jms", "en-BI-x-a1", "en-BI-x-j", "en-BI-x-jm", "en-BI-x-jms", "en-BW-x-a1", "en-BW-x-j", "en-BW-x-jm", "en-BW-x-jms", "en-BZ-x-a1", "en-BZ-x-j", "en-BZ-x-jm", "en-BZ-x-jms", "en-CC-x-a1", "en-CC-x-j", "en-CC-x-jm", "en-CC-x-jms", "en-CK-x-a1", "en-CK-x-j", "en-CK-x-jm", "en-CK-x-jms", "en-CM-x-a1", "en-CM-x-j", "en-CM-x-jm", "en-CM-x-jms", "en-CX-x-a1", "en-CX-x-j", "en-CX-x-jm", "en-CX-x-jms", "en-DG-x-a1", "en-DG-x-j", "en-DG-x-jm", "en-DG-x-jms", "en-DK-x-a1", "en-DK-x-jm", "en-DK-x-jms", "en-FI-x-a1", "en-FI-x-jm", "en-FI-x-jms", "en-FK-x-a1", "en-FK-x-j", "en-FK-x-jm", "en-FK-x-jms", "en-GB-x-a1", "en-GB-x-j", "en-GB-x-jm", "en-GB-x-jms", "en-GG-x-a1", "en-GG-x-j", "en-GG-x-jm", "en-GG-x-jms", "en-GI-x-a1", "en-GI-x-j", "en-GI-x-jm", "en-GI-x-jms", "en-ID-x-a1", "en-ID-x-j", "en-ID-x-jm", "en-ID-x-jms", "en-IE-x-a1", "en-IE-x-j", "en-IE-x-jm", "en-IE-x-jms", "en-IL-x-a1", "en-IL-x-j", "en-IL-x-jm", "en-IL-x-jms", "en-IM-x-a1", "en-IM-x-j", "en-IM-x-jm", "en-IM-x-jms", "en-IO-x-a1", "en-IO-x-j", "en-IO-x-jm", "en-IO-x-jms", "en-JE-x-a1", "en-JE-x-j", "en-JE-x-jm", "en-JE-x-jms", "en-KE-x-a1", "en-KE-x-j", "en-KE-x-jm", "en-KE-x-jms", "en-MG-x-a1", "en-MG-x-j", "en-MG-x-jm", "en-MG-x-jms", "en-MS-x-a1", "en-MS-x-j", "en-MS-x-jm", "en-MS-x-jms", "en-MT-x-a1", "en-MT-x-j", "en-MT-x-jm", "en-MT-x-jms", "en-MU-x-a1", "en-MU-x-j", "en-MU-x-jm", "en-MU-x-jms", "en-MV-x-a1", "en-MV-x-j", "en-MV-x-jm", "en-MV-x-jms", "en-NF-x-a1", "en-NF-x-j", "en-NF-x-jm", "en-NF-x-jms", "en-NG-x-a1", "en-NG-x-j", "en-NG-x-jm", "en-NG-x-jms", "en-NR-x-a1", "en-NR-x-j", "en-NR-x-jm", "en-NR-x-jms", "en-NU-x-a1", "en-NU-x-j", "en-NU-x-jm", "en-NU-x-jms", "en-PN-x-a1", "en-PN-x-j", "en-PN-x-jm", "en-PN-x-jms", "en-RW-x-a1", "en-RW-x-j", "en-RW-x-jm", "en-RW-x-jms", "en-SC-x-a1", "en-SC-x-j", "en-SC-x-jm", "en-SC-x-jms", "en-SH-x-a1", "en-SH-x-j", "en-SH-x-jm", "en-SH-x-jms", "en-SX-x-a1", "en-SX-x-j", "en-SX-x-jm", "en-SX-x-jms", "en-TK-x-a1", "en-TK-x-j", "en-TK-x-jm", "en-TK-x-jms", "en-TV-x-a1", "en-TV-x-j", "en-TV-x-jm", "en-TV-x-jms", "en-TZ-x-a1", "en-TZ-x-j", "en-TZ-x-jm", "en-TZ-x-jms", "en-UG-x-a1", "en-UG-x-j", "en-UG-x-jm", "en-UG-x-jms", "en-ZA-x-a1", "en-ZA-x-j", "en-ZA-x-jm", "en-ZA-x-jms", "en-ZW-x-a1", "en-ZW-x-j", "en-ZW-x-jm", "en-ZW-x-jms", "en-x-a1", "en-x-j", "en-x-jm", "en-x-jms", "es-419-x-a1", "es-419-x-j", "es-419-x-jm", "es-419-x-jms", "es-BR-x-a1", "es-BR-x-j", "es-BR-x-jm", "es-BR-x-jms", "es-BZ-x-a1", "es-BZ-x-j", "es-BZ-x-jm", "es-BZ-x-jms", "es-MX-x-j", "es-MX-x-jm", "es-MX-x-jms", "es-PH-x-a1", "es-PH-x-j", "es-PH-x-jm", "es-PH-x-jms", "es-x-a1", "et-x-jms", "fa-x-a1", "fa-x-j", "fa-x-jm", "fa-x-jms", "ff-Adlm-GH-x-a1", "ff-Adlm-GH-x-j", "ff-Adlm-GH-x-jm", "ff-Adlm-GH-x-jms", "ff-Adlm-GM-x-a1", "ff-Adlm-GM-x-j", "ff-Adlm-GM-x-jm", "ff-Adlm-GM-x-jms", "ff-Adlm-LR-x-a1", "ff-Adlm-LR-x-j", "ff-Adlm-LR-x-jm", "ff-Adlm-LR-x-jms", "ff-Adlm-MR-x-a1", "ff-Adlm-MR-x-j", "ff-Adlm-MR-x-jm", "ff-Adlm-MR-x-jms", "ff-Adlm-SL-x-a1", "ff-Adlm-SL-x-j", "ff-Adlm-SL-x-jm", "ff-Adlm-SL-x-jms", "fi-x-a1", "fi-x-j", "fi-x-jm", "fi-x-jms", "fil-x-a1", "fil-x-j", "fil-x-jm", "fil-x-jms", "fr-CA-x-a1", "fr-CA-x-j", "fr-CA-x-jm", "fr-CA-x-jms", "fr-DJ-x-a1", "fr-DJ-x-j", "fr-DJ-x-jm", "fr-DJ-x-jms", "fr-DZ-x-a1", "fr-DZ-x-j", "fr-DZ-x-jm", "fr-DZ-x-jms", "fr-MR-x-a1", "fr-MR-x-j", "fr-MR-x-jm", "fr-MR-x-jms", "fr-SY-x-a1", "fr-SY-x-j", "fr-SY-x-jm", "fr-SY-x-jms", "fr-TD-x-a1", "fr-TD-x-j", "fr-TD-x-jm", "fr-TD-x-jms", "fr-TN-x-a1", "fr-TN-x-j", "fr-TN-x-jm", "fr-TN-x-jms", "fr-VU-x-a1", "fr-VU-x-j", "fr-VU-x-jm", "fr-VU-x-jms", "gu-x-a1", "gu-x-j", "gu-x-jm", "gu-x-jms", "ha-GH-x-a1", "ha-GH-x-j", "ha-GH-x-jm", "ha-GH-x-jms", "he-x-a1", "he-x-j", "he-x-jm", "he-x-jms", "hi-x-a1", "hi-x-j", "hi-x-jm", "hi-x-jms", "hsb-x-a1", "hsb-x-j", "hu-x-a1", "hu-x-j", "hu-x-jm", "hu-x-jms", "hy-x-j", "hy-x-jm", "hy-x-jms", "id-x-a1", "id-x-jm", "id-x-jms", "ja-x-a1", "ja-x-j", "ja-x-jm", "ja-x-jms", "km-x-a1", "km-x-j", "km-x-jm", "km-x-jms", "kn-x-a1", "kn-x-j", "kn-x-jm", "kn-x-jms", "ko-CN-x-a1", "ko-CN-x-j", "ko-CN-x-jm", "ko-CN-x-jms", "ko-x-a1", "ko-x-j", "ko-x-jm", "ko-x-jms", "kok-x-a1", "kok-x-j", "kok-x-jm", "kok-x-jms", "ks-Deva-x-a1", "ks-Deva-x-j", "ks-Deva-x-jm", "ks-Deva-x-jms", "ks-x-a1", "ks-x-j", "ks-x-jm", "ks-x-jms", "kxv-x-a1", "kxv-x-j", "kxv-x-jm", "kxv-x-jms", "lo-x-a1", "mai-x-a1", "mai-x-j", "mai-x-jm", "mai-x-jms", "mi-x-a1", "mi-x-j", "mi-x-jm", "mi-x-jms", "mk-x-j", "mk-x-jm", "mk-x-jms", "ml-x-a1", "ml-x-j", "ml-x-jm", "ml-x-jms", "mn-x-j", "mni-x-a1", "mni-x-j", "mni-x-jm", "mni-x-jms", "mr-x-a1", "mr-x-j", "mr-x-jm", "mr-x-jms", "ms-ID-x-a1", "ms-ID-x-j", "ms-ID-x-jm", "ms-ID-x-jms", "ms-x-a1", "ms-x-j", "ms-x-jm", "ms-x-jms", "my-x-a1", "ne-IN-x-a1", "ne-IN-x-j", "ne-IN-x-jm", "ne-IN-x-jms", "or-x-a1", "or-x-j", "or-x-jm", "or-x-jms", "pa-x-a1", "pa-x-j", "pa-x-jm", "pa-x-jms", "ps-PK-x-a1", "ps-PK-x-j", "ps-PK-x-jm", "ps-PK-x-jms", "ps-x-a1", "ps-x-j", "ps-x-jm", "ps-x-jms", "pt-MO-x-a1", "pt-MO-x-j", "pt-MO-x-jm", "pt-MO-x-jms", "qu-x-a1", "qu-x-j", "qu-x-jm", "qu-x-jms", "raj-x-a1", "raj-x-j", "raj-x-jm", "raj-x-jms", "sa-x-a1", "sa-x-j", "sa-x-jm", "sa-x-jms", "sat-x-a1", "sat-x-j", "sat-x-jm", "sat-x-jms", "sd-Deva-x-a1", "sd-Deva-x-j", "sd-Deva-x-jm", "sd-Deva-x-jms", "sd-x-a1", "sd-x-j", "sd-x-jm", "sd-x-jms", "si-x-a1", "sk-x-a1", "sk-x-j", "sk-x-jm", "sk-x-jms", "so-KE-x-a1", "so-KE-x-j", "so-KE-x-jm", "so-KE-x-jms", "so-x-a1", "so-x-j", "so-x-jm", "so-x-jms", "sq-MK-x-a1", "sq-MK-x-j", "sq-MK-x-jm", "sq-MK-x-jms", "sq-XK-x-a1", "sq-XK-x-j", "sq-XK-x-jm", "sq-XK-x-jms", "sq-x-a1", "sq-x-j", "sq-x-jm", "sq-x-jms", "su-x-a1", "syr-x-a1", "syr-x-j", "syr-x-jm", "syr-x-jms", "ta-LK-x-a1", "ta-LK-x-j", "ta-LK-x-jm", "ta-LK-x-jms", "ta-x-a1", "ta-x-j", "ta-x-jm", "ta-x-jms", "te-x-a1", "te-x-j", "te-x-jm", "te-x-jms", "ti-x-a1", "ti-x-j", "ti-x-jm", "ti-x-jms", "to-x-a1", "to-x-j", "to-x-jm", "to-x-jms", "tr-CY-x-a1", "tr-CY-x-j", "tr-CY-x-jm", "tr-CY-x-jms", "tt-x-a1", "und-x-a1", "und-x-j", "und-x-jm", "und-x-jms", "ur-x-a1", "ur-x-j", "ur-x-jm", "ur-x-jms", "vi-x-j", "xnr-x-a1", "xnr-x-j", "xnr-x-jm", "xnr-x-jms", "yo-x-a1", "yrl-CO-x-a1", "yrl-CO-x-j", "yrl-CO-x-jm", "yrl-CO-x-jms", "yrl-VE-x-a1", "yrl-VE-x-j", "yrl-VE-x-jm", "yrl-VE-x-jms", "yue-Hans-x-j", "yue-x-a1", "yue-x-j", "yue-x-jm", "yue-x-jms", "zh-HK-x-a1", "zh-Hant-x-a1", "zh-Hant-x-j", "zh-Hant-x-jm", "zh-Hant-x-jms", "zh-MO-x-a1", "zh-SG-x-a1", "zh-SG-x-j", "zh-SG-x-jm", "zh-SG-x-jms", "zh-x-j"].into_iter().filter_map(icu_provider::DataRequest::legacy_decode).collect())
            }
        }
    };
}
