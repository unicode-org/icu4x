// @generated
/// Implement `DataProvider<IndianYearNamesV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_datetime_symbols_indian_years_v1 {
    ($ provider : ty) => {
        #[clippy::msrv = "1.70"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.70"]
        impl icu_provider::DataProvider<icu::datetime::provider::neo::IndianYearNamesV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::datetime::provider::neo::IndianYearNamesV1Marker>, icu_provider::DataError> {
                static FY_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0SAKA") })
                });
                static ES_419_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0Saka") })
                });
                static FI_X_5: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0Saka-ajanlaskua") })
                });
                static SV_X_5: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0Saka-eran") })
                });
                static FR_X_5: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xC3\xA8re Saka") })
                });
                static CS_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xC5\xA0aka") })
                });
                static EL_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xCE\xA3\xCE\xAC\xCE\xBA\xCE\xB1") })
                });
                static BS_CYRL_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD0\xA1\xD0\x90\xD0\x9A\xD0\x90") })
                });
                static MK_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD0\xA1\xD0\xB0\xD0\xBA\xD0\xB0") })
                });
                static HE_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD7\xA1\xD7\x90\xD7\xA7\xD7\x90") })
                });
                static FA_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD8\xAA\xD9\x82\xD9\x88\xDB\x8C\xD9\x85 \xD8\xB3\xD8\xA7\xDA\xA9\xD8\xA7") })
                });
                static KS_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD8\xB3\xD8\xA7\xDA\xA9\xD8\xA7") })
                });
                static SD_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD8\xB3\xD8\xA7\xDA\xAA\xD8\xA7") })
                });
                static HI_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xA4\xB6\xE0\xA4\x95") })
                });
                static NE_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xA4\xB8\xE0\xA4\xBE\xE0\xA4\x95") })
                });
                static BRX_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xA4\xB8\xE0\xA4\xBE\xE0\xA4\x95\xE0\xA4\xBE") })
                });
                static AS_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xA6\xB6\xE0\xA6\x95") })
                });
                static BN_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xA6\xB8\xE0\xA6\xBE\xE0\xA6\xB2") })
                });
                static PA_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xA8\xB8\xE0\xA8\xBE\xE0\xA8\x95\xE0\xA8\xBE") })
                });
                static GU_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xAA\xB6\xE0\xAA\x95") })
                });
                static GU_X_5: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xAA\xB8\xE0\xAA\xBE\xE0\xAA\x95\xE0\xAA\xBE") })
                });
                static OR_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xAC\xB8\xE0\xAC\xBE\xE0\xAC\x95\xE0\xAC\xBE") })
                });
                static TA_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xAE\x9A\xE0\xAE\xBE\xE0\xAE\x95\xE0\xAE\xBE") })
                });
                static TE_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xB0\xB6\xE0\xB0\x95") })
                });
                static KN_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xB2\xB6\xE0\xB2\x95") })
                });
                static ML_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xB4\xB6\xE0\xB4\x95") })
                });
                static TH_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xB8\xA1.\xE0\xB8\xA8.") })
                });
                static LO_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xBA\xA1.\xE0\xBA\xAA.") })
                });
                static JA_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE3\x82\xB5\xE3\x82\xAB") })
                });
                static YUE_HANS_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE5\x8D\xB0\xE5\xBA\xA6\xE5\x8E\x86") })
                });
                static YUE_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE5\x8D\xB0\xE5\xBA\xA6\xE6\x9B\x86") })
                });
                static FF_ADLM_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xF0\x9E\xA4\x85\xF0\x9E\xA4\xA2\xF0\x9E\xA4\xB3\xF0\x9E\xA4\xA2") })
                });
                static SC_X_5: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0era Saka") })
                });
                static ES_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") })
                });
                static DATA: [(&str, &<icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable); 136usize] = [("as-x-3", &AS_X_3), ("as-x-4", &AS_X_3), ("as-x-5", &AS_X_3), ("bn-x-3", &BN_X_3), ("bn-x-4", &BN_X_3), ("bn-x-5", &BN_X_3), ("brx-x-3", &BRX_X_3), ("brx-x-4", &BRX_X_3), ("brx-x-5", &BRX_X_3), ("bs-Cyrl-x-3", &BS_CYRL_X_3), ("bs-Cyrl-x-4", &BS_CYRL_X_3), ("bs-Cyrl-x-5", &BS_CYRL_X_3), ("cs-x-3", &CS_X_3), ("cs-x-4", &CS_X_3), ("cs-x-5", &CS_X_3), ("el-x-3", &EL_X_3), ("el-x-4", &EL_X_3), ("el-x-5", &EL_X_3), ("es-419-x-3", &ES_419_X_3), ("es-419-x-4", &ES_419_X_3), ("es-419-x-5", &ES_419_X_3), ("es-x-3", &ES_X_3), ("es-x-4", &ES_X_3), ("es-x-5", &ES_X_3), ("fa-x-3", &FA_X_3), ("fa-x-4", &FA_X_3), ("fa-x-5", &FA_X_3), ("ff-Adlm-x-3", &FF_ADLM_X_3), ("ff-Adlm-x-4", &FF_ADLM_X_3), ("ff-Adlm-x-5", &FF_ADLM_X_3), ("fi-x-5", &FI_X_5), ("fr-CA-x-5", &ES_419_X_3), ("fr-x-5", &FR_X_5), ("fy-x-3", &FY_X_3), ("fy-x-4", &FY_X_3), ("fy-x-5", &FY_X_3), ("gu-x-3", &GU_X_3), ("gu-x-4", &GU_X_3), ("gu-x-5", &GU_X_5), ("he-x-3", &HE_X_3), ("he-x-4", &HE_X_3), ("he-x-5", &HE_X_3), ("hi-x-3", &HI_X_3), ("hi-x-4", &HI_X_3), ("hi-x-5", &HI_X_3), ("id-x-3", &FY_X_3), ("id-x-4", &FY_X_3), ("id-x-5", &FY_X_3), ("ja-x-3", &JA_X_3), ("ja-x-4", &JA_X_3), ("ja-x-5", &JA_X_3), ("kn-x-3", &KN_X_3), ("kn-x-4", &KN_X_3), ("kn-x-5", &KN_X_3), ("kok-x-3", &HI_X_3), ("kok-x-4", &HI_X_3), ("kok-x-5", &HI_X_3), ("ks-x-3", &KS_X_3), ("ks-x-4", &KS_X_3), ("ks-x-5", &KS_X_3), ("lo-x-3", &LO_X_3), ("lo-x-4", &LO_X_3), ("lo-x-5", &LO_X_3), ("mai-x-3", &HI_X_3), ("mai-x-4", &HI_X_3), ("mai-x-5", &HI_X_3), ("mk-x-3", &MK_X_3), ("mk-x-4", &MK_X_3), ("mk-x-5", &MK_X_3), ("ml-x-3", &ML_X_3), ("ml-x-4", &ML_X_3), ("ml-x-5", &ML_X_3), ("mr-x-3", &HI_X_3), ("mr-x-4", &HI_X_3), ("mr-x-5", &HI_X_3), ("ne-x-3", &NE_X_3), ("ne-x-4", &NE_X_3), ("ne-x-5", &NE_X_3), ("no-x-3", &ES_X_3), ("no-x-4", &ES_X_3), ("no-x-5", &ES_X_3), ("or-x-3", &OR_X_3), ("or-x-4", &OR_X_3), ("or-x-5", &OR_X_3), ("pa-x-3", &PA_X_3), ("pa-x-4", &PA_X_3), ("pa-x-5", &PA_X_3), ("ps-x-3", &KS_X_3), ("ps-x-4", &KS_X_3), ("ps-x-5", &KS_X_3), ("ru-x-3", &MK_X_3), ("ru-x-4", &MK_X_3), ("ru-x-5", &MK_X_3), ("sc-x-5", &SC_X_5), ("sd-x-3", &SD_X_3), ("sd-x-4", &SD_X_3), ("sd-x-5", &SD_X_3), ("sk-x-3", &CS_X_3), ("sk-x-4", &CS_X_3), ("sk-x-5", &CS_X_3), ("sr-Latn-x-3", &FY_X_3), ("sr-Latn-x-4", &FY_X_3), ("sr-Latn-x-5", &FY_X_3), ("sr-x-3", &BS_CYRL_X_3), ("sr-x-4", &BS_CYRL_X_3), ("sr-x-5", &BS_CYRL_X_3), ("sv-x-3", &FY_X_3), ("sv-x-4", &FY_X_3), ("sv-x-5", &SV_X_5), ("ta-x-3", &TA_X_3), ("ta-x-4", &TA_X_3), ("ta-x-5", &TA_X_3), ("te-x-3", &TE_X_3), ("te-x-4", &TE_X_3), ("te-x-5", &TE_X_3), ("th-x-3", &TH_X_3), ("th-x-4", &TH_X_3), ("th-x-5", &TH_X_3), ("und-x-3", &ES_419_X_3), ("und-x-4", &ES_419_X_3), ("und-x-5", &ES_419_X_3), ("ur-x-3", &KS_X_3), ("ur-x-4", &KS_X_3), ("ur-x-5", &KS_X_3), ("yue-Hans-x-3", &YUE_HANS_X_3), ("yue-Hans-x-4", &YUE_HANS_X_3), ("yue-Hans-x-5", &YUE_HANS_X_3), ("yue-x-3", &YUE_X_3), ("yue-x-4", &YUE_X_3), ("yue-x-5", &YUE_X_3), ("zh-Hant-x-3", &YUE_X_3), ("zh-Hant-x-4", &YUE_X_3), ("zh-Hant-x-5", &YUE_X_3), ("zh-x-3", &YUE_HANS_X_3), ("zh-x-4", &YUE_HANS_X_3), ("zh-x-5", &YUE_HANS_X_3)];
                fn lookup(req: icu_provider::DataRequest) -> Option<&'static <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable> {
                    DATA.binary_search_by(|(k, _)| req.legacy_cmp(k.as_bytes()).reverse()).map(|i| (*unsafe { DATA.get_unchecked(i) }).1).ok()
                }
                let mut metadata = icu_provider::DataResponseMetadata::default();
                let payload = if let Some(payload) = lookup(req) {
                    payload
                } else {
                    const FALLBACKER: icu::locale::fallback::LocaleFallbackerWithConfig<'static> = icu::locale::fallback::LocaleFallbacker::new().for_config(<icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::INFO.fallback_config);
                    let mut fallback_iterator = FALLBACKER.fallback_for(req.locale.clone());
                    loop {
                        if let Some(payload) = lookup(icu_provider::DataRequest { locale: fallback_iterator.get(), ..req }) {
                            metadata.locale = Some(fallback_iterator.take());
                            break payload;
                        }
                        if fallback_iterator.get().is_und() {
                            return Err(icu_provider::DataErrorKind::MissingLocale.with_req(<icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::INFO, req));
                        }
                        fallback_iterator.step();
                    }
                };
                Ok(icu_provider::DataResponse { payload: Some(icu_provider::DataPayload::from_static_ref(payload)), metadata })
            }
        }
    };
}
/// Implement `IterableDataProvider<IndianYearNamesV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `DatagenDriver` for this marker.
#[doc(hidden)]
#[macro_export]
macro_rules! __impliterable_datetime_symbols_indian_years_v1 {
    ($ provider : ty) => {
        #[clippy::msrv = "1.70"]
        impl icu_provider::datagen::IterableDataProvider<icu::datetime::provider::neo::IndianYearNamesV1Marker> for $provider {
            fn supported_requests(&self) -> Result<std::collections::HashSet<(icu_provider::DataLocale, icu_provider::DataMarkerAttributes)>, icu_provider::DataError> {
                Ok(["as-x-3", "as-x-4", "as-x-5", "bn-x-3", "bn-x-4", "bn-x-5", "brx-x-3", "brx-x-4", "brx-x-5", "bs-Cyrl-x-3", "bs-Cyrl-x-4", "bs-Cyrl-x-5", "cs-x-3", "cs-x-4", "cs-x-5", "el-x-3", "el-x-4", "el-x-5", "es-419-x-3", "es-419-x-4", "es-419-x-5", "es-x-3", "es-x-4", "es-x-5", "fa-x-3", "fa-x-4", "fa-x-5", "ff-Adlm-x-3", "ff-Adlm-x-4", "ff-Adlm-x-5", "fi-x-5", "fr-CA-x-5", "fr-x-5", "fy-x-3", "fy-x-4", "fy-x-5", "gu-x-3", "gu-x-4", "gu-x-5", "he-x-3", "he-x-4", "he-x-5", "hi-x-3", "hi-x-4", "hi-x-5", "id-x-3", "id-x-4", "id-x-5", "ja-x-3", "ja-x-4", "ja-x-5", "kn-x-3", "kn-x-4", "kn-x-5", "kok-x-3", "kok-x-4", "kok-x-5", "ks-x-3", "ks-x-4", "ks-x-5", "lo-x-3", "lo-x-4", "lo-x-5", "mai-x-3", "mai-x-4", "mai-x-5", "mk-x-3", "mk-x-4", "mk-x-5", "ml-x-3", "ml-x-4", "ml-x-5", "mr-x-3", "mr-x-4", "mr-x-5", "ne-x-3", "ne-x-4", "ne-x-5", "no-x-3", "no-x-4", "no-x-5", "or-x-3", "or-x-4", "or-x-5", "pa-x-3", "pa-x-4", "pa-x-5", "ps-x-3", "ps-x-4", "ps-x-5", "ru-x-3", "ru-x-4", "ru-x-5", "sc-x-5", "sd-x-3", "sd-x-4", "sd-x-5", "sk-x-3", "sk-x-4", "sk-x-5", "sr-Latn-x-3", "sr-Latn-x-4", "sr-Latn-x-5", "sr-x-3", "sr-x-4", "sr-x-5", "sv-x-3", "sv-x-4", "sv-x-5", "ta-x-3", "ta-x-4", "ta-x-5", "te-x-3", "te-x-4", "te-x-5", "th-x-3", "th-x-4", "th-x-5", "und-x-3", "und-x-4", "und-x-5", "ur-x-3", "ur-x-4", "ur-x-5", "yue-Hans-x-3", "yue-Hans-x-4", "yue-Hans-x-5", "yue-x-3", "yue-x-4", "yue-x-5", "zh-Hant-x-3", "zh-Hant-x-4", "zh-Hant-x-5", "zh-x-3", "zh-x-4", "zh-x-5"].into_iter().filter_map(icu_provider::DataRequest::legacy_decode).collect())
            }
        }
    };
}
