// @generated
/// Implement `DataProvider<PersianMonthNamesV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_persian_month_names_v1_marker {
    ($ provider : ty) => {
        #[clippy::msrv = "1.70"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.70"]
        impl $provider {
            const DATA_PERSIAN_MONTH_NAMES_V1_MARKER: icu_provider_baked::binary_search::Data<icu_provider_baked::binary_search::AttributesAndLocale, icu::datetime::provider::neo::PersianMonthNamesV1Marker> = {
                type S = <icu::datetime::provider::neo::PersianMonthNamesV1Marker as icu_provider::DynamicDataMarker>::Yokeable;
                const _3S_AR: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x0C\0\x1C\0&\0,\x006\0B\0H\0P\0V\0Z\0b\0\xD9\x81\xD8\xB1\xD9\x81\xD8\xB1\xD8\xAF\xD9\x86\xD8\xA3\xD8\xB0\xD8\xB1\xD8\xA8\xD9\x8A\xD9\x87\xD8\xB4\xD8\xAA\xD8\xAE\xD8\xB1\xD8\xAF\xD8\xA7\xD8\xAF\xD8\xAA\xD8\xA7\xD8\xB1\xD9\x85\xD8\xB1\xD8\xAF\xD8\xA7\xD8\xAF\xD8\xB4\xD9\x87\xD8\xB1\xD9\x81\xD8\xA7\xD8\xB1\xD9\x85\xD9\x87\xD8\xB1\xD8\xA2\xD9\x8A\xD8\xA7\xD9\x86\xD8\xA2\xD8\xB0\xD8\xB1\xD8\xAF\xD9\x8A\xD8\xA8\xD9\x87\xD9\x85\xD9\x86\xD8\xA7\xD8\xB3\xD9\x81\xD9\x86\xD8\xAF\xD8\xA7\xD8\xB1") });
                const _3S_AZ: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x0B\0\x16\0\x1D\0 \0'\x001\x005\0:\0?\0B\0J\0f\xC9\x99rv\xC9\x99rdinordibehe\xC5\x9Ftxord\xC9\x99dtirmord\xC9\x99d\xC5\x9F\xC9\x99hrivarmehrab\xC9\x99naz\xC9\x99rdeyb\xC9\x99hm\xC9\x99nisf\xC9\x99nd") });
                const _3S_BN: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0!\0B\0W\0`\0r\0\x8A\0\x99\0\xA5\0\xB1\0\xB7\0\xC9\0\xE0\xA6\xAB\xE0\xA7\x8D\xE0\xA6\xAF\xE0\xA6\xBE\xE0\xA6\xAD\xE0\xA6\xBE\xE0\xA6\xB0\xE0\xA7\x8D\xE0\xA6\xA1\xE0\xA6\xBF\xE0\xA6\xA8\xE0\xA6\x85\xE0\xA6\xB0\xE0\xA6\xA1\xE0\xA6\xBF\xE0\xA6\xAC\xE0\xA7\x87\xE0\xA6\xB9\xE0\xA7\x87\xE0\xA6\xB6\xE0\xA7\x8D\xE0\xA6\xA4\xE0\xA6\x96\xE0\xA7\x8B\xE0\xA6\xB0\xE0\xA7\x8D\xE0\xA6\xA6\xE0\xA7\x8D\xE0\xA6\xA6\xE0\xA6\xA4\xE0\xA7\x80\xE0\xA6\xB0\xE0\xA6\xAE\xE0\xA6\xB0\xE0\xA7\x8D\xE0\xA6\xAF\xE0\xA6\xBE\xE0\xA6\xA6\xE0\xA6\xB6\xE0\xA6\xBE\xE0\xA6\xB9\xE0\xA6\xB0\xE0\xA6\xBF\xE0\xA6\xAC\xE0\xA6\xBE\xE0\xA6\xB0\xE0\xA6\xAE\xE0\xA7\x87\xE0\xA6\xB9\xE0\xA7\x87\xE0\xA6\xB0\xE0\xA6\x86\xE0\xA6\xAC\xE0\xA6\xBE\xE0\xA6\xA8\xE0\xA6\x86\xE0\xA6\x9C\xE0\xA6\xBE\xE0\xA6\xB0\xE0\xA6\xA6\xE0\xA7\x87\xE0\xA6\xAC\xE0\xA6\xBE\xE0\xA6\xB9\xE0\xA6\xAE\xE0\xA6\xBE\xE0\xA6\xA8\xE0\xA6\x8F\xE0\xA6\xB8\xE0\xA6\xAB\xE0\xA7\x8D\xE0\xA6\xAF\xE0\xA6\xBE\xE0\xA6\xA8\xE0\xA7\x8D\xE0\xA6\xA1") });
                const _3S_BS_CYRL: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x12\0&\x002\08\0D\0T\0\\\0d\0l\0r\0~\0\xD0\xA4\xD0\xB0\xD1\x80\xD0\xB0\xD0\xB2\xD0\xB0\xD0\xB4\xD0\xB8\xD0\xBD\xD0\x9E\xD1\x80\xD0\xB4\xD0\xB8\xD0\xB1\xD0\xB5\xD1\x85\xD0\xB5\xD1\x88\xD1\x82\xD0\x9A\xD0\xBE\xD1\x80\xD0\xB4\xD0\xB0\xD0\xB4\xD0\xA2\xD0\xB8\xD1\x80\xD0\x9C\xD0\xBE\xD1\x80\xD0\xB4\xD0\xB0\xD0\xB4\xD0\xA8\xD0\xB0\xD1\x85\xD1\x80\xD0\xB8\xD0\xB2\xD0\xB0\xD1\x80\xD0\x9C\xD0\xB5\xD1\x85\xD1\x80\xD0\x90\xD0\xB1\xD0\xB0\xD0\xBD\xD0\x90\xD0\xB7\xD0\xB0\xD1\x80\xD0\x94\xD0\xB5\xD1\x98\xD0\x91\xD0\xB0\xD1\x85\xD0\xBC\xD0\xB0\xD0\xBD\xD0\x95\xD1\x81\xD1\x84\xD0\xB0\xD0\xBD\xD0\xB4") });
                const _3S_CS: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\t\0\x14\0\x1C\0 \0'\x001\x005\0;\0@\0C\0I\0farvardinordibehe\xC5\xA1tchord\xC3\xA1dt\xC3\xADrmord\xC3\xA1d\xC5\xA1ahr\xC3\xADvarmehr\xC3\xA1b\xC3\xA1n\xC3\xA1zardeibahmanesfand") });
                const _3S_DA: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\t\0\x14\0\x1B\0\x1E\0$\0-\x001\x005\09\0<\0B\0farvardinordibeheshtkhordadtirmordadshahrivarmehrabanazardeybahmanesfand") });
                const _3S_DE: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\t\0\x15\0\x1D\0 \0'\x001\x005\0;\0@\0D\0J\0FarwardinOrdibeheschtChord\xC4\x81dTirMord\xC4\x81dSchahriwarMehr\xC4\x80b\xC4\x81n\xC4\x80sarD\xC3\xA9iBahmanEssfand") });
                const _3S_FA: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x0E\0\x1E\0(\0.\08\0D\0J\0R\0X\0\\\0d\0\xD9\x81\xD8\xB1\xD9\x88\xD8\xB1\xD8\xAF\xDB\x8C\xD9\x86\xD8\xA7\xD8\xB1\xD8\xAF\xDB\x8C\xD8\xA8\xD9\x87\xD8\xB4\xD8\xAA\xD8\xAE\xD8\xB1\xD8\xAF\xD8\xA7\xD8\xAF\xD8\xAA\xDB\x8C\xD8\xB1\xD9\x85\xD8\xB1\xD8\xAF\xD8\xA7\xD8\xAF\xD8\xB4\xD9\x87\xD8\xB1\xDB\x8C\xD9\x88\xD8\xB1\xD9\x85\xD9\x87\xD8\xB1\xD8\xA2\xD8\xA8\xD8\xA7\xD9\x86\xD8\xA2\xD8\xB0\xD8\xB1\xD8\xAF\xDB\x8C\xD8\xA8\xD9\x87\xD9\x85\xD9\x86\xD8\xA7\xD8\xB3\xD9\x81\xD9\x86\xD8\xAF") });
                const _3S_FA_AF: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x06\0\x0C\0\x14\0\x1E\0$\x000\0:\0B\0H\0N\0T\0\xD8\xAD\xD9\x85\xD9\x84\xD8\xAB\xD9\x88\xD8\xB1\xD8\xAC\xD9\x88\xD8\xB2\xD8\xA7\xD8\xB3\xD8\xB1\xD8\xB7\xD8\xA7\xD9\x86\xD8\xA7\xD8\xB3\xD8\xAF\xD8\xB3\xD9\x86\xD8\xA8\xD9\x84\xD9\x87\xD9\x94\xD9\x85\xDB\x8C\xD8\xB2\xD8\xA7\xD9\x86\xD8\xB9\xD9\x82\xD8\xB1\xD8\xA8\xD9\x82\xD9\x88\xD8\xB3\xD8\xAC\xD8\xAF\xDB\x8C\xD8\xAF\xD9\x84\xD9\x88\xD8\xAD\xD9\x88\xD8\xAA") });
                const _3S_FF_ADLM: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0$\0L\0d\0p\0\x88\0\xA8\0\xBC\0\xCC\0\xDC\0\xE8\0\0\x01\xF0\x9E\xA4\x8A\xF0\x9E\xA4\xA2\xF0\x9E\xA4\xAA\xF0\x9E\xA4\xBE\xF0\x9E\xA4\xA2\xF0\x9E\xA4\xAA\xF0\x9E\xA4\xA3\xF0\x9E\xA4\xAD\xF0\x9E\xA4\xB2\xF0\x9E\xA4\x8C\xF0\x9E\xA4\xAA\xF0\x9E\xA4\xA3\xF0\x9E\xA4\xAD\xF0\x9E\xA4\xA6\xF0\x9E\xA4\xAB\xF0\x9E\xA4\xB8\xF0\x9E\xA4\xAB\xF0\x9E\xA5\x83\xF0\x9E\xA4\xBC\xF0\x9E\xA4\x9D\xF0\x9E\xA4\xAE\xF0\x9E\xA4\xAA\xF0\x9E\xA4\xA3\xF0\x9E\xA4\xA2\xF0\x9E\xA4\xA3\xF0\x9E\xA4\x9A\xF0\x9E\xA4\xAD\xF0\x9E\xA4\xAA\xF0\x9E\xA4\x83\xF0\x9E\xA4\xAE\xF0\x9E\xA4\xAA\xF0\x9E\xA4\xA3\xF0\x9E\xA4\xA2\xF0\x9E\xA4\xA3\xF0\x9E\xA4\xA1\xF0\x9E\xA4\xA2\xF0\x9E\xA4\xB8\xF0\x9E\xA4\xAA\xF0\x9E\xA4\xAD\xF0\x9E\xA4\xBE\xF0\x9E\xA4\xA2\xF0\x9E\xA4\xAA\xF0\x9E\xA4\x83\xF0\x9E\xA4\xAB\xF0\x9E\xA4\xB8\xF0\x9E\xA4\xAB\xF0\x9E\xA4\xAA\xF0\x9E\xA4\x80\xF0\x9E\xA4\xA6\xF0\x9E\xA4\xA2\xF0\x9E\xA4\xB2\xF0\x9E\xA4\x80\xF0\x9E\xA5\x81\xF0\x9E\xA4\xA2\xF0\x9E\xA4\xAA\xF0\x9E\xA4\x81\xF0\x9E\xA4\xAB\xF0\x9E\xA4\xB4\xF0\x9E\xA4\x84\xF0\x9E\xA4\xA2\xF0\x9E\xA4\xB8\xF0\x9E\xA4\xA5\xF0\x9E\xA4\xA2\xF0\x9E\xA4\xB2\xF0\x9E\xA4\x89\xF0\x9E\xA4\xA7\xF0\x9E\xA4\xAC\xF0\x9E\xA4\xA2\xF0\x9E\xA4\xB2\xF0\x9E\xA4\xA3") });
                const _3S_FI: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\t\0\x14\0\x1B\0\x1E\0$\0-\x001\x005\09\0<\0B\0farvardinordibehe\xC5\xA1tkhordadtirmordad\xC5\xA1ahrivarmehrabanazardeybahmanesfand") });
                const _3S_FR: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x04\0\x08\0\x0C\0\x0F\0\x13\0\x18\0\x1C\0\"\0'\0*\0.\0far.ord.kho.tirmor.\xC5\xA1ah.mehr\xC3\xA2b\xC3\xA2n\xC3\xA2zardeybah.esf.") });
                const _3S_FR_CA: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x04\0\x08\0\x0C\0\x0F\0\x13\0\x18\0\x1C\0\"\0'\0*\0.\0Far.Ord.Kho.TirMor.\xC5\xA0ah.Mehr\xC3\x82b\xC3\xA2.\xC3\x82zarDeyBah.Esf.") });
                const _3S_GU: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0!\0B\0T\0]\0r\0\x87\0\x93\0\x9F\0\xAB\0\xB4\0\xC6\0\xE0\xAA\xAB\xE0\xAA\xBE\xE0\xAA\xB0\xE0\xAB\x8D\xE0\xAA\xB5\xE0\xAA\xBE\xE0\xAA\xB0\xE0\xAB\x8D\xE0\xAA\xA6\xE0\xAA\xBF\xE0\xAA\xA8\xE0\xAA\x93\xE0\xAA\xB0\xE0\xAA\xA1\xE0\xAB\x80\xE0\xAA\xAC\xE0\xAB\x87\xE0\xAA\xB9\xE0\xAB\x87\xE0\xAA\xB6\xE0\xAB\x8D\xE0\xAA\x9F\xE0\xAA\x96\xE0\xAB\x8B\xE0\xAA\xB0\xE0\xAA\xA6\xE0\xAA\xBE\xE0\xAA\xA6\xE0\xAA\xA4\xE0\xAA\xBF\xE0\xAA\xB0\xE0\xAA\xAE\xE0\xAB\x8B\xE0\xAA\xB0\xE0\xAB\x8D\xE0\xAA\xA6\xE0\xAA\xBE\xE0\xAA\xA6\xE0\xAA\xB6\xE0\xAA\xBE\xE0\xAA\xB9\xE0\xAA\xB0\xE0\xAA\xBF\xE0\xAA\xB5\xE0\xAA\xB0\xE0\xAA\xAE\xE0\xAB\x87\xE0\xAA\xB9\xE0\xAA\xB0\xE0\xAA\x85\xE0\xAA\xAC\xE0\xAA\xBE\xE0\xAA\xA8\xE0\xAA\x85\xE0\xAA\x9D\xE0\xAA\xBE\xE0\xAA\xB0\xE0\xAA\xA1\xE0\xAB\x87\xE0\xAA\xAF\xE0\xAA\xAC\xE0\xAA\xBE\xE0\xAA\xB9\xE0\xAA\xAE\xE0\xAB\x87\xE0\xAA\xA8\xE0\xAA\x8F\xE0\xAA\xB8\xE0\xAB\x8D\xE0\xAA\xAB\xE0\xAA\xBE\xE0\xAA\xA8\xE0\xAB\x8D\xE0\xAA\xA1") });
                const _3S_HE: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x0E\0\x1E\0*\x000\0:\0F\0L\0T\0\\\0`\0h\0\xD7\xA4\xD7\xA8\xD7\x95\xD7\xA8\xD7\x93\xD7\x99\xD7\x9F\xD7\x90\xD7\xA8\xD7\x93\xD7\x99\xD7\x91\xD7\x94\xD7\xA9\xD7\xAA\xD7\x97\xD7\xB3\xD7\xA8\xD7\x93\xD7\x90\xD7\x93\xD7\xAA\xD7\x99\xD7\xA8\xD7\x9E\xD7\xA8\xD7\x93\xD7\x90\xD7\x93\xD7\xA9\xD7\x94\xD7\xA8\xD7\x99\xD7\x95\xD7\xA8\xD7\x9E\xD7\x94\xD7\xA8\xD7\x90\xD7\x91\xD7\x90\xD7\x9F\xD7\x90\xD7\x93\xD7\xB3\xD7\xA8\xD7\x93\xD7\x99\xD7\x91\xD7\x94\xD7\x9E\xD7\x9F\xD7\x90\xD7\xA1\xD7\xA4\xD7\xA0\xD7\x93") });
                const _3S_HI: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x18\0<\0T\0]\0o\0\x87\0\x93\0\x9C\0\xA8\0\xAE\0\xBA\0\xE0\xA4\xAB\xE0\xA4\xB0\xE0\xA5\x8D\xE0\xA4\xB5\xE0\xA4\xBE\xE0\xA4\xA6\xE0\xA4\xBF\xE0\xA4\xA8\xE0\xA4\x93\xE0\xA4\xB0\xE0\xA5\x8D\xE0\xA4\xA6\xE0\xA4\xBF\xE0\xA4\xB5\xE0\xA5\x87\xE0\xA4\xB9\xE0\xA5\x87\xE0\xA4\xB8\xE0\xA5\x8D\xE0\xA4\x9F\xE0\xA4\x96\xE0\xA5\x8B\xE0\xA4\xB0\xE0\xA4\xB0\xE0\xA5\x8D\xE0\xA4\xA6\xE0\xA4\xBE\xE0\xA4\xA6\xE0\xA4\x9F\xE0\xA4\xBF\xE0\xA4\xB0\xE0\xA4\xAE\xE0\xA5\x8B\xE0\xA4\xB0\xE0\xA4\xA6\xE0\xA4\xBE\xE0\xA4\xA6\xE0\xA4\xB6\xE0\xA4\xBE\xE0\xA4\xB9\xE0\xA4\xB0\xE0\xA5\x80\xE0\xA4\xB5\xE0\xA4\xB0\xE0\xA5\x8D\xE0\xA4\xAE\xE0\xA5\x87\xE0\xA4\xB9\xE0\xA4\xB0\xE0\xA4\x85\xE0\xA4\xB5\xE0\xA4\xA8\xE0\xA4\x85\xE0\xA4\x9C\xE0\xA4\xBC\xE0\xA4\xB0\xE0\xA4\xA1\xE0\xA5\x87\xE0\xA4\xAC\xE0\xA4\xB9\xE0\xA4\xAE\xE0\xA4\xA8\xE0\xA4\x88\xE0\xA4\xB8\xE0\xA5\x8D\xE0\xA4\xAB\xE0\xA4\xA8\xE0\xA5\x8D\xE0\xA4\xA6\xE0\xA5\x8D") });
                const _3S_JA: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x1E\0<\0K\0W\0f\0~\0\x87\0\x96\0\xA2\0\xA8\0\xB4\0\xE3\x83\x95\xE3\x82\xA1\xE3\x83\xAB\xE3\x83\xB4\xE3\x82\xA1\xE3\x83\xAB\xE3\x83\x87\xE3\x82\xA3\xE3\x83\xBC\xE3\x83\xB3\xE3\x82\xAA\xE3\x83\xAB\xE3\x83\x87\xE3\x82\xA3\xE3\x83\xBC\xE3\x83\x99\xE3\x83\x98\xE3\x82\xB7\xE3\x83\xA5\xE3\x83\x88\xE3\x83\x9B\xE3\x83\xAB\xE3\x83\x80\xE3\x83\xBC\xE3\x83\x89\xE3\x83\x86\xE3\x82\xA3\xE3\x83\xBC\xE3\x83\xAB\xE3\x83\xA2\xE3\x83\xAB\xE3\x83\x80\xE3\x83\xBC\xE3\x83\x89\xE3\x82\xB7\xE3\x83\xA3\xE3\x83\x8F\xE3\x83\xAA\xE3\x83\xBC\xE3\x83\xB4\xE3\x82\xA1\xE3\x83\xAB\xE3\x83\xA1\xE3\x83\x95\xE3\x83\xAB\xE3\x82\xA2\xE3\x83\xBC\xE3\x83\x90\xE3\x83\xBC\xE3\x83\xB3\xE3\x82\xA2\xE3\x83\xBC\xE3\x82\xB6\xE3\x83\xAB\xE3\x83\x87\xE3\x82\xA4\xE3\x83\x90\xE3\x83\x95\xE3\x83\x9E\xE3\x83\xB3\xE3\x82\xA8\xE3\x82\xB9\xE3\x83\x95\xE3\x82\xA1\xE3\x83\xB3\xE3\x83\x89") });
                const _3S_KK: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x12\0&\x002\08\0D\0T\0\\\0d\0l\0r\0~\0\xD0\xA4\xD0\xB0\xD1\x80\xD0\xB2\xD0\xB0\xD1\x80\xD0\xB4\xD0\xB8\xD0\xBD\xD0\x9E\xD1\x80\xD0\xB4\xD0\xB8\xD0\xB1\xD0\xB5\xD1\x85\xD0\xB5\xD1\x88\xD1\x82\xD0\xA5\xD0\xBE\xD1\x80\xD0\xB4\xD0\xB0\xD0\xB4\xD0\xA2\xD0\xB8\xD1\x80\xD0\x9C\xD0\xBE\xD1\x80\xD0\xB4\xD0\xB0\xD0\xB4\xD0\xA8\xD0\xB0\xD1\x85\xD1\x80\xD0\xB8\xD0\xB2\xD0\xB0\xD1\x80\xD0\x9C\xD0\xB5\xD1\x85\xD1\x80\xD0\x90\xD0\xB1\xD0\xB0\xD0\xBD\xD0\x90\xD0\xB7\xD0\xB0\xD1\x80\xD0\x94\xD0\xB5\xD0\xB9\xD0\x91\xD0\xB0\xD1\x85\xD0\xBC\xD0\xB0\xD0\xBD\xD0\xAD\xD1\x81\xD1\x84\xD0\xB0\xD0\xBD\xD0\xB4") });
                const _3S_KN: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x1E\0E\0]\0i\0\x81\0\x99\0\xAB\0\xB7\0\xC3\0\xC9\0\xDB\0\xE0\xB2\xAB\xE0\xB2\xB0\xE0\xB3\x8D\xE0\xB2\xB5\xE0\xB2\xB0\xE0\xB3\x8D\xE0\xB2\xA6\xE0\xB2\xBF\xE0\xB2\xA8\xE0\xB3\x8D\xE0\xB2\x93\xE0\xB2\xB0\xE0\xB3\x8D\xE0\xB2\xA6\xE0\xB2\xBF\xE0\xB2\xAC\xE0\xB3\x86\xE0\xB2\xB9\xE0\xB3\x86\xE0\xB2\xB6\xE0\xB3\x8D\xE0\xB2\x9F\xE0\xB3\x8D\xE0\xB2\x96\xE0\xB3\x8B\xE0\xB2\xB0\xE0\xB3\x8D\xE0\xB2\xA1\xE0\xB2\xBE\xE0\xB2\xA6\xE0\xB3\x8D\xE0\xB2\x9F\xE0\xB2\xBF\xE0\xB2\xB0\xE0\xB3\x8D\xE0\xB2\xAE\xE0\xB3\x8A\xE0\xB2\xB0\xE0\xB3\x8D\xE0\xB2\xA6\xE0\xB2\xBE\xE0\xB2\xA6\xE0\xB3\x8D\xE0\xB2\xB6\xE0\xB2\xB9\xE0\xB2\xB0\xE0\xB2\xBF\xE0\xB2\xB5\xE0\xB2\xBE\xE0\xB2\xB0\xE0\xB3\x8D\xE0\xB2\xAE\xE0\xB3\x86\xE0\xB2\xB9\xE0\xB3\x8D\xE0\xB2\xB0\xE0\xB3\x8D\xE0\xB2\x85\xE0\xB2\xAC\xE0\xB2\xA8\xE0\xB3\x8D\xE0\xB2\x85\xE0\xB2\x9D\xE0\xB2\xB0\xE0\xB3\x8D\xE0\xB2\xA1\xE0\xB3\x87\xE0\xB2\xAC\xE0\xB2\xB9\xE0\xB3\x8D\xE0\xB2\xAE\xE0\xB2\xA8\xE0\xB3\x8D\xE0\xB2\x8E\xE0\xB2\xB8\xE0\xB3\x8D\xE0\xB2\xAB\xE0\xB2\xBE\xE0\xB2\x82\xE0\xB2\xA1\xE0\xB3\x8D") });
                const _3S_KO: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x0C\0!\0-\x003\0?\0N\0W\0]\0f\0l\0u\0\xED\x99\x94\xEB\xA5\xB4\xEB\xB0\x94\xEB\x94\x98\xEC\x98\xA4\xEB\xA5\xB4\xEB\x94\x94\xEB\xB2\xA0\xED\x97\xA4\xEC\x89\xAC\xED\x8A\xB8\xED\x98\xB8\xEB\xA5\xB4\xEB\x8B\xA4\xEB\x93\x9C\xED\x8B\xB0\xEB\xA5\xB4\xEB\xAA\xA8\xEB\xA5\xB4\xEB\x8B\xA4\xEB\x93\x9C\xEC\x83\xA4\xED\x9D\x90\xEB\xA6\xAC\xEB\xB0\x94\xEB\xA5\xB4\xEB\xA9\x94\xED\x9D\x90\xEB\xA5\xB4\xEC\x95\x84\xEB\xB0\x98\xEC\x95\x84\xEC\x9E\x90\xEB\xA5\xB4\xEB\x8B\xA4\xEC\x9D\xB4\xEB\xB0\x94\xED\x9D\x90\xEB\xA7\x8C\xEC\x97\x90\xEC\x8A\xA4\xED\x8C\x90\xEB\x93\x9C") });
                const _3S_LO: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x18\09\0K\0T\0f\0{\0\x84\0\x93\0\x9F\0\xA8\0\xBA\0\xE0\xBA\x9F\xE0\xBA\xA3\xE0\xBA\xB2\xE0\xBA\xA7\xE0\xBA\xB2\xE0\xBA\x94\xE0\xBA\xB4\xE0\xBA\x99\xE0\xBA\xAD\xE0\xBB\x8D\xE0\xBA\xA3\xE0\xBA\x94\xE0\xBA\xB5\xE0\xBA\x9A\xE0\xBA\xB5\xE0\xBB\x80\xE0\xBA\xAB\xE0\xBA\xAE\xE0\xBA\x94\xE0\xBA\x84\xE0\xBB\x8D\xE0\xBA\xA3\xE0\xBB\x80\xE0\xBA\x94\xE0\xBA\x94\xE0\xBB\x81\xE0\xBA\x95\xE0\xBA\xA3\xE0\xBA\xA1\xE0\xBB\x8D\xE0\xBA\xA3\xE0\xBB\x80\xE0\xBA\x94\xE0\xBA\x94\xE0\xBA\x8A\xE0\xBA\xB2\xE0\xBA\xA3\xE0\xBA\xA5\xE0\xBA\xB4\xE0\xBA\xA7\xE0\xBA\xB2\xE0\xBB\x80\xE0\xBA\xA1\xE0\xBA\xB5\xE0\xBA\xAD\xE0\xBA\xB2\xE0\xBA\x9A\xE0\xBA\xB2\xE0\xBA\x99\xE0\xBA\xAD\xE0\xBA\xB2\xE0\xBA\x8A\xE0\xBA\xB2\xE0\xBA\x94\xE0\xBA\xB5\xE0\xBA\xA3\xE0\xBA\x9A\xE0\xBA\xA3\xE0\xBA\xB2\xE0\xBA\xA1\xE0\xBA\xB2\xE0\xBA\x99\xE0\xBB\x80\xE0\xBA\xAD\xE0\xBA\xAA\xE0\xBA\x9F\xE0\xBA\xB2\xE0\xBA\x99") });
                const _3S_LV: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x0B\0\x17\0\x1F\0$\0,\x007\0<\0A\0F\0J\0Q\0farvard\xC4\xABnsordibehe\xC5\xA1tshord\xC4\x81dst\xC4\xABrsmord\xC4\x81ds\xC5\xA1ahriv\xC4\x93rsmehrsabansazersdejsbahmansesfands") });
                const _3S_MK: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x12\0&\x002\08\0D\0T\0Z\0b\0j\0p\0|\0\xD1\x84\xD0\xB0\xD1\x80\xD0\xB2\xD0\xB0\xD1\x80\xD0\xB4\xD0\xB8\xD0\xBD\xD0\xBE\xD1\x80\xD0\xB4\xD0\xB8\xD0\xB1\xD0\xB5\xD1\x85\xD0\xB5\xD1\x88\xD1\x82\xD0\xBA\xD0\xBE\xD1\x80\xD0\xB4\xD0\xB0\xD0\xB4\xD1\x82\xD0\xB8\xD1\x80\xD0\xBC\xD0\xBE\xD1\x80\xD0\xB4\xD0\xB0\xD0\xB4\xD1\x88\xD0\xB0\xD1\x85\xD1\x80\xD0\xB8\xD0\xB2\xD0\xB0\xD1\x80\xD0\xBC\xD0\xB5\xD1\x80\xD0\xB0\xD0\xB1\xD0\xB0\xD0\xBD\xD0\xB0\xD0\xB7\xD0\xB0\xD1\x80\xD0\xB4\xD0\xB5\xD1\x98\xD0\xB1\xD0\xB0\xD1\x85\xD0\xBC\xD0\xB0\xD0\xBD\xD0\xB5\xD1\x81\xD1\x84\xD0\xB0\xD0\xBD\xD0\xB4") });
                const _3S_ML: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x18\0E\0Z\0c\0x\0\x93\0\x9F\0\xAB\0\xB4\0\xC0\0\xD5\0\xE0\xB4\xAB\xE0\xB5\xBC\xE0\xB4\xB5\xE0\xB4\xBE\xE0\xB5\xBC\xE0\xB4\xA6\xE0\xB4\xBF\xE0\xB5\xBB\xE0\xB4\x93\xE0\xB5\xBC\xE0\xB4\xA1\xE0\xB4\xBF\xE0\xB4\xAC\xE0\xB5\x86\xE0\xB4\xB9\xE0\xB5\x86\xE0\xB4\xB7\xE0\xB5\x8D\xE2\x80\x8C\xE0\xB4\xB1\xE0\xB5\x8D\xE0\xB4\xB1\xE0\xB5\x8D\xE0\xB4\x96\xE0\xB5\x8B\xE0\xB5\xBC\xE0\xB4\xA6\xE0\xB4\xBE\xE0\xB4\xA6\xE0\xB5\x8D\xE0\xB4\x9F\xE0\xB4\xBF\xE0\xB5\xBC\xE0\xB4\xAE\xE0\xB5\x8B\xE0\xB5\xBC\xE0\xB4\xA6\xE0\xB4\xBE\xE0\xB4\xA6\xE0\xB5\x8D\xE0\xB4\xB7\xE0\xB4\xB9\xE0\xB5\x8D\xE2\x80\x8C\xE0\xB4\xB0\xE0\xB4\xBF\xE0\xB4\xB5\xE0\xB4\xBE\xE0\xB5\xBC\xE0\xB4\xAE\xE0\xB5\x86\xE0\xB4\xB9\xE0\xB5\xBC\xE0\xB4\x85\xE0\xB4\xAC\xE0\xB4\xBE\xE0\xB5\xBB\xE0\xB4\x85\xE0\xB4\xB8\xE0\xB5\xBC\xE0\xB4\xA1\xE0\xB5\x86\xE0\xB4\xAF\xE0\xB5\x8D\xE0\xB4\xAC\xE0\xB4\xB9\xE0\xB5\x8D\xE2\x80\x8C\xE0\xB4\xAE\xE0\xB4\xBE\xE0\xB5\xBB\xE0\xB4\x8E\xE0\xB4\xB8\xE0\xB5\x8D\xE2\x80\x8C\xE0\xB4\xAB\xE0\xB4\xBE\xE0\xB5\xBB\xE0\xB4\xA1\xE0\xB5\x8D") });
                const _3S_MR: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x15\09\0K\0T\0f\0~\0\x8D\0\x99\0\xA5\0\xAB\0\xBD\0\xE0\xA4\xAB\xE0\xA4\xB0\xE0\xA4\xB5\xE0\xA4\xB0\xE0\xA4\xA6\xE0\xA4\xBF\xE0\xA4\xA8\xE0\xA4\x93\xE0\xA4\xB0\xE0\xA5\x8D\xE0\xA4\xA6\xE0\xA4\xBF\xE0\xA4\xAC\xE0\xA5\x87\xE0\xA4\xB9\xE0\xA5\x87\xE0\xA4\xB6\xE0\xA5\x8D\xE0\xA4\xA4\xE0\xA4\x96\xE0\xA5\x8B\xE0\xA4\xB0\xE0\xA4\xA6\xE0\xA4\xBE\xE0\xA4\xA6\xE0\xA4\xA4\xE0\xA4\xBF\xE0\xA4\xB0\xE0\xA4\xAE\xE0\xA5\x8B\xE0\xA4\xB0\xE0\xA4\xA6\xE0\xA4\xBE\xE0\xA4\xA6\xE0\xA4\xB6\xE0\xA4\xBE\xE0\xA4\xB9\xE0\xA4\xB0\xE0\xA5\x80\xE0\xA4\xB5\xE0\xA4\xBE\xE0\xA4\xB0\xE0\xA4\xAE\xE0\xA5\x87\xE0\xA4\xB9\xE0\xA5\x87\xE0\xA4\xB0\xE0\xA4\x85\xE0\xA4\xAC\xE0\xA4\xBE\xE0\xA4\xA8\xE0\xA4\x85\xE0\xA4\x9D\xE0\xA4\xBE\xE0\xA4\xB0\xE0\xA4\xA6\xE0\xA5\x87\xE0\xA4\xAC\xE0\xA4\xBE\xE0\xA4\xB9\xE0\xA4\xAE\xE0\xA4\xBE\xE0\xA4\xA8\xE0\xA4\x8F\xE0\xA4\xB8\xE0\xA4\xAB\xE0\xA4\xBE\xE0\xA4\x82\xE0\xA4\xA6") });
                const _3S_PA: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x18\09\0H\0Q\0c\0x\0\x84\0\x90\0\x9F\0\xA8\0\xB7\0\xE0\xA8\xAB\xE0\xA8\xBE\xE0\xA8\xB0\xE0\xA8\xB5\xE0\xA8\xB0\xE0\xA8\xA1\xE0\xA9\x80\xE0\xA8\xA8\xE0\xA8\x94\xE0\xA8\xB0\xE0\xA8\xA1\xE0\xA8\xBE\xE0\xA8\x88\xE0\xA8\xAC\xE0\xA8\xB9\xE0\xA9\x88\xE0\xA8\xB8\xE0\xA8\xBC\xE0\xA8\x9F\xE0\xA8\x96\xE0\xA9\x8B\xE0\xA8\xA1\xE0\xA8\xB0\xE0\xA8\xA1\xE0\xA8\x9F\xE0\xA8\xBF\xE0\xA8\xB0\xE0\xA8\xAE\xE0\xA9\x8B\xE0\xA8\xB0\xE0\xA8\xA1\xE0\xA8\xBE\xE0\xA8\xA6\xE0\xA8\xB8\xE0\xA8\xBC\xE0\xA8\xB0\xE0\xA8\xBE\xE0\xA8\x87\xE0\xA8\xB5\xE0\xA8\xB0\xE0\xA8\xAE\xE0\xA9\x87\xE0\xA8\xB9\xE0\xA8\xB0\xE0\xA8\x85\xE0\xA8\xAC\xE0\xA8\xBE\xE0\xA8\xA8\xE0\xA8\x85\xE0\xA8\x9C\xE0\xA8\xBC\xE0\xA8\xBE\xE0\xA8\xB0\xE0\xA8\xA1\xE0\xA9\x87\xE0\xA8\x85\xE0\xA8\xAC\xE0\xA8\xBE\xE0\xA8\xB9\xE0\xA8\xAE\xE0\xA8\xA8\xE0\xA8\x90\xE0\xA8\xB8\xE0\xA8\xAB\xE0\xA9\xB0\xE0\xA8\xA1") });
                const _3S_PL: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\t\0\x14\0\x1C\0\x1F\0&\0/\x003\09\0>\0B\0H\0FarwardinOrdibehesztChord\xC4\x81dTirMord\xC4\x81dSzahriwarMehr\xC4\x80b\xC4\x81n\xC4\x80sarD\xC3\xA9iBahmanEsfand") });
                const _3S_PS: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x06\0\x0E\0\x1C\0&\0.\x004\0:\0@\0J\0V\0b\0\xD9\x88\xD8\xB1\xDB\x8C\xD8\xBA\xD9\x88\xDB\x8C\xDB\x8C\xD8\xBA\xD8\xA8\xD8\xB1\xDA\xAF\xD9\x88\xD9\x84\xDB\x8C\xDA\x86\xD9\x86\xDA\xAF\xD8\xA7\xDA\x9A\xD8\xB2\xD9\x85\xD8\xB1\xDB\x8C\xD9\x88\xDA\x96\xDB\x8C\xD8\xAA\xD9\x84\xD9\x87\xD9\x84\xDA\x93\xD9\x85\xD9\x84\xDB\x8C\xD9\x86\xD8\xAF\xDB\x8D\xD9\x85\xD8\xB1\xD8\xBA\xD9\x88\xD9\x85\xDB\x8C\xD8\xB3\xD9\x84\xD9\x88\xD8\xA7\xD8\xBA\xD9\x87\xDA\xA9\xD8\xA8") });
                const _3S_RO: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\t\0\x14\0\x1B\0\x1E\0&\0/\x003\x007\0;\0>\0D\0FarvardinOrdibeheshtKhordadTirA-MordadShahrivarMehrAbanAzarDeyBahmanEsfand") });
                const _3S_RU: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x12\0&\x002\08\0D\0T\0\\\0d\0l\0r\0~\0\xD1\x84\xD0\xB0\xD1\x80\xD0\xB2\xD0\xB0\xD1\x80\xD0\xB4\xD0\xB8\xD0\xBD\xD0\xBE\xD1\x80\xD0\xB4\xD0\xB8\xD0\xB1\xD0\xB5\xD1\x85\xD0\xB5\xD1\x88\xD1\x82\xD1\x85\xD0\xBE\xD1\x80\xD0\xB4\xD0\xB0\xD0\xB4\xD1\x82\xD0\xB8\xD1\x80\xD0\xBC\xD0\xBE\xD1\x80\xD0\xB4\xD0\xB0\xD0\xB4\xD1\x88\xD0\xB0\xD1\x85\xD1\x80\xD0\xB8\xD0\xB2\xD0\xB5\xD1\x80\xD0\xBC\xD0\xB5\xD1\x85\xD1\x80\xD0\xB0\xD0\xB1\xD0\xB0\xD0\xBD\xD0\xB0\xD0\xB7\xD0\xB5\xD1\x80\xD0\xB4\xD0\xB5\xD0\xB9\xD0\xB1\xD0\xB0\xD1\x85\xD0\xBC\xD0\xB0\xD0\xBD\xD1\x8D\xD1\x81\xD1\x84\xD0\xB0\xD0\xBD\xD0\xB4") });
                const _3S_SC: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x04\0\x08\0\x0C\0\x0F\0\x13\0\x17\0\x1B\0\x1F\0#\0&\0*\0far.ord.kho.tirmor.sha.mehrabanazardeybah.esf.") });
                const _3S_SO: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x07\0\x10\0\x16\0\x1B\0 \0$\0+\x002\0<\0D\0N\0JanaayoFeebraayoMaarsoAbrilMaayoJuunLuuliyoAgoostoSabteembarOktoobarNoofeembarDiiseembar") });
                const _3S_SR_LATN: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\t\0\x14\0\x1A\0\x1D\0#\0,\x000\x004\08\0;\0A\0FaravadinOrdibehe\xC5\xA1tKordadTirMordad\xC5\xA0ahrivarMehrAbanAzarDejBahmanEsfand") });
                const _3S_SV: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\t\0\x14\0\x1C\0\x1F\0&\0/\x003\09\0>\0A\0G\0FarvardinOrdibeheshtKhord\xC4\x81dTirMord\xC4\x81dShahrivarMehr\xC4\x80b\xC4\x81n\xC4\x80zarDeyBahmanEsfand") });
                const _3S_TA: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\r\0\x1D\0*\x006\0C\0P\0]\0g\0q\0w\0\x81\0\xE0\xAE\x83\xE0\xAE\xAA\xE0\xAE\xB0\xE0\xAF\x8D.\xE0\xAE\x86\xE0\xAE\xB0\xE0\xAF\x8D\xE0\xAE\x9F\xE0\xAE\xBF.\xE0\xAE\x95\xE0\xAF\x8A\xE0\xAE\xB0\xE0\xAF\x8D.\xE0\xAE\xA4\xE0\xAE\xBF\xE0\xAE\xB0\xE0\xAF\x8D\xE0\xAE\xAE\xE0\xAF\x8A\xE0\xAE\xB0\xE0\xAF\x8D.\xE0\xAE\xB7\xE0\xAE\xBE\xE0\xAE\xB0\xE0\xAE\xBF.\xE0\xAE\xAE\xE0\xAF\x86\xE0\xAE\xB9\xE0\xAF\x8D.\xE0\xAE\x85\xE0\xAE\xAA\xE0\xAE\xBE.\xE0\xAE\x85\xE0\xAE\x9A\xE0\xAE\xBE.\xE0\xAE\xA4\xE0\xAF\x87\xE0\xAE\xAA\xE0\xAE\xB9\xE0\xAF\x8D.\xE0\xAE\x8E\xE0\xAE\x83.") });
                const _3S_TE: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x1B\x006\0N\0Z\0r\0\x84\0\x93\0\x9F\0\xAB\0\xB1\0\xCC\0\xE0\xB0\xAB\xE0\xB0\xBE\xE0\xB0\xB5\xE0\xB0\xB0\xE0\xB1\x8D\xE0\xB0\xA1\xE0\xB0\xBF\xE0\xB0\xA8\xE0\xB1\x8D\xE0\xB0\x8A\xE0\xB0\xA1\xE0\xB0\xBE\xE0\xB0\xAC\xE0\xB0\xB9\xE0\xB0\xB7\xE0\xB1\x8D\xE0\xB0\x9F\xE0\xB1\x8D\xE0\xB0\x96\xE0\xB1\x8B\xE0\xB0\xB0\xE0\xB1\x8D\xE0\xB0\xA1\xE0\xB0\xBE\xE0\xB0\xA1\xE0\xB1\x8D\xE0\xB0\x9F\xE0\xB0\xBF\xE0\xB0\xB0\xE0\xB1\x8D\xE0\xB0\xAE\xE0\xB1\x86\xE0\xB0\xB0\xE0\xB1\x8D\xE0\xB0\xA1\xE0\xB0\xBE\xE0\xB0\xA1\xE0\xB1\x8D\xE0\xB0\xB6\xE0\xB0\xB6\xE0\xB0\xBF\xE0\xB0\xB5\xE0\xB0\xB0\xE0\xB1\x8D\xE0\xB0\xAE\xE0\xB1\x86\xE0\xB0\xB9\xE0\xB0\xB0\xE0\xB1\x8D\xE0\xB0\x85\xE0\xB0\xAC\xE0\xB0\xA8\xE0\xB1\x8D\xE0\xB0\x85\xE0\xB0\x9C\xE0\xB0\xB0\xE0\xB1\x8D\xE0\xB0\xA1\xE0\xB1\x87\xE0\xB0\xAC\xE0\xB0\xBE\xE0\xB0\xB9\xE0\xB1\x8D\xE2\x80\x8C\xE0\xB0\xAE\xE0\xB0\xBE\xE0\xB0\xA8\xE0\xB1\x8D\xE0\xB0\x8E\xE0\xB0\xB8\xE0\xB1\x8D\xE2\x80\x8C\xE0\xB0\xAB\xE0\xB0\xBE\xE0\xB0\x82\xE0\xB0\xA1\xE0\xB1\x8D") });
                const _3S_TG: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x12\0&\x002\08\0D\0T\0\\\0d\0l\0r\0~\0\xD1\x84\xD0\xB0\xD1\x80\xD0\xB2\xD0\xB0\xD1\x80\xD0\xB4\xD0\xB8\xD0\xBD\xD1\x83\xD1\x80\xD0\xB4\xD0\xB8\xD0\xB1\xD0\xB8\xD2\xB3\xD0\xB8\xD1\x88\xD1\x82\xD1\x85\xD1\x83\xD1\x80\xD0\xB4\xD0\xBE\xD0\xB4\xD1\x82\xD0\xB8\xD1\x80\xD0\xBC\xD1\x83\xD1\x80\xD0\xB4\xD0\xBE\xD0\xB4\xD1\x88\xD0\xB0\xD2\xB3\xD1\x80\xD0\xB8\xD0\xB2\xD0\xB0\xD1\x80\xD0\xBC\xD0\xB5\xD2\xB3\xD1\x80\xD0\xBE\xD0\xB1\xD0\xBE\xD0\xBD\xD0\xBE\xD0\xB7\xD0\xB0\xD1\x80\xD0\xB4\xD0\xB5\xD0\xB9\xD0\xB1\xD0\xB0\xD2\xB3\xD0\xBC\xD0\xB0\xD0\xBD\xD0\xB8\xD1\x81\xD1\x84\xD0\xB0\xD0\xBD\xD0\xB4") });
                const _3S_TH: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0!\0H\0]\0l\0\x81\0\x9C\0\xAB\0\xBA\0\xCC\0\xD8\0\xED\0\xE0\xB8\x9F\xE0\xB8\xB2\xE0\xB8\xA3\xE0\xB9\x8C\xE0\xB8\xA7\xE0\xB8\xB2\xE0\xB8\xA3\xE0\xB9\x8C\xE0\xB8\x94\xE0\xB8\xB4\xE0\xB8\x99\xE0\xB8\xAD\xE0\xB8\xAD\xE0\xB8\xA3\xE0\xB9\x8C\xE0\xB8\x94\xE0\xB8\xB4\xE0\xB9\x80\xE0\xB8\x9A\xE0\xB9\x80\xE0\xB8\xAE\xE0\xB8\x8A\xE0\xB8\x95\xE0\xB9\x8C\xE0\xB8\x84\xE0\xB8\xAD\xE0\xB8\xA3\xE0\xB9\x8C\xE0\xB9\x81\xE0\xB8\x94\xE0\xB8\x94\xE0\xB9\x80\xE0\xB8\x95\xE0\xB8\xAD\xE0\xB8\xA3\xE0\xB9\x8C\xE0\xB8\xA1\xE0\xB8\xAD\xE0\xB8\xA3\xE0\xB9\x8C\xE0\xB9\x81\xE0\xB8\x94\xE0\xB8\x94\xE0\xB8\x8A\xE0\xB8\xB2\xE0\xB8\xAB\xE0\xB8\xA3\xE0\xB8\xB4\xE0\xB8\xA7\xE0\xB8\xB2\xE0\xB8\xA3\xE0\xB9\x8C\xE0\xB9\x80\xE0\xB8\xA1\xE0\xB8\xAE\xE0\xB8\xA3\xE0\xB9\x8C\xE0\xB8\xAD\xE0\xB8\xB0\xE0\xB8\x9A\xE0\xB8\xB2\xE0\xB8\x99\xE0\xB8\xAD\xE0\xB8\xB0\xE0\xB8\x8B\xE0\xB8\xB2\xE0\xB8\xA3\xE0\xB9\x8C\xE0\xB9\x80\xE0\xB8\x94\xE0\xB8\xA2\xE0\xB9\x8C\xE0\xB8\x9A\xE0\xB8\xB2\xE0\xB8\xAE\xE0\xB9\x8C\xE0\xB8\xA1\xE0\xB8\xB2\xE0\xB8\x99\xE0\xB9\x80\xE0\xB8\xAD\xE0\xB8\xAA\xE0\xB8\x9F\xE0\xB8\xB2\xE0\xB8\x99\xE0\xB8\x94\xE0\xB9\x8C") });
                const _3S_TR: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\t\0\x14\0\x1A\0\x1D\0#\0,\x000\x004\08\0;\0A\0FerverdinOrdibehe\xC5\x9FtHordadTirMordad\xC5\x9EehriverMehrAbanAzerDeyBehmenEsfend") });
                const _3S_UK: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x12\0&\x002\08\0D\0T\0\\\0d\0l\0r\0~\0\xD1\x84\xD0\xB0\xD1\x80\xD0\xB2\xD0\xB0\xD1\x80\xD0\xB4\xD1\x96\xD0\xBD\xD0\xBE\xD1\x80\xD0\xB4\xD1\x96\xD0\xB1\xD0\xB5\xD1\x85\xD0\xB5\xD1\x88\xD1\x82\xD1\x85\xD0\xBE\xD1\x80\xD0\xB4\xD0\xB0\xD0\xB4\xD1\x82\xD1\x96\xD1\x80\xD0\xBC\xD0\xBE\xD1\x80\xD0\xB4\xD0\xB0\xD0\xB4\xD1\x88\xD0\xB0\xD1\x85\xD1\x80\xD1\x96\xD0\xB2\xD0\xB5\xD1\x80\xD0\xBC\xD0\xB5\xD1\x85\xD1\x80\xD0\xB0\xD0\xB1\xD0\xB0\xD0\xBD\xD0\xB0\xD0\xB7\xD0\xB5\xD1\x80\xD0\xB4\xD0\xB5\xD0\xB9\xD0\xB1\xD0\xB0\xD1\x85\xD0\xBC\xD0\xB0\xD0\xBD\xD0\xB5\xD1\x81\xD1\x84\xD0\xB0\xD0\xBD\xD0\xB4") });
                const _3S_UND: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\t\0\x14\0\x1B\0\x1E\0$\0-\x001\x005\09\0<\0B\0FarvardinOrdibeheshtKhordadTirMordadShahrivarMehrAbanAzarDeyBahmanEsfand") });
                const _3S_UR: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x0C\0\x1A\0&\0,\x006\0D\0J\0R\0X\0\\\0d\0\xD9\x81\xD8\xB1\xD9\x88\xD8\xB1\xD8\xAF\xD9\x86\xD8\xA2\xD8\xB1\xDA\x88\xD8\xA8\xD8\xA7\xD8\xA6\xD8\xB4\xD8\xAE\xD8\xAF\xD8\xA7\xD8\xAF\xD8\xA7\xD8\xAF\xD8\xAA\xDB\x8C\xD8\xB1\xD9\x85\xD8\xB1\xD8\xAF\xD8\xA7\xD8\xAF\xD8\xB4\xDB\x81\xD8\xB1\xDB\x8C\xD9\x88\xD8\xA7\xD8\xB1\xD9\x85\xDB\x81\xD8\xB1\xD8\xA7\xD8\xA8\xD8\xA7\xD9\x86\xD8\xA2\xD8\xB2\xD8\xB1\xDA\x88\xDB\x92\xD8\xA8\xDB\x81\xD9\x85\xD9\x86\xD8\xA7\xD8\xB3\xD9\x81\xD9\x86\xD8\xAF") });
                const _3S_UZ: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\t\0\x16\0\x1C\0\x1F\0%\0.\x002\x006\0:\0=\0C\0farvardino\xCA\xBBrdibehishtxurdodtirmurdodshahrivarmehrobonozardeybahmanisfand") });
                const _3S_YUE: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x04\0\x08\0\x0C\0\x10\0\x14\0\x18\0\x1C\0 \0$\0)\0.\x001\xE6\x9C\x882\xE6\x9C\x883\xE6\x9C\x884\xE6\x9C\x885\xE6\x9C\x886\xE6\x9C\x887\xE6\x9C\x888\xE6\x9C\x889\xE6\x9C\x8810\xE6\x9C\x8811\xE6\x9C\x8812\xE6\x9C\x88") });
                const _3_FI: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x0E\0\x1E\0*\x002\0=\0K\0T\0]\0f\0n\0y\0farvardinkuutaordibehe\xC5\xA1tkuutakhordadkuutatirkuutamordadkuuta\xC5\xA1ahrivarkuutamehrkuutaabankuutaazarkuutadeykuutabahmankuutaesfandkuuta") });
                const _3_LO: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x18\09\0K\0T\0f\0{\0\x84\0\x93\0\x9F\0\xA8\0\xBA\0\xE0\xBA\x9F\xE0\xBA\xB2\xE0\xBA\xA3\xE0\xBA\xA7\xE0\xBA\xB2\xE0\xBA\x94\xE0\xBA\xB4\xE0\xBA\x99\xE0\xBA\xAD\xE0\xBB\x8D\xE0\xBA\xA3\xE0\xBA\x94\xE0\xBA\xB5\xE0\xBA\x9A\xE0\xBA\xB5\xE0\xBB\x80\xE0\xBA\xAB\xE0\xBA\xA3\xE0\xBA\x94\xE0\xBA\x84\xE0\xBB\x8D\xE0\xBA\xA3\xE0\xBB\x80\xE0\xBA\x94\xE0\xBA\x94\xE0\xBB\x81\xE0\xBA\x95\xE0\xBA\xA3\xE0\xBA\xA1\xE0\xBB\x8D\xE0\xBA\xA3\xE0\xBB\x80\xE0\xBA\x94\xE0\xBA\x94\xE0\xBA\x8A\xE0\xBA\xB2\xE0\xBA\xA3\xE0\xBA\xAB\xE0\xBA\xB4\xE0\xBA\xA7\xE0\xBA\xB2\xE0\xBB\x80\xE0\xBA\xA1\xE0\xBA\xB5\xE0\xBA\xAD\xE0\xBA\xB2\xE0\xBA\x9A\xE0\xBA\xB2\xE0\xBA\x99\xE0\xBA\xAD\xE0\xBA\xB2\xE0\xBA\x8A\xE0\xBA\xB2\xE0\xBA\x94\xE0\xBA\xB5\xE0\xBA\xA3\xE0\xBA\x9A\xE0\xBA\xA3\xE0\xBA\xB2\xE0\xBA\xA1\xE0\xBA\xB2\xE0\xBA\x99\xE0\xBB\x80\xE0\xBA\xAD\xE0\xBA\xAA\xE0\xBA\x9F\xE0\xBA\xB2\xE0\xBA\x99") });
                const _3_SV: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\t\0\x14\0\x1C\0\x1F\0&\0/\x003\09\0>\0A\0G\0farvardinordibeheshtkhord\xC4\x81dtirmord\xC4\x81dshahrivarmehr\xC4\x81b\xC4\x81n\xC4\x81zardeybahmanesfand") });
                const _3_UZ: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\t\0\x16\0\x1C\0\x1F\0%\0.\x002\x006\0:\0=\0C\0farvardino\xCA\xBBrdibehishtxurdodtirmurdodshahrivarmehrobonozardeybahmanisfan") });
                const _4S_BN: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x03\0\x06\0\t\0\x0C\0\x0F\0\x12\0\x15\0\x18\0\x1B\0!\0'\0\xE0\xA7\xA7\xE0\xA7\xA8\xE0\xA7\xA9\xE0\xA7\xAA\xE0\xA7\xAB\xE0\xA7\xAC\xE0\xA7\xAD\xE0\xA7\xAE\xE0\xA7\xAF\xE0\xA7\xA7\xE0\xA7\xA6\xE0\xA7\xA7\xE0\xA7\xA7\xE0\xA7\xA7\xE0\xA7\xA8") });
                const _4S_FA: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x02\0\x04\0\x06\0\x08\0\n\0\x0C\0\x0E\0\x10\0\x12\0\x14\0\x16\0\xD9\x81\xD8\xA7\xD8\xAE\xD8\xAA\xD9\x85\xD8\xB4\xD9\x85\xD8\xA2\xD8\xA2\xD8\xAF\xD8\xA8\xD8\xA7") });
                const _4S_FA_AF: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x02\0\x04\0\x06\0\x08\0\n\0\x0C\0\x0E\0\x10\0\x12\0\x14\0\x16\0\xD8\xAD\xD8\xAB\xD8\xAC\xD8\xB3\xD8\xA7\xD8\xB3\xD9\x85\xD8\xB9\xD9\x82\xD8\xAC\xD8\xAF\xD8\xAD") });
                const _4S_FF_ADLM: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x04\0\x08\0\x0C\0\x10\0\x14\0\x18\0\x1C\0 \0$\0,\x004\0\xF0\x9E\xA5\x91\xF0\x9E\xA5\x92\xF0\x9E\xA5\x93\xF0\x9E\xA5\x94\xF0\x9E\xA5\x95\xF0\x9E\xA5\x96\xF0\x9E\xA5\x97\xF0\x9E\xA5\x98\xF0\x9E\xA5\x99\xF0\x9E\xA5\x91\xF0\x9E\xA5\x90\xF0\x9E\xA5\x91\xF0\x9E\xA5\x91\xF0\x9E\xA5\x91\xF0\x9E\xA5\x92") });
                const _4S_HR: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x02\0\x04\0\x06\0\x08\0\n\0\x0C\0\x0E\0\x10\0\x12\0\x15\0\x18\x001.2.3.4.5.6.7.8.9.10.11.12.") });
                const _4S_ML: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x04\0\x08\0\x0E\0\x15\0\x1C\0 \0'\0+\0/\x006\0:\0\xE0\xB4\xAB.\xE0\xB4\x93.\xE0\xB4\x96\xE0\xB5\x8B\xE0\xB4\x9F\xE0\xB4\xBF.\xE0\xB4\xAE\xE0\xB5\x8B.\xE0\xB4\xB7.\xE0\xB4\xAE\xE0\xB5\x86.\xE0\xB4\x85.\xE0\xB4\x85.\xE0\xB4\xA1\xE0\xB5\x86.\xE0\xB4\xAC.\xE0\xB4\x8E.") });
                const _4S_MR: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x03\0\x06\0\t\0\x0C\0\x0F\0\x12\0\x15\0\x18\0\x1B\0!\0'\0\xE0\xA5\xA7\xE0\xA5\xA8\xE0\xA5\xA9\xE0\xA5\xAA\xE0\xA5\xAB\xE0\xA5\xAC\xE0\xA5\xAD\xE0\xA5\xAE\xE0\xA5\xAF\xE0\xA5\xA7\xE0\xA5\xA6\xE0\xA5\xA7\xE0\xA5\xA7\xE0\xA5\xA7\xE0\xA5\xA8") });
                const _4S_PS: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x02\0\x04\0\x06\0\x08\0\n\0\x0C\0\x0E\0\x10\0\x12\0\x16\0\x1A\0\xDB\xB1\xDB\xB2\xDB\xB3\xDB\xB4\xDB\xB5\xDB\xB6\xDB\xB7\xDB\xB8\xDB\xB9\xDB\xB1\xDB\xB0\xDB\xB1\xDB\xB1\xDB\xB1\xDB\xB2") });
                const _4S_UND: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x01\0\x02\0\x03\0\x04\0\x05\0\x06\0\x07\0\x08\0\t\0\x0B\0\r\x00123456789101112") });
                const _5S_BN: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0!\0B\0W\0`\0r\0\x8A\0\x99\0\xA5\0\xB4\0\xBA\0\xCC\0\xE0\xA6\xAB\xE0\xA7\x8D\xE0\xA6\xAF\xE0\xA6\xBE\xE0\xA6\xAD\xE0\xA6\xBE\xE0\xA6\xB0\xE0\xA7\x8D\xE0\xA6\xA1\xE0\xA6\xBF\xE0\xA6\xA8\xE0\xA6\x85\xE0\xA6\xB0\xE0\xA6\xA1\xE0\xA6\xBF\xE0\xA6\xAC\xE0\xA7\x87\xE0\xA6\xB9\xE0\xA7\x87\xE0\xA6\xB6\xE0\xA7\x8D\xE0\xA6\xA4\xE0\xA6\x96\xE0\xA7\x8B\xE0\xA6\xB0\xE0\xA7\x8D\xE0\xA6\xA6\xE0\xA7\x8D\xE0\xA6\xA6\xE0\xA6\xA4\xE0\xA7\x80\xE0\xA6\xB0\xE0\xA6\xAE\xE0\xA6\xB0\xE0\xA7\x8D\xE0\xA6\xAF\xE0\xA6\xBE\xE0\xA6\xA6\xE0\xA6\xB6\xE0\xA6\xBE\xE0\xA6\xB9\xE0\xA6\xB0\xE0\xA6\xBF\xE0\xA6\xAC\xE0\xA6\xBE\xE0\xA6\xB0\xE0\xA6\xAE\xE0\xA7\x87\xE0\xA6\xB9\xE0\xA7\x87\xE0\xA6\xB0\xE0\xA6\x86\xE0\xA6\xAC\xE0\xA6\xBE\xE0\xA6\xA8\xE0\xA6\xAC\xE0\xA6\xBE\xE0\xA6\x9C\xE0\xA6\xBE\xE0\xA6\xB0\xE0\xA6\xA6\xE0\xA7\x87\xE0\xA6\xAC\xE0\xA6\xBE\xE0\xA6\xB9\xE0\xA6\xAE\xE0\xA6\xBE\xE0\xA6\xA8\xE0\xA6\x8F\xE0\xA6\xB8\xE0\xA6\xAB\xE0\xA7\x8D\xE0\xA6\xAF\xE0\xA6\xBE\xE0\xA6\xA8\xE0\xA7\x8D\xE0\xA6\xA1") });
                const _5S_FI: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x0C\0\x1A\0$\0*\x003\0?\0F\0M\0T\0Z\0c\0farvardinkuuordibehe\xC5\xA1tkuukhordadkuutirkuumordadkuu\xC5\xA1ahrivarkuumehrkuuabankuuazarkuudeykuubahmankuuesfandkuu") });
                const _5S_FR: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\t\0\x14\0\x1C\0\x1F\0&\0/\x003\09\0>\0A\0G\0farvardinordibehe\xC5\xA1tkhord\xC3\xA2dtirmord\xC3\xA2d\xC5\xA1ahrivarmehr\xC3\xA2b\xC3\xA2n\xC3\xA2zardeybahmanesfand") });
                const _5S_FR_CA: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\t\0\x14\0\x1C\0\x1F\0&\0/\x003\09\0>\0A\0G\0FarvardinOrdibehe\xC5\xA1tKhord\xC3\xA2dTirMord\xC3\xA2d\xC5\xA0ahrivarMehr\xC3\x82b\xC3\xA2n\xC3\x82zarDeyBahmanEsfand") });
                const _5S_LO: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x18\09\0K\0T\0f\0{\0\x84\0\x93\0\xA2\0\xAB\0\xBD\0\xE0\xBA\x9F\xE0\xBA\xA3\xE0\xBA\xB2\xE0\xBA\xA7\xE0\xBA\xB2\xE0\xBA\x94\xE0\xBA\xB4\xE0\xBA\x99\xE0\xBA\xAD\xE0\xBB\x8D\xE0\xBA\xA3\xE0\xBA\x94\xE0\xBA\xB5\xE0\xBA\x9A\xE0\xBA\xB5\xE0\xBB\x80\xE0\xBA\xAB\xE0\xBA\xA3\xE0\xBA\x94\xE0\xBA\x84\xE0\xBB\x8D\xE0\xBA\xA3\xE0\xBB\x80\xE0\xBA\x94\xE0\xBA\x94\xE0\xBB\x81\xE0\xBA\x95\xE0\xBA\xA3\xE0\xBA\xA1\xE0\xBB\x8D\xE0\xBA\xA3\xE0\xBB\x80\xE0\xBA\x94\xE0\xBA\x94\xE0\xBA\x8A\xE0\xBA\xB2\xE0\xBA\xA3\xE0\xBA\xAB\xE0\xBA\xB4\xE0\xBA\xA7\xE0\xBA\xB2\xE0\xBB\x80\xE0\xBA\xA1\xE0\xBA\xB5\xE0\xBA\xAD\xE0\xBA\xB2\xE0\xBA\x9A\xE0\xBA\xB2\xE0\xBA\x99\xE0\xBA\xAD\xE0\xBA\xB2\xE0\xBA\x8A\xE0\xBA\xB2\xE0\xBA\xA3\xE0\xBA\x94\xE0\xBA\xB5\xE0\xBA\xA3\xE0\xBA\x9A\xE0\xBA\xA3\xE0\xBA\xB2\xE0\xBB\x81\xE0\xBA\xA1\xE0\xBA\x99\xE0\xBB\x80\xE0\xBA\xAD\xE0\xBA\xAA\xE0\xBA\x9F\xE0\xBA\xB2\xE0\xBA\x99") });
                const _5S_TA: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x1E\0E\0]\0i\0\x81\0\x99\0\xAB\0\xBA\0\xC9\0\xCF\0\xE4\0\xE0\xAE\x83\xE0\xAE\xAA\xE0\xAE\xB0\xE0\xAF\x8D\xE0\xAE\xB5\xE0\xAE\xBE\xE0\xAE\xA4\xE0\xAE\xBF\xE0\xAE\xA9\xE0\xAF\x8D\xE0\xAE\x86\xE0\xAE\xB0\xE0\xAF\x8D\xE0\xAE\x9F\xE0\xAE\xBF\xE0\xAE\xAA\xE0\xAF\x86\xE0\xAE\xB9\xE0\xAF\x86\xE0\xAE\xB7\xE0\xAF\x8D\xE0\xAE\xA4\xE0\xAF\x8D\xE0\xAE\x95\xE0\xAF\x8A\xE0\xAE\xB0\xE0\xAF\x8D\xE0\xAE\xA4\xE0\xAE\xBE\xE0\xAE\xA4\xE0\xAF\x8D\xE0\xAE\xA4\xE0\xAE\xBF\xE0\xAE\xB0\xE0\xAF\x8D\xE0\xAE\xAE\xE0\xAF\x8A\xE0\xAE\xB0\xE0\xAF\x8D\xE0\xAE\xA4\xE0\xAE\xBE\xE0\xAE\xA4\xE0\xAF\x8D\xE0\xAE\xB7\xE0\xAE\xBE\xE0\xAE\xB0\xE0\xAE\xBF\xE0\xAE\xB5\xE0\xAE\xBE\xE0\xAE\xB0\xE0\xAF\x8D\xE0\xAE\xAE\xE0\xAF\x86\xE0\xAE\xB9\xE0\xAF\x8D\xE0\xAE\xB0\xE0\xAF\x8D\xE0\xAE\x85\xE0\xAE\xAA\xE0\xAE\xBE\xE0\xAE\xA9\xE0\xAF\x8D\xE0\xAE\x85\xE0\xAE\x9A\xE0\xAE\xBE\xE0\xAE\xB0\xE0\xAF\x8D\xE0\xAE\xA4\xE0\xAF\x87\xE0\xAE\xAA\xE0\xAE\xB9\xE0\xAF\x8D\xE0\xAE\xAE\xE0\xAE\xBE\xE0\xAE\xA9\xE0\xAF\x8D\xE0\xAE\x8E\xE0\xAE\x83\xE0\xAE\xAA\xE0\xAE\xBE\xE0\xAE\xA9\xE0\xAF\x8D") });
                const _5S_UZ: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\t\0\x16\0\x1C\0\x1F\0%\0.\x002\x006\0:\0=\0C\0farvardino\xCA\xBBrdibehishtxurdodturmurdodshahrivarmehrobonozardeybahmanisfand") });
                const _5S_ZH: &S = &icu::datetime::provider::neo::MonthNamesV1::Linear(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x06\0\x0C\0\x12\0\x18\0\x1E\0$\0*\x000\x006\0<\0E\0\xE4\xB8\x80\xE6\x9C\x88\xE4\xBA\x8C\xE6\x9C\x88\xE4\xB8\x89\xE6\x9C\x88\xE5\x9B\x9B\xE6\x9C\x88\xE4\xBA\x94\xE6\x9C\x88\xE5\x85\xAD\xE6\x9C\x88\xE4\xB8\x83\xE6\x9C\x88\xE5\x85\xAB\xE6\x9C\x88\xE4\xB9\x9D\xE6\x9C\x88\xE5\x8D\x81\xE6\x9C\x88\xE5\x8D\x81\xE4\xB8\x80\xE6\x9C\x88\xE5\x8D\x81\xE4\xBA\x8C\xE6\x9C\x88") });
                icu_provider_baked::binary_search::Data(&[(("3", "ar"), _3S_AR), (("3", "az"), _3S_AZ), (("3", "bn"), _3S_BN), (("3", "bs-Cyrl"), _3S_BS_CYRL), (("3", "cs"), _3S_CS), (("3", "da"), _3S_DA), (("3", "de"), _3S_DE), (("3", "es"), _3S_DA), (("3", "fa"), _3S_FA), (("3", "fa-AF"), _3S_FA_AF), (("3", "ff-Adlm"), _3S_FF_ADLM), (("3", "fi"), _3_FI), (("3", "fr"), _3S_FR), (("3", "fr-CA"), _3S_FR_CA), (("3", "gu"), _3S_GU), (("3", "he"), _3S_HE), (("3", "hi"), _3S_HI), (("3", "hu"), _3S_DA), (("3", "is"), _3S_DA), (("3", "ja"), _3S_JA), (("3", "kk"), _3S_KK), (("3", "kn"), _3S_KN), (("3", "ko"), _3S_KO), (("3", "lo"), _3_LO), (("3", "lv"), _3S_LV), (("3", "mk"), _3S_MK), (("3", "ml"), _3S_ML), (("3", "mr"), _3S_MR), (("3", "no"), _3S_DA), (("3", "pa"), _3S_PA), (("3", "pl"), _3S_PL), (("3", "ps"), _3S_PS), (("3", "ro"), _3S_RO), (("3", "ru"), _3S_RU), (("3", "sc"), _3S_SC), (("3", "sk"), _3S_CS), (("3", "so"), _3S_SO), (("3", "sr"), _3S_BS_CYRL), (("3", "sr-Latn"), _3S_SR_LATN), (("3", "sv"), _3_SV), (("3", "ta"), _3S_TA), (("3", "te"), _3S_TE), (("3", "tg"), _3S_TG), (("3", "th"), _3S_TH), (("3", "tr"), _3S_TR), (("3", "uk"), _3S_UK), (("3", "und"), _3S_UND), (("3", "ur"), _3S_UR), (("3", "uz"), _3_UZ), (("3", "yue"), _3S_YUE), (("3", "yue-Hans"), _3S_YUE), (("3", "zh"), _3S_YUE), (("3", "zh-Hant"), _3S_YUE), (("3s", "ar"), _3S_AR), (("3s", "az"), _3S_AZ), (("3s", "bn"), _3S_BN), (("3s", "bs-Cyrl"), _3S_BS_CYRL), (("3s", "cs"), _3S_CS), (("3s", "da"), _3S_DA), (("3s", "de"), _3S_DE), (("3s", "es"), _3S_DA), (("3s", "fa"), _3S_FA), (("3s", "fa-AF"), _3S_FA_AF), (("3s", "ff-Adlm"), _3S_FF_ADLM), (("3s", "fi"), _3S_FI), (("3s", "fr"), _3S_FR), (("3s", "fr-CA"), _3S_FR_CA), (("3s", "gu"), _3S_GU), (("3s", "he"), _3S_HE), (("3s", "hi"), _3S_HI), (("3s", "hu"), _3S_DA), (("3s", "is"), _3S_DA), (("3s", "ja"), _3S_JA), (("3s", "kk"), _3S_KK), (("3s", "kn"), _3S_KN), (("3s", "ko"), _3S_KO), (("3s", "lo"), _3S_LO), (("3s", "lv"), _3S_LV), (("3s", "mk"), _3S_MK), (("3s", "ml"), _3S_ML), (("3s", "mr"), _3S_MR), (("3s", "no"), _3S_DA), (("3s", "pa"), _3S_PA), (("3s", "pl"), _3S_PL), (("3s", "ps"), _3S_PS), (("3s", "ro"), _3S_RO), (("3s", "ru"), _3S_RU), (("3s", "sc"), _3S_SC), (("3s", "sk"), _3S_CS), (("3s", "so"), _3S_SO), (("3s", "sr"), _3S_BS_CYRL), (("3s", "sr-Latn"), _3S_SR_LATN), (("3s", "sv"), _3S_SV), (("3s", "ta"), _3S_TA), (("3s", "te"), _3S_TE), (("3s", "tg"), _3S_TG), (("3s", "th"), _3S_TH), (("3s", "tr"), _3S_TR), (("3s", "uk"), _3S_UK), (("3s", "und"), _3S_UND), (("3s", "ur"), _3S_UR), (("3s", "uz"), _3S_UZ), (("3s", "yue"), _3S_YUE), (("3s", "yue-Hans"), _3S_YUE), (("3s", "zh"), _3S_YUE), (("3s", "zh-Hant"), _3S_YUE), (("4", "bn"), _4S_BN), (("4", "fa"), _4S_FA), (("4", "fa-AF"), _4S_FA_AF), (("4", "ff-Adlm"), _4S_FF_ADLM), (("4", "hr"), _4S_HR), (("4", "ml"), _4S_ML), (("4", "mr"), _4S_MR), (("4", "ps"), _4S_PS), (("4", "und"), _4S_UND), (("4s", "bn"), _4S_BN), (("4s", "fa"), _4S_FA), (("4s", "fa-AF"), _4S_FA_AF), (("4s", "ff-Adlm"), _4S_FF_ADLM), (("4s", "hr"), _4S_HR), (("4s", "ml"), _4S_ML), (("4s", "mr"), _4S_MR), (("4s", "ps"), _4S_PS), (("4s", "und"), _4S_UND), (("5", "ar"), _3S_AR), (("5", "az"), _3S_AZ), (("5", "bn"), _5S_BN), (("5", "bs-Cyrl"), _3S_BS_CYRL), (("5", "cs"), _3S_CS), (("5", "da"), _3S_DA), (("5", "de"), _3S_DE), (("5", "es"), _3S_DA), (("5", "fa"), _3S_FA), (("5", "fa-AF"), _3S_FA_AF), (("5", "ff-Adlm"), _3S_FF_ADLM), (("5", "fi"), _3_FI), (("5", "fr"), _5S_FR), (("5", "fr-CA"), _5S_FR_CA), (("5", "gu"), _3S_GU), (("5", "he"), _3S_HE), (("5", "hi"), _3S_HI), (("5", "hu"), _3S_DA), (("5", "is"), _3S_DA), (("5", "ja"), _3S_JA), (("5", "kk"), _3S_KK), (("5", "kn"), _3S_KN), (("5", "ko"), _3S_KO), (("5", "lo"), _5S_LO), (("5", "lv"), _3S_LV), (("5", "mk"), _3S_MK), (("5", "ml"), _3S_ML), (("5", "mr"), _3S_MR), (("5", "no"), _3S_DA), (("5", "pa"), _3S_PA), (("5", "pl"), _3S_PL), (("5", "ps"), _3S_PS), (("5", "ro"), _3S_RO), (("5", "ru"), _3S_RU), (("5", "sc"), _3S_DA), (("5", "sk"), _3S_CS), (("5", "so"), _3S_SO), (("5", "sr"), _3S_BS_CYRL), (("5", "sr-Latn"), _3S_SR_LATN), (("5", "sv"), _3_SV), (("5", "ta"), _5S_TA), (("5", "te"), _3S_TE), (("5", "tg"), _3S_TG), (("5", "th"), _3S_TH), (("5", "tr"), _3S_TR), (("5", "uk"), _3S_UK), (("5", "und"), _3S_UND), (("5", "ur"), _3S_UR), (("5", "uz"), _3_UZ), (("5", "yue"), _3S_YUE), (("5", "yue-Hans"), _3S_YUE), (("5", "zh"), _5S_ZH), (("5", "zh-Hant"), _3S_YUE), (("5s", "ar"), _3S_AR), (("5s", "az"), _3S_AZ), (("5s", "bn"), _5S_BN), (("5s", "bs-Cyrl"), _3S_BS_CYRL), (("5s", "cs"), _3S_CS), (("5s", "da"), _3S_DA), (("5s", "de"), _3S_DE), (("5s", "es"), _3S_DA), (("5s", "fa"), _3S_FA), (("5s", "fa-AF"), _3S_FA_AF), (("5s", "ff-Adlm"), _3S_FF_ADLM), (("5s", "fi"), _5S_FI), (("5s", "fr"), _5S_FR), (("5s", "fr-CA"), _5S_FR_CA), (("5s", "gu"), _3S_GU), (("5s", "he"), _3S_HE), (("5s", "hi"), _3S_HI), (("5s", "hu"), _3S_DA), (("5s", "is"), _3S_DA), (("5s", "ja"), _3S_JA), (("5s", "kk"), _3S_KK), (("5s", "kn"), _3S_KN), (("5s", "ko"), _3S_KO), (("5s", "lo"), _5S_LO), (("5s", "lv"), _3S_LV), (("5s", "mk"), _3S_MK), (("5s", "ml"), _3S_ML), (("5s", "mr"), _3S_MR), (("5s", "no"), _3S_DA), (("5s", "pa"), _3S_PA), (("5s", "pl"), _3S_PL), (("5s", "ps"), _3S_PS), (("5s", "ro"), _3S_RO), (("5s", "ru"), _3S_RU), (("5s", "sc"), _3S_DA), (("5s", "sk"), _3S_CS), (("5s", "so"), _3S_SO), (("5s", "sr"), _3S_BS_CYRL), (("5s", "sr-Latn"), _3S_SR_LATN), (("5s", "sv"), _3S_SV), (("5s", "ta"), _5S_TA), (("5s", "te"), _3S_TE), (("5s", "tg"), _3S_TG), (("5s", "th"), _3S_TH), (("5s", "tr"), _3S_TR), (("5s", "uk"), _3S_UK), (("5s", "und"), _3S_UND), (("5s", "ur"), _3S_UR), (("5s", "uz"), _5S_UZ), (("5s", "yue"), _3S_YUE), (("5s", "yue-Hans"), _3S_YUE), (("5s", "zh"), _5S_ZH), (("5s", "zh-Hant"), _3S_YUE)])
            };
        }
        #[clippy::msrv = "1.70"]
        impl icu_provider::DataProvider<icu::datetime::provider::neo::PersianMonthNamesV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::datetime::provider::neo::PersianMonthNamesV1Marker>, icu_provider::DataError> {
                let mut metadata = icu_provider::DataResponseMetadata::default();
                let payload = if let Some(payload) = icu_provider_baked::DataStore::get(&Self::DATA_PERSIAN_MONTH_NAMES_V1_MARKER, req.id) {
                    payload
                } else {
                    const FALLBACKER: icu::locale::fallback::LocaleFallbackerWithConfig<'static> = icu::locale::fallback::LocaleFallbacker::new().for_config(<icu::datetime::provider::neo::PersianMonthNamesV1Marker as icu_provider::DataMarker>::INFO.fallback_config);
                    let mut fallback_iterator = FALLBACKER.fallback_for(req.id.locale.clone());
                    loop {
                        if let Some(payload) = icu_provider_baked::DataStore::get(&Self::DATA_PERSIAN_MONTH_NAMES_V1_MARKER, icu_provider::DataIdentifierBorrowed::for_marker_attributes_and_locale(req.id.marker_attributes, fallback_iterator.get())) {
                            metadata.locale = Some(fallback_iterator.take());
                            break payload;
                        }
                        if fallback_iterator.get().is_und() {
                            return Err(icu_provider::DataErrorKind::MissingLocale.with_req(<icu::datetime::provider::neo::PersianMonthNamesV1Marker as icu_provider::DataMarker>::INFO, req));
                        }
                        fallback_iterator.step();
                    }
                };
                Ok(icu_provider::DataResponse { payload: icu_provider::DataPayload::from_static_ref(payload), metadata })
            }
        }
    };
    ($ provider : ty , ITER) => {
        __impl_persian_month_names_v1_marker!($provider);
        #[clippy::msrv = "1.70"]
        impl icu_provider::IterableDataProvider<icu::datetime::provider::neo::PersianMonthNamesV1Marker> for $provider {
            fn iter_ids(&self) -> Result<std::collections::HashSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok(icu_provider_baked::DataStore::iter(&Self::DATA_PERSIAN_MONTH_NAMES_V1_MARKER).collect())
            }
        }
    };
}
#[doc(inline)]
pub use __impl_persian_month_names_v1_marker as impl_persian_month_names_v1_marker;
