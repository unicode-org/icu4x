// @generated
/// Implement `DataProvider<TimezoneIdentifiersIanaExtendedV1>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
///
/// Using this implementation will embed the following data in the binary's data segment:
/// * 9738B[^1] for the singleton data struct
///
/// [^1]: these numbers can be smaller in practice due to linker deduplication
///
/// This macro requires the following crates:
/// * `icu`
/// * `icu_provider`
/// * `zerovec`
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_timezone_identifiers_iana_extended_v1 {
    ($ provider : ty) => {
        #[clippy::msrv = "1.82"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.82"]
        impl $provider {
            #[doc(hidden)]
            pub const SINGLETON_TIMEZONE_IDENTIFIERS_IANA_EXTENDED_V1: &'static <icu::time::provider::iana::TimezoneIdentifiersIanaExtendedV1 as icu_provider::DynamicDataMarker>::DataStruct = &icu::time::provider::iana::IanaNames { normalized_iana_ids: unsafe { zerovec::vecs::VarZeroVec16::from_bytes_unchecked(b"V\x02\x0E\0\x1A\0,\0:\0G\0T\0a\0n\0{\0\x8A\0\x9C\0\xAC\0\xB8\0\xC9\0\xD5\0\xE3\0\xEF\0\x03\x01\x12\x01\x1F\x01.\x01=\x01L\x01Y\x01l\x01w\x01\x85\x01\x94\x01\xA1\x01\xB0\x01\xBC\x01\xCD\x01\xD8\x01\xE5\x01\xF6\x01\x03\x02\x10\x02\x1D\x02*\x028\x02H\x02W\x02e\x02t\x02\x81\x02\x92\x02\xA4\x02\xB5\x02\xC4\x02\xD2\x02\xDE\x02\xED\x02\xF9\x02\n\x03\x1A\x03)\x03:\x03X\x03s\x03\x8C\x03\xA3\x03\xBD\x03\xD6\x03\xF4\x03\x0B\x04%\x04?\x04X\x04q\x04~\x04\x8E\x04\x9E\x04\xAB\x04\xC1\x04\xD1\x04\xDE\x04\xEC\x04\0\x05\x11\x05\x1F\x05,\x05A\x05U\x05c\x05r\x05\x81\x05\x8F\x05\x9E\x05\xAF\x05\xC4\x05\xD6\x05\xE5\x05\xF3\x05\x02\x06\x16\x06$\x068\x06F\x06U\x06e\x06u\x06\x85\x06\x98\x06\xAB\x06\xBC\x06\xCD\x06\xDE\x06\xF0\x06\xFF\x06\x11\x07\"\x073\x07A\x07P\x07^\x07p\x07\x8C\x07\xA0\x07\xB7\x07\xD1\x07\xEA\x07\xFF\x07\x18\x08/\x08=\x08L\x08[\x08i\x08\x84\x08\x9F\x08\xB1\x08\xBF\x08\xCB\x08\xDE\x08\xF3\x08\x01\t\x10\t\x1E\t-\t?\tP\t`\tq\t\x7F\t\x91\t\xA4\t\xB4\t\xC3\t\xD4\t\xE6\t\xF8\t\x06\n\x16\n\"\n1\nL\ng\n\x85\n\x91\n\xA0\n\xAE\n\xC0\n\xCF\n\xE5\n\xFA\n\r\x0B \x0B4\x0BH\x0BV\x0Bd\x0Bt\x0B\x86\x0B\x96\x0B\xA6\x0B\xBB\x0B\xCC\x0B\xE0\x0B\xED\x0B\x02\x0C\x12\x0C\"\x0C2\x0CC\x0CU\x0Cj\x0C}\x0C\x8A\x0C\x99\x0C\xA8\x0C\xB7\x0C\xC8\x0C\xDA\x0C\xEA\x0C\xF9\x0C\t\r\x19\r2\rF\rW\ri\rz\r\x8C\r\x9C\r\xAC\r\xBD\r\xD0\r\xD9\r\xE4\r\xEE\r\xF9\r\x03\x0E\x0E\x0E\x1B\x0E&\x0E2\x0E>\x0EG\x0ES\x0E_\x0Ej\x0Ev\x0E\x81\x0E\x8B\x0E\x97\x0E\xA4\x0E\xAE\x0E\xB7\x0E\xC1\x0E\xCE\x0E\xDC\x0E\xE5\x0E\xF0\x0E\0\x0F\x0E\x0F\x17\x0F#\x0F/\x0F<\x0FJ\x0FT\x0Fb\x0Fn\x0F|\x0F\x89\x0F\x95\x0F\xA5\x0F\xB6\x0F\xC2\x0F\xCD\x0F\xD7\x0F\xE3\x0F\xF0\x0F\xFB\x0F\x06\x10\x12\x10#\x103\x10<\x10E\x10T\x10b\x10p\x10z\x10\x87\x10\x95\x10\xA0\x10\xAD\x10\xBB\x10\xC5\x10\xD2\x10\xE0\x10\xF2\x10\xFD\x10\n\x11\x16\x11!\x11-\x117\x11A\x11Q\x11\\\x11i\x11w\x11\x87\x11\x93\x11\x9E\x11\xB0\x11\xBC\x11\xCB\x11\xDB\x11\xEA\x11\xFD\x11\x0B\x12\x1B\x12-\x12C\x12U\x12e\x12w\x12\x89\x12\x9E\x12\xAE\x12\xBD\x12\xCD\x12\xDF\x12\xF2\x12\x05\x13\x14\x13$\x13+\x134\x13>\x13H\x13R\x13[\x13d\x13m\x13v\x13\x7F\x13\x88\x13\x91\x13\x9A\x13\xA3\x13\xAD\x13\xB7\x13\xC1\x13\xCB\x13\xD5\x13\xDE\x13\xE7\x13\xF0\x13\xF9\x13\x02\x14\x0B\x14\x14\x14\x1D\x14$\x144\x14B\x14R\x14_\x14n\x14{\x14\x8C\x14\x9B\x14\xAB\x14\xBA\x14\xC9\x14\xD8\x14\xE9\x14\xF6\x14\x06\x15\x15\x15$\x156\x15E\x15R\x15d\x15p\x15{\x15\x88\x15\x98\x15\xA5\x15\xB6\x15\xC3\x15\xCF\x15\xDF\x15\xEB\x15\xF8\x15\x05\x16\x10\x16\x1C\x16,\x169\x16D\x16O\x16\\\x16m\x16|\x16\x8A\x16\x9B\x16\xA8\x16\xB4\x16\xC4\x16\xD2\x16\xDF\x16\xEF\x16\xFB\x16\t\x17\x16\x17$\x174\x17A\x17N\x17[\x17n\x17{\x17\x8B\x17\x97\x17\xA4\x17\xB4\x17\xBF\x17\xCE\x17\xDE\x17\xEC\x17\xFA\x17\x06\x18\x16\x18*\x189\x18F\x18T\x18a\x18p\x18|\x18\x8C\x18\x9D\x18\xAC\x18\xBF\x18\xCB\x18\xDB\x18\xE9\x18\xFB\x18\t\x19\x1A\x19(\x199\x19G\x19T\x19`\x19o\x19}\x19\x8E\x19\x9B\x19\xAB\x19\xBA\x19\xCE\x19\xDF\x19\xED\x19\xFB\x19\t\x1A\x1A\x1A&\x1A4\x1AA\x1AP\x1Ap\x1A|\x1A\x90\x1A\xA1\x1A\xB6\x1A\xC5\x1A\xD5\x1A\xE7\x1A\xF6\x1A\n\x1B\x17\x1B&\x1B8\x1BG\x1BW\x1Bf\x1By\x1B\x8B\x1B\x9E\x1B\xAD\x1B\xC1\x1B\xD1\x1B\xE4\x1B\xF2\x1B\x05\x1C\x1A\x1C(\x1C5\x1CD\x1CR\x1C`\x1Cj\x1Cu\x1C\x82\x1C\x8E\x1C\x9B\x1C\xA5\x1C\xB1\x1C\xBC\x1C\xC9\x1C\xD4\x1C\xE6\x1C\xF5\x1C\x04\x1D\x16\x1D#\x1D5\x1DE\x1DR\x1Da\x1Dn\x1D\x82\x1D\x91\x1D\xA3\x1D\xB5\x1D\xC3\x1D\xD7\x1D\xE2\x1D\xF2\x1D\xFD\x1D\x08\x1E\x17\x1E%\x1E=\x1EK\x1EZ\x1Em\x1E{\x1E\x8E\x1E\x9A\x1E\x9D\x1E\xAE\x1E\xC0\x1E\xC7\x1E\xCB\x1E\xCE\x1E\xD3\x1E\xD7\x1E\xDA\x1E\xE1\x1E\xEA\x1E\xF3\x1E\xFB\x1E\x08\x1F\x0F\x1F\x1C\x1F$\x1F2\x1F=\x1FK\x1FZ\x1Fi\x1Fz\x1F|\x1F\x83\x1F\x86\x1F\x8B\x1F\x90\x1F\x94\x1F\x9D\x1F\xA5\x1F\xA8\x1F\xAF\x1F\xB3\x1F\xB9\x1F\xC0\x1F\xC5\x1F\xCE\x1F\xD3\x1F\xD6\x1F\xE6\x1F\xF4\x1F\x02 \x05 \x0C \x12 \x14 \x1B , < J W c n t | \x7F \x86 \x89 \x8C \x95 \x9B \x9E \xA7 \xB0 \xBB \xC5 \xCF \xDE \xE8 \xF1 \x02!\r!\x18!\"!0!8!;!?!B!Africa/AbidjanAfrica/AccraAfrica/Addis_AbabaAfrica/AlgiersAfrica/AsmaraAfrica/BamakoAfrica/BanguiAfrica/BanjulAfrica/BissauAfrica/BlantyreAfrica/BrazzavilleAfrica/BujumburaAfrica/CairoAfrica/CasablancaAfrica/CeutaAfrica/ConakryAfrica/DakarAfrica/Dar_es_SalaamAfrica/DjiboutiAfrica/DoualaAfrica/El_AaiunAfrica/FreetownAfrica/GaboroneAfrica/HarareAfrica/JohannesburgAfrica/JubaAfrica/KampalaAfrica/KhartoumAfrica/KigaliAfrica/KinshasaAfrica/LagosAfrica/LibrevilleAfrica/LomeAfrica/LuandaAfrica/LubumbashiAfrica/LusakaAfrica/MalaboAfrica/MaputoAfrica/MaseruAfrica/MbabaneAfrica/MogadishuAfrica/MonroviaAfrica/NairobiAfrica/NdjamenaAfrica/NiameyAfrica/NouakchottAfrica/OuagadougouAfrica/Porto-NovoAfrica/Sao_TomeAfrica/TripoliAfrica/TunisAfrica/WindhoekAmerica/AdakAmerica/AnchorageAmerica/AnguillaAmerica/AntiguaAmerica/AraguainaAmerica/Argentina/Buenos_AiresAmerica/Argentina/CatamarcaAmerica/Argentina/CordobaAmerica/Argentina/JujuyAmerica/Argentina/La_RiojaAmerica/Argentina/MendozaAmerica/Argentina/Rio_GallegosAmerica/Argentina/SaltaAmerica/Argentina/San_JuanAmerica/Argentina/San_LuisAmerica/Argentina/TucumanAmerica/Argentina/UshuaiaAmerica/ArubaAmerica/AsuncionAmerica/AtikokanAmerica/BahiaAmerica/Bahia_BanderasAmerica/BarbadosAmerica/BelemAmerica/BelizeAmerica/Blanc-SablonAmerica/Boa_VistaAmerica/BogotaAmerica/BoiseAmerica/Cambridge_BayAmerica/Campo_GrandeAmerica/CancunAmerica/CaracasAmerica/CayenneAmerica/CaymanAmerica/ChicagoAmerica/ChihuahuaAmerica/Ciudad_JuarezAmerica/Costa_RicaAmerica/CrestonAmerica/CuiabaAmerica/CuracaoAmerica/DanmarkshavnAmerica/DawsonAmerica/Dawson_CreekAmerica/DenverAmerica/DetroitAmerica/DominicaAmerica/EdmontonAmerica/EirunepeAmerica/El_SalvadorAmerica/Fort_NelsonAmerica/FortalezaAmerica/Glace_BayAmerica/Goose_BayAmerica/Grand_TurkAmerica/GrenadaAmerica/GuadeloupeAmerica/GuatemalaAmerica/GuayaquilAmerica/GuyanaAmerica/HalifaxAmerica/HavanaAmerica/HermosilloAmerica/Indiana/IndianapolisAmerica/Indiana/KnoxAmerica/Indiana/MarengoAmerica/Indiana/PetersburgAmerica/Indiana/Tell_CityAmerica/Indiana/VevayAmerica/Indiana/VincennesAmerica/Indiana/WinamacAmerica/InuvikAmerica/IqaluitAmerica/JamaicaAmerica/JuneauAmerica/Kentucky/LouisvilleAmerica/Kentucky/MonticelloAmerica/KralendijkAmerica/La_PazAmerica/LimaAmerica/Los_AngelesAmerica/Lower_PrincesAmerica/MaceioAmerica/ManaguaAmerica/ManausAmerica/MarigotAmerica/MartiniqueAmerica/MatamorosAmerica/MazatlanAmerica/MenomineeAmerica/MeridaAmerica/MetlakatlaAmerica/Mexico_CityAmerica/MiquelonAmerica/MonctonAmerica/MonterreyAmerica/MontevideoAmerica/MontserratAmerica/NassauAmerica/New_YorkAmerica/NomeAmerica/NoronhaAmerica/North_Dakota/BeulahAmerica/North_Dakota/CenterAmerica/North_Dakota/New_SalemAmerica/NuukAmerica/OjinagaAmerica/PanamaAmerica/ParamariboAmerica/PhoenixAmerica/Port-au-PrinceAmerica/Port_of_SpainAmerica/Porto_VelhoAmerica/Puerto_RicoAmerica/Punta_ArenasAmerica/Rankin_InletAmerica/RecifeAmerica/ReginaAmerica/ResoluteAmerica/Rio_BrancoAmerica/SantaremAmerica/SantiagoAmerica/Santo_DomingoAmerica/Sao_PauloAmerica/ScoresbysundAmerica/SitkaAmerica/St_BarthelemyAmerica/St_JohnsAmerica/St_KittsAmerica/St_LuciaAmerica/St_ThomasAmerica/St_VincentAmerica/Swift_CurrentAmerica/TegucigalpaAmerica/ThuleAmerica/TijuanaAmerica/TorontoAmerica/TortolaAmerica/VancouverAmerica/WhitehorseAmerica/WinnipegAmerica/YakutatAntarctica/CaseyAntarctica/DavisAntarctica/DumontDUrvilleAntarctica/MacquarieAntarctica/MawsonAntarctica/McMurdoAntarctica/PalmerAntarctica/RotheraAntarctica/SyowaAntarctica/TrollAntarctica/VostokArctic/LongyearbyenAsia/AdenAsia/AlmatyAsia/AmmanAsia/AnadyrAsia/AqtauAsia/AqtobeAsia/AshgabatAsia/AtyrauAsia/BaghdadAsia/BahrainAsia/BakuAsia/BangkokAsia/BarnaulAsia/BeirutAsia/BishkekAsia/BruneiAsia/ChitaAsia/ColomboAsia/DamascusAsia/DhakaAsia/DiliAsia/DubaiAsia/DushanbeAsia/FamagustaAsia/GazaAsia/HebronAsia/Ho_Chi_MinhAsia/Hong_KongAsia/HovdAsia/IrkutskAsia/JakartaAsia/JayapuraAsia/JerusalemAsia/KabulAsia/KamchatkaAsia/KarachiAsia/KathmanduAsia/KhandygaAsia/KolkataAsia/KrasnoyarskAsia/Kuala_LumpurAsia/KuchingAsia/KuwaitAsia/MacauAsia/MagadanAsia/MakassarAsia/ManilaAsia/MuscatAsia/NicosiaAsia/NovokuznetskAsia/NovosibirskAsia/OmskAsia/OralAsia/Phnom_PenhAsia/PontianakAsia/PyongyangAsia/QatarAsia/QostanayAsia/QyzylordaAsia/RiyadhAsia/SakhalinAsia/SamarkandAsia/SeoulAsia/ShanghaiAsia/SingaporeAsia/SrednekolymskAsia/TaipeiAsia/TashkentAsia/TbilisiAsia/TehranAsia/ThimphuAsia/TokyoAsia/TomskAsia/UlaanbaatarAsia/UrumqiAsia/Ust-NeraAsia/VientianeAsia/VladivostokAsia/YakutskAsia/YangonAsia/YekaterinburgAsia/YerevanAtlantic/AzoresAtlantic/BermudaAtlantic/CanaryAtlantic/Cape_VerdeAtlantic/FaroeAtlantic/MadeiraAtlantic/ReykjavikAtlantic/South_GeorgiaAtlantic/St_HelenaAtlantic/StanleyAustralia/AdelaideAustralia/BrisbaneAustralia/Broken_HillAustralia/DarwinAustralia/EuclaAustralia/HobartAustralia/LindemanAustralia/Lord_HoweAustralia/MelbourneAustralia/PerthAustralia/SydneyEtc/GMTEtc/GMT+1Etc/GMT+10Etc/GMT+11Etc/GMT+12Etc/GMT+2Etc/GMT+3Etc/GMT+4Etc/GMT+5Etc/GMT+6Etc/GMT+7Etc/GMT+8Etc/GMT+9Etc/GMT-1Etc/GMT-10Etc/GMT-11Etc/GMT-12Etc/GMT-13Etc/GMT-14Etc/GMT-2Etc/GMT-3Etc/GMT-4Etc/GMT-5Etc/GMT-6Etc/GMT-7Etc/GMT-8Etc/GMT-9Etc/UTCEurope/AmsterdamEurope/AndorraEurope/AstrakhanEurope/AthensEurope/BelgradeEurope/BerlinEurope/BratislavaEurope/BrusselsEurope/BucharestEurope/BudapestEurope/BusingenEurope/ChisinauEurope/CopenhagenEurope/DublinEurope/GibraltarEurope/GuernseyEurope/HelsinkiEurope/Isle_of_ManEurope/IstanbulEurope/JerseyEurope/KaliningradEurope/KirovEurope/KyivEurope/LisbonEurope/LjubljanaEurope/LondonEurope/LuxembourgEurope/MadridEurope/MaltaEurope/MariehamnEurope/MinskEurope/MonacoEurope/MoscowEurope/OsloEurope/ParisEurope/PodgoricaEurope/PragueEurope/RigaEurope/RomeEurope/SamaraEurope/San_MarinoEurope/SarajevoEurope/SaratovEurope/SimferopolEurope/SkopjeEurope/SofiaEurope/StockholmEurope/TallinnEurope/TiraneEurope/UlyanovskEurope/VaduzEurope/VaticanEurope/ViennaEurope/VilniusEurope/VolgogradEurope/WarsawEurope/ZagrebEurope/ZurichIndian/AntananarivoIndian/ChagosIndian/ChristmasIndian/CocosIndian/ComoroIndian/KerguelenIndian/MaheIndian/MaldivesIndian/MauritiusIndian/MayotteIndian/ReunionPacific/ApiaPacific/AucklandPacific/BougainvillePacific/ChathamPacific/ChuukPacific/EasterPacific/EfatePacific/FakaofoPacific/FijiPacific/FunafutiPacific/GalapagosPacific/GambierPacific/GuadalcanalPacific/GuamPacific/HonoluluPacific/KantonPacific/KiritimatiPacific/KosraePacific/KwajaleinPacific/MajuroPacific/MarquesasPacific/MidwayPacific/NauruPacific/NiuePacific/NorfolkPacific/NoumeaPacific/Pago_PagoPacific/PalauPacific/PitcairnPacific/PohnpeiPacific/Port_MoresbyPacific/RarotongaPacific/SaipanPacific/TahitiPacific/TarawaPacific/TongatapuPacific/WakePacific/WallisAfrica/AsmeraAfrica/TimbuktuAmerica/Argentina/ComodRivadaviaAmerica/AtkaAmerica/Buenos_AiresAmerica/CatamarcaAmerica/Coral_HarbourAmerica/CordobaAmerica/EnsenadaAmerica/Fort_WayneAmerica/GodthabAmerica/IndianapolisAmerica/JujuyAmerica/Knox_INAmerica/LouisvilleAmerica/MendozaAmerica/MontrealAmerica/NipigonAmerica/PangnirtungAmerica/Porto_AcreAmerica/Rainy_RiverAmerica/RosarioAmerica/Santa_IsabelAmerica/ShiprockAmerica/Thunder_BayAmerica/VirginAmerica/YellowknifeAntarctica/South_PoleAsia/AshkhabadAsia/CalcuttaAsia/ChoibalsanAsia/ChongqingAsia/ChungkingAsia/DaccaAsia/HarbinAsia/IstanbulAsia/KashgarAsia/KatmanduAsia/MacaoAsia/RangoonAsia/SaigonAsia/Tel_AvivAsia/ThimbuAsia/Ujung_PandangAsia/Ulan_BatorAtlantic/FaeroeAtlantic/Jan_MayenAustralia/ACTAustralia/CanberraAustralia/CurrieAustralia/LHIAustralia/NorthAustralia/NSWAustralia/QueenslandAustralia/SouthAustralia/TasmaniaAustralia/VictoriaAustralia/WestAustralia/YancowinnaBrazil/AcreBrazil/DeNoronhaBrazil/EastBrazil/WestCanada/AtlanticCanada/CentralCanada/East-SaskatchewanCanada/EasternCanada/MountainCanada/NewfoundlandCanada/PacificCanada/SaskatchewanCanada/YukonCETChile/ContinentalChile/EasterIslandCST6CDTCubaEETEgyptEireESTEST5EDTEtc/GMT+0Etc/GMT-0Etc/GMT0Etc/GreenwichEtc/UCTEtc/UniversalEtc/ZuluEurope/BelfastEurope/KievEurope/NicosiaEurope/TiraspolEurope/UzhgorodEurope/ZaporozhyeGBGB-EireGMTGMT+0GMT-0GMT0GreenwichHongkongHSTIcelandIranIsraelJamaicaJapanKwajaleinLibyaMETMexico/BajaNorteMexico/BajaSurMexico/GeneralMSTMST7MDTNavajoNZNZ-CHATPacific/EnderburyPacific/JohnstonPacific/PonapePacific/SamoaPacific/TrukPacific/YapPolandPortugalPRCPST8PDTROCROKSingaporeTurkeyUCTUniversalUS/AlaskaUS/AleutianUS/ArizonaUS/CentralUS/East-IndianaUS/EasternUS/HawaiiUS/Indiana-StarkeUS/MichiganUS/MountainUS/PacificUS/Pacific-NewUS/SamoaUTCW-SUWETZulu") } };
            #[doc(hidden)]
            pub const SINGLETON_TIMEZONE_IDENTIFIERS_IANA_EXTENDED_V1_CHECKSUM: u64 = 4903793488535745989u64;
        }
        #[clippy::msrv = "1.82"]
        impl icu_provider::DataProvider<icu::time::provider::iana::TimezoneIdentifiersIanaExtendedV1> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::time::provider::iana::TimezoneIdentifiersIanaExtendedV1>, icu_provider::DataError> {
                if req.id.locale.is_unknown() {
                    Ok(icu_provider::DataResponse { payload: icu_provider::DataPayload::from_static_ref(Self::SINGLETON_TIMEZONE_IDENTIFIERS_IANA_EXTENDED_V1), metadata: icu_provider::DataResponseMetadata::default().with_checksum(Self::SINGLETON_TIMEZONE_IDENTIFIERS_IANA_EXTENDED_V1_CHECKSUM) })
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::time::provider::iana::TimezoneIdentifiersIanaExtendedV1 as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
    };
    ($ provider : ty , ITER) => {
        __impl_timezone_identifiers_iana_extended_v1!($provider);
        #[clippy::msrv = "1.82"]
        impl icu_provider::IterableDataProvider<icu::time::provider::iana::TimezoneIdentifiersIanaExtendedV1> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BtreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok([Default::default()].into_iter().collect())
            }
        }
    };
    ($ provider : ty , DRY) => {
        __impl_timezone_identifiers_iana_extended_v1!($provider);
        #[clippy::msrv = "1.82"]
        impl icu_provider::DryDataProvider<icu::time::provider::iana::TimezoneIdentifiersIanaExtendedV1> for $provider {
            fn dry_load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponseMetadata, icu_provider::DataError> {
                if req.id.locale.is_unknown() {
                    Ok(icu_provider::DataResponseMetadata::default().with_checksum(Self::SINGLETON_TIMEZONE_IDENTIFIERS_IANA_EXTENDED_V1_CHECKSUM))
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::time::provider::iana::TimezoneIdentifiersIanaExtendedV1 as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
    };
    ($ provider : ty , DRY , ITER) => {
        __impl_timezone_identifiers_iana_extended_v1!($provider);
        #[clippy::msrv = "1.82"]
        impl icu_provider::DryDataProvider<icu::time::provider::iana::TimezoneIdentifiersIanaExtendedV1> for $provider {
            fn dry_load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponseMetadata, icu_provider::DataError> {
                if req.id.locale.is_unknown() {
                    Ok(icu_provider::DataResponseMetadata::default().with_checksum(Self::SINGLETON_TIMEZONE_IDENTIFIERS_IANA_EXTENDED_V1_CHECKSUM))
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::time::provider::iana::TimezoneIdentifiersIanaExtendedV1 as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
        #[clippy::msrv = "1.82"]
        impl icu_provider::IterableDataProvider<icu::time::provider::iana::TimezoneIdentifiersIanaExtendedV1> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BtreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok([Default::default()].into_iter().collect())
            }
        }
    };
}
#[doc(inline)]
pub use __impl_timezone_identifiers_iana_extended_v1 as impl_timezone_identifiers_iana_extended_v1;
