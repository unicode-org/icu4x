// @generated
/// Implement `DataProvider<TimezoneIdentifiersIanaExtendedV1>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
///
/// Using this implementation will embed the following data in the binary's data segment:
/// * 9757B[^1] for the singleton data struct
///
/// [^1]: these numbers can be smaller in practice due to linker deduplication
///
/// This macro requires the following crates:
/// * `icu`
/// * `icu_provider`
/// * `zerovec`
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_timezone_identifiers_iana_extended_v1 {
    ($ provider : ty) => {
        #[clippy::msrv = "1.82"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.82"]
        impl $provider {
            #[doc(hidden)]
            pub const SINGLETON_TIMEZONE_IDENTIFIERS_IANA_EXTENDED_V1: &'static <icu::time::provider::iana::TimezoneIdentifiersIanaExtendedV1 as icu_provider::DynamicDataMarker>::DataStruct = &icu::time::provider::iana::IanaNames { normalized_iana_ids: unsafe { zerovec::vecs::VarZeroVec16::from_bytes_unchecked(b"W\x02\x0E\0\x1A\0,\0:\0G\0T\0a\0n\0{\0\x8A\0\x9C\0\xAC\0\xB8\0\xC9\0\xD5\0\xE3\0\xEF\0\x03\x01\x12\x01\x1F\x01.\x01=\x01L\x01Y\x01l\x01w\x01\x85\x01\x94\x01\xA1\x01\xB0\x01\xBC\x01\xCD\x01\xD8\x01\xE5\x01\xF6\x01\x03\x02\x10\x02\x1D\x02*\x028\x02H\x02W\x02e\x02t\x02\x81\x02\x92\x02\xA4\x02\xB5\x02\xC4\x02\xD2\x02\xDE\x02\xED\x02\xF9\x02\n\x03\x1A\x03)\x03:\x03X\x03s\x03\x8C\x03\xA3\x03\xBD\x03\xD6\x03\xF4\x03\x0B\x04%\x04?\x04X\x04q\x04~\x04\x8E\x04\x9E\x04\xAB\x04\xC1\x04\xD1\x04\xDE\x04\xEC\x04\0\x05\x11\x05\x1F\x05,\x05A\x05U\x05c\x05r\x05\x81\x05\x8F\x05\x9E\x05\xAF\x05\xC4\x05\xD6\x05\xE7\x05\xF6\x05\x04\x06\x13\x06'\x065\x06I\x06W\x06f\x06v\x06\x86\x06\x96\x06\xA9\x06\xBC\x06\xCD\x06\xDE\x06\xEF\x06\x01\x07\x10\x07\"\x073\x07D\x07R\x07a\x07o\x07\x81\x07\x9D\x07\xB1\x07\xC8\x07\xE2\x07\xFB\x07\x10\x08)\x08@\x08N\x08]\x08l\x08z\x08\x95\x08\xB0\x08\xC2\x08\xD0\x08\xDC\x08\xEF\x08\x04\t\x12\t!\t/\t>\tP\ta\tq\t\x82\t\x90\t\xA2\t\xB5\t\xC5\t\xD4\t\xE5\t\xF7\t\t\n\x17\n'\n3\nB\n]\nx\n\x96\n\xA2\n\xB1\n\xBF\n\xD1\n\xE0\n\xF6\n\x0B\x0B\x1E\x0B1\x0BE\x0BY\x0Bg\x0Bu\x0B\x85\x0B\x97\x0B\xA7\x0B\xB7\x0B\xCC\x0B\xDD\x0B\xF1\x0B\xFE\x0B\x13\x0C#\x0C3\x0CC\x0CT\x0Cf\x0C{\x0C\x8E\x0C\x9B\x0C\xAA\x0C\xB9\x0C\xC8\x0C\xD9\x0C\xEB\x0C\xFB\x0C\n\r\x1A\r*\rC\rW\rh\rz\r\x8B\r\x9D\r\xAD\r\xBD\r\xCE\r\xE1\r\xEA\r\xF5\r\xFF\r\n\x0E\x14\x0E\x1F\x0E,\x0E7\x0EC\x0EO\x0EX\x0Ed\x0Ep\x0E{\x0E\x87\x0E\x92\x0E\x9C\x0E\xA8\x0E\xB5\x0E\xBF\x0E\xC8\x0E\xD2\x0E\xDF\x0E\xED\x0E\xF6\x0E\x01\x0F\x11\x0F\x1F\x0F(\x0F4\x0F@\x0FM\x0F[\x0Fe\x0Fs\x0F\x7F\x0F\x8D\x0F\x9A\x0F\xA6\x0F\xB6\x0F\xC7\x0F\xD3\x0F\xDE\x0F\xE8\x0F\xF4\x0F\x01\x10\x0C\x10\x17\x10#\x104\x10D\x10M\x10V\x10e\x10s\x10\x81\x10\x8B\x10\x98\x10\xA6\x10\xB1\x10\xBE\x10\xCC\x10\xD6\x10\xE3\x10\xF1\x10\x03\x11\x0E\x11\x1B\x11'\x112\x11>\x11H\x11R\x11b\x11m\x11z\x11\x88\x11\x98\x11\xA4\x11\xAF\x11\xC1\x11\xCD\x11\xDC\x11\xEC\x11\xFB\x11\x0E\x12\x1C\x12,\x12>\x12T\x12f\x12v\x12\x88\x12\x9A\x12\xAF\x12\xBF\x12\xCE\x12\xDE\x12\xF0\x12\x03\x13\x16\x13%\x135\x13<\x13E\x13O\x13Y\x13c\x13l\x13u\x13~\x13\x87\x13\x90\x13\x99\x13\xA2\x13\xAB\x13\xB4\x13\xBE\x13\xC8\x13\xD2\x13\xDC\x13\xE6\x13\xEF\x13\xF8\x13\x01\x14\n\x14\x13\x14\x1C\x14%\x14.\x145\x14E\x14S\x14c\x14p\x14\x7F\x14\x8C\x14\x9D\x14\xAC\x14\xBC\x14\xCB\x14\xDA\x14\xE9\x14\xFA\x14\x07\x15\x17\x15&\x155\x15G\x15V\x15c\x15u\x15\x81\x15\x8C\x15\x99\x15\xA9\x15\xB6\x15\xC7\x15\xD4\x15\xE0\x15\xF0\x15\xFC\x15\t\x16\x16\x16!\x16-\x16=\x16J\x16U\x16`\x16m\x16~\x16\x8D\x16\x9B\x16\xAC\x16\xB9\x16\xC5\x16\xD5\x16\xE3\x16\xF0\x16\0\x17\x0C\x17\x1A\x17'\x175\x17E\x17R\x17_\x17l\x17\x7F\x17\x8C\x17\x9C\x17\xA8\x17\xB5\x17\xC5\x17\xD0\x17\xDF\x17\xEF\x17\xFD\x17\x0B\x18\x17\x18'\x18;\x18J\x18W\x18e\x18r\x18\x81\x18\x8D\x18\x9D\x18\xAE\x18\xBD\x18\xD0\x18\xDC\x18\xEC\x18\xFA\x18\x0C\x19\x1A\x19+\x199\x19J\x19X\x19e\x19q\x19\x80\x19\x8E\x19\x9F\x19\xAC\x19\xBC\x19\xCB\x19\xDF\x19\xF0\x19\xFE\x19\x0C\x1A\x1A\x1A+\x1A7\x1AE\x1AR\x1Aa\x1A\x81\x1A\x8D\x1A\xA1\x1A\xB2\x1A\xC7\x1A\xD6\x1A\xE6\x1A\xF8\x1A\x07\x1B\x1B\x1B(\x1B7\x1BI\x1BX\x1Bh\x1Bw\x1B\x8A\x1B\x9C\x1B\xAF\x1B\xBE\x1B\xD2\x1B\xE2\x1B\xF5\x1B\x03\x1C\x16\x1C+\x1C9\x1CF\x1CU\x1Cc\x1Cq\x1C{\x1C\x86\x1C\x93\x1C\x9F\x1C\xAC\x1C\xB6\x1C\xC2\x1C\xCD\x1C\xDA\x1C\xE5\x1C\xF7\x1C\x06\x1D\x15\x1D'\x1D4\x1DF\x1DV\x1Dc\x1Dr\x1D\x7F\x1D\x93\x1D\xA2\x1D\xB4\x1D\xC6\x1D\xD4\x1D\xE8\x1D\xF3\x1D\x03\x1E\x0E\x1E\x19\x1E(\x1E6\x1EN\x1E\\\x1Ek\x1E~\x1E\x8C\x1E\x9F\x1E\xAB\x1E\xAE\x1E\xBF\x1E\xD1\x1E\xD8\x1E\xDC\x1E\xDF\x1E\xE4\x1E\xE8\x1E\xEB\x1E\xF2\x1E\xFB\x1E\x04\x1F\x0C\x1F\x19\x1F \x1F-\x1F5\x1FC\x1FN\x1F\\\x1Fk\x1Fz\x1F\x8B\x1F\x8D\x1F\x94\x1F\x97\x1F\x9C\x1F\xA1\x1F\xA5\x1F\xAE\x1F\xB6\x1F\xB9\x1F\xC0\x1F\xC4\x1F\xCA\x1F\xD1\x1F\xD6\x1F\xDF\x1F\xE4\x1F\xE7\x1F\xF7\x1F\x05 \x13 \x16 \x1D # % , = M [ h t \x7F \x85 \x8D \x90 \x97 \x9A \x9D \xA6 \xAC \xAF \xB8 \xC1 \xCC \xD6 \xE0 \xEF \xF9 \x02!\x13!\x1E!)!3!A!I!L!P!S!Africa/AbidjanAfrica/AccraAfrica/Addis_AbabaAfrica/AlgiersAfrica/AsmaraAfrica/BamakoAfrica/BanguiAfrica/BanjulAfrica/BissauAfrica/BlantyreAfrica/BrazzavilleAfrica/BujumburaAfrica/CairoAfrica/CasablancaAfrica/CeutaAfrica/ConakryAfrica/DakarAfrica/Dar_es_SalaamAfrica/DjiboutiAfrica/DoualaAfrica/El_AaiunAfrica/FreetownAfrica/GaboroneAfrica/HarareAfrica/JohannesburgAfrica/JubaAfrica/KampalaAfrica/KhartoumAfrica/KigaliAfrica/KinshasaAfrica/LagosAfrica/LibrevilleAfrica/LomeAfrica/LuandaAfrica/LubumbashiAfrica/LusakaAfrica/MalaboAfrica/MaputoAfrica/MaseruAfrica/MbabaneAfrica/MogadishuAfrica/MonroviaAfrica/NairobiAfrica/NdjamenaAfrica/NiameyAfrica/NouakchottAfrica/OuagadougouAfrica/Porto-NovoAfrica/Sao_TomeAfrica/TripoliAfrica/TunisAfrica/WindhoekAmerica/AdakAmerica/AnchorageAmerica/AnguillaAmerica/AntiguaAmerica/AraguainaAmerica/Argentina/Buenos_AiresAmerica/Argentina/CatamarcaAmerica/Argentina/CordobaAmerica/Argentina/JujuyAmerica/Argentina/La_RiojaAmerica/Argentina/MendozaAmerica/Argentina/Rio_GallegosAmerica/Argentina/SaltaAmerica/Argentina/San_JuanAmerica/Argentina/San_LuisAmerica/Argentina/TucumanAmerica/Argentina/UshuaiaAmerica/ArubaAmerica/AsuncionAmerica/AtikokanAmerica/BahiaAmerica/Bahia_BanderasAmerica/BarbadosAmerica/BelemAmerica/BelizeAmerica/Blanc-SablonAmerica/Boa_VistaAmerica/BogotaAmerica/BoiseAmerica/Cambridge_BayAmerica/Campo_GrandeAmerica/CancunAmerica/CaracasAmerica/CayenneAmerica/CaymanAmerica/ChicagoAmerica/ChihuahuaAmerica/Ciudad_JuarezAmerica/Costa_RicaAmerica/CoyhaiqueAmerica/CrestonAmerica/CuiabaAmerica/CuracaoAmerica/DanmarkshavnAmerica/DawsonAmerica/Dawson_CreekAmerica/DenverAmerica/DetroitAmerica/DominicaAmerica/EdmontonAmerica/EirunepeAmerica/El_SalvadorAmerica/Fort_NelsonAmerica/FortalezaAmerica/Glace_BayAmerica/Goose_BayAmerica/Grand_TurkAmerica/GrenadaAmerica/GuadeloupeAmerica/GuatemalaAmerica/GuayaquilAmerica/GuyanaAmerica/HalifaxAmerica/HavanaAmerica/HermosilloAmerica/Indiana/IndianapolisAmerica/Indiana/KnoxAmerica/Indiana/MarengoAmerica/Indiana/PetersburgAmerica/Indiana/Tell_CityAmerica/Indiana/VevayAmerica/Indiana/VincennesAmerica/Indiana/WinamacAmerica/InuvikAmerica/IqaluitAmerica/JamaicaAmerica/JuneauAmerica/Kentucky/LouisvilleAmerica/Kentucky/MonticelloAmerica/KralendijkAmerica/La_PazAmerica/LimaAmerica/Los_AngelesAmerica/Lower_PrincesAmerica/MaceioAmerica/ManaguaAmerica/ManausAmerica/MarigotAmerica/MartiniqueAmerica/MatamorosAmerica/MazatlanAmerica/MenomineeAmerica/MeridaAmerica/MetlakatlaAmerica/Mexico_CityAmerica/MiquelonAmerica/MonctonAmerica/MonterreyAmerica/MontevideoAmerica/MontserratAmerica/NassauAmerica/New_YorkAmerica/NomeAmerica/NoronhaAmerica/North_Dakota/BeulahAmerica/North_Dakota/CenterAmerica/North_Dakota/New_SalemAmerica/NuukAmerica/OjinagaAmerica/PanamaAmerica/ParamariboAmerica/PhoenixAmerica/Port-au-PrinceAmerica/Port_of_SpainAmerica/Porto_VelhoAmerica/Puerto_RicoAmerica/Punta_ArenasAmerica/Rankin_InletAmerica/RecifeAmerica/ReginaAmerica/ResoluteAmerica/Rio_BrancoAmerica/SantaremAmerica/SantiagoAmerica/Santo_DomingoAmerica/Sao_PauloAmerica/ScoresbysundAmerica/SitkaAmerica/St_BarthelemyAmerica/St_JohnsAmerica/St_KittsAmerica/St_LuciaAmerica/St_ThomasAmerica/St_VincentAmerica/Swift_CurrentAmerica/TegucigalpaAmerica/ThuleAmerica/TijuanaAmerica/TorontoAmerica/TortolaAmerica/VancouverAmerica/WhitehorseAmerica/WinnipegAmerica/YakutatAntarctica/CaseyAntarctica/DavisAntarctica/DumontDUrvilleAntarctica/MacquarieAntarctica/MawsonAntarctica/McMurdoAntarctica/PalmerAntarctica/RotheraAntarctica/SyowaAntarctica/TrollAntarctica/VostokArctic/LongyearbyenAsia/AdenAsia/AlmatyAsia/AmmanAsia/AnadyrAsia/AqtauAsia/AqtobeAsia/AshgabatAsia/AtyrauAsia/BaghdadAsia/BahrainAsia/BakuAsia/BangkokAsia/BarnaulAsia/BeirutAsia/BishkekAsia/BruneiAsia/ChitaAsia/ColomboAsia/DamascusAsia/DhakaAsia/DiliAsia/DubaiAsia/DushanbeAsia/FamagustaAsia/GazaAsia/HebronAsia/Ho_Chi_MinhAsia/Hong_KongAsia/HovdAsia/IrkutskAsia/JakartaAsia/JayapuraAsia/JerusalemAsia/KabulAsia/KamchatkaAsia/KarachiAsia/KathmanduAsia/KhandygaAsia/KolkataAsia/KrasnoyarskAsia/Kuala_LumpurAsia/KuchingAsia/KuwaitAsia/MacauAsia/MagadanAsia/MakassarAsia/ManilaAsia/MuscatAsia/NicosiaAsia/NovokuznetskAsia/NovosibirskAsia/OmskAsia/OralAsia/Phnom_PenhAsia/PontianakAsia/PyongyangAsia/QatarAsia/QostanayAsia/QyzylordaAsia/RiyadhAsia/SakhalinAsia/SamarkandAsia/SeoulAsia/ShanghaiAsia/SingaporeAsia/SrednekolymskAsia/TaipeiAsia/TashkentAsia/TbilisiAsia/TehranAsia/ThimphuAsia/TokyoAsia/TomskAsia/UlaanbaatarAsia/UrumqiAsia/Ust-NeraAsia/VientianeAsia/VladivostokAsia/YakutskAsia/YangonAsia/YekaterinburgAsia/YerevanAtlantic/AzoresAtlantic/BermudaAtlantic/CanaryAtlantic/Cape_VerdeAtlantic/FaroeAtlantic/MadeiraAtlantic/ReykjavikAtlantic/South_GeorgiaAtlantic/St_HelenaAtlantic/StanleyAustralia/AdelaideAustralia/BrisbaneAustralia/Broken_HillAustralia/DarwinAustralia/EuclaAustralia/HobartAustralia/LindemanAustralia/Lord_HoweAustralia/MelbourneAustralia/PerthAustralia/SydneyEtc/GMTEtc/GMT+1Etc/GMT+10Etc/GMT+11Etc/GMT+12Etc/GMT+2Etc/GMT+3Etc/GMT+4Etc/GMT+5Etc/GMT+6Etc/GMT+7Etc/GMT+8Etc/GMT+9Etc/GMT-1Etc/GMT-10Etc/GMT-11Etc/GMT-12Etc/GMT-13Etc/GMT-14Etc/GMT-2Etc/GMT-3Etc/GMT-4Etc/GMT-5Etc/GMT-6Etc/GMT-7Etc/GMT-8Etc/GMT-9Etc/UTCEurope/AmsterdamEurope/AndorraEurope/AstrakhanEurope/AthensEurope/BelgradeEurope/BerlinEurope/BratislavaEurope/BrusselsEurope/BucharestEurope/BudapestEurope/BusingenEurope/ChisinauEurope/CopenhagenEurope/DublinEurope/GibraltarEurope/GuernseyEurope/HelsinkiEurope/Isle_of_ManEurope/IstanbulEurope/JerseyEurope/KaliningradEurope/KirovEurope/KyivEurope/LisbonEurope/LjubljanaEurope/LondonEurope/LuxembourgEurope/MadridEurope/MaltaEurope/MariehamnEurope/MinskEurope/MonacoEurope/MoscowEurope/OsloEurope/ParisEurope/PodgoricaEurope/PragueEurope/RigaEurope/RomeEurope/SamaraEurope/San_MarinoEurope/SarajevoEurope/SaratovEurope/SimferopolEurope/SkopjeEurope/SofiaEurope/StockholmEurope/TallinnEurope/TiraneEurope/UlyanovskEurope/VaduzEurope/VaticanEurope/ViennaEurope/VilniusEurope/VolgogradEurope/WarsawEurope/ZagrebEurope/ZurichIndian/AntananarivoIndian/ChagosIndian/ChristmasIndian/CocosIndian/ComoroIndian/KerguelenIndian/MaheIndian/MaldivesIndian/MauritiusIndian/MayotteIndian/ReunionPacific/ApiaPacific/AucklandPacific/BougainvillePacific/ChathamPacific/ChuukPacific/EasterPacific/EfatePacific/FakaofoPacific/FijiPacific/FunafutiPacific/GalapagosPacific/GambierPacific/GuadalcanalPacific/GuamPacific/HonoluluPacific/KantonPacific/KiritimatiPacific/KosraePacific/KwajaleinPacific/MajuroPacific/MarquesasPacific/MidwayPacific/NauruPacific/NiuePacific/NorfolkPacific/NoumeaPacific/Pago_PagoPacific/PalauPacific/PitcairnPacific/PohnpeiPacific/Port_MoresbyPacific/RarotongaPacific/SaipanPacific/TahitiPacific/TarawaPacific/TongatapuPacific/WakePacific/WallisAfrica/AsmeraAfrica/TimbuktuAmerica/Argentina/ComodRivadaviaAmerica/AtkaAmerica/Buenos_AiresAmerica/CatamarcaAmerica/Coral_HarbourAmerica/CordobaAmerica/EnsenadaAmerica/Fort_WayneAmerica/GodthabAmerica/IndianapolisAmerica/JujuyAmerica/Knox_INAmerica/LouisvilleAmerica/MendozaAmerica/MontrealAmerica/NipigonAmerica/PangnirtungAmerica/Porto_AcreAmerica/Rainy_RiverAmerica/RosarioAmerica/Santa_IsabelAmerica/ShiprockAmerica/Thunder_BayAmerica/VirginAmerica/YellowknifeAntarctica/South_PoleAsia/AshkhabadAsia/CalcuttaAsia/ChoibalsanAsia/ChongqingAsia/ChungkingAsia/DaccaAsia/HarbinAsia/IstanbulAsia/KashgarAsia/KatmanduAsia/MacaoAsia/RangoonAsia/SaigonAsia/Tel_AvivAsia/ThimbuAsia/Ujung_PandangAsia/Ulan_BatorAtlantic/FaeroeAtlantic/Jan_MayenAustralia/ACTAustralia/CanberraAustralia/CurrieAustralia/LHIAustralia/NorthAustralia/NSWAustralia/QueenslandAustralia/SouthAustralia/TasmaniaAustralia/VictoriaAustralia/WestAustralia/YancowinnaBrazil/AcreBrazil/DeNoronhaBrazil/EastBrazil/WestCanada/AtlanticCanada/CentralCanada/East-SaskatchewanCanada/EasternCanada/MountainCanada/NewfoundlandCanada/PacificCanada/SaskatchewanCanada/YukonCETChile/ContinentalChile/EasterIslandCST6CDTCubaEETEgyptEireESTEST5EDTEtc/GMT+0Etc/GMT-0Etc/GMT0Etc/GreenwichEtc/UCTEtc/UniversalEtc/ZuluEurope/BelfastEurope/KievEurope/NicosiaEurope/TiraspolEurope/UzhgorodEurope/ZaporozhyeGBGB-EireGMTGMT+0GMT-0GMT0GreenwichHongkongHSTIcelandIranIsraelJamaicaJapanKwajaleinLibyaMETMexico/BajaNorteMexico/BajaSurMexico/GeneralMSTMST7MDTNavajoNZNZ-CHATPacific/EnderburyPacific/JohnstonPacific/PonapePacific/SamoaPacific/TrukPacific/YapPolandPortugalPRCPST8PDTROCROKSingaporeTurkeyUCTUniversalUS/AlaskaUS/AleutianUS/ArizonaUS/CentralUS/East-IndianaUS/EasternUS/HawaiiUS/Indiana-StarkeUS/MichiganUS/MountainUS/PacificUS/Pacific-NewUS/SamoaUTCW-SUWETZulu") } };
            #[doc(hidden)]
            pub const SINGLETON_TIMEZONE_IDENTIFIERS_IANA_EXTENDED_V1_CHECKSUM: u64 = 5735927171164177282u64;
        }
        #[clippy::msrv = "1.82"]
        impl icu_provider::DataProvider<icu::time::provider::iana::TimezoneIdentifiersIanaExtendedV1> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::time::provider::iana::TimezoneIdentifiersIanaExtendedV1>, icu_provider::DataError> {
                if req.id.locale.is_unknown() {
                    Ok(icu_provider::DataResponse { payload: icu_provider::DataPayload::from_static_ref(Self::SINGLETON_TIMEZONE_IDENTIFIERS_IANA_EXTENDED_V1), metadata: icu_provider::DataResponseMetadata::default().with_checksum(Self::SINGLETON_TIMEZONE_IDENTIFIERS_IANA_EXTENDED_V1_CHECKSUM) })
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::time::provider::iana::TimezoneIdentifiersIanaExtendedV1 as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
    };
    ($ provider : ty , ITER) => {
        __impl_timezone_identifiers_iana_extended_v1!($provider);
        #[clippy::msrv = "1.82"]
        impl icu_provider::IterableDataProvider<icu::time::provider::iana::TimezoneIdentifiersIanaExtendedV1> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BtreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok([Default::default()].into_iter().collect())
            }
        }
    };
    ($ provider : ty , DRY) => {
        __impl_timezone_identifiers_iana_extended_v1!($provider);
        #[clippy::msrv = "1.82"]
        impl icu_provider::DryDataProvider<icu::time::provider::iana::TimezoneIdentifiersIanaExtendedV1> for $provider {
            fn dry_load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponseMetadata, icu_provider::DataError> {
                if req.id.locale.is_unknown() {
                    Ok(icu_provider::DataResponseMetadata::default().with_checksum(Self::SINGLETON_TIMEZONE_IDENTIFIERS_IANA_EXTENDED_V1_CHECKSUM))
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::time::provider::iana::TimezoneIdentifiersIanaExtendedV1 as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
    };
    ($ provider : ty , DRY , ITER) => {
        __impl_timezone_identifiers_iana_extended_v1!($provider);
        #[clippy::msrv = "1.82"]
        impl icu_provider::DryDataProvider<icu::time::provider::iana::TimezoneIdentifiersIanaExtendedV1> for $provider {
            fn dry_load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponseMetadata, icu_provider::DataError> {
                if req.id.locale.is_unknown() {
                    Ok(icu_provider::DataResponseMetadata::default().with_checksum(Self::SINGLETON_TIMEZONE_IDENTIFIERS_IANA_EXTENDED_V1_CHECKSUM))
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::time::provider::iana::TimezoneIdentifiersIanaExtendedV1 as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
        #[clippy::msrv = "1.82"]
        impl icu_provider::IterableDataProvider<icu::time::provider::iana::TimezoneIdentifiersIanaExtendedV1> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BtreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok([Default::default()].into_iter().collect())
            }
        }
    };
}
#[doc(inline)]
pub use __impl_timezone_identifiers_iana_extended_v1 as impl_timezone_identifiers_iana_extended_v1;
