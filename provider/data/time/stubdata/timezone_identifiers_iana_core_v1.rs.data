// @generated
/// Implement `DataProvider<TimezoneIdentifiersIanaCoreV1>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
///
/// Using this implementation will embed the following data in the binary's data segment:
/// * 9541B[^1] for the singleton data struct
///
/// [^1]: these numbers can be smaller in practice due to linker deduplication
///
/// This macro requires the following crates:
/// * `icu`
/// * `icu_provider`
/// * `zerotrie`
/// * `zerovec`
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_timezone_identifiers_iana_core_v1 {
    ($ provider : ty) => {
        #[clippy::msrv = "1.82"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.82"]
        impl $provider {
            #[doc(hidden)]
            pub const SINGLETON_TIMEZONE_IDENTIFIERS_IANA_CORE_V1: &'static <icu::time::provider::iana::TimezoneIdentifiersIanaCoreV1 as icu_provider::DynamicDataMarker>::DataStruct = &icu::time::provider::iana::IanaToBcp47Map { map: zerotrie::ZeroAsciiIgnoreCaseTrie { store: unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\xE1i_ABCEIMPU\x01\x10\x10\x11\x14\x14\x14\x16TSz\x0FA\xB3\xD6\x8B\xE1qCEGHIJKLMNPRSTUWZ\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\x01\x141Zi\x80\x8F\x99\x9F\xAF\xC2\xE2\xEB\xF5\xFC\x11\x1C\xC3ESu\x03\nT\x95\"T6CDT\x91\x1Eba\x91T\xC4EgiS\x03\x08\x0CT\x95\x1Aypt\x90\x08re\x95.T\x9205EDT\x92 \xC3BMr\t\x1A\x95F-Eire\x95FT\x94\\\xC3+-0\x03\x060\x94\\0\x94\\\x94\\eenwich\x94\\\xC2oS\x08ngkong\x93DT\x96:\xC3crs\x07\x0Beland\x94>an\x94\x18rael\x93Na\xC2mp\x06aica\x91lan\x94\x1Cwajalein\x96Bibya\x90R\xC2ES\x03T\x95\"T\x9247MDT\x912\xC2aZ\x06vajo\x912\x96 -CHAT\x96$\xC3oRS\x10\x13\xC2lr\x05and\x96\x02tugal\x95BC\x94\x0CT8PDT\x91zO\xC2CK\x02\x94\x12\x94\ningapore\x94\x0Eurkey\x958\xC3CnT\x03\x0CT\x95\x12iversal\x95\x12C\x95\x12\xC2-E\x04SU\x95TT\x95Bulu\x95\x12\xE1gfmnrstu\x02\t\t\t\r\x0E $\xA5\xB8\x7F\x05rica/\xE1rABCDEFGHJKLMNOPSTW\0\0\0\0\0\0\0\0\0\x01\x01\x01\x01\x01\x01\x01\x01/m\x90\xB8\xC1\xCA\xD3\xDA\xEE\x13G|\xA3\xAF\xBA\xC3\xDC\xC5bcdls\x06\n\x14\x1Aidjan\x81cra\x83dis_Ababa\x85giers\x87m\xC2ae\x03ra\x89ra\x88\xC5ailru\x12\x18 +\xC2mn\x04ako\x8B\xC2gj\x03ui\x8Dul\x8Fssau\x90\x01antyre\x90\x03azzaville\x90\x05jumbura\x90\x07\xC3aeo\x11\x16\xC2is\x04ro\x90\tablanca\x90\x0Buta\x90\rnakry\x90\x0F\xC3ajo\x14\x1C\xC2kr\x04ar\x90\x11_es_Salaam\x90\x13ibouti\x90\x15uala\x90\x17l_Aaiun\x90\x19reetown\x90\x1Baborone\x90\x1Darare\x90\x1F\xC2ou\x0Channesburg\x90!ba\x90#\xC3ahi\x07\x0Fmpala\x90%artoum\x90'\xC2gn\x05ali\x90)shasa\x90+\xC4aiou\x05\x0F\x13gos\x90-breville\x90/me\x901\xC3abs\x05\x0Enda\x903umbashi\x905aka\x907\xC3abo\x15\x1C\xC3lps\x05\nabo\x909uto\x90;eru\x90=abane\x90?\xC2gn\x08adishu\x90Arovia\x90C\xC4adio\x07\x0F\x15irobi\x90Ejamena\x90Gamey\x90Iuakchott\x90Kuagadougou\x90Morto-Novo\x90Oao_Tome\x90Q\xC3iru\x07\x0Embuktu\x8Aipoli\x90Snis\x90Uindhoek\x90Werica/\xE1vABCDEFGHIJKLMNOPRSTVWY\0\x01\x01\x02\x02\x02\x02\x02\x03\x03\x03\x03\x04\x04\x04\x05\x05\x06\x06\x06\x06\xE7F\xEA#Nl\xC7\xE4]u\xAD\xE2\x88\xE2\xEA]\xA6C}\x90\xA6\xC5dnrst\x04\x1F\xC7\xCFak\x90Y\xC3cgt\x08\x0Fhorage\x90[uilla\x90]igua\x90_\xC3agu\x08\x9Eguaina\x90aentina/\xC9BCJLMRSTU\r17@HUmuuenos_Aires\x90c\xC2ao\ttamarca\x90e\xC2mr\rodRivadavia\x90ddoba\x90gujuy\x90ia_Rioja\x90kendoza\x90mio_Gallegos\x90oa\xC2ln\x04ta\x90q_\xC2JL\x05uan\x90suis\x90uucuman\x90wshuaia\x90yba\x90{uncion\x90}\xC2ik\x07kokan\x90\x7Fa\x90X\xC5aelou\x1A&2I\xC2hr\x0Fia\x91\x01_Banderas\x91\x03bados\x91\x05l\xC2ei\x03m\x91\x07ze\x91\tanc-Sablon\x91\x0B\xC3agi\x08\r_Vista\x91\rota\x91\x0Fse\x91\x11enos_Aires\x90b\xC6ahioruCTa\x82\x89\xC5mnrty\x19\x1E$,\xC2bp\x0Bridge_Bay\x91\x13o_Grande\x91\x15cun\x91\x17acas\x91\x19amarca\x90d\xC2em\x05nne\x91\x1Ban\x91\x1Di\xC2ch\x05ago\x91\x1Fuahua\x91!udad_Juarez\x91#\xC2rs\x14\xC2ad\x0Bl_Harbour\x90~oba\x90fta_Rica\x91%eston\x91'\xC2ir\x05aba\x91)acao\x91+\xC3aeo\x1C+\xC2nw\x0Bmarkshavn\x91-son\x91/_Creek\x911\xC2nt\x05ver\x913roit\x915minica\x917\xC4diln\x08\x10\x1Bmonton\x919runepe\x91;_Salvador\x91=senada\x92hort\xC2_a\x11\xC2NW\x07elson\x91?ayne\x91Xleza\x91A\xC4loru\t\x1B.ace_Bay\x91C\xC2do\x06thab\x92,se_Bay\x91E\xC2ae\tnd_Turk\x91Gnada\x91I\xC2ay\x1C\xC3dty\x08\x0Feloupe\x91Kemala\x91Maquil\x91Oana\x91Q\xC2ae\x0F\xC2lv\x06ifax\x91Sana\x91Urmosillo\x91W\xC2nqn\xC2dueiana\xC2/pW\xC7IKMPTVW\r\x12\x1A%/Andianapolis\x91Ynox\x91[arengo\x91]etersburg\x91_ell_City\x91a\xC2ei\x05vay\x91cncennes\x91einamac\x91golis\x91Xvik\x91ialuit\x91k\xC2au\x07maica\x91m\xC2jn\x04uy\x90heau\x91o\xC3enr!(ntucky/\xC2LM\x0Bouisville\x91qonticello\x91sox_IN\x91Zalendijk\x91u\xC3aio\x06\n_Paz\x91wma\x91y\xC3suw\n\x13_Angeles\x91{isville\x91per_Princes\x91}\xC4aeio;ks\xC5cnrtz\x05\x11\"*eio\x91\x7Fa\xC2gu\x04ua\x92\x01s\x92\x03\xC2it\x05got\x92\x05inique\x92\x07amoros\x92\tatlan\x92\x0B\xC4nrtx\x10\x15\x1E\xC2do\x05oza\x90lminee\x92\rida\x92\x0Flakatla\x92\x11ico_City\x92\x13quelon\x92\x15n\xC2ct\x05ton\x92\x17\xC3ers\x0F\x14\xC2rv\x05rey\x92\x19ideo\x92\x1Beal\x92jerrat\x92\x1D\xC5aeiou\x06\x0E\x15Lssau\x92\x1Fw_York\x92!pigon\x92j\xC2mr\x03e\x92#\xC2ot\x05nha\x92%h_Dakota/\xC3BCN\x07\x0Eeulah\x92'enter\x92)ew_Salem\x92+uk\x92-jinaga\x92/\xC4ahou\x1E%R\xC2nr\x11\xC2ag\x04ma\x921nirtung\x91jamaribo\x923oenix\x925rt\xC3-_o\x0B\x15au-Prince\x927of_Spain\x929_\xC2AV\x05cre\x92Helho\x92;\xC2en\nrto_Rico\x92=ta_Arenas\x92?\xC4aeio\x190:\xC2in\nny_River\x92rkin_Inlet\x92A\xC3cgs\x05\nife\x92Cina\x92Eolute\x92Go_Branco\x92Isario\x90f\xC6achitw2>FK\x84\xC2no&t\xC3aio\x10\x15\xC2_r\x08Isabel\x92hem\x92Kago\x92M_Domingo\x92O_Paulo\x92Qoresbysund\x92Siprock\x912tka\x92U_\xC6BJKLTV\x0B\x11\x17\x1D$arthelemy\x92Wohns\x92Yitts\x92[ucia\x92]homas\x92_incent\x92aift_Current\x92c\xC4ehio\x0B\x1C#gucigalpa\x92eu\xC2ln\x03e\x92gder_Bay\x92jjuana\x92ir\xC2ot\x05nto\x92kola\x92m\xC2ai\tncouver\x92orgin\x92^\xC2hi\nitehorse\x92qnnipeg\x92s\xC2ae\x07kutat\x92ullowknife\x918tarctica/\xC8CDMPRSTV\x06\x1D9@H[aasey\x92w\xC2au\x05vis\x92ymontDUrville\x92{\xC2ac\x11\xC2cw\x08quarie\x92}son\x92\x7FMurdo\x93\x01almer\x93\x03othera\x93\x05\xC2oy\nuth_Pole\x96 owa\x93\x07roll\x93\tostok\x93\x0Bctic/Longyearbyen\x93\ria/\xE1uABCDFGHIJKMNOPQRSTUVY\0\0\0\0\0\0\x01\x01\x01\x01\x01\x02\x02\x02\x02\x02\x02\x03\x03\x03G\x87\xC1\xF0\xFA\xFF,?]\xD0\xFD\x1F+Miz\xC1\x0BD\\\xC7dlmnqst\x04\n\x0F\x15!3en\x93\x0Fmaty\x93\x11man\x93\x13adyr\x93\x15t\xC2ao\x03u\x93\x17be\x93\x19h\xC2gk\x06abat\x93\x1Bhabad\x93\x1Ayrau\x93\x1D\xC4aeir%+2\xC5ghknr\x06\x0C\x0F\x15hdad\x93\x1Frain\x93!u\x93#gkok\x93%naul\x93'irut\x93)shkek\x93+unei\x93-\xC3aho\x08-lcutta\x93Z\xC3iou\x04\x17ta\x93/\xC2in\x08balsan\x94 gqing\x94\x0Cngking\x94\x0Clombo\x931\xC4ahiu\x0F\x14\x18\xC2cm\x04ca\x934ascus\x933aka\x935li\x937\xC2bs\x04ai\x939hanbe\x93;amagusta\x93=aza\x93?\xC3aeo\x06\x0Crbin\x94\x0Cbron\x93A\xC3_nv\n\x12Chi_Minh\x93Cg_Kong\x93Ed\x93G\xC2rs\x07kutsk\x93Itanbul\x958\xC2ae\x11\xC2ky\x06arta\x93Kapura\x93Mrusalem\x93O\xC5ahoru3;BM\xC5bmrst\x04\x0C\x12\x18ul\x93Qchatka\x93Sachi\x93Uhgar\x94\"\xC2hm\x07mandu\x93Wandu\x93Vandyga\x93Ylkata\x93[asnoyarsk\x93]\xC3acw\x0B\x11la_Lumpur\x93_hing\x93aait\x93c\xC2au#\xC4cgkn\t\x0F\x16a\xC2ou\x02\x93d\x93eadan\x93gassar\x93iila\x93kscat\x93m\xC2io\x07cosia\x93ovo\xC2ks\tuznetsk\x93qibirsk\x93s\xC2mr\x04sk\x93ual\x93w\xC3hoy\n\x13nom_Penh\x93yntianak\x93{ongyang\x93}\xC3aoy\x05\rtar\x93\x7Fstanay\x94\x01zylorda\x94\x03\xC2ai\x07ngoon\x94,yadh\x94\x05\xC5aehir\x1A\x1F'0\xC3ikm\x05\x0Cgon\x93Bhalin\x94\x07arkand\x94\toul\x94\x0Banghai\x94\rngapore\x94\x0Fednekolymsk\x94\x11\xC5abeho\x10\x17'4\xC2is\x05pei\x94\x13hkent\x94\x15ilisi\x94\x17\xC2hl\x05ran\x94\x19_Aviv\x93Nim\xC2bp\x03u\x94\x1Ahu\x94\x1B\xC2km\x04yo\x94\x1Dsk\x94\x1F\xC4jlrs\r#)ung_Pandang\x93ha\xC2an\tnbaatar\x94!_Bator\x94 umqi\x94#t-Nera\x94%\xC2il\tentiane\x94'adivostok\x94)\xC2ae\x0F\xC2kn\x06utsk\x94+gon\x94-\xC2kr\x0Caterinburg\x94/evan\x941lantic/\xC8ABCFJMRS\x07\x0F\"0:BLzores\x943ermuda\x945a\xC2np\x05ary\x947e_Verde\x949a\xC2er\x05roe\x94:oe\x94;an_Mayen\x93\x0Cadeira\x94=eykjavik\x94?\xC2ot\ruth_Georgia\x94A\xC2_a\x08Helena\x94Cnley\x94Estralia/\xD0ABCDEHLMNPQSTVWY\x0F%7>DKeo{\x81\x8C\x9B\xA4\xAD\xB2\xC2Cd\x03T\x94Zelaide\x94Gr\xC2io\x07sbane\x94Iken_Hill\x94K\xC2au\x08nberra\x94Zrrie\x94Parwin\x94Mucla\x94Oobart\x94Q\xC3Hio\x03\x0BI\x94Tndeman\x94Srd_Howe\x94Uelbourne\x94W\xC2oS\x05rth\x94LW\x94Zerth\x94Yueensland\x94H\xC2oy\x05uth\x94Fdney\x94[asmania\x94Pictoria\x94Vest\x94Xancowinna\x94Jrazil/\xC4ADEW\x05\x0F\x14cre\x92HeNoronha\x92$ast\x92Pest\x92\x02\xC2ahpnada/\xC8ACEMNPSY\t\x11*3@HUtlantic\x91Rentral\x92rast\xC2-e\x0ESaskatchewan\x92Drn\x92jountain\x918ewfoundland\x92Xacific\x92naskatchewan\x92Dukon\x92pile/\xC2CE\x0Continental\x92LasterIsland\x96(\xE1btu\0\xAAc/\xC3GUZ\x88\x9D\xC2Mr{T\x94]\xC3+-04p\xCA0123456789\x02\x10\x12\x14\x16\x18\x1A\x1C\x1E\x94\\\x94_\xC3012\x02\x04\x94a\x94c\x94e\x94g\x94i\x94k\x94m\x94o\x94q\x94s\x94u\xCA0123456789\x02\x18\x1A\x1C\x1E \"$&\x94\\\x94w\xC501234\x02\x04\x06\x08\x94y\x94{\x94}\x94\x7F\x95\x01\x95\x03\x95\x05\x95\x07\x95\t\x95\x0B\x95\r\x95\x0F\x95\x11\x94\\eenwich\x94\\\xC3CnT\x03\x0CT\x95\x12iversal\x95\x12C\x95\x13ulu\x95\x12rope/\xE1uABCDGHIJKLMNOPRSTUVWZ\0\0\0\0\0\0\0\0\0\x01\x01\x01\x01\x01\x01\x01\x01\x01\x02\x02'u\x8B\x92\xA7\xB0\xC6\xCD\xED\x14DLQkw\xC1\xDA\xEF\x1B\"\xC4mnst\t\x10\x19sterdam\x95\x15dorra\x95\x17trakhan\x95\x19hens\x95\x1B\xC3eru\x18,\xC2lr\x0F\xC2fg\x05ast\x95Frade\x95\x1Dlin\x95\x1F\xC2au\ttislava\x95!ssels\x95#\xC3cds\x08\x0Fharest\x95%apest\x95'ingen\x95)\xC2ho\x08isinau\x95+penhagen\x95-ublin\x95/\xC2iu\tbraltar\x951ernsey\x953elsinki\x955s\xC2lt\ne_of_Man\x957anbul\x959ersey\x95;\xC3aiy\x0B\x16liningrad\x95=\xC2er\x03v\x95@ov\x95?iv\x95A\xC4ijou\x06\x0F\x15sbon\x95Cubljana\x95Endon\x95Gxembourg\x95I\xC3aio\x17\x1C\xC3dlr\x05\trid\x95Kta\x95Miehamn\x95Onsk\x95Q\xC2ns\x05aco\x95Scow\x95Uicosia\x93nslo\x95W\xC3aor\x05\x0Eris\x95Ydgorica\x95[ague\x95]\xC2io\x04ga\x95_me\x95a\xC5aikot\",27\xC3mnr\x05\x0Eara\x95c_Marino\x95ea\xC2jt\x05evo\x95gov\x95imferopol\x95kopje\x95mfia\x95oockholm\x95q\xC2ai\x07llinn\x95sra\xC2ns\x03e\x95upol\x95*\xC2lz\tyanovsk\x95whgorod\x95@\xC3aio\x0E\x1D\xC2dt\x04uz\x95yican\x95{\xC2el\x05nna\x95}nius\x95\x7Flgograd\x96\x01arsaw\x96\x03\xC2au\x12\xC2gp\x05reb\x96\x05orozhye\x95@rich\x96\x07ndian/\xC5ACKMR\r/9Zntananarivo\x96\t\xC2ho\x11\xC2ar\x05gos\x96\x0Bistmas\x96\r\xC2cm\x04os\x96\x0Foro\x96\x11erguelen\x96\x13a\xC4hluy\x03\n\x12e\x96\x15dives\x96\x17ritius\x96\x19otte\x96\x1Beunion\x96\x1Dexico/\xC2BG\x11aja\xC2NS\x06orte\x92hur\x92\neneral\x92\x12acific/\xE1qABCEFGHJKMNPRSTWY\0\0\0\0\0\0\0\0\0\0\0\x01\x01\x01\x01\x01\x10\x1D,F_\x85\x8E\x97\xBE\xD9\xF71;Ijw\xC2pu\x04ia\x96\x1Fckland\x96!ougainville\x96#h\xC2au\x06tham\x96%uk\x96'\xC3afn\x06\x0Bster\x96)ate\x96+derbury\x96<\xC3aiu\x07\x0Bkaofo\x96-ji\x96/nafuti\x961\xC2au\x12\xC2lm\x08apagos\x963bier\x965a\xC2dm\talcanal\x967\x969onolulu\x96;ohnston\x96:\xC4aiow\x06\x10\x16nton\x96=ritimati\x96?srae\x96Aajalein\x96C\xC2ai\x11\xC2jr\x05uro\x96Equesas\x96Gdway\x96I\xC3aio\x05\turu\x96Kue\x96M\xC2ru\x06folk\x96Omea\x96Q\xC3aio\x10\x18\xC2gl\x08o_Pago\x96Sau\x96Utcairn\x96W\xC3hnr\x06\x0Bnpei\x96Yape\x96Xt_Moresby\x96[arotonga\x96]a\xC2im\x05pan\x96_oa\x96R\xC3aor\x0E\x17\xC2hr\x05iti\x96aawa\x96cngatapu\x96euk\x96&a\xC2kl\x03e\x96glis\x96iap\x96&S/\xC8ACEHIMPS\x1B#7>Mao\xC2lr\x10\xC2ae\x05ska\x90Zutian\x90Xizona\x924entral\x91\x1East\xC2-e\tIndiana\x91Xrn\x92 awaii\x96:ndiana-Starke\x91Z\xC2io\x08chigan\x914untain\x912acific\x91z-New\x91zamoa\x96R") } }, bcp47_ids: unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"ciabj\0\0\0ghacc\0\0\0etadd\0\0\0dzalg\0\0\0erasm\0\0\0mlbko\0\0\0cfbgf\0\0\0gmbjl\0\0\0gwoxb\0\0\0mwblz\0\0\0cgbzv\0\0\0bibjm\0\0\0egcai\0\0\0macas\0\0\0esceu\0\0\0gncky\0\0\0sndkr\0\0\0tzdar\0\0\0djjib\0\0\0cmdla\0\0\0eheai\0\0\0slfna\0\0\0bwgbe\0\0\0zwhre\0\0\0zajnb\0\0\0ssjub\0\0\0ugkla\0\0\0sdkrt\0\0\0rwkgl\0\0\0cdfih\0\0\0nglos\0\0\0galbv\0\0\0tglfw\0\0\0aolad\0\0\0cdfbm\0\0\0zmlun\0\0\0gqssg\0\0\0mzmpm\0\0\0lsmsu\0\0\0szqmn\0\0\0somgq\0\0\0lrmlw\0\0\0kenbo\0\0\0tdndj\0\0\0nenim\0\0\0mrnkc\0\0\0bfoua\0\0\0bjptn\0\0\0sttms\0\0\0lytip\0\0\0tntun\0\0\0nawdh\0\0\0usadk\0\0\0usanc\0\0\0aiaxa\0\0\0aganu\0\0\0braux\0\0\0arbue\0\0\0arctc\0\0\0arcor\0\0\0arjuj\0\0\0arirj\0\0\0armdz\0\0\0arrgl\0\0\0arsla\0\0\0aruaq\0\0\0arluq\0\0\0artuc\0\0\0arush\0\0\0awaua\0\0\0pyasu\0\0\0cayzs\0\0\0brssa\0\0\0mxpvr\0\0\0bbbgi\0\0\0brbel\0\0\0bzbze\0\0\0caybx\0\0\0brbvb\0\0\0cobog\0\0\0usboi\0\0\0caycb\0\0\0brcgr\0\0\0mxcun\0\0\0veccs\0\0\0gfcay\0\0\0kygec\0\0\0uschi\0\0\0mxchi\0\0\0mxcjs\0\0\0crsjo\0\0\0cacfq\0\0\0brcgb\0\0\0ancur\0\0\0gldkshvncayda\0\0\0caydq\0\0\0usden\0\0\0usdet\0\0\0dmdom\0\0\0caedm\0\0\0brern\0\0\0svsal\0\0\0cafne\0\0\0brfor\0\0\0caglb\0\0\0cagoo\0\0\0tcgdt\0\0\0gdgnd\0\0\0gpbbr\0\0\0gtgua\0\0\0ecgye\0\0\0gygeo\0\0\0cahal\0\0\0cuhav\0\0\0mxhmo\0\0\0usind\0\0\0usknx\0\0\0usaeg\0\0\0uswsq\0\0\0ustel\0\0\0usinvev\0usoea\0\0\0uswlz\0\0\0cayev\0\0\0caiql\0\0\0jmkin\0\0\0usjnu\0\0\0uslui\0\0\0usmoc\0\0\0bqkra\0\0\0bolpb\0\0\0pelim\0\0\0uslax\0\0\0sxphi\0\0\0brmcz\0\0\0nimga\0\0\0brmao\0\0\0gpmsb\0\0\0mqfdf\0\0\0mxmam\0\0\0mxmzt\0\0\0usmnm\0\0\0mxmid\0\0\0usmtm\0\0\0mxmex\0\0\0pmmqc\0\0\0camon\0\0\0mxmty\0\0\0uymvd\0\0\0msmni\0\0\0bsnas\0\0\0usnyc\0\0\0usome\0\0\0brfen\0\0\0usxul\0\0\0usndcnt\0usndnsl\0glgoh\0\0\0mxoji\0\0\0papty\0\0\0srpbm\0\0\0usphx\0\0\0htpap\0\0\0ttpos\0\0\0brpvh\0\0\0prsju\0\0\0clpuq\0\0\0cayek\0\0\0brrec\0\0\0careg\0\0\0careb\0\0\0brrbr\0\0\0brstm\0\0\0clscl\0\0\0dosdq\0\0\0brsao\0\0\0globy\0\0\0ussit\0\0\0gpsbh\0\0\0casjf\0\0\0knbas\0\0\0lccas\0\0\0vistt\0\0\0vcsvd\0\0\0cayyn\0\0\0hntgu\0\0\0glthu\0\0\0mxtij\0\0\0cator\0\0\0vgtov\0\0\0cavan\0\0\0cayxy\0\0\0cawnp\0\0\0usyak\0\0\0aqcas\0\0\0aqdav\0\0\0aqddu\0\0\0aumqi\0\0\0aqmaw\0\0\0aqmcm\0\0\0aqplm\0\0\0aqrot\0\0\0aqsyw\0\0\0aqtrl\0\0\0aqvos\0\0\0sjlyr\0\0\0yeade\0\0\0kzala\0\0\0joamm\0\0\0rudyr\0\0\0kzaau\0\0\0kzakx\0\0\0tmasb\0\0\0kzguw\0\0\0iqbgw\0\0\0bhbah\0\0\0azbak\0\0\0thbkk\0\0\0rubax\0\0\0lbbey\0\0\0kgfru\0\0\0bnbwn\0\0\0ruchita\0lkcmb\0\0\0sydam\0\0\0bddac\0\0\0tldil\0\0\0aedxb\0\0\0tjdyu\0\0\0cyfmg\0\0\0gazastrphebron\0\0vnsgn\0\0\0hkhkg\0\0\0mnhvd\0\0\0ruikt\0\0\0idjkt\0\0\0iddjj\0\0\0jeruslm\0afkbl\0\0\0rupkc\0\0\0pkkhi\0\0\0npktm\0\0\0rukhndg\0inccu\0\0\0rukra\0\0\0mykul\0\0\0mykch\0\0\0kwkwi\0\0\0momfm\0\0\0rugdx\0\0\0idmak\0\0\0phmnl\0\0\0ommct\0\0\0cynic\0\0\0runoz\0\0\0ruovb\0\0\0ruoms\0\0\0kzura\0\0\0khpnh\0\0\0idpnk\0\0\0kpfnj\0\0\0qadoh\0\0\0kzksn\0\0\0kzkzo\0\0\0saruh\0\0\0ruuus\0\0\0uzskd\0\0\0krsel\0\0\0cnsha\0\0\0sgsin\0\0\0rusred\0\0twtpe\0\0\0uztas\0\0\0getbs\0\0\0irthr\0\0\0btthi\0\0\0jptyo\0\0\0rutof\0\0\0mnuln\0\0\0cnurc\0\0\0ruunera\0lavte\0\0\0ruvvo\0\0\0ruyks\0\0\0mmrgn\0\0\0ruyek\0\0\0amevn\0\0\0ptpdl\0\0\0bmbda\0\0\0eslpa\0\0\0cvrai\0\0\0fotho\0\0\0ptfnc\0\0\0isrey\0\0\0gsgrv\0\0\0shshn\0\0\0fkpsy\0\0\0auadl\0\0\0aubne\0\0\0aubhq\0\0\0audrw\0\0\0aueuc\0\0\0auhba\0\0\0auldc\0\0\0auldh\0\0\0aumel\0\0\0auper\0\0\0ausyd\0\0\0gmt\0\0\0\0\0utcw01\0\0utcw10\0\0utcw11\0\0utcw12\0\0utcw02\0\0utcw03\0\0utcw04\0\0utcw05\0\0utcw06\0\0utcw07\0\0utcw08\0\0utcw09\0\0utce01\0\0utce10\0\0utce11\0\0utce12\0\0utce13\0\0utce14\0\0utce02\0\0utce03\0\0utce04\0\0utce05\0\0utce06\0\0utce07\0\0utce08\0\0utce09\0\0utc\0\0\0\0\0nlams\0\0\0adalv\0\0\0ruasf\0\0\0grath\0\0\0rsbeg\0\0\0deber\0\0\0skbts\0\0\0bebru\0\0\0robuh\0\0\0hubud\0\0\0debsngn\0mdkiv\0\0\0dkcph\0\0\0iedub\0\0\0gigib\0\0\0gggci\0\0\0fihel\0\0\0imdgs\0\0\0trist\0\0\0jesth\0\0\0rukgd\0\0\0rukvx\0\0\0uaiev\0\0\0ptlis\0\0\0silju\0\0\0gblon\0\0\0lulux\0\0\0esmad\0\0\0mtmla\0\0\0fimhq\0\0\0bymsq\0\0\0mcmon\0\0\0rumow\0\0\0noosl\0\0\0frpar\0\0\0metgd\0\0\0czprg\0\0\0lvrix\0\0\0itrom\0\0\0rukuf\0\0\0smsai\0\0\0basjj\0\0\0rurtw\0\0\0uasip\0\0\0mkskp\0\0\0bgsof\0\0\0sesto\0\0\0eetll\0\0\0altia\0\0\0ruuly\0\0\0livdz\0\0\0vavat\0\0\0atvie\0\0\0ltvno\0\0\0ruvog\0\0\0plwaw\0\0\0hrzag\0\0\0chzrh\0\0\0mgtnr\0\0\0iodga\0\0\0cxxch\0\0\0cccck\0\0\0kmyva\0\0\0tfpfr\0\0\0scmaw\0\0\0mvmle\0\0\0muplu\0\0\0ytmam\0\0\0rereu\0\0\0wsapw\0\0\0nzakl\0\0\0pgraw\0\0\0nzcht\0\0\0fmtkk\0\0\0clipc\0\0\0vuvli\0\0\0tkfko\0\0\0fjsuv\0\0\0tvfun\0\0\0ecgps\0\0\0pfgmr\0\0\0sbhir\0\0\0gugum\0\0\0ushnl\0\0\0kipho\0\0\0kicxi\0\0\0fmksa\0\0\0mhkwa\0\0\0mhmaj\0\0\0pfnhv\0\0\0ummdy\0\0\0nrinu\0\0\0nuiue\0\0\0nfnlk\0\0\0ncnou\0\0\0asppg\0\0\0pwror\0\0\0pnpcn\0\0\0fmpni\0\0\0pgpom\0\0\0ckrar\0\0\0mpspn\0\0\0pfppt\0\0\0kitrw\0\0\0totbu\0\0\0umawk\0\0\0wfmau\0\0\0") } };
            #[doc(hidden)]
            pub const SINGLETON_TIMEZONE_IDENTIFIERS_IANA_CORE_V1_CHECKSUM: u64 = 4903793488535745989u64;
        }
        #[clippy::msrv = "1.82"]
        impl icu_provider::DataProvider<icu::time::provider::iana::TimezoneIdentifiersIanaCoreV1> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::time::provider::iana::TimezoneIdentifiersIanaCoreV1>, icu_provider::DataError> {
                if req.id.locale.is_unknown() {
                    Ok(icu_provider::DataResponse { payload: icu_provider::DataPayload::from_static_ref(Self::SINGLETON_TIMEZONE_IDENTIFIERS_IANA_CORE_V1), metadata: icu_provider::DataResponseMetadata::default().with_checksum(Self::SINGLETON_TIMEZONE_IDENTIFIERS_IANA_CORE_V1_CHECKSUM) })
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::time::provider::iana::TimezoneIdentifiersIanaCoreV1 as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
    };
    ($ provider : ty , ITER) => {
        __impl_timezone_identifiers_iana_core_v1!($provider);
        #[clippy::msrv = "1.82"]
        impl icu_provider::IterableDataProvider<icu::time::provider::iana::TimezoneIdentifiersIanaCoreV1> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BtreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok([Default::default()].into_iter().collect())
            }
        }
    };
    ($ provider : ty , DRY) => {
        __impl_timezone_identifiers_iana_core_v1!($provider);
        #[clippy::msrv = "1.82"]
        impl icu_provider::DryDataProvider<icu::time::provider::iana::TimezoneIdentifiersIanaCoreV1> for $provider {
            fn dry_load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponseMetadata, icu_provider::DataError> {
                if req.id.locale.is_unknown() {
                    Ok(icu_provider::DataResponseMetadata::default().with_checksum(Self::SINGLETON_TIMEZONE_IDENTIFIERS_IANA_CORE_V1_CHECKSUM))
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::time::provider::iana::TimezoneIdentifiersIanaCoreV1 as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
    };
    ($ provider : ty , DRY , ITER) => {
        __impl_timezone_identifiers_iana_core_v1!($provider);
        #[clippy::msrv = "1.82"]
        impl icu_provider::DryDataProvider<icu::time::provider::iana::TimezoneIdentifiersIanaCoreV1> for $provider {
            fn dry_load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponseMetadata, icu_provider::DataError> {
                if req.id.locale.is_unknown() {
                    Ok(icu_provider::DataResponseMetadata::default().with_checksum(Self::SINGLETON_TIMEZONE_IDENTIFIERS_IANA_CORE_V1_CHECKSUM))
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::time::provider::iana::TimezoneIdentifiersIanaCoreV1 as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
        #[clippy::msrv = "1.82"]
        impl icu_provider::IterableDataProvider<icu::time::provider::iana::TimezoneIdentifiersIanaCoreV1> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BtreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok([Default::default()].into_iter().collect())
            }
        }
    };
}
#[doc(inline)]
pub use __impl_timezone_identifiers_iana_core_v1 as impl_timezone_identifiers_iana_core_v1;
