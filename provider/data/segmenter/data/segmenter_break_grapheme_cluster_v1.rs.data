// @generated
/// Implement `DataProvider<SegmenterBreakGraphemeClusterV1>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
///
/// Using this implementation will embed the following data in the binary's data segment:
/// * 9696B[^1] for the singleton data struct
///
/// [^1]: these numbers can be smaller in practice due to linker deduplication
///
/// This macro requires the following crates:
/// * `icu`
/// * `icu_provider`
/// * `zerovec`
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_segmenter_break_grapheme_cluster_v1 {
    ($ provider : ty) => {
        #[clippy::msrv = "1.82"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.82"]
        impl $provider {
            #[doc(hidden)]
            pub const SINGLETON_SEGMENTER_BREAK_GRAPHEME_CLUSTER_V1: &'static <icu::segmenter::provider::SegmenterBreakGraphemeClusterV1 as icu_provider::DynamicDataMarker>::DataStruct = &icu::segmenter::provider::RuleBreakData { property_table: icu::collections::codepointtrie::CodePointTrie::from_parts(icu::collections::codepointtrie::CodePointTrieHeader { high_start: 921600u32, shifted12_high_start: 225u16, index3_null_offset: 407u16, data_null_offset: 32u32, null_value: 0u32, trie_type: icu::collections::codepointtrie::TrieType::Small }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\0\0@\0\x7F\0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xBF\0\xCF\0 \0 \0 \0 \0\x0C\x01 \0 \0 \0;\x01y\x01\xB9\x01\xEE\x01 \0\x1F\x02P\x02\x85\x02\x9F\x02\xD0\x02\x0E\x03<\x03l\x03\xA2\x03\xDF\x03\x1E\x04^\x04\x9D\x04\xDC\x04\x1B\x05Z\x05\x99\x05\xD9\x05\x19\x06W\x06\x95\x06\xD5\x06\x14\x07S\x07\x92\x07\xD2\x07\x11\x08P\x08\x86\x08\xBA\x08\xF5\x08\x04\t\x07\x01A\t\x81\t\xC1\tS\x06\xBD\x07\xD7\x07\xE4\x07\xFD\x07\x1D\x088\x08P\x08o\x08\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\xD7\x07\x8F\x08\0\0\x10\0 \x000\0@\0P\0`\0p\0\x7F\0\x8F\0\x9F\0\xAF\0 \x000\0@\0P\0 \x000\0@\0P\0 \x000\0@\0P\0 \x000\0@\0P\0 \x000\0@\0P\0\xBF\0\xCF\0\xDF\0\xEF\0\xCF\0\xDF\0\xEF\0\xFF\0 \x000\0@\0P\0 \x000\0@\0P\0\x0C\x01\x1C\x01,\x01<\x01 \x000\0@\0P\0 \x000\0@\0P\0 \x000\0@\0P\0;\x01K\x01[\x01k\x01y\x01\x89\x01\x99\x01\xA9\x01\xB9\x01\xC9\x01\xD9\x01\xE9\x01\xEE\x01\xFE\x01\x0E\x02\x1E\x02 \x000\0@\0P\0\x1F\x02/\x02?\x02O\x02P\x02`\x02p\x02\x80\x02\x85\x02\x95\x02\xA5\x02\xB5\x02\x9F\x02\xAF\x02\xBF\x02\xCF\x02\xD0\x02\xE0\x02\xF0\x02\0\x03\x0E\x03\x1E\x03.\x03>\x03<\x03L\x03\\\x03l\x03l\x03|\x03\x8C\x03\x9C\x03\xA2\x03\xB2\x03\xC2\x03\xD2\x03\xDF\x03\xEF\x03\xFF\x03\x0F\x04\x1E\x04.\x04>\x04N\x04^\x04n\x04~\x04\x8E\x04\x9D\x04\xAD\x04\xBD\x04\xCD\x04\xDC\x04\xEC\x04\xFC\x04\x0C\x05\x1B\x05+\x05;\x05K\x05Z\x05j\x05z\x05\x8A\x05\x99\x05\xA9\x05\xB9\x05\xC9\x05\xD9\x05\xE9\x05\xF9\x05\t\x06\x19\x06)\x069\x06I\x06W\x06g\x06w\x06\x87\x06\x95\x06\xA5\x06\xB5\x06\xC5\x06\xD5\x06\xE5\x06\xF5\x06\x05\x07\x14\x07$\x074\x07D\x07S\x07c\x07s\x07\x83\x07\x92\x07\xA2\x07\xB2\x07\xC2\x07\xD2\x07\xE2\x07\xF2\x07\x02\x08\x11\x08!\x081\x08A\x08P\x08`\x08p\x08\x80\x08\x86\x08\x96\x08\xA6\x08\xB6\x08\xBA\x08\xCA\x08\xDA\x08\xEA\x08\xF5\x08\x05\t\x15\t%\t\x04\t\x14\t$\t4\t\x07\x01\x17\x01'\x017\x01A\tQ\ta\tq\t\x81\t\x91\t\xA1\t\xB1\t\xC1\t\xD1\t\xE1\t\xF1\tS\x06c\x06s\x06\x83\x06 \0 \0\xB2\0\x01\n \0\x10\n\xFE\0H\x02 \n\x11\x02 \0 \0 \0 \0 \0 \x000\n0\n0\n0\n0\n0\n@\n@\n@\n@\nH\nP\nP\nP\nP\nP\n \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xB2\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0`\n \0S\x03 \0>\x04 \0>\x04 \0 \0 \0l\nz\n\0\x03 \0 \0\x8A\n \0 \0 \0 \0 \0 \0 \0\xB6\x05 \0\x15\x02 \0 \0 \0 \0 \0 \0 \0\x99\n\xA9\n \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xB5\n \0 \0 \0\xC1\n\xCF\n\xDC\n \0 \0 \0\xBF\0\xF0\0 \0 \0 \0\xDE\x03 \0 \0\xEC\n\xFA\n \0\xB4\0\xFB\0\xE0\x03 \0\t\x0B \0 \0 \0\x17\x0B\xFB\0 \0 \0'\x0B3\x0B \0 \0 \0 \0 \0 \0 \0 \0 \0\xD6\tC\x0BL\x0B \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xBF\0\xBF\0\xBF\0\xBF\0V\x0B \0f\x0Bu\x0Bx\x0B \0\x0E\0 \0 \0 \0 \0 \0 \0\xBF\0\xBF\0\xFE\0 \0 \0\x7F\x0Bx\x0B \0 \0 \0 \0 \0\x8B\x0B\x95\x0B \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xA0\x0By\x0B \0 \0 \0 \0 \0y\x0B \0 \0 \0\xAC\x0B \0\xB2\x0B\xBE\x0B \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\x7F\x0B \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xA0\x0B{\x0B\xAD\0 \0 \0\xC9\x0B\xD9\x0B\xDC\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xEA\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xFA\x0B\x07\x0C\x0C\x0C\xA7\x0B\x18\x0C'\x0C4\x0C \0 \0?\x0CN\x0CO\x0C \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\x9A\x0B \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0?\x0CS\x0C \0 \0 \0_\x0C \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xB0\0\xFD\0 \0 \0 \0 \0 \0 \0 \0\xB0\0 \0 \0 \0 \0 \0 \0\xBF\0\xBF\0 \0 \0\xB5\0d\x0C \0 \0 \0 \0 \0\xB2\x05 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0r\x0C \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xB0\0\x82\x0C \0\xB1\0 \0 \0 \0 \0 \0\xFD\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\x90\x0C \0\x9D\x0C \0 \0 \0 \0 \0`\x04 \0 \0\xAA\x0C\xB6\x0C \0\xBF\0\xBA\x0C \0 \0\xF6\x08 \0\xB8\0\xC9\x0C0\n\xD9\x0C\xDF\x03 \0 \0\xE6\x0C\xFE\0 \0\x19\x02 \0 \0\xF6\x0C\x05\r\x12\r \0 \0\x12\x02 \0 \0 \0\"\r\x7F\x01 \x002\rB\r \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0O\r \0_\rc\rp\rg\rp\rk\rp\r_\rc\rp\rg\rp\rk\rp\r_\rc\rp\rg\rp\rk\rp\r_\rc\rp\rg\rp\rk\rp\r_\rc\rp\rg\rp\rk\rp\r_\rc\rp\rg\rp\r|\r@\n\x8C\rP\nP\n\x97\r \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\x10\x02 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xBF\0 \0\xBF\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0p\0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xB1\0 \0 \0 \0 \0 \0\x14\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\x11\x02 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xFE\0 \0 \0 \0 \0 \0 \0 \0 \0\xA3\r \0 \0 \0 \0 \0 \0 \0 \0\xB2\r \0 \0\xC2\r \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xB6\x05 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xBA\r \0 \0 \0\xD2\r \0 \0 \0 \0 \0 \0 \0 \0 \0 \0@\x05 \0 \0 \0 \0\xB3\0 \0 \0 \0 \0\xB9\0\xFE\0 \0 \0`\n \0 \0 \0 \0 \0 \0 \0\xE2\r \0 \0\xB7\0\xF8\0 \0 \0\xF2\r\xE0\x03 \0 \0\x02\x0E\x10\x0E \0 \0 \0\xFC\0 \0\x1E\x0E\xFA\0\xB3\x08 \0 \0\x1B\x02\xE0\x03 \0 \0.\x0E>\x0E \0 \0 \0N\x0E]\x0E\x7F\x01 \0 \0 \0 \0 \0 \0 \0 \0\xB0\0m\x0E \0\xD2\x07 \0 \0x\x0E\x86\x0E\x17\x02\x94\x0E\xFA\0 \0 \0 \0\xA1\x0E\xB0\x0E\xBF\x0E?\x04 \0 \0 \0\xCA\x0E\xDA\x0E\x10\x02 \0 \0 \0 \0 \0\xEA\x0E\xF7\x0E \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xB0\0\x07\x0F\xFE\0?\x05 \0 \0 \0\x17\x0F\xFE\0 \0 \0 \0 \0 \0'\x0F\xF7\0 \0 \0 \0 \0 \x007\x0FG\x0F \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0N\x0EW\x0F \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0g\x0Fw\x0F \0 \0 \0 \0 \0 \0 \0 \0\x86\x0F\x96\x0F \0\xA5\x0F \0 \0\xB2\x0F\x17\x02\xC1\x0F \0 \0\xCD\x0F\xD7\x0F \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xB6\x07\xE7\x0F \0 \0 \0 \0 \0\xBD\0\xF6\x0F\x05\x10 \0 \0 \0 \0 \0 \0 \0\x14\x10#\x10 \0 \0 \0+\x10;\x10 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xCF\x07K\x10 \0 \0W\x10\xFC\0\x14\x02 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\x0E\0g\x10\xF9\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xB1\0n\x10 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xFA\0 \0 \0 \0\xF8\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0~\x10 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xB0\0\x8D\x10\x8E\x10\x8E\x10\x96\x10\xFC\0 \0 \0 \0 \0\x1A\x02\xFD\0 \0 \0 \0 \0 \0 \0 \0 \0 \0>\x05\x1C\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xBF\0\xBF\0\xF1\0\xBF\0\xF8\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xA0\x10\xAD\x10\xBA\x10 \0\xC6\x10 \0 \0 \0 \0 \0S\x03 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xBF\0\xBF\0\xBF\0\xD6\x10\xBF\0\xBF\0\xF2\0\x19\x02\x1A\x02\xB4\0\xBE\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xD2\t\xE1\x10\xEF\x10 \0 \0 \0 \0 \0\xB0\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xF8\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\x10\x02 \0 \0 \0\xB3\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xB3\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xB1\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xF8\0 \0 \0 \0 \0 \0 \0\x0B\x01 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\x82\x0B \0\xAC\x0B \0 \0 \0\x83\x0B\xFF\x10\x0F\x11\x1E\x11\x82\x0B\xE0\x0B\xE0\x0B\xE0\x0B.\x114\x11\xDF\x0Bw\x0B\xAC\x0BD\x11\xB2\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0BP\x11\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE2\x0B`\x11\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B \0 \0 \0\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B \0 \0 \0 \0 \0 \0 \0b\x11 \0 \0 \0 \0 \0a\x11\xE0\x0B\xE0\x0B\x83\x0B \0 \0 \0r\x11\x85\x0B \0 \0r\x11 \0\xAD\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\x83\x0B\xE0\x0B\xE0\x0Bz\x11\xD9\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE0\x0B\xE2\x0B\x0E\0\x0E\0\xBF\0\xBF\0\xBF\0\xBF\0\xBF\0\xBF\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\xBF\0\xBF\0\xBF\0\xBF\0\xBF\0\xBF\0\xBF\0\xBF\0\xBF\0\xBF\0\xBF\0\xBF\0\xBF\0\xBF\0\xBF\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0\x0E\0y\0\x89\0\xA1\0\xC1\0\xE1\0\x01\x01!\x01A\x01a\x01\x81\x01\x97\x01\xA6\x01\xC6\x01\xE5\x01\x05\x02\x97\x01%\x02@\x02`\x02\x80\x02\x9C\x02\xB0\x02\xC6\x02\x97\x01\xE6\x02\xFD\x02\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x17\x037\x03V\x03v\x03z\x03w\x03{\x03x\x03|\x03y\x03v\x03z\x03w\x03{\x03x\x03|\x03y\x03\x84\x03\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\xA4\x03\x97\x01\xC4\x03\xE4\x03\x04\x04\x97\x01\x97\x01\x97\x01$\x043\x04J\x04j\x04\x88\x04\xA7\x04\xC5\x04\xE3\x04\x03\x05!\x05;\x05\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01X\x05\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01g\x05\x97\x01\x97\x01\x97\x01\x97\x01z\x05\x8E\x05\xA5\x05\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\xC5\x05\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\x97\x01\xD5\x05\xEA\x05\x06\x06\x97\x01\x97\x01\x97\x01&\x06\x97\x01\x97\x01F\x06\\\x06n\x06\x97\x01\x8D\x06\x97\x01\x97\x01\x97\x01\xAD\x06\xCD\x06\xED\x06\x08\x07(\x07=\x07]\x07^\x07~\x07\x9D\x07\x9D\x07\x9D\x07\x9D\x07\x9D\x07\x9D\x07\x9D\x07") }, unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x02\x03\x03\x01\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\x0E\0\0\0\x03\x0E\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\x11\x11\x11\x11\x11\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\0\x11\x11\0\x11\x11\0\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x07\x07\x07\x07\x07\x07\0\0\0\0\0\0\0\0\0\0\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\x11\x11\x11\x11\x11\x11\x07\0\x11\x11\x11\x11\x11\x11\0\0\x11\x11\0\x11\x11\x11\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x07\0\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\x11\x11\x11\x11\x11\x11\x11\x11\0\0\0\0\0\0\0\0\0\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\x11\x11\x11\0\x11\x11\x11\x11\x11\x11\x11\x11\x11\0\x11\x11\x11\0\x11\x11\x11\x11\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\x11\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x07\x07\0\0\0\0\0\x11\x11\x11\x11\x11\x11\x11\x11\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x07\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x11\x08\x11\0\x08\x08\x11\x11\x11\x11\x11\x11\x11\x11\x08\x08\x08\x08\x0F\x08\x08\0\x11\x11\x11\x11\x11\x11\x11\x10\x10\x10\x10\x10\x10\x10\x10\0\0\x11\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x10\x10\x10\x10\x10\x10\x10\x10\0\x11\x08\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\0\x10\x10\x10\x10\x10\x10\x10\0\x10\0\0\0\x10\x10\x10\x10\0\0\x11\0\x11\x08\x11\x11\x11\x11\0\0\x08\x08\0\0\x08\x08\x0F\0\0\0\0\0\0\0\0\0\x11\0\0\0\0\x10\x10\0\x10\0\0\x11\x11\0\0\0\0\0\0\0\0\0\0\0\0\x10\x10\0\0\0\0\0\0\0\0\0\0\0\0\x11\0\x11\x11\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\0\x08\x08\x11\x11\0\0\0\0\x11\x11\0\0\x11\x11\x11\0\0\0\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\x11\0\0\0\x11\0\0\0\0\0\0\0\0\0\0\x11\x11\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\0\x10\x10\x10\x10\x10\x10\x10\0\x10\x10\0\x10\x10\x10\x10\x10\0\0\x11\0\x08\x08\x11\x11\x11\x11\x11\0\x11\x11\x08\0\x08\x08\x0F\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x10\x11\x11\x11\x11\x11\x11\0\x11\x08\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\0\x10\x10\x10\x10\x10\x10\x10\0\x10\x10\0\x10\x10\x10\x10\x10\0\0\x11\0\x11\x11\x08\x11\x11\x11\x11\0\0\x08\x08\0\0\x08\x08\x0F\0\0\0\0\0\0\0\x11\x11\x11\0\0\0\0\x10\x10\0\x10\0\0\x11\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\x08\x08\0\0\0\x08\x08\x08\0\x08\x08\x08\x11\0\0\0\0\0\0\0\0\0\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\x08\x08\x08\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\0\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\0\0\x11\0\x11\x11\x08\x08\x08\x08\0\x11\x11\x11\0\x11\x11\x11\x0F\0\0\0\0\0\0\0\x11\x11\0\x10\x10\x10\0\0\0\0\0\0\0\x11\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\x08\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\0\x08\x11\x08\x11\x08\x08\0\x11\x11\x11\0\x11\x11\x11\x11\0\0\0\0\0\0\0\x11\x11\0\0\0\0\0\0\0\0\0\0\0\x11\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\x11\x11\x08\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x11\x11\0\x11\x08\x11\x11\x11\x11\0\x08\x08\x08\0\x08\x08\x08\x0F\x07\0\0\0\0\0\0\0\0\x11\0\0\0\0\0\0\0\0\0\0\x11\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\x08\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\0\0\0\0\x11\x08\x08\x11\x11\x11\0\x11\0\x08\x08\x08\x08\x08\x08\x08\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\0\x08\x11\x11\x11\x11\x11\x11\x11\0\0\0\0\0\0\0\x11\x11\x11\x11\x11\x11\x11\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\0\x08\x11\x11\x11\x11\x11\x11\x11\x11\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\0\x11\0\x11\0\0\0\0\x08\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x08\x11\x11\x11\x11\x11\0\x11\x11\0\0\0\0\0\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\0\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\0\0\0\x11\x08\x11\x11\x11\x11\x11\x11\0\x11\x11\x08\x08\x11\x11\0\0\0\0\0\0\x08\x08\x11\x11\0\0\0\0\x11\x11\0\0\x11\0\x08\x11\x11\0\0\0\0\0\0\x11\0\0\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\x0B\x0B\x0B\x0B\x0B\x0B\x0B\x0B\x0B\x0B\x0B\x0B\x0B\x0B\x0B\x0B\0\0\x11\x11\x11\x11\0\0\0\0\0\0\0\0\0\0\x11\x11\x08\x11\x11\x11\x11\x11\x11\x11\x08\x08\x08\x08\x08\x08\x11\x08\x08\x11\x11\x11\x11\x11\x11\x11\0\0\0\0\0\0\0\0\0\0\0\x11\x11\x11\x03\x11\x11\x11\x08\x08\x08\x08\x11\x11\x08\x08\x08\0\0\0\0\x08\x08\x11\x08\x08\x08\x08\x08\x08\x11\x11\x11\0\0\0\0\0\0\0\x11\x11\x08\x08\x11\0\0\0\0\0\x08\x11\x08\x11\x11\x11\x11\x11\x11\x11\0\x11\0\0\x11\x11\x11\x11\x11\x11\x11\x11\x08\x08\x08\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\0\0\x11\0\0\0\0\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x08\x08\x11\x11\x11\0\0\0\0\0\0\0\0\0\0\0\x08\x11\x11\x11\x11\x08\x08\x11\x11\x11\x11\x11\x11\0\0\0\0\0\0\x11\x08\x11\x11\x08\x08\x08\x11\x08\x11\0\0\0\0\x08\x08\x08\x08\x08\x08\x08\x08\x11\x11\x11\x11\x08\x08\x11\x11\0\0\0\0\0\0\0\0\x11\x08\x11\x11\x11\x11\x11\x11\x11\0\0\0\0\x11\0\0\x08\x11\x11\0\0\0\0\0\0\0\0\0\0\0\x03\x04\x05\x03\x03\0\0\0\0\0\0\0\0\x03\x03\x03\x03\x03\x03\x03\0\0\0\0\0\0\0\0\0\0\0\0\x0E\0\0\0\0\0\0\0\0\0\0\0\0\0\x0E\x0E\x0E\x0E\x0E\x0E\0\0\0\0\0\0\0\0\0\x0E\x0E\0\0\0\0\0\0\0\0\0\0\x0E\x0E\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x0E\x0E\x0E\x0E\x0E\x0E\x0E\0\0\0\0\x0E\x0E\x0E\0\0\0\0\0\0\0\0\0\0\0\x0E\x0E\x0E\x0E\0\x0E\x0E\x0E\x0E\x0E\x0E\0\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\0\0\0\0\0\0\0\0\0\0\x0E\x0E\x0E\x0E\x0E\x0E\0\0\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\0\x0E\0\x0E\0\0\0\0\0\0\x0E\0\0\0\0\0\0\0\x0E\0\0\x0E\0\0\0\0\x0E\0\x0E\0\0\0\x0E\x0E\x0E\0\x0E\0\0\0\0\0\0\0\0\x0E\x0E\x0E\x0E\x0E\0\0\0\0\0\0\0\0\x0E\x0E\x0E\0\0\0\0\0\0\0\0\x0E\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x0E\x0E\0\0\0\0\x0E\0\0\0\0\0\0\0\0\0\0\0\0\x0E\0\0\0\0\0\0\0\x0E\0\x0E\0\0\0\0\0\0\x11\x11\x11\0\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\0\0\x11\0\0\0\x11\0\0\0\0\x11\0\0\0\0\x08\x08\x11\x11\x08\0\0\0\0\x11\0\0\0\0\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x11\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\x11\x08\x11\0\0\0\0\0\0\0\0\0\0\0\0\t\t\t\t\t\t\t\t\t\t\t\t\t\0\0\0\x11\x08\x08\x11\x11\x11\x11\x08\x08\x11\x11\x08\x08\0\0\0\0\0\0\0\0\0\x11\x11\x11\x11\x11\x11\x08\x11\x11\x08\x08\x11\x11\0\0\0\0\0\0\0\0\0\x11\0\0\0\0\0\0\0\0\x11\x08\0\0\x11\0\x11\x11\x11\0\0\x11\x11\0\0\0\0\0\x11\x11\0\0\0\0\0\0\0\0\0\0\0\x08\x11\x11\x08\x08\0\0\0\0\0\x08\x11\0\0\0\0\0\0\0\0\0\x08\x08\x11\x08\x08\x11\x08\x08\0\x08\x11\0\0\x0C\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\x0C\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\0\0\0\0\0\0\0\0\0\0\0\0\n\n\n\n\n\n\n\0\0\0\0\x0B\x0B\x0B\x0B\x0B\x0B\x0B\x0B\x0B\x0B\x0B\x0B\0\0\0\0\0\0\x11\x11\x11\x11\x11\0\0\0\0\0\x11\x11\x11\0\x11\x11\0\0\0\0\0\x11\x11\x11\x11\0\0\0\0\0\0\0\0\x11\x11\x11\0\0\0\0\x11\0\0\0\0\0\0\0\0\0\x11\x11\x11\x11\x11\0\0\x08\x11\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\0\0\x11\x11\0\0\0\0\0\0\0\0\0\0\x11\x08\x08\x08\x11\x11\x11\x11\x08\x08\x11\x11\0\0\x07\0\0\x11\0\0\0\0\0\0\0\0\0\0\x07\0\0\0\0\0\0\0\x11\x11\x11\x11\x11\x08\x11\x11\x11\0\0\0\x08\x08\x08\x11\x11\x11\x11\x11\x11\x11\x11\x11\x08\x11\0\x07\x07\0\0\0\0\0\x11\x11\x11\x11\0\x08\x11\0\0\0\0\0\0\0\0\0\0\0\0\x08\x08\x08\x11\x11\x08\x08\x11\x11\x11\x11\0\0\0\0\0\0\x11\0\x08\x08\x08\x11\x11\x11\x11\x11\x11\x11\x11\0\0\0\0\0\0\0\0\0\0\0\x11\x11\0\x11\x08\x08\x08\x08\0\0\x08\x08\0\0\x08\x08\x11\0\0\x08\x08\0\0\x11\x11\x11\x11\x11\x11\x11\0\0\0\0\0\0\0\0\x11\x08\x08\x11\x11\x11\x11\x11\0\x11\0\0\x11\0\x11\x11\x11\x08\0\x08\x08\x11\x11\x07\x11\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\x08\x08\x11\x11\x11\x11\x11\x11\x11\x11\x08\x08\x11\x11\x11\x08\x11\0\0\0\0\0\0\0\0\0\x11\x08\x08\x11\x11\x11\x11\x11\x11\x08\x11\x08\x08\x11\x08\x11\x11\0\0\0\0\0\0\0\0\0\0\0\0\x08\x08\x11\x11\x11\x11\0\0\x08\x08\x08\x08\x11\x11\x08\x11\x08\x08\x08\x11\x11\x11\x11\x11\x11\x11\x11\x08\x08\x11\x08\x11\0\0\0\0\0\0\0\0\0\0\0\x11\x08\x11\x08\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\x08\x11\0\0\x11\x11\x11\x11\x08\x11\x11\x11\x11\x11\0\0\0\0\x11\x11\x11\x11\x11\x11\x11\x11\x08\x11\x11\0\0\0\0\0\x11\x08\x08\x08\x08\x08\0\x08\x08\0\0\x11\x11\x11\x11\x07\x08\x07\x08\x11\0\0\0\0\0\0\0\0\0\0\0\0\x08\x08\x08\x11\x11\x11\x11\0\0\x11\x11\x08\x08\x08\x08\x11\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\0\0\0\0\0\x11\x11\x11\x11\x11\x11\x08\x07\x11\x11\x11\x11\0\x11\x11\x11\x11\x11\x11\x08\x08\x11\x11\x11\0\0\0\0\x07\x07\x07\x07\x07\x07\x11\x11\x11\x11\x11\x11\x11\x08\x11\x11\0\0\0\0\0\0\x11\x11\x11\x11\x11\x11\x11\0\x11\x11\x11\x11\x11\x11\x08\x11\x11\x11\x11\x11\x11\x11\x11\0\x08\x11\x11\x11\x11\x11\x11\x08\x11\x11\x08\x11\x11\0\0\0\0\0\0\0\0\0\x11\x11\x11\x11\x11\x11\0\0\0\x11\0\x11\x11\0\x11\x11\x11\x11\x11\x11\x07\x11\0\0\0\0\0\0\0\0\0\0\x08\x08\x08\x08\x08\0\x11\x11\0\x08\x08\x11\x08\x11\0\0\0\0\0\0\0\0\x11\x11\x07\x08\0\0\0\0\0\0\0\0\0\0\0\0\x08\x08\x11\x11\x11\x11\x11\0\0\0\x08\x08\x11\0\0\0\0\0\0\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x08\x08\x08\x11\x11\x11\0\0\0\n\0\0\0\n\n\n\n\0\0\0\0\0\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08\0\0\0\0\0\0\0\x11\x11\x11\x11\x11\0\0\0\x11\x11\x11\x03\x03\x03\x03\x03\x03\x03\x03\x11\x11\x11\x11\x11\0\0\x11\x11\x11\x11\x11\x11\x11\0\0\0\0\0\0\0\0\0\0\x11\x11\x11\x11\0\0\x11\x11\x11\x11\x11\x11\x11\0\0\0\0\x11\x11\x11\x11\x11\x11\x11\x11\x11\0\0\x11\x11\x11\x11\x11\0\x11\x11\0\x11\x11\x11\x11\x11\0\0\0\0\0\x0E\x0E\0\0\0\0\0\0\0\0\0\0\0\0\x0E\x0E\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x0E\0\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\0\0\0\0\0\x0E\x0E\x0E\x0E\x0E\x0E\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\x06\0\0\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\0\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x11\x11\x11\x11\x11\0\0\0\0\0\0\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\0\0\0\0\0\0\0\0\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\x0E\0\x0E\x0E\x0E\x0E\0\0\0\0") }, 0u8), break_state_table: unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"\xFD\xFD\xFD\xFD\xFF\xFF\xFD\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\xFF\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFF\xFF\xFD\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\xFF\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFF\xFF\xFD\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\xFF\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFF\xFF\x14\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\xFF\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFF\xFD\xFD\xFD\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFF\xFF\xFD\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\xFF\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFF\xFF\xFD\xFD\xFF\xFF\xFF\xFD\xFF\xFF\xFD\xFF\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFF\xFF\xFD\xFD\xFF\xFD\xFF\xFF\xFD\xFD\xFD\xFF\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFF\xFF\xFD\xFD\xFF\xFD\xFD\xFF\xFD\xFD\xFD\xFF\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFF\xFF\xFD\xFD\xFF\xFD\xFF\xFF\xFD\xFD\xFD\xFF\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFF\xFF\xFD\xFD\xFF\xFD\xFD\xFF\xFD\xFD\xFD\xFF\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\x12\x13\xFD\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\x12\xFD\x12\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFF\xFF\xFD\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\xFF\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFF\x15\xFD\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\x16\xFD\x15\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFF\xFF\xFD\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\xFF\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\x12\x13\xFD\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\x12\xFD\x12\xFE\xFE\xFE\xFE\xFE\xFE\xFE\xFD\xFD\xFD\xFD\xFD\xFF\xFF\xFD\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFF\xFF\xFD\xFF\xFE\xFE\xFE\xFE\xFE\xFE\xFE\xFD\xFD\xFD\xFD\xFD\xFF\xFF\xFD\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\xFF\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFF\x15\xFD\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\x16\xFD\x15\xFE\xFE\xFE\xFE\xFE\xFE\xFE\xFD\xFD\xFD\xFD\xFD\xFF\x17\xFD\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\x16\xFF\x17\xFE\xFE\xFE\xFE\xFE\xFE\xFE\xFD\xFD\xFD\xFD\xFD\xFF\x17\xFD\xFD\xFF\xFD\xFD\xFD\xFD\xFD\xFD\x17\xFF\x17\xFE\xFE\xFE\xFE\xFE\xFE\xFE\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD\xFD") }, word_type_table: zerovec::ZeroVec::new(), property_count: 26u8, last_codepoint_property: 17u8, sot_property: 24u8, eot_property: 25u8, complex_property: 127u8 };
        }
        #[clippy::msrv = "1.82"]
        impl icu_provider::DataProvider<icu::segmenter::provider::SegmenterBreakGraphemeClusterV1> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::segmenter::provider::SegmenterBreakGraphemeClusterV1>, icu_provider::DataError> {
                if req.id.locale.is_unknown() {
                    Ok(icu_provider::DataResponse { payload: icu_provider::DataPayload::from_static_ref(Self::SINGLETON_SEGMENTER_BREAK_GRAPHEME_CLUSTER_V1), metadata: icu_provider::DataResponseMetadata::default() })
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::segmenter::provider::SegmenterBreakGraphemeClusterV1 as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
    };
    ($ provider : ty , ITER) => {
        __impl_segmenter_break_grapheme_cluster_v1!($provider);
        #[clippy::msrv = "1.82"]
        impl icu_provider::IterableDataProvider<icu::segmenter::provider::SegmenterBreakGraphemeClusterV1> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BtreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok([Default::default()].into_iter().collect())
            }
        }
    };
    ($ provider : ty , DRY) => {
        __impl_segmenter_break_grapheme_cluster_v1!($provider);
        #[clippy::msrv = "1.82"]
        impl icu_provider::DryDataProvider<icu::segmenter::provider::SegmenterBreakGraphemeClusterV1> for $provider {
            fn dry_load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponseMetadata, icu_provider::DataError> {
                if req.id.locale.is_unknown() {
                    Ok(icu_provider::DataResponseMetadata::default())
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::segmenter::provider::SegmenterBreakGraphemeClusterV1 as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
    };
    ($ provider : ty , DRY , ITER) => {
        __impl_segmenter_break_grapheme_cluster_v1!($provider);
        #[clippy::msrv = "1.82"]
        impl icu_provider::DryDataProvider<icu::segmenter::provider::SegmenterBreakGraphemeClusterV1> for $provider {
            fn dry_load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponseMetadata, icu_provider::DataError> {
                if req.id.locale.is_unknown() {
                    Ok(icu_provider::DataResponseMetadata::default())
                } else {
                    Err(icu_provider::DataErrorKind::InvalidRequest.with_req(<icu::segmenter::provider::SegmenterBreakGraphemeClusterV1 as icu_provider::DataMarker>::INFO, req))
                }
            }
        }
        #[clippy::msrv = "1.82"]
        impl icu_provider::IterableDataProvider<icu::segmenter::provider::SegmenterBreakGraphemeClusterV1> for $provider {
            fn iter_ids(&self) -> Result<std::collections::BtreeSet<icu_provider::DataIdentifierCow<'static>>, icu_provider::DataError> {
                Ok([Default::default()].into_iter().collect())
            }
        }
    };
}
#[doc(inline)]
pub use __impl_segmenter_break_grapheme_cluster_v1 as impl_segmenter_break_grapheme_cluster_v1;
