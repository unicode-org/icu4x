// @generated
/// Implement `DataProvider<IslamicObservationalCacheV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_calendar_islamicobservationalcache_v1 {
    ($ provider : ty) => {
        #[clippy::msrv = "1.67"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.67"]
        impl $provider {
            #[doc(hidden)]
            pub const SINGLETON_CALENDAR_ISLAMICOBSERVATIONALCACHE_V1: &'static <icu::calendar::provider::islamic::IslamicObservationalCacheV1Marker as icu_provider::DataMarker>::Yokeable = &icu::calendar::provider::islamic::IslamicCacheV1 { first_extended_year: 1317i32, data: unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"/9\xAE\x02\xAD\x05\xAA\r\x92-%-\x8D\n-\x05m\x05j\x0BT'I\x0F\x92.&+V\x05\xAE\n\xAC#i\x07T/\xA4.L-\x9C*\\\x05\xBA\x06\xB4%\xA9\rT-\xAA*6\tv\x02u5\xDA\n\xB4&\x99\x06+\x05;\n\x9E\x04^\n\\\x05Y\x0B*+U\n+\n[\x02;5\xD9\n\xD2&\xA5\x0EJ.\x96\x0C-\x05m\nj\rX'I/\x92.)-U*\xB5\x0C\xB4%\xB1\r\xA4+I+\x95\n\xB5\x04m\t\xEC\x02\xE9\x06\xD2\x0Ed-\xAA,V\tv\x04\xF5\x04\xEA\n\xD4*i*S\tk\x04\xBB8v\x02u\t\xAA\x05S\r&-N\n\xAE\x04m\t\xEA\x02\xD5\n\xA5\x06K\x06\xA7\x0C+\t\xAB\x02k\x05\xA5\x0BQ+\xA3\nG\x05\xA7\x02W5\xE6\n\xD4%\xC9\r\x92-\xA5*U\x05\xAD\x01\xEB2\xE9\t\xD2%\xA5\x05\xCB\x02W\t\xB6\x02v\t\xF4\x02i\x0BJ+\x96\n.\x05^\x02\xDD4\xDA\n\xD4%\xA5\x05K\x05\x8F:\xAE\x04^\tZ\x03M\x0B&'\x8B\x06\x17\x05O\n\xAE\x04\xAD\x06\xAA\r\x94-I-\x95\n-\x05\xAD\nj\x03U\x07J\x0F\x94+&+V\x05\xAE\nt#j\x07T')/T-\xAC*\\\x05\xBA\x02\xB9\x05\xB2\rT-*+V\t\xAE\x02]\x05\xBA\n\xB4&\x99\x06+\x06[\x0C\x1E\t^\x02]\x05Y\r2-\x15\r+\n\x9B\x04[9\xDA\n\xD4&\xA9\x0EJ.\x95,-\x05\xAD\nj\rh'Q/\xA2.I-U*\xD5\x04\xB5\t\xB2\r\xA8+Q+\xA5\nU\x05m\n\xEC\x04\xE9\x06\xD2-d-\xAA,V\nv\x04\xF5\x08\xEA\x02\xE5\n\xAA*U\t\xAB\x04W\x01\xB74\xB5\t\xAA\x05\xA5\r*-V\n\xAE\x08k\t\xEA\x04\xD3\n\xA5\x06S\x0E#-K\n\xAB\x02\xAB\x05\xA5\x0B\xA2'E'\x8B\x06\xAB\x04k9\xEA\x02\xD5\x05\xC9\r\xA2-\xC5*U\t\xAD\x01\xED\x02\xEA\t\xD4#\xA9\x03K\x03") } };
        }
        #[clippy::msrv = "1.67"]
        impl icu_provider::DataProvider<icu::calendar::provider::islamic::IslamicObservationalCacheV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::calendar::provider::islamic::IslamicObservationalCacheV1Marker>, icu_provider::DataError> {
                if req.locale.is_empty() {
                    Ok(icu_provider::DataResponse { payload: Some(icu_provider::DataPayload::from_static_ref(Self::SINGLETON_CALENDAR_ISLAMICOBSERVATIONALCACHE_V1)), metadata: Default::default() })
                } else {
                    Err(icu_provider::DataErrorKind::ExtraneousLocale.with_req(<icu::calendar::provider::islamic::IslamicObservationalCacheV1Marker as icu_provider::KeyedDataMarker>::KEY, req))
                }
            }
        }
    };
}
/// Implement `IterableDataProvider<IslamicObservationalCacheV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `DatagenDriver` for this key.
#[doc(hidden)]
#[macro_export]
macro_rules! __impliterable_calendar_islamicobservationalcache_v1 {
    ($ provider : ty) => {
        #[clippy::msrv = "1.67"]
        impl icu_provider::datagen::IterableDataProvider<icu::calendar::provider::islamic::IslamicObservationalCacheV1Marker> for $provider {
            fn supported_locales(&self) -> Result<alloc::vec::Vec<icu_provider::DataLocale>, icu_provider::DataError> {
                Ok([icu_provider::DataLocale::default()].into())
            }
        }
    };
}
