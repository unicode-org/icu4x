# This file is part of ICU4X. For terms of use, please see the file
# called LICENSE at the top level of the ICU4X source tree
# (online at: https://github.com/unicode-org/icu4x/blob/main/LICENSE ).

[package]
name = "icu_testdata"
description = "Pre-built test data for ICU4X"
version = "1.2.0"
authors = ["The ICU4X Project Developers"]
edition = "2021"
readme = "README.md"
repository = "https://github.com/unicode-org/icu4x"
license = "Unicode-DFS-2016"
categories = ["internationalization"]
# Keep this in sync with other crates unless there are exceptions
include = [
    "src/**/*",
    "examples/**/*",
    "benches/**/*",
    "tests/**/*",
    "Cargo.toml",
    "LICENSE",
    "README.md",
    # Exception: We want to be able to run tests, so
    # we include the test data
    "data/**/*",
    "!data/postcard/**/*",
]

[package.metadata.docs.rs]
all-features = true

[dependencies]
icu_provider = { version = "1.1.0", path = "../core" }
icu_provider_adapters = { version = "1.1.0", path = "../adapters" }

# buffer feature
icu_provider_blob = { version = "1.1.0", path = "../blob", optional = true }

# databake deps
icu_locid = { version = "1.1.0", path = "../../components/locid" }
icu_collections = { version = "1.1.0", path = "../../components/collections" }
zerovec = { version = "0.9.4", path = "../../utils/zerovec" }

# databake options
icu_calendar = { version = "1.1.0", path = "../../components/calendar", default-features = false, optional = true }
icu_casemapping = { version = "0.7.1", path = "../../experimental/casemapping", default-features = false, optional = true }
icu_collator = { version = "1.1.0", path = "../../components/collator", default-features = false, optional = true }
icu_compactdecimal = { version = "0.2.0", path = "../../experimental/compactdecimal", default-features = false, optional = true }
icu_datetime = { version = "1.1.0", path = "../../components/datetime", default-features = false, optional = true }
icu_decimal = { version = "1.1.0", path = "../../components/decimal", default-features = false, optional = true }
icu_displaynames = { version = "0.10.0", path = "../../experimental/displaynames", default-features = false, optional = true }
icu_list = { version = "1.1.0", path = "../../components/list", default-features = false, optional = true }
icu_locid_transform = { version = "1.1.0", path = "../../components/locid_transform", default-features = false, optional = true }
icu_normalizer = { version = "1.1.0", path = "../../components/normalizer", default-features = false, optional = true }
icu_plurals = { version = "1.1.0", path = "../../components/plurals", default-features = false, optional = true }
icu_properties = { version = "1.1.0", path = "../../components/properties", default-features = false, optional = true }
icu_relativetime = { version = "0.1.0", path = "../../experimental/relativetime", default-features = false, optional = true }
icu_segmenter = { version = "1.2.0", path = "../../components/segmenter", default-features = false, optional = true }
icu_timezone = { version = "1.1.0", path = "../../components/timezone", default-features = false, optional = true }

[dev-dependencies]
icu = { path = "../../components/icu" }
icu_provider = { path = "../../provider/core", features = ["deserialize_json"] }
criterion = "0.4"

[features]
default = [
    "icu_calendar",
    "icu_collator",
    "icu_datetime",
    "icu_decimal",
    "icu_list",
    "icu_locid_transform",
    "icu_normalizer",
    "icu_plurals",
    "icu_properties",
    "icu_segmenter",
    "icu_timezone",
]
icu_datetime_experimental = [
    "icu_datetime/experimental",
]
buffer = ["dep:icu_provider_blob", "icu_provider/sync", "icu_provider_adapters/serde"]
std = []

[package.metadata.cargo-all-features]
skip_optional_dependencies = true
denylist = ["internal_all_features_hack"]
extra_features = [
    "icu_datetime",
    "icu_list",
]

[[bench]]
name = "providers"
harness = false
