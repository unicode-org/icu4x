// @generated
/// Implement [`DataProvider<DecimalSymbolsV1Marker>`](icu_provider::DataProvider) on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_decimal_symbols_v1 {
    ($ provider : path) => {
        #[clippy::msrv = "1.61"]
        impl icu_provider::DataProvider<icu_decimal::provider::DecimalSymbolsV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu_decimal::provider::DecimalSymbolsV1Marker>, icu_provider::DataError> {
                let locale = req.locale;
                match {
                    static ES_AR: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("."), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                    static ES: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("."), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 2u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                    static FR: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("\u{202f}"), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                    static EN_ZA: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("\u{a0}"), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                    static BN_U_NU_LATN: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 2u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                    static BN: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 2u8, min_grouping: 1u8 }, digits: ['‡ß¶', '‡ßß', '‡ß®', '‡ß©', '‡ß™', '‡ß´', '‡ß¨', '‡ß≠', '‡ßÆ', '‡ßØ'] };
                    static CCP: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 2u8, min_grouping: 1u8 }, digits: ['ëÑ∂', 'ëÑ∑', 'ëÑ∏', 'ëÑπ', 'ëÑ∫', 'ëÑª', 'ëÑº', 'ëÑΩ', 'ëÑæ', 'ëÑø'] };
                    static EN: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                    static TH_U_NU_THAI: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['‡πê', '‡πë', '‡πí', '‡πì', '‡πî', '‡πï', '‡πñ', '‡πó', '‡πò', '‡πô'] };
                    static AR_EG_U_NU_LATN: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{200e}-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{200e}+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                    static AR: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{61c}-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{61c}+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("Ÿ´"), grouping_separator: alloc::borrow::Cow::Borrowed("Ÿ¨"), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['Ÿ†', 'Ÿ°', 'Ÿ¢', 'Ÿ£', 'Ÿ§', 'Ÿ•', 'Ÿ¶', 'Ÿß', 'Ÿ®', 'Ÿ©'] };
                    match ["ar", "ar-EG", "ar-EG-u-nu-latn", "ar-u-nu-latn", "bn", "bn-u-nu-latn", "ccp", "ccp-u-nu-latn", "en", "en-001", "en-ZA", "es", "es-AR", "fil", "fr", "ja", "ru", "sr", "sr-Cyrl", "sr-Latn", "th", "th-u-nu-thai", "tr", "und"].binary_search_by(|k| locale.strict_cmp(k.as_bytes()).reverse()) {
                        Ok(i) => Ok(*unsafe { [&AR, &AR, &AR_EG_U_NU_LATN, &AR_EG_U_NU_LATN, &BN, &BN_U_NU_LATN, &CCP, &BN_U_NU_LATN, &EN, &EN, &EN_ZA, &ES, &ES_AR, &EN, &FR, &EN, &EN_ZA, &ES_AR, &ES_AR, &ES_AR, &EN, &TH_U_NU_THAI, &ES_AR, &EN].get_unchecked(i) }),
                        Err(_) => Err(icu_provider::DataErrorKind::MissingLocale),
                    }
                } {
                    Ok(payload) => Ok(icu_provider::DataResponse { metadata: Default::default(), payload: Some(icu_provider::DataPayload::from_static_ref(payload)) }),
                    Err(e) => Err(e.with_req(<icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::KeyedDataMarker>::KEY, req)),
                }
            }
        }
    };
}
