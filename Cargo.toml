# This file is part of ICU4X. For terms of use, please see the file
# called LICENSE at the top level of the ICU4X source tree
# (online at: https://github.com/unicode-org/icu4x/blob/main/LICENSE ).

[workspace]
resolver = "2"
members = [
    # KEEP IN SYNC WITH workspace.dependencies and docs/tutorials/testing/patch.toml

    # Components
    "components/calendar",
    "components/casemap",
    "components/collator",
    "components/collections",
    "components/collections/codepointtrie_builder",
    "components/datetime",
    "components/decimal",
    "components/icu",
    "components/list",
    "components/locid_transform",
    "components/locid",
    "components/normalizer",
    "components/plurals",
    "components/properties",
    "components/segmenter",
    "components/timezone",
    "experimental/compactdecimal",
    "experimental/displaynames",
    "experimental/personnames",
    "experimental/relativetime",
    "experimental/single_number_formatter",
    "experimental/transliteration",
    "experimental/transliterator_parser",
    "experimental/unicodeset_parser",
    "experimental/unitsconversion",

    # Components data
    "components/calendar/data",
    "components/casemap/data",
    "components/collator/data",
    "components/datetime/data",
    "components/decimal/data",
    "components/list/data",
    "components/locid_transform/data",
    "components/normalizer/data",
    "components/plurals/data",
    "components/properties/data",
    "components/segmenter/data",
    "components/timezone/data",
    "experimental/compactdecimal/data",
    "experimental/displaynames/data",
    "experimental/relativetime/data",
    "experimental/single_number_formatter/data",
    "experimental/unitsconversion/data",

    # FFI
    "ffi/capi_cdylib",
    "ffi/capi_staticlib",
    "ffi/diplomat",
    "ffi/ecma402",
    "ffi/freertos",
    "experimental/harfbuzz",

    # Provider
    "provider/adapters",
    "provider/blob",
    "provider/core",
    "provider/datagen",
    "provider/fs",
    "provider/macros",

    # Utils
    "utils/calendrical_calculations",
    "utils/crlify",
    "utils/databake",
    "utils/databake/derive",
    "utils/deduplicating_array",
    "utils/fixed_decimal",
    "utils/litemap",
    "utils/pattern",
    "utils/tinystr",
    "utils/tzif",
    "utils/writeable",
    "utils/yoke",
    "utils/yoke/derive",
    "utils/zerofrom",
    "utils/zerofrom/derive",
    "utils/zerovec",
    "utils/zerovec/derive",
    "experimental/bies",
    "experimental/ixdtf",
    "experimental/zerotrie",

    # Tools
    "tools/benchmark/binsize",
    "tools/benchmark/macros",
    "tools/benchmark/memory",
    "tools/depcheck",
    "tools/ffi_coverage",
    "tools/testdata-scripts",
]
# Note: Workspaces in subdirectories, such as docs/tutorials/crates, are
# implicitly excluded from the main workspace.
exclude = [
    # GNaw needs to be run from outside the workspace for features to work
    "ffi/gn",
    # Testdata will still be published in the 1.x stream, but is deprecated
    # and we don't use it anymore. As we don't want to keep the actual data
    # in the repo it doesn't build without running `cargo make testdata-legacy`
    # first.
    "provider/testdata",
    # Tutorials are tested in their own cargo workspace against released and
    # local crates
    "docs",
]

[workspace.package]
version = "1.2.0"
rust-version = "1.66"
authors = ["The ICU4X Project Developers"]
edition = "2021"
repository = "https://github.com/unicode-org/icu4x"
homepage = "https://icu4x.unicode.org"
license-file = "LICENSE"
categories = ["internationalization"]
include = [
    "data/**/*",
    "src/**/*",
    "examples/**/*",
    "benches/**/*",
    "tests/**/*",
    "Cargo.toml",
    "LICENSE",
    "README.md",
]

[workspace.dependencies]
# KEEP IN SYNC WITH workspace.members and docs/tutorials/testing/patch.toml

# Components
icu = { version = "~1.2.0", path = "components/icu", default-features = false }
icu_calendar = { version = "~1.2.0", path = "components/calendar", default-features = false }
icu_casemap = { version = "~1.2.0", path = "components/casemap", default-features = false }
icu_collator = { version = "~1.2.0", path = "components/collator", default-features = false }
icu_collections = { version = "~1.2.0", path = "components/collections", default-features = false }
icu_codepointtrie_builder = { version = "0.3.4", path = "components/collections/codepointtrie_builder", default-features = false }
icu_datetime = { version = "~1.2.0", path = "components/datetime", default-features = false }
icu_decimal = { version = "~1.2.0", path = "components/decimal", default-features = false }
icu_list = { version = "~1.2.0", path = "components/list", default-features = false }
icu_locid = { version = "~1.2.0", path = "components/locid", default-features = false }
icu_locid_transform = { version = "~1.2.0", path = "components/locid_transform", default-features = false }
icu_normalizer = { version = "~1.2.0", path = "components/normalizer", default-features = false }
icu_plurals = { version = "~1.2.0", path = "components/plurals", default-features = false }
icu_properties = { version = "~1.2.0", path = "components/properties", default-features = false }
icu_segmenter = { version = "~1.2.0", path = "components/segmenter", default-features = false }
icu_timezone = { version = "~1.2.0", path = "components/timezone", default-features = false }
icu_compactdecimal = { version = "0.2.0", path = "experimental/compactdecimal", default-features = false }
icu_displaynames = { version = "0.10.0", path = "experimental/displaynames", default-features = false }
icu_personnames = { version = "0.0.0", path = "experimental/personnames", default-features = false }
icu_relativetime = { version = "0.1.0", path = "experimental/relativetime", default-features = false }
icu_singlenumberformatter = { version = "0.0.0", path = "experimental/single_number_formatter", default-features = false }
icu_transliteration = { version = "0.0.0", path = "experimental/transliteration", default-features = false }
icu_transliterator_parser = { version = "0.0.0", path = "experimental/transliterator_parser", default-features = false }
icu_unicodeset_parser = { version = "0.0.0", path = "experimental/unicodeset_parser", default-features = false }
icu_unitsconversion = { version = "0.0.0", path = "experimental/unitsconversion", default-features = false }

# Components data
icu_calendar_data = { version = "~1.2.0", path = "components/calendar/data", default-features = false }
icu_casemap_data = { version = "~1.2.0", path = "components/casemap/data", default-features = false }
icu_collator_data = { version = "~1.2.0", path = "components/collator/data", default-features = false }
icu_datetime_data = { version = "~1.2.0", path = "components/datetime/data", default-features = false }
icu_decimal_data = { version = "~1.2.0", path = "components/decimal/data", default-features = false }
icu_list_data = { version = "~1.2.0", path = "components/list/data", default-features = false }
icu_locid_transform_data = { version = "~1.2.0", path = "components/locid_transform/data", default-features = false }
icu_normalizer_data = { version = "~1.2.0", path = "components/normalizer/data", default-features = false }
icu_plurals_data = { version = "~1.2.0", path = "components/plurals/data", default-features = false }
icu_properties_data = { version = "~1.2.0", path = "components/properties/data", default-features = false }
icu_segmenter_data = { version = "~1.2.0", path = "components/segmenter/data", default-features = false }
icu_timezone_data = { version = "~1.2.0", path = "components/timezone/data", default-features = false }
icu_compactdecimal_data = { version = "~1.2.0", path = "experimental/compactdecimal/data", default-features = false }
icu_displaynames_data = { version = "~1.2.0", path = "experimental/displaynames/data", default-features = false }
icu_relativetime_data = { version = "1.2.0", path = "experimental/relativetime/data", default-features = false }
icu_singlenumberformatter_data = { version = "~1.2.0", path = "experimental/single_number_formatter/data", default-features = false }
icu_transliteration_data = { version = "0.0.0", path = "experimental/transliteration/data", default-features = false }

# FFI
icu_capi = { version = "~1.2.0", path = "ffi/diplomat", default-features = false }
icu_capi_cdylib = { version = "~1.2.0", path = "ffi/capi_cdylib", default-features = false }
icu_capi_staticlib = { version = "~1.2.0", path = "ffi/capi_staticlib", default-features = false }
icu4x_ecma402 = { version = "0.8.0", path = "ffi/ecma402", default-features = false }
icu_freertos = { version = "~1.2.0", path = "ffi/freertos", default-features = false }
icu_harfbuzz = { version = "~1.2.0", path = "experimental/harfbuzz", default-features = false }

# Provider
icu_datagen = { version = "~1.2.0", path = "provider/datagen", default-features = false }
icu_provider = { version = "~1.2.0", path = "provider/core", default-features = false }
icu_provider_adapters = { version = "~1.2.0", path = "provider/adapters", default-features = false }
icu_provider_blob = { version = "~1.2.0", path = "provider/blob", default-features = false }
icu_provider_fs = { version = "~1.2.0", path = "provider/fs/", default-features = false }
icu_provider_macros = { version = "~1.2.0", path = "provider/macros", default-features = false }

# Utils
calendrical_calculations = { version = "0.1.0", path = "utils/calendrical_calculations", default-features = false }
crlify = { version = "1.0.1", path = "utils/crlify", default-features = false }
databake = { version = "0.1.3", path = "utils/databake", default-features = false }
databake-derive = { version = "0.1.3", path = "utils/databake/derive", default-features = false }
deduplicating_array = { version = "0.1.3", path = "utils/deduplicating_array", default-features = false }
fixed_decimal = { version = "0.5.2", path = "utils/fixed_decimal", default-features = false }
litemap = { version = "0.7.0", path = "utils/litemap", default-features = false }
icu_pattern = { version = "0.0.0", path = "utils/pattern", default-features = false }
tinystr = { version = "0.7.1", path = "utils/tinystr", default-features = false }
tzif = { version = "0.0.0", path = "utils/tzif", default-features = false }
writeable = { version = "0.5.1", path = "utils/writeable/", default-features = false }
yoke = { version = "0.7.1", path = "utils/yoke", default-features = false }
yoke-derive = { version = "0.7.1", path = "utils/yoke/derive", default-features = false }
zerofrom = { version = "0.1.1", path = "utils/zerofrom", default-features = false }
zerofrom-derive = { version = "0.1.1", path = "utils/zerofrom/derive", default-features = false }
zerovec = { version = "0.9.4", path = "utils/zerovec", default-features = false }
zerovec-derive = { version = "0.9.4", path = "utils/zerovec/derive", default-features = false }
bies = { version = "0.2.1", path = "experimental/bies", default-features = false }
ixdtf = { version = "0.1.0", path = "experimental/ixdtf", default-features = false }
zerotrie = { version = "0.0.0", path = "experimental/zerotrie", default-features = false }

# Tools
icu_benchmark_macros = { path = "tools/benchmark/macros" }
# icu_benchmark_binsize never used as a dep
# icu_benchmark_memory never used as a dep
# depcheck never used as a dep
# ffi_coverage never used as a dep
# testdata-scripts never used as a dep

# LTO is needed for WASM and other size-optimized builds,
# and it improve the performance of benchmarks
[profile.release]
lto = true

[profile.release-opt-size]
inherits = "release"
opt-level = "s"

# Enable debug information specifically for memory profiling.
# https://docs.rs/dhat/0.2.1/dhat/#configuration
#
# 2021-01-08: This would be nicer as a named profile, e.g. [profile.memory]
# https://github.com/rust-lang/cargo/issues/6988
[profile.bench]
debug = true
debug-assertions = false

[profile.windows-test-ci]
inherits = "dev"
debug-assertions = true
debug = false
