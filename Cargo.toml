# This file is part of ICU4X. For terms of use, please see the file
# called LICENSE at the top level of the ICU4X source tree
# (online at: https://github.com/unicode-org/icu4x/blob/main/LICENSE ).

[workspace]
resolver = "2"
members = [
    # KEEP IN SYNC WITH workspace.dependencies and tutorials/.cargo/config.toml

    # Components
    "components/calendar",
    "components/casemap",
    "components/collator",
    "components/collections",
    "components/collections/codepointtrie_builder",
    "components/datetime",
    "components/decimal",
    "components/experimental",
    "components/icu",
    "components/list",
    "components/locid_transform",
    "components/locid",
    "components/normalizer",
    "components/plurals",
    "components/properties",
    "components/segmenter",
    "components/timezone",

    # FFI
    "ffi/capi",
    "ffi/ecma402",
    "ffi/freertos",
    "ffi/harfbuzz",

    # Provider
    "provider/adapters",
    "provider/blob",
    "provider/core",
    "provider/core/macros",
    "provider/datagen",
    "provider/fs",

    # Baked data
    "provider/baked/calendar",
    "provider/baked/casemap",
    "provider/baked/collator",
    "provider/baked/datetime",
    "provider/baked/decimal",
    "provider/baked/list",
    "provider/baked/locid_transform",
    "provider/baked/normalizer",
    "provider/baked/plurals",
    "provider/baked/properties",
    "provider/baked/segmenter",
    "provider/baked/timezone",

    # Utils
    "utils/bies",
    "utils/calendrical_calculations",
    "utils/crlify",
    "utils/databake",
    "utils/databake/derive",
    "utils/deduplicating_array",
    "utils/fixed_decimal",
    "utils/ixdtf",
    "utils/litemap",
    "utils/pattern",
    "utils/resb",
    "utils/tinystr",
    "utils/tzif",
    "utils/writeable",
    "utils/yoke",
    "utils/yoke/derive",
    "utils/zerofrom",
    "utils/zerofrom/derive",
    "utils/zerotrie",
    "utils/zerovec",
    "utils/zerovec/derive",

    # Tools
    "tools/bakeddata-scripts",
    "tools/benchmark/binsize",
    "tools/benchmark/macros",
    "tools/benchmark/memory",
    "tools/depcheck",
    "tools/diplomat-gen",
    "tools/ffi_coverage",
    "tools/testdata-scripts",
    "tools/md-tests",
    "ffi/dart/tools/datagen",
    "tools/graveyard",
]
# Note: Workspaces in subdirectories, such as tutorials/crates, are
# implicitly excluded from the main workspace.
exclude = [
    # Testdata will still be published in the 1.x stream, but is deprecated
    # and we don't use it anymore. As we don't want to keep the actual data
    # in the repo it doesn't build without running `cargo make testdata-legacy`
    # first.
    "provider/testdata",
    # Tutorials are tested outside the workspace to simulate external users
    "tutorials",
]

[workspace.package]
version = "1.4.0"
rust-version = "1.67"
authors = ["The ICU4X Project Developers"]
edition = "2021"
repository = "https://github.com/unicode-org/icu4x"
homepage = "https://icu4x.unicode.org"
license = "Unicode-3.0"
categories = ["internationalization"]
include = [
    "data/**/*",
    "src/**/*",
    "examples/**/*",
    "benches/**/*",
    "tests/**/*",
    "Cargo.toml",
    "LICENSE",
    "README.md",
]

[workspace.dependencies]
# KEEP IN SYNC WITH workspace.members and tutorials/.cargo/config.toml

# Components
icu = { version = "~1.4.0", path = "components/icu", default-features = false }
icu_calendar = { version = "~1.4.0", path = "components/calendar", default-features = false }
icu_casemap = { version = "~1.4.0", path = "components/casemap", default-features = false }
icu_collator = { version = "~1.4.0", path = "components/collator", default-features = false }
icu_collections = { version = "~1.4.0", path = "components/collections", default-features = false }
icu_codepointtrie_builder = { version = "0.3.7", path = "components/collections/codepointtrie_builder", default-features = false }
icu_datetime = { version = "~1.4.0", path = "components/datetime", default-features = false }
icu_decimal = { version = "~1.4.0", path = "components/decimal", default-features = false }
icu_experimental = { version = "0.0.0", path = "components/experimental", default-features = false }
icu_list = { version = "~1.4.0", path = "components/list", default-features = false }
icu_locid = { version = "~1.4.0", path = "components/locid", default-features = false }
icu_locid_transform = { version = "~1.4.0", path = "components/locid_transform", default-features = false }
icu_normalizer = { version = "~1.4.0", path = "components/normalizer", default-features = false }
icu_plurals = { version = "~1.4.0", path = "components/plurals", default-features = false }
icu_properties = { version = "~1.4.0", path = "components/properties", default-features = false }
icu_segmenter = { version = "~1.4.0", path = "components/segmenter", default-features = false }
icu_timezone = { version = "~1.4.0", path = "components/timezone", default-features = false }

# FFI
icu_capi = { version = "~1.4.0", path = "ffi/capi", default-features = false }
icu4x_ecma402 = { version = "0.8.1", path = "ffi/ecma402", default-features = false }
icu_freertos = { version = "~1.4.0", path = "ffi/freertos", default-features = false }
icu_harfbuzz = { version = "~0.1.1", path = "ffi/harfbuzz", default-features = false }

# Provider
icu_datagen = { version = "~1.4.0", path = "provider/datagen", default-features = false }
icu_provider = { version = "~1.4.0", path = "provider/core", default-features = false }
icu_provider_macros = { version = "~1.4.0", path = "provider/core/macros", default-features = false }
icu_provider_adapters = { version = "~1.4.0", path = "provider/adapters", default-features = false }
icu_provider_blob = { version = "~1.4.0", path = "provider/blob", default-features = false }
icu_provider_fs = { version = "~1.4.0", path = "provider/fs/", default-features = false }

# Baked data
icu_calendar_data = { version = "~1.4.0", path = "provider/baked/calendar", default-features = false }
icu_casemap_data = { version = "~1.4.0", path = "provider/baked/casemap", default-features = false }
icu_collator_data = { version = "~1.4.0", path = "provider/baked/collator", default-features = false }
icu_datetime_data = { version = "~1.4.0", path = "provider/baked/datetime", default-features = false }
icu_decimal_data = { version = "~1.4.0", path = "provider/baked/decimal", default-features = false }
icu_list_data = { version = "~1.4.0", path = "provider/baked/list", default-features = false }
icu_locid_transform_data = { version = "~1.4.0", path = "provider/baked/locid_transform", default-features = false }
icu_normalizer_data = { version = "~1.4.0", path = "provider/baked/normalizer", default-features = false }
icu_plurals_data = { version = "~1.4.0", path = "provider/baked/plurals", default-features = false }
icu_properties_data = { version = "~1.4.0", path = "provider/baked/properties", default-features = false }
icu_segmenter_data = { version = "~1.4.0", path = "provider/baked/segmenter", default-features = false }
icu_timezone_data = { version = "~1.4.0", path = "provider/baked/timezone", default-features = false }
icu_experimental_data = { version = "0.0.0", path = "provider/baked/experimental", default-features = false }

# Utils
bies = { version = "0.2.2", path = "utils/bies", default-features = false }
calendrical_calculations = { version = "0.1.0", path = "utils/calendrical_calculations", default-features = false }
crlify = { version = "1.0.3", path = "utils/crlify", default-features = false }
databake = { version = "0.1.7", path = "utils/databake", default-features = false }
databake-derive = { version = "0.1.7", path = "utils/databake/derive", default-features = false }
deduplicating_array = { version = "0.1.5", path = "utils/deduplicating_array", default-features = false }
fixed_decimal = { version = "0.5.5", path = "utils/fixed_decimal", default-features = false }
icu_pattern = { version = "0.1.5", path = "utils/pattern", default-features = false }
ixdtf = { version = "0.1.1", path = "utils/ixdtf", default-features = false }
litemap = { version = "0.7.2", path = "utils/litemap", default-features = false }
tinystr = { version = "0.7.4", path = "utils/tinystr", default-features = false }
tzif = { version = "0.0.0", path = "utils/tzif", default-features = false }
writeable = { version = "0.5.4", path = "utils/writeable/", default-features = false }
yoke = { version = "0.7.3", path = "utils/yoke", default-features = false }
yoke-derive = { version = "0.7.3", path = "utils/yoke/derive", default-features = false }
zerofrom = { version = "0.1.2", path = "utils/zerofrom", default-features = false }
zerofrom-derive = { version = "0.1.2", path = "utils/zerofrom/derive", default-features = false }
zerotrie = { version = "0.1.2", path = "utils/zerotrie", default-features = false }
zerovec = { version = "0.10.1", path = "utils/zerovec", default-features = false }
zerovec-derive = { version = "0.10.1", path = "utils/zerovec/derive", default-features = false }

# External deps from crates.io
criterion = { version = "0.5" }
either = { version = "1", default-features = false }

# Tools
icu_benchmark_macros = { path = "tools/benchmark/macros" }
# icu_benchmark_binsize never used as a dep
# icu_benchmark_memory never used as a dep
# depcheck never used as a dep
# ffi_coverage never used as a dep
# testdata-scripts never used as a dep

# The version here can either be a `version = ".."` spec or `git = "https://github.com/rust-diplomat/diplomat", rev = ".."`
# Diplomat must be published preceding a new ICU4X release but may use git versions in between
diplomat = { git = "https://github.com/rust-diplomat/diplomat.git", rev = "3167e39e89ae612233706f1ade3d9e8a5c6ad358" }
diplomat-runtime = { git = "https://github.com/rust-diplomat/diplomat.git", rev = "3167e39e89ae612233706f1ade3d9e8a5c6ad358" }
diplomat_core = { git = "https://github.com/rust-diplomat/diplomat.git", rev = "3167e39e89ae612233706f1ade3d9e8a5c6ad358" }
diplomat-tool = { git = "https://github.com/rust-diplomat/diplomat.git", rev = "3167e39e89ae612233706f1ade3d9e8a5c6ad358" }

# Size optimized builds
[profile.release-opt-size]
inherits = "release"
lto = true
opt-level = "s"
panic = "abort"
codegen-units = 1

# Builds with debug metadata but not debug assertions
# for testing GIGO code paths
[profile.dev-without-assertions]
inherits = "dev"
debug-assertions = false

[profile.bench]
lto = true

# Enable debug information specifically for memory profiling.
# https://docs.rs/dhat/0.2.1/dhat/#configuration
[profile.bench-memory]
inherits = "bench"
debug = true
