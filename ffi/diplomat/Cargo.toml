# This file is part of ICU4X. For terms of use, please see the file
# called LICENSE at the top level of the ICU4X source tree
# (online at: https://github.com/unicode-org/icu4x/blob/main/LICENSE ).

[package]
name = "icu_capi"
description = "C interface to ICU4X"
version = "0.1.0"
authors = ["The ICU4X Project Developers"]
edition = "2018"
resolver = "2"
repository = "https://github.com/unicode-org/icu4x"
license-file = "LICENSE"
categories = ["internationalization"]
# Keep this in sync with other crates unless there are exceptions
include = [
    "src/**/*",
    "examples/**/*",
    "benches/**/*",
    "tests/**/*",
    "include/**/*",
    "Cargo.toml",
    "LICENSE",
    "README.md"
]

[package.metadata.docs.rs]
all-features = true

[package.metadata.cargo-all-features]
# Omit most optional dependency features from permutation testing
skip_optional_dependencies = true
# Bench feature gets tested separately and is only relevant for CI.
# smaller_static gets tested on the FFI job anyway
denylist = ["bench", "smaller_static"]

# Please keep the features list in sync with the icu_capi_staticlib crate
[features]
default = ["provider_fs", "provider_static"]
provider_fs = ["icu_provider_fs"]
provider_static = ["icu_testdata"]
smaller_static = ["provider_static"]

[dependencies]
fixed_decimal = { path = "../../utils/fixed_decimal", features = ["ryu"] }
icu_decimal = { path = "../../components/decimal/", features = ["serde"] }
icu_locale_canonicalizer = { path = "../../components/locale_canonicalizer", features = ["serde"] }
icu_locid = { path = "../../components/locid", features = ["serde"] }
icu_plurals = { path = "../../components/plurals/", features = ["serde"] }
icu_properties = { path = "../../components/properties/", features = ["serde"] }
icu_provider = { path = "../../provider/core", features = ["serde"] }
icu_provider_adapters = { path = "../../provider/adapters" }
icu_provider_blob = { path = "../../provider/blob" }
icu_segmenter = { path = "../../experimental/segmenter", features = ["serde"] }
tinystr = { path = "../../utils/tinystr", version = "0.5.0", features = ["alloc"], default-features = false }
writeable = { path = "../../utils/writeable/" }

# Run `cargo make diplomat-install` to get the right diplomat binary installed
diplomat = { git = "https://github.com/rust-diplomat/diplomat", rev = "a46d01025159e842982b2e4bc8ca9361d4b897dc" }
diplomat-runtime = { git = "https://github.com/rust-diplomat/diplomat", rev = "a46d01025159e842982b2e4bc8ca9361d4b897dc" }
icu_testdata = { version = "0.5", path = "../../provider/testdata", default-features = false, features = ["static"], optional = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
log = { version = "0.4" }

[target.'cfg(not(any(target_arch = "wasm32", target_os = "none")))'.dependencies]
icu_provider_fs = { path = "../../provider/fs/", optional = true }
