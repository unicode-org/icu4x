use diplomat_core::*;
use rustdoc_types::{Crate, Item, ItemEnum};
use std::collections::BTreeSet;
use std::fs::File;
use std::path::PathBuf;

const COVERED_CRATES: &[&str] = &["icu"];

const EXCEPTIONS: &[&str] = &[
    "icu#Mod",
    "icu::calendar#Mod",
    "icu::calendar::ArithmeticDate#Struct",
    "icu::calendar::AsCalendar#Trait",
    "icu::calendar::Calendar#Trait",
    "icu::calendar::CalendarArithmetic#Trait",
    "icu::calendar::Date#Struct",
    "icu::calendar::DateDuration#Struct",
    "icu::calendar::DateDurationUnit#Enum",
    "icu::calendar::DateTimeError#Enum",
    "icu::calendar::Gregorian#Struct",
    "icu::calendar::Iso#Struct",
    "icu::calendar::Ref#Struct",
    "icu::calendar::any_calendar#Mod",
    "icu::calendar::any_calendar::AnyCalendar#Enum",
    "icu::calendar::any_calendar::AnyCalendarKind#Enum",
    "icu::calendar::any_calendar::AnyDateInner#Enum",
    "icu::calendar::any_calendar::IncludedInAnyCalendar#Trait",
    "icu::calendar::arithmetic#Mod",
    "icu::calendar::arithmetic::week_of#Mod",
    "icu::calendar::arithmetic::week_of::CalendarInfo#Struct",
    "icu::calendar::arithmetic::week_of::MIN_UNIT_DAYS#Constant",
    "icu::calendar::arithmetic::week_of::RelativeUnit#Enum",
    "icu::calendar::arithmetic::week_of::WeekOf#Struct",
    "icu::calendar::arithmetic::week_of::simple_week_of#Fn",
    "icu::calendar::arithmetic::week_of::week_of#Fn",
    "icu::calendar::buddhist#Mod",
    "icu::calendar::buddhist::Buddhist#Struct",
    "icu::calendar::coptic#Mod",
    "icu::calendar::coptic::Coptic#Struct",
    "icu::calendar::coptic::CopticDateInner#Struct",
    "icu::calendar::ethiopic#Mod",
    "icu::calendar::ethiopic::Ethiopic#Struct",
    "icu::calendar::ethiopic::EthiopicDateInner#Struct",
    "icu::calendar::ethiopic::EthiopicEraStyle#Enum",
    "icu::calendar::gregorian#Mod",
    "icu::calendar::gregorian::Gregorian#Struct",
    "icu::calendar::gregorian::GregorianDateInner#Struct",
    "icu::calendar::gregorian::year_as_gregorian#Fn",
    "icu::calendar::indian#Mod",
    "icu::calendar::indian::Indian#Struct",
    "icu::calendar::indian::IndianDateInner#Struct",
    "icu::calendar::iso#Mod",
    "icu::calendar::iso::Iso#Struct",
    "icu::calendar::iso::IsoDateInner#Struct",
    "icu::calendar::japanese#Mod",
    "icu::calendar::japanese::Japanese#Struct",
    "icu::calendar::japanese::JapaneseDateInner#Struct",
    "icu::calendar::japanese::JapaneseEraStyle#Enum",
    "icu::calendar::julian#Mod",
    "icu::calendar::julian::Julian#Struct",
    "icu::calendar::julian::JulianDateInner#Struct",
    "icu::calendar::provider#Mod",
    "icu::calendar::provider::EraStartDate#Struct",
    "icu::calendar::provider::EraStartDateULE#Struct",
    "icu::calendar::provider::JapaneseErasV1#Struct",
    "icu::calendar::provider::JapaneseErasV1Marker#Struct",
    "icu::calendar::types#Mod",
    "icu::calendar::types::DayOfMonth#Struct",
    "icu::calendar::types::DayOfWeekInMonth#Struct",
    "icu::calendar::types::DayOfYearInfo#Struct",
    "icu::calendar::types::Era#Struct",
    "icu::calendar::types::FormattableMonth#Struct",
    "icu::calendar::types::FormattableYear#Struct",
    "icu::calendar::types::GmtOffset#Struct",
    "icu::calendar::types::IsoHour#Struct",
    "icu::calendar::types::IsoMinute#Struct",
    "icu::calendar::types::IsoSecond#Struct",
    "icu::calendar::types::IsoWeekday#Enum",
    "icu::calendar::types::MonthCode#Struct",
    "icu::calendar::types::NanoSecond#Struct",
    "icu::calendar::types::Time#Struct",
    "icu::calendar::types::WeekOfMonth#Struct",
    "icu::calendar::types::WeekOfYear#Struct",
    "icu::collator#Mod",
    "icu::collator::AlternateHandling#Enum",
    "icu::collator::CaseFirst#Enum",
    "icu::collator::Collator#Struct",
    "icu::collator::CollatorOptions#Struct",
    "icu::collator::MaxVariable#Enum",
    "icu::collator::Strength#Enum",
    "icu::collator::error#Mod",
    "icu::collator::error::CollatorError#Enum",
    "icu::collator::provider#Mod",
    "icu::collator::provider::CollationDataV1#Struct",
    "icu::collator::provider::CollationDataV1Marker#Struct",
    "icu::collator::provider::CollationDiacriticsV1#Struct",
    "icu::collator::provider::CollationDiacriticsV1Marker#Struct",
    "icu::collator::provider::CollationJamoV1#Struct",
    "icu::collator::provider::CollationJamoV1Marker#Struct",
    "icu::collator::provider::CollationMetadataV1#Struct",
    "icu::collator::provider::CollationMetadataV1Marker#Struct",
    "icu::collator::provider::CollationReorderingV1#Struct",
    "icu::collator::provider::CollationReorderingV1Marker#Struct",
    "icu::collator::provider::CollationSpecialPrimariesV1#Struct",
    "icu::collator::provider::CollationSpecialPrimariesV1Marker#Struct",
    "icu::datetime#Mod",
    "icu::datetime::CldrCalendar#Trait",
    "icu::datetime::DateTimeFormatterError#Enum",
    "icu::datetime::DateTimeFormatterOptions#Enum",
    "icu::datetime::FormattedDateTime#Struct",
    "icu::datetime::FormattedTimeZone#Struct",
    "icu::datetime::FormattedZonedDateTime#Struct",
    "icu::datetime::TimeZoneFormatter#Struct",
    "icu::datetime::TimeZoneFormatterConfig#Enum",
    "icu::datetime::TimeZoneFormatterOptions#Struct",
    "icu::datetime::ZonedDateTimeFormatter#Struct",
    "icu::datetime::any#Mod",
    "icu::datetime::any::AnyDateTimeFormatter#Struct",
    "icu::datetime::any::ZonedAnyDateTimeFormatter#Struct",
    "icu::datetime::date#Mod",
    "icu::datetime::date::DateInput#Trait",
    "icu::datetime::date::DateTimeError#Enum",
    "icu::datetime::date::DateTimeInput#Trait",
    "icu::datetime::date::DayOfMonth#Struct",
    "icu::datetime::date::DayOfWeekInMonth#Struct",
    "icu::datetime::date::DayOfYearInfo#Struct",
    "icu::datetime::date::Era#Struct",
    "icu::datetime::date::FormattableMonth#Struct",
    "icu::datetime::date::FormattableYear#Struct",
    "icu::datetime::date::GmtOffset#Struct",
    "icu::datetime::date::IsoHour#Struct",
    "icu::datetime::date::IsoMinute#Struct",
    "icu::datetime::date::IsoSecond#Struct",
    "icu::datetime::date::IsoTimeInput#Trait",
    "icu::datetime::date::IsoWeekday#Enum",
    "icu::datetime::date::LocalizedDateTimeInput#Trait",
    "icu::datetime::date::MonthCode#Struct",
    "icu::datetime::date::NanoSecond#Struct",
    "icu::datetime::date::Time#Struct",
    "icu::datetime::date::TimeZoneInput#Trait",
    "icu::datetime::date::WeekOfMonth#Struct",
    "icu::datetime::date::WeekOfYear#Struct",
    "icu::datetime::datetime#Mod",
    "icu::datetime::datetime::DateFormatter#Struct",
    "icu::datetime::datetime::DateTimeFormatter#Struct",
    "icu::datetime::datetime::TimeFormatter#Struct",
    "icu::datetime::fields#Mod",
    "icu::datetime::fields::Day#Enum",
    "icu::datetime::fields::DayPeriod#Enum",
    "icu::datetime::fields::DayPeriodULE#Struct",
    "icu::datetime::fields::DayULE#Struct",
    "icu::datetime::fields::Error#Enum",
    "icu::datetime::fields::Field#Struct",
    "icu::datetime::fields::FieldLength#Enum",
    "icu::datetime::fields::FieldSymbol#Enum",
    "icu::datetime::fields::FieldSymbolULE#Struct",
    "icu::datetime::fields::FieldULE#Struct",
    "icu::datetime::fields::Hour#Enum",
    "icu::datetime::fields::HourULE#Struct",
    "icu::datetime::fields::LengthError#Enum",
    "icu::datetime::fields::Month#Enum",
    "icu::datetime::fields::MonthULE#Struct",
    "icu::datetime::fields::Second#Enum",
    "icu::datetime::fields::SecondULE#Struct",
    "icu::datetime::fields::SymbolError#Enum",
    "icu::datetime::fields::TimeZone#Enum",
    "icu::datetime::fields::TimeZoneULE#Struct",
    "icu::datetime::fields::Week#Enum",
    "icu::datetime::fields::WeekULE#Struct",
    "icu::datetime::fields::Weekday#Enum",
    "icu::datetime::fields::WeekdayULE#Struct",
    "icu::datetime::fields::Year#Enum",
    "icu::datetime::fields::YearULE#Struct",
    "icu::datetime::mock#Mod",
    "icu::datetime::mock::parse_gregorian_from_str#Fn",
    "icu::datetime::mock::parse_zoned_gregorian_from_str#Fn",
    "icu::datetime::mock::time_zone#Mod",
    "icu::datetime::mock::time_zone::MockTimeZone#Struct",
    "icu::datetime::options#Mod",
    "icu::datetime::options::DateTimeFormatterOptions#Enum",
    "icu::datetime::options::components#Mod",
    "icu::datetime::options::components::Bag#Struct",
    "icu::datetime::options::components::Day#Enum",
    "icu::datetime::options::components::Month#Enum",
    "icu::datetime::options::components::Numeric#Enum",
    "icu::datetime::options::components::Text#Enum",
    "icu::datetime::options::components::TimeZoneName#Enum",
    "icu::datetime::options::components::Week#Enum",
    "icu::datetime::options::components::Year#Enum",
    "icu::datetime::options::length#Mod",
    "icu::datetime::options::length::Bag#Struct",
    "icu::datetime::options::length::Date#Enum",
    "icu::datetime::options::length::Time#Enum",
    "icu::datetime::options::preferences#Mod",
    "icu::datetime::options::preferences::Bag#Struct",
    "icu::datetime::options::preferences::HourCycle#Enum",
    "icu::datetime::provider#Mod",
    "icu::datetime::provider::calendar#Mod",
    "icu::datetime::provider::calendar::DatePatternsV1#Struct",
    "icu::datetime::provider::calendar::DatePatternsV1Marker#Struct",
    "icu::datetime::provider::calendar::DateSkeletonPatternsV1#Struct",
    "icu::datetime::provider::calendar::DateSkeletonPatternsV1Marker#Struct",
    "icu::datetime::provider::calendar::DateSymbolsV1#Struct",
    "icu::datetime::provider::calendar::DateSymbolsV1Marker#Struct",
    "icu::datetime::provider::calendar::Eras#Struct",
    "icu::datetime::provider::calendar::SkeletonV1#Struct",
    "icu::datetime::provider::calendar::TimePatternsV1#Struct",
    "icu::datetime::provider::calendar::TimePatternsV1Marker#Struct",
    "icu::datetime::provider::calendar::TimeSymbolsV1#Struct",
    "icu::datetime::provider::calendar::TimeSymbolsV1Marker#Struct",
    "icu::datetime::provider::calendar::day_periods#Mod",
    "icu::datetime::provider::calendar::day_periods::ContextsV1#Struct",
    "icu::datetime::provider::calendar::day_periods::FormatWidthsV1#Struct",
    "icu::datetime::provider::calendar::day_periods::StandAloneWidthsV1#Struct",
    "icu::datetime::provider::calendar::day_periods::SymbolsV1#Struct",
    "icu::datetime::provider::calendar::months#Mod",
    "icu::datetime::provider::calendar::months::ContextsV1#Struct",
    "icu::datetime::provider::calendar::months::FormatWidthsV1#Struct",
    "icu::datetime::provider::calendar::months::StandAloneWidthsV1#Struct",
    "icu::datetime::provider::calendar::months::SymbolsV1#Enum",
    "icu::datetime::provider::calendar::patterns#Mod",
    "icu::datetime::provider::calendar::patterns::GenericLengthPatternsV1#Struct",
    "icu::datetime::provider::calendar::patterns::GenericPatternV1#Struct",
    "icu::datetime::provider::calendar::patterns::LengthPatternPluralsV1#Struct",
    "icu::datetime::provider::calendar::patterns::LengthPatternsV1#Struct",
    "icu::datetime::provider::calendar::patterns::PatternPluralsV1#Struct",
    "icu::datetime::provider::calendar::weekdays#Mod",
    "icu::datetime::provider::calendar::weekdays::ContextsV1#Struct",
    "icu::datetime::provider::calendar::weekdays::FormatWidthsV1#Struct",
    "icu::datetime::provider::calendar::weekdays::StandAloneWidthsV1#Struct",
    "icu::datetime::provider::calendar::weekdays::SymbolsV1#Struct",
    "icu::datetime::provider::time_zones#Mod",
    "icu::datetime::provider::time_zones::ExemplarCitiesV1#Struct",
    "icu::datetime::provider::time_zones::ExemplarCitiesV1Marker#Struct",
    "icu::datetime::provider::time_zones::MetaZoneGenericNamesLongV1#Struct",
    "icu::datetime::provider::time_zones::MetaZoneGenericNamesLongV1Marker#Struct",
    "icu::datetime::provider::time_zones::MetaZoneGenericNamesShortV1#Struct",
    "icu::datetime::provider::time_zones::MetaZoneGenericNamesShortV1Marker#Struct",
    "icu::datetime::provider::time_zones::MetaZoneId#Struct",
    "icu::datetime::provider::time_zones::MetaZonePeriodV1#Struct",
    "icu::datetime::provider::time_zones::MetaZonePeriodV1Marker#Struct",
    "icu::datetime::provider::time_zones::MetaZoneSpecificNamesLongV1#Struct",
    "icu::datetime::provider::time_zones::MetaZoneSpecificNamesLongV1Marker#Struct",
    "icu::datetime::provider::time_zones::MetaZoneSpecificNamesShortV1#Struct",
    "icu::datetime::provider::time_zones::MetaZoneSpecificNamesShortV1Marker#Struct",
    "icu::datetime::provider::time_zones::TimeZoneBcp47Id#Struct",
    "icu::datetime::provider::time_zones::TimeZoneFormatsV1#Struct",
    "icu::datetime::provider::time_zones::TimeZoneFormatsV1Marker#Struct",
    "icu::datetime::provider::week_data#Mod",
    "icu::datetime::provider::week_data::WeekDataV1#Struct",
    "icu::datetime::provider::week_data::WeekDataV1Marker#Struct",
    "icu::datetime::time_zone#Mod",
    "icu::datetime::time_zone::FallbackFormat#Enum",
    "icu::datetime::time_zone::IsoFormat#Enum",
    "icu::datetime::time_zone::IsoMinutes#Enum",
    "icu::datetime::time_zone::IsoSeconds#Enum",
    "icu::datetime::time_zone::TimeZoneDataPayloads#Struct",
    "icu::datetime::time_zone::TimeZoneFormatter#Struct",
    "icu::datetime::time_zone::TimeZoneFormatterConfig#Enum",
    "icu::datetime::time_zone::TimeZoneFormatterOptions#Struct",
    "icu::datetime::time_zone::ZeroPadding#Enum",
    "icu::datetime::zoned_datetime#Mod",
    "icu::datetime::zoned_datetime::ZonedDateTimeFormatter#Struct",
    "icu::decimal#Mod",
    "icu::decimal::FixedDecimalFormatterError#Enum",
    "icu::decimal::FormattedFixedDecimal#Struct",
    "icu::decimal::error#Mod",
    "icu::decimal::error::Error#Enum",
    "icu::decimal::format#Mod",
    "icu::decimal::format::FormattedFixedDecimal#Struct",
    "icu::decimal::options#Mod",
    "icu::decimal::options::FixedDecimalFormatterOptions#Struct",
    "icu::decimal::options::GroupingStrategy#Enum",
    "icu::decimal::provider#Mod",
    "icu::decimal::provider::AffixesV1#Struct",
    "icu::decimal::provider::DecimalSymbolsV1#Struct",
    "icu::decimal::provider::DecimalSymbolsV1Marker#Struct",
    "icu::decimal::provider::GroupingSizesV1#Struct",
    "icu::list#Mod",
    "icu::list::List#Struct",
    "icu::list::ListFormatter#Struct",
    "icu::list::ListStyle#Enum",
    "icu::list::parts#Mod",
    "icu::list::parts::ELEMENT#Constant",
    "icu::list::parts::LITERAL#Constant",
    "icu::list::provider#Mod",
    "icu::list::provider::AndListV1Marker#Struct",
    "icu::list::provider::ConditionalListJoinerPattern#Struct",
    "icu::list::provider::ListFormatterPatternsV1#Struct",
    "icu::list::provider::ListJoinerPattern#Struct",
    "icu::list::provider::OrListV1Marker#Struct",
    "icu::list::provider::SpecialCasePattern#Struct",
    "icu::list::provider::StringMatcher#Struct",
    "icu::list::provider::UnitListV1Marker#Struct",
    "icu::locale_canonicalizer#Mod",
    "icu::locale_canonicalizer::locale_canonicalizer#Mod",
    "icu::locale_canonicalizer::locale_canonicalizer::CanonicalizationResult#Enum",
    "icu::locale_canonicalizer::locale_canonicalizer::LocaleCanonicalizer#Struct",
    "icu::locale_canonicalizer::provider#Mod",
    "icu::locale_canonicalizer::provider::AliasesV1#Struct",
    "icu::locale_canonicalizer::provider::AliasesV1Marker#Struct",
    "icu::locale_canonicalizer::provider::LikelySubtagsV1#Struct",
    "icu::locale_canonicalizer::provider::LikelySubtagsV1Marker#Struct",
    "icu::locale_canonicalizer::provider::StrStrPair#Struct",
    "icu::locale_canonicalizer::provider::StrStrPairVarULE#Struct",
    "icu::locid#Mod",
    "icu::locid::LanguageIdentifier#Struct",
    "icu::locid::ParserError#Enum",
    "icu::locid::extensions#Mod",
    "icu::locid::extensions::ExtensionType#Enum",
    "icu::locid::extensions::Extensions#Struct",
    "icu::locid::extensions::Other#Struct",
    "icu::locid::extensions::Private#Struct",
    "icu::locid::extensions::Transform#Struct",
    "icu::locid::extensions::Unicode#Struct",
    "icu::locid::extensions::other#Mod",
    "icu::locid::extensions::other::Key#Struct",
    "icu::locid::extensions::other::Other#Struct",
    "icu::locid::extensions::private#Mod",
    "icu::locid::extensions::private::Key#Struct",
    "icu::locid::extensions::private::Private#Struct",
    "icu::locid::extensions::transform#Mod",
    "icu::locid::extensions::transform::Fields#Struct",
    "icu::locid::extensions::transform::Key#Struct",
    "icu::locid::extensions::transform::Transform#Struct",
    "icu::locid::extensions::transform::Value#Struct",
    "icu::locid::extensions::unicode#Mod",
    "icu::locid::extensions::unicode::Attribute#Struct",
    "icu::locid::extensions::unicode::Attributes#Struct",
    "icu::locid::extensions::unicode::Key#Struct",
    "icu::locid::extensions::unicode::Keywords#Struct",
    "icu::locid::extensions::unicode::Unicode#Struct",
    "icu::locid::extensions::unicode::Value#Struct",
    "icu::locid::extensions_transform_key#Macro",
    "icu::locid::extensions_unicode_key#Macro",
    "icu::locid::extensions_unicode_value#Macro",
    "icu::locid::langid#Macro",
    "icu::locid::locale#Macro",
    "icu::locid::ordering#Mod",
    "icu::locid::ordering::SubtagOrderingResult#Enum",
    "icu::locid::subtags#Mod",
    "icu::locid::subtags::Language#Struct",
    "icu::locid::subtags::Region#Struct",
    "icu::locid::subtags::Script#Struct",
    "icu::locid::subtags::Variant#Struct",
    "icu::locid::subtags::Variants#Struct",
    "icu::locid::subtags_language#Macro",
    "icu::locid::subtags_region#Macro",
    "icu::locid::subtags_script#Macro",
    "icu::locid::subtags_variant#Macro",
    "icu::locid::zerovec#Mod",
    "icu::normalizer#Mod",
    "icu::normalizer::CanonicalComposition#Struct",
    "icu::normalizer::CanonicalDecomposition#Struct",
    "icu::normalizer::ComposingNormalizer#Struct",
    "icu::normalizer::Composition#Struct",
    "icu::normalizer::Decomposed#Enum",
    "icu::normalizer::DecomposingNormalizer#Struct",
    "icu::normalizer::Decomposition#Struct",
    "icu::normalizer::error#Mod",
    "icu::normalizer::error::NormalizerError#Enum",
    "icu::normalizer::provider#Mod",
    "icu::normalizer::provider::CanonicalCompositionPassthroughV1Marker#Struct",
    "icu::normalizer::provider::CanonicalCompositionsV1#Struct",
    "icu::normalizer::provider::CanonicalCompositionsV1Marker#Struct",
    "icu::normalizer::provider::CanonicalDecompositionDataV1Marker#Struct",
    "icu::normalizer::provider::CanonicalDecompositionTablesV1Marker#Struct",
    "icu::normalizer::provider::CompatibilityCompositionPassthroughV1Marker#Struct",
    "icu::normalizer::provider::CompatibilityDecompositionSupplementV1Marker#Struct",
    "icu::normalizer::provider::CompatibilityDecompositionTablesV1Marker#Struct",
    "icu::normalizer::provider::CompositionPassthroughV1#Struct",
    "icu::normalizer::provider::DecompositionDataV1#Struct",
    "icu::normalizer::provider::DecompositionSupplementV1#Struct",
    "icu::normalizer::provider::DecompositionTablesV1#Struct",
    "icu::normalizer::provider::NonRecursiveDecompositionSupplementV1#Struct",
    "icu::normalizer::provider::NonRecursiveDecompositionSupplementV1Marker#Struct",
    "icu::normalizer::provider::Uts46CompositionPassthroughV1Marker#Struct",
    "icu::normalizer::provider::Uts46DecompositionSupplementV1Marker#Struct",
    "icu::normalizer::u24#Mod",
    "icu::normalizer::u24::EMPTY_U24#Constant",
    "icu::normalizer::u24::U24#Struct",
    "icu::normalizer::u24::U24Error#Struct",
    "icu::plurals#Mod",
    "icu::plurals::PluralRuleType#Enum",
    "icu::plurals::PluralRulesError#Enum",
    "icu::plurals::provider#Mod",
    "icu::plurals::provider::CardinalV1Marker#Struct",
    "icu::plurals::provider::OrdinalV1Marker#Struct",
    "icu::plurals::provider::PluralRulesV1#Struct",
    "icu::plurals::rules#Mod",
    "icu::plurals::rules::reference#Mod",
    "icu::plurals::rules::reference::Lexer#Struct",
    "icu::plurals::rules::reference::ast#Mod",
    "icu::plurals::rules::reference::ast::AndCondition#Struct",
    "icu::plurals::rules::reference::ast::Condition#Struct",
    "icu::plurals::rules::reference::ast::DecimalValue#Struct",
    "icu::plurals::rules::reference::ast::Expression#Struct",
    "icu::plurals::rules::reference::ast::Operand#Enum",
    "icu::plurals::rules::reference::ast::Operator#Enum",
    "icu::plurals::rules::reference::ast::RangeList#Struct",
    "icu::plurals::rules::reference::ast::RangeListItem#Enum",
    "icu::plurals::rules::reference::ast::Relation#Struct",
    "icu::plurals::rules::reference::ast::Rule#Struct",
    "icu::plurals::rules::reference::ast::SampleList#Struct",
    "icu::plurals::rules::reference::ast::SampleRange#Struct",
    "icu::plurals::rules::reference::ast::Samples#Struct",
    "icu::plurals::rules::reference::ast::Value#Struct",
    "icu::plurals::rules::reference::parse#Fn",
    "icu::plurals::rules::reference::parse_condition#Fn",
    "icu::plurals::rules::reference::serialize#Fn",
    "icu::plurals::rules::reference::test_condition#Fn",
    "icu::properties::BidiClass#Struct",
    "icu::properties::CanonicalCombiningClass#Struct",
    "icu::properties::EastAsianWidth#Struct",
    "icu::properties::EnumeratedProperty#Enum",
    "icu::properties::GeneralCategory#Enum",
    "icu::properties::GeneralCategoryGroup#Struct",
    "icu::properties::GraphemeClusterBreak#Struct",
    "icu::properties::LineBreak#Struct",
    "icu::properties::PropertiesError#Enum",
    "icu::properties::Script#Struct",
    "icu::properties::SentenceBreak#Struct",
    "icu::properties::WordBreak#Struct",
    "icu::properties::bidi#Mod",
    "icu::properties::maps#Mod",
    "icu::properties::maps::CodePointMapData#Struct",
    "icu::properties::maps::CodePointMapDataBorrowed#Struct",
    "icu::properties::maps::get_bidi_class#Fn",
    "icu::properties::maps::get_canonical_combining_class#Fn",
    "icu::properties::maps::get_east_asian_width#Fn",
    "icu::properties::maps::get_general_category#Fn",
    "icu::properties::maps::get_grapheme_cluster_break#Fn",
    "icu::properties::maps::get_line_break#Fn",
    "icu::properties::maps::get_script#Fn",
    "icu::properties::maps::get_sentence_break#Fn",
    "icu::properties::maps::get_word_break#Fn",
    "icu::properties::provider#Mod",
    "icu::properties::provider::AlnumV1Marker#Struct",
    "icu::properties::provider::AlphabeticV1Marker#Struct",
    "icu::properties::provider::AsciiHexDigitV1Marker#Struct",
    "icu::properties::provider::BidiClassV1Marker#Struct",
    "icu::properties::provider::BidiControlV1Marker#Struct",
    "icu::properties::provider::BidiMirroredV1Marker#Struct",
    "icu::properties::provider::BlankV1Marker#Struct",
    "icu::properties::provider::CanonicalCombiningClassV1Marker#Struct",
    "icu::properties::provider::CaseIgnorableV1Marker#Struct",
    "icu::properties::provider::CaseSensitiveV1Marker#Struct",
    "icu::properties::provider::CasedV1Marker#Struct",
    "icu::properties::provider::ChangesWhenCasefoldedV1Marker#Struct",
    "icu::properties::provider::ChangesWhenCasemappedV1Marker#Struct",
    "icu::properties::provider::ChangesWhenLowercasedV1Marker#Struct",
    "icu::properties::provider::ChangesWhenNfkcCasefoldedV1Marker#Struct",
    "icu::properties::provider::ChangesWhenTitlecasedV1Marker#Struct",
    "icu::properties::provider::ChangesWhenUppercasedV1Marker#Struct",
    "icu::properties::provider::DashV1Marker#Struct",
    "icu::properties::provider::DefaultIgnorableCodePointV1Marker#Struct",
    "icu::properties::provider::DeprecatedV1Marker#Struct",
    "icu::properties::provider::DiacriticV1Marker#Struct",
    "icu::properties::provider::EastAsianWidthV1Marker#Struct",
    "icu::properties::provider::EmojiComponentV1Marker#Struct",
    "icu::properties::provider::EmojiModifierBaseV1Marker#Struct",
    "icu::properties::provider::EmojiModifierV1Marker#Struct",
    "icu::properties::provider::EmojiPresentationV1Marker#Struct",
    "icu::properties::provider::EmojiV1Marker#Struct",
    "icu::properties::provider::ExtendedPictographicV1Marker#Struct",
    "icu::properties::provider::ExtenderV1Marker#Struct",
    "icu::properties::provider::FullCompositionExclusionV1Marker#Struct",
    "icu::properties::provider::GeneralCategoryV1Marker#Struct",
    "icu::properties::provider::GraphV1Marker#Struct",
    "icu::properties::provider::GraphemeBaseV1Marker#Struct",
    "icu::properties::provider::GraphemeClusterBreakV1Marker#Struct",
    "icu::properties::provider::GraphemeExtendV1Marker#Struct",
    "icu::properties::provider::GraphemeLinkV1Marker#Struct",
    "icu::properties::provider::HexDigitV1Marker#Struct",
    "icu::properties::provider::HyphenV1Marker#Struct",
    "icu::properties::provider::IdContinueV1Marker#Struct",
    "icu::properties::provider::IdStartV1Marker#Struct",
    "icu::properties::provider::IdeographicV1Marker#Struct",
    "icu::properties::provider::IdsBinaryOperatorV1Marker#Struct",
    "icu::properties::provider::IdsTrinaryOperatorV1Marker#Struct",
    "icu::properties::provider::JoinControlV1Marker#Struct",
    "icu::properties::provider::LineBreakV1Marker#Struct",
    "icu::properties::provider::LogicalOrderExceptionV1Marker#Struct",
    "icu::properties::provider::LowercaseV1Marker#Struct",
    "icu::properties::provider::MathV1Marker#Struct",
    "icu::properties::provider::NfcInertV1Marker#Struct",
    "icu::properties::provider::NfdInertV1Marker#Struct",
    "icu::properties::provider::NfkcInertV1Marker#Struct",
    "icu::properties::provider::NfkdInertV1Marker#Struct",
    "icu::properties::provider::NoncharacterCodePointV1Marker#Struct",
    "icu::properties::provider::PatternSyntaxV1Marker#Struct",
    "icu::properties::provider::PatternWhiteSpaceV1Marker#Struct",
    "icu::properties::provider::PrependedConcatenationMarkV1Marker#Struct",
    "icu::properties::provider::PrintV1Marker#Struct",
    "icu::properties::provider::PropertyCodePointMapV1#Enum",
    "icu::properties::provider::PropertyCodePointSetV1#Enum",
    "icu::properties::provider::QuotationMarkV1Marker#Struct",
    "icu::properties::provider::RadicalV1Marker#Struct",
    "icu::properties::provider::RegionalIndicatorV1Marker#Struct",
    "icu::properties::provider::ScriptV1Marker#Struct",
    "icu::properties::provider::ScriptWithExtensionsPropertyV1#Struct",
    "icu::properties::provider::ScriptWithExtensionsPropertyV1Marker#Struct",
    "icu::properties::provider::SegmentStarterV1Marker#Struct",
    "icu::properties::provider::SentenceBreakV1Marker#Struct",
    "icu::properties::provider::SentenceTerminalV1Marker#Struct",
    "icu::properties::provider::SoftDottedV1Marker#Struct",
    "icu::properties::provider::TerminalPunctuationV1Marker#Struct",
    "icu::properties::provider::UnifiedIdeographV1Marker#Struct",
    "icu::properties::provider::UppercaseV1Marker#Struct",
    "icu::properties::provider::VariationSelectorV1Marker#Struct",
    "icu::properties::provider::WhiteSpaceV1Marker#Struct",
    "icu::properties::provider::WordBreakV1Marker#Struct",
    "icu::properties::provider::XdigitV1Marker#Struct",
    "icu::properties::provider::XidContinueV1Marker#Struct",
    "icu::properties::provider::XidStartV1Marker#Struct",
    "icu::properties::script#Mod",
    "icu::properties::script::ScriptExtensionsSet#Struct",
    "icu::properties::script::ScriptWithExtensions#Struct",
    "icu::properties::script::get_script_with_extensions#Fn",
    "icu::properties::sets#Mod",
    "icu::properties::sets::CodePointSetData#Struct",
    "icu::properties::sets::CodePointSetDataBorrowed#Struct",
    "icu::properties::sets::get_alnum#Fn",
    "icu::properties::sets::get_alphabetic#Fn",
    "icu::properties::sets::get_ascii_hex_digit#Fn",
    "icu::properties::sets::get_bidi_control#Fn",
    "icu::properties::sets::get_bidi_mirrored#Fn",
    "icu::properties::sets::get_blank#Fn",
    "icu::properties::sets::get_case_ignorable#Fn",
    "icu::properties::sets::get_case_sensitive#Fn",
    "icu::properties::sets::get_cased#Fn",
    "icu::properties::sets::get_changes_when_casefolded#Fn",
    "icu::properties::sets::get_changes_when_casemapped#Fn",
    "icu::properties::sets::get_changes_when_lowercased#Fn",
    "icu::properties::sets::get_changes_when_nfkc_casefolded#Fn",
    "icu::properties::sets::get_changes_when_titlecased#Fn",
    "icu::properties::sets::get_changes_when_uppercased#Fn",
    "icu::properties::sets::get_dash#Fn",
    "icu::properties::sets::get_default_ignorable_code_point#Fn",
    "icu::properties::sets::get_deprecated#Fn",
    "icu::properties::sets::get_diacritic#Fn",
    "icu::properties::sets::get_emoji#Fn",
    "icu::properties::sets::get_emoji_component#Fn",
    "icu::properties::sets::get_emoji_modifier#Fn",
    "icu::properties::sets::get_emoji_modifier_base#Fn",
    "icu::properties::sets::get_emoji_presentation#Fn",
    "icu::properties::sets::get_extended_pictographic#Fn",
    "icu::properties::sets::get_extender#Fn",
    "icu::properties::sets::get_for_general_category_group#Fn",
    "icu::properties::sets::get_full_composition_exclusion#Fn",
    "icu::properties::sets::get_graph#Fn",
    "icu::properties::sets::get_grapheme_base#Fn",
    "icu::properties::sets::get_grapheme_extend#Fn",
    "icu::properties::sets::get_grapheme_link#Fn",
    "icu::properties::sets::get_hex_digit#Fn",
    "icu::properties::sets::get_hyphen#Fn",
    "icu::properties::sets::get_id_continue#Fn",
    "icu::properties::sets::get_id_start#Fn",
    "icu::properties::sets::get_ideographic#Fn",
    "icu::properties::sets::get_ids_binary_operator#Fn",
    "icu::properties::sets::get_ids_trinary_operator#Fn",
    "icu::properties::sets::get_join_control#Fn",
    "icu::properties::sets::get_logical_order_exception#Fn",
    "icu::properties::sets::get_lowercase#Fn",
    "icu::properties::sets::get_math#Fn",
    "icu::properties::sets::get_nfc_inert#Fn",
    "icu::properties::sets::get_nfd_inert#Fn",
    "icu::properties::sets::get_nfkc_inert#Fn",
    "icu::properties::sets::get_nfkd_inert#Fn",
    "icu::properties::sets::get_noncharacter_code_point#Fn",
    "icu::properties::sets::get_pattern_syntax#Fn",
    "icu::properties::sets::get_pattern_white_space#Fn",
    "icu::properties::sets::get_prepended_concatenation_mark#Fn",
    "icu::properties::sets::get_print#Fn",
    "icu::properties::sets::get_quotation_mark#Fn",
    "icu::properties::sets::get_radical#Fn",
    "icu::properties::sets::get_regional_indicator#Fn",
    "icu::properties::sets::get_segment_starter#Fn",
    "icu::properties::sets::get_sentence_terminal#Fn",
    "icu::properties::sets::get_soft_dotted#Fn",
    "icu::properties::sets::get_terminal_punctuation#Fn",
    "icu::properties::sets::get_unified_ideograph#Fn",
    "icu::properties::sets::get_uppercase#Fn",
    "icu::properties::sets::get_variation_selector#Fn",
    "icu::properties::sets::get_white_space#Fn",
    "icu::properties::sets::get_xdigit#Fn",
    "icu::properties::sets::get_xid_continue#Fn",
    "icu::properties::sets::get_xid_start#Fn",
    "icu::segmenter#Mod",
    "icu::segmenter::DictionaryBreakIterator#Struct",
    "icu::segmenter::DictionarySegmenter#Struct",
    "icu::segmenter::GraphemeClusterBreakDataV1Marker#Struct",
    "icu::segmenter::LineBreakDataV1Marker#Struct",
    "icu::segmenter::LineBreakIterator#Struct",
    "icu::segmenter::LstmDataV1#Struct",
    "icu::segmenter::LstmDataV1Marker#Struct",
    "icu::segmenter::LstmMatrix#Struct",
    "icu::segmenter::RuleBreakDataV1#Struct",
    "icu::segmenter::RuleBreakPropertyTable#Struct",
    "icu::segmenter::RuleBreakStateTable#Struct",
    "icu::segmenter::SentenceBreakDataV1Marker#Struct",
    "icu::segmenter::UCharDictionaryBreakDataV1#Struct",
    "icu::segmenter::UCharDictionaryBreakDataV1Marker#Struct",
    "icu::segmenter::WordBreakDataV1Marker#Struct",
    "icu::segmenter::provider#Mod",
    "icu::segmenter::provider::GraphemeClusterBreakDataV1Marker#Struct",
    "icu::segmenter::provider::LineBreakDataV1Marker#Struct",
    "icu::segmenter::provider::RuleBreakDataV1#Struct",
    "icu::segmenter::provider::RuleBreakPropertyTable#Struct",
    "icu::segmenter::provider::RuleBreakStateTable#Struct",
    "icu::segmenter::provider::SentenceBreakDataV1Marker#Struct",
    "icu::segmenter::provider::UCharDictionaryBreakDataV1#Struct",
    "icu::segmenter::provider::UCharDictionaryBreakDataV1Marker#Struct",
    "icu::segmenter::provider::WordBreakDataV1Marker#Struct",
    "icu::segmenter::symbols#Mod",
    "icu::segmenter::symbols::AI#Constant",
    "icu::segmenter::symbols::AL#Constant",
    "icu::segmenter::symbols::B2#Constant",
    "icu::segmenter::symbols::B2_SP#Constant",
    "icu::segmenter::symbols::BA#Constant",
    "icu::segmenter::symbols::BB#Constant",
    "icu::segmenter::symbols::BK#Constant",
    "icu::segmenter::symbols::BREAK_RULE#Constant",
    "icu::segmenter::symbols::CB#Constant",
    "icu::segmenter::symbols::CJ#Constant",
    "icu::segmenter::symbols::CL#Constant",
    "icu::segmenter::symbols::CL_CP_SP#Constant",
    "icu::segmenter::symbols::CM#Constant",
    "icu::segmenter::symbols::CP#Constant",
    "icu::segmenter::symbols::CR#Constant",
    "icu::segmenter::symbols::EB#Constant",
    "icu::segmenter::symbols::EM#Constant",
    "icu::segmenter::symbols::EOT#Constant",
    "icu::segmenter::symbols::EX#Constant",
    "icu::segmenter::symbols::GL#Constant",
    "icu::segmenter::symbols::H2#Constant",
    "icu::segmenter::symbols::H3#Constant",
    "icu::segmenter::symbols::HL#Constant",
    "icu::segmenter::symbols::HL_HY#Constant",
    "icu::segmenter::symbols::HY#Constant",
    "icu::segmenter::symbols::ID#Constant",
    "icu::segmenter::symbols::ID_CN#Constant",
    "icu::segmenter::symbols::IN#Constant",
    "icu::segmenter::symbols::INTERMEDIATE_MATCH_RULE#Constant",
    "icu::segmenter::symbols::IS#Constant",
    "icu::segmenter::symbols::JL#Constant",
    "icu::segmenter::symbols::JT#Constant",
    "icu::segmenter::symbols::JV#Constant",
    "icu::segmenter::symbols::KEEP_RULE#Constant",
    "icu::segmenter::symbols::LB25_HY#Constant",
    "icu::segmenter::symbols::LB25_NU_CL#Constant",
    "icu::segmenter::symbols::LB25_NU_CP#Constant",
    "icu::segmenter::symbols::LB25_NU_IS#Constant",
    "icu::segmenter::symbols::LB25_NU_SY#Constant",
    "icu::segmenter::symbols::LB25_OP#Constant",
    "icu::segmenter::symbols::LF#Constant",
    "icu::segmenter::symbols::NL#Constant",
    "icu::segmenter::symbols::NOT_MATCH_RULE#Constant",
    "icu::segmenter::symbols::NS#Constant",
    "icu::segmenter::symbols::NU#Constant",
    "icu::segmenter::symbols::OP_EA#Constant",
    "icu::segmenter::symbols::OP_OP30#Constant",
    "icu::segmenter::symbols::OP_SP#Constant",
    "icu::segmenter::symbols::PO#Constant",
    "icu::segmenter::symbols::PO_EAW#Constant",
    "icu::segmenter::symbols::PR#Constant",
    "icu::segmenter::symbols::PR_EAW#Constant",
    "icu::segmenter::symbols::QU#Constant",
    "icu::segmenter::symbols::QU_SP#Constant",
    "icu::segmenter::symbols::RI#Constant",
    "icu::segmenter::symbols::RI_RI#Constant",
    "icu::segmenter::symbols::SA#Constant",
    "icu::segmenter::symbols::SG#Constant",
    "icu::segmenter::symbols::SOT#Constant",
    "icu::segmenter::symbols::SP#Constant",
    "icu::segmenter::symbols::SY#Constant",
    "icu::segmenter::symbols::UNKNOWN#Constant",
    "icu::segmenter::symbols::UNKNOWN_RULE#Constant",
    "icu::segmenter::symbols::WJ#Constant",
    "icu::segmenter::symbols::XX#Constant",
    "icu::segmenter::symbols::ZW#Constant",
    "icu::segmenter::symbols::ZWJ#Constant",
];

#[test]
fn main() {
    fn iterate(
        item: &Item,
        doc: &Crate,
        doc_types: &mut BTreeSet<String>,
        mut path: Vec<String>,
        path_already_extended: bool,
    ) {
        match &item.inner {
            ItemEnum::Import(import) => {
                if !import.glob {
                    path.push(import.name.to_string());
                }
                if let Some(item) = &doc.index.get(import.id.as_ref().unwrap()) {
                    iterate(item, doc, doc_types, path, true);
                } else if let Some(item) = &doc.paths.get(import.id.as_ref().unwrap()) {
                    // External crate. This is quite complicated and while it works, I'm not sure
                    // it's correct. This basically handles the case `pub use other_crate::module::Struct`,
                    // which means we have to parse `other_crate`, then look for `module`, then look
                    // for `Struct`. Now, `module` could actually be a reexport, which is why we have to
                    // check the `Import` case when traversing the path.
                    let doc = parse_doc(&doc.external_crates[&item.crate_id].name);
                    let mut item = &doc.index[&doc.root];
                    for segment in import.source.split("::").skip(1) {
                        match &item.inner {
                            ItemEnum::Module(inner) => {
                                item = inner
                                    .items
                                    .iter()
                                    .map(|id| &doc.index[id])
                                    .find(|item| match &item.inner {
                                        ItemEnum::Import(import) => {
                                            if import.name.as_str() == segment {
                                                path.pop();
                                                true
                                            } else {
                                                false
                                            }
                                        }
                                        _ => item.name.as_deref() == Some(segment),
                                    })
                                    .unwrap();
                            }
                            _ => unreachable!(),
                        }
                    }
                    iterate(item, &doc, doc_types, path, true);
                } else {
                    unreachable!("id should be in either index or paths")
                }
            }
            _ => {
                if !path_already_extended {
                    path.push(item.name.as_ref().unwrap().to_string());
                }
                match &item.inner {
                    ItemEnum::Module(module) => {
                        for id in &module.items {
                            iterate(&doc.index[id], doc, doc_types, path.clone(), false);
                        }
                        doc_types.insert(create_rustlink(path, ast::DocType::Mod).to_string());
                    }
                    ItemEnum::Struct(_) => {
                        doc_types.insert(create_rustlink(path, ast::DocType::Struct).to_string());
                    }
                    ItemEnum::Enum(_) => {
                        doc_types.insert(create_rustlink(path, ast::DocType::Enum).to_string());
                    }
                    ItemEnum::Trait(_) => {
                        doc_types.insert(create_rustlink(path, ast::DocType::Trait).to_string());
                    }
                    ItemEnum::Constant(_) => {
                        doc_types.insert(create_rustlink(path, ast::DocType::Constant).to_string());
                    }
                    ItemEnum::Function(_) => {
                        doc_types.insert(create_rustlink(path, ast::DocType::Fn).to_string());
                    }
                    ItemEnum::Macro(_) => {
                        doc_types.insert(create_rustlink(path, ast::DocType::Macro).to_string());
                    }
                    ItemEnum::Typedef(_) => {
                        // ignore
                    }
                    _ => todo!("{:?}", item),
                }
            }
        }
    }

    let mut doc_types = BTreeSet::new();
    for &krate in COVERED_CRATES {
        let doc = parse_doc(krate);
        iterate(
            &doc.index[&doc.root],
            &doc,
            &mut doc_types,
            Vec::new(),
            false,
        );
    }

    let mut diplomat_types = ast::File::from(&syn_inline_mod::parse_and_inline_modules(
        &PathBuf::from(concat!(std::env!("CARGO_MANIFEST_DIR"), "/src/lib.rs")),
    ))
    .all_rust_links()
    .into_iter()
    .map(|l| l.to_string())
    .collect::<BTreeSet<_>>();
    diplomat_types.extend(EXCEPTIONS.iter().map(|l| l.to_string()));

    if doc_types
        .difference(&diplomat_types)
        .inspect(|item| println!("Missing rustlink: {}", item))
        .count()
        > 0
    {
        panic!()
    }
}

fn parse_doc(krate: &str) -> Crate {
    std::process::Command::new("cargo")
        .args(&[
            "+nightly",
            "rustdoc",
            "-p",
            krate,
            "--all-features",
            "--",
            "--output-format",
            "json",
            "-Zunstable-options",
        ])
        .output()
        .expect("failed to execute rustdoc");
    serde_json::from_reader(
        File::open(
            &PathBuf::from(std::env!("CARGO_MANIFEST_DIR"))
                .join("../../target/doc")
                .join(krate)
                .with_extension("json"),
        )
        .unwrap(),
    )
    .unwrap()
}

pub fn create_rustlink(path: Vec<String>, typ: ast::DocType) -> ast::RustLink {
    ast::RustLink {
        path: ast::Path {
            elements: path
                .into_iter()
                .map(|s| ast::Ident::try_from(s).expect("item path is valid"))
                .collect(),
        },
        typ,
    }
}
