// generated by diplomat-tool

// https://github.com/dart-lang/sdk/issues/53946
// ignore_for_file: non_native_function_type_argument_to_pointer

part of 'lib.g.dart';

/// See the [Rust documentation for `AnyCalendar`](https://docs.rs/icu/latest/icu/calendar/enum.AnyCalendar.html) for more information.
final class Calendar implements ffi.Finalizable {
  final ffi.Pointer<ffi.Opaque> _underlying;

  Calendar._(this._underlying) {
    _finalizer.attach(this, _underlying.cast());
  }

  static final _finalizer = ffi.NativeFinalizer(_capi('ICU4XCalendar_destroy'));

  /// Creates a new [`Calendar`] from the specified date and time.
  ///
  /// See the [Rust documentation for `new_for_locale`](https://docs.rs/icu/latest/icu/calendar/enum.AnyCalendar.html#method.new_for_locale) for more information.
  ///
  /// Throws [Error] on failure.
  factory Calendar.forLocale(DataProvider provider, Locale locale) {
    final result = _ICU4XCalendar_create_for_locale(provider._underlying, locale._underlying);
    if (!result.isOk) {
      throw Error.values.firstWhere((v) => v._underlying == result.union.err);
    }
    return Calendar._(result.union.ok);
  }

  // ignore: non_constant_identifier_names
  static final _ICU4XCalendar_create_for_locale =
    _capi<ffi.NativeFunction<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>, ffi.Pointer<ffi.Opaque>)>>('ICU4XCalendar_create_for_locale')
      .asFunction<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>, ffi.Pointer<ffi.Opaque>)>(isLeaf: true);

  /// Creates a new [`Calendar`] from the specified date and time.
  ///
  /// See the [Rust documentation for `new`](https://docs.rs/icu/latest/icu/calendar/enum.AnyCalendar.html#method.new) for more information.
  ///
  /// Throws [Error] on failure.
  factory Calendar.forKind(DataProvider provider, AnyCalendarKind kind) {
    final result = _ICU4XCalendar_create_for_kind(provider._underlying, kind.index);
    if (!result.isOk) {
      throw Error.values.firstWhere((v) => v._underlying == result.union.err);
    }
    return Calendar._(result.union.ok);
  }

  // ignore: non_constant_identifier_names
  static final _ICU4XCalendar_create_for_kind =
    _capi<ffi.NativeFunction<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>, ffi.Int32)>>('ICU4XCalendar_create_for_kind')
      .asFunction<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>, int)>(isLeaf: true);

  /// Returns the kind of this calendar
  ///
  /// See the [Rust documentation for `kind`](https://docs.rs/icu/latest/icu/calendar/enum.AnyCalendar.html#method.kind) for more information.
  AnyCalendarKind get kind {
    final result = _ICU4XCalendar_kind(_underlying);
    return AnyCalendarKind.values[result];
  }

  // ignore: non_constant_identifier_names
  static final _ICU4XCalendar_kind =
    _capi<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ffi.Opaque>)>>('ICU4XCalendar_kind')
      .asFunction<int Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true);
}
