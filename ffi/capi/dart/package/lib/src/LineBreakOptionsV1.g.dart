// generated by diplomat-tool

// https://github.com/dart-lang/sdk/issues/53946
// ignore_for_file: non_native_function_type_argument_to_pointer

part of 'lib.g.dart';

/// See the [Rust documentation for `LineBreakOptions`](https://docs.rs/icu/latest/icu/segmenter/struct.LineBreakOptions.html) for more information.
final class _LineBreakOptionsV1Ffi extends ffi.Struct {
  @ffi.Int32()
  external int strictness;
  @ffi.Int32()
  external int wordOption;
  @ffi.Bool()
  external bool jaZh;
}

final class LineBreakOptionsV1 {
  final _LineBreakOptionsV1Ffi _underlying;

  LineBreakOptionsV1._(this._underlying);

  factory LineBreakOptionsV1() {
    final pointer = ffi2.calloc<_LineBreakOptionsV1Ffi>();
    final result = LineBreakOptionsV1._(pointer.ref);
    _callocFree.attach(result, pointer.cast());
    return result;
  }

  LineBreakStrictness get strictness => LineBreakStrictness.values[_underlying.strictness];
  set strictness(LineBreakStrictness strictness) {
    _underlying.strictness = strictness.index;
  }

  LineBreakWordOption get wordOption => LineBreakWordOption.values[_underlying.wordOption];
  set wordOption(LineBreakWordOption wordOption) {
    _underlying.wordOption = wordOption.index;
  }

  bool get jaZh => _underlying.jaZh;
  set jaZh(bool jaZh) {
    _underlying.jaZh = jaZh;
  }

  @override
  bool operator ==(Object other) =>
      other is LineBreakOptionsV1 &&
      other._underlying.strictness == _underlying.strictness &&
      other._underlying.wordOption == _underlying.wordOption &&
      other._underlying.jaZh == _underlying.jaZh;

  @override
  int get hashCode => Object.hashAll([
        _underlying.strictness,
        _underlying.wordOption,
        _underlying.jaZh,
      ]);
}
