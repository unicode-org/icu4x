// generated by diplomat-tool

// https://github.com/dart-lang/sdk/issues/53946
// ignore_for_file: non_native_function_type_argument_to_pointer

part of 'lib.g.dart';

/// An ICU4X Time object representing a time in terms of hour, minute, second, nanosecond
///
/// See the [Rust documentation for `Time`](https://docs.rs/icu/latest/icu/calendar/types/struct.Time.html) for more information.
final class Time implements ffi.Finalizable {
  final ffi.Pointer<ffi.Opaque> _underlying;

  Time._(this._underlying) {
    _finalizer.attach(this, _underlying.cast());
  }

  static final _finalizer = ffi.NativeFinalizer(_capi('ICU4XTime_destroy'));

  /// Creates a new [`Time`] given field values
  ///
  /// See the [Rust documentation for `Time`](https://docs.rs/icu/latest/icu/calendar/types/struct.Time.html) for more information.
  ///
  /// Throws [Error] on failure.
  factory Time(int hour, int minute, int second, int nanosecond) {
    final result = _ICU4XTime_create(hour, minute, second, nanosecond);
    if (!result.isOk) {
      throw Error.values.firstWhere((v) => v._underlying == result.union.err);
    }
    return Time._(result.union.ok);
  }

  // ignore: non_constant_identifier_names
  static final _ICU4XTime_create =
    _capi<ffi.NativeFunction<_ResultOpaqueInt32 Function(ffi.Uint8, ffi.Uint8, ffi.Uint8, ffi.Uint32)>>('ICU4XTime_create')
      .asFunction<_ResultOpaqueInt32 Function(int, int, int, int)>(isLeaf: true);

  /// Creates a new [`Time`] representing midnight (00:00.000).
  ///
  /// See the [Rust documentation for `Time`](https://docs.rs/icu/latest/icu/calendar/types/struct.Time.html) for more information.
  ///
  /// Throws [Error] on failure.
  factory Time.midnight() {
    final result = _ICU4XTime_create_midnight();
    if (!result.isOk) {
      throw Error.values.firstWhere((v) => v._underlying == result.union.err);
    }
    return Time._(result.union.ok);
  }

  // ignore: non_constant_identifier_names
  static final _ICU4XTime_create_midnight =
    _capi<ffi.NativeFunction<_ResultOpaqueInt32 Function()>>('ICU4XTime_create_midnight')
      .asFunction<_ResultOpaqueInt32 Function()>(isLeaf: true);

  /// Returns the hour in this time
  ///
  /// See the [Rust documentation for `hour`](https://docs.rs/icu/latest/icu/calendar/types/struct.Time.html#structfield.hour) for more information.
  int get hour {
    final result = _ICU4XTime_hour(_underlying);
    return result;
  }

  // ignore: non_constant_identifier_names
  static final _ICU4XTime_hour =
    _capi<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Opaque>)>>('ICU4XTime_hour')
      .asFunction<int Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true);

  /// Returns the minute in this time
  ///
  /// See the [Rust documentation for `minute`](https://docs.rs/icu/latest/icu/calendar/types/struct.Time.html#structfield.minute) for more information.
  int get minute {
    final result = _ICU4XTime_minute(_underlying);
    return result;
  }

  // ignore: non_constant_identifier_names
  static final _ICU4XTime_minute =
    _capi<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Opaque>)>>('ICU4XTime_minute')
      .asFunction<int Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true);

  /// Returns the second in this time
  ///
  /// See the [Rust documentation for `second`](https://docs.rs/icu/latest/icu/calendar/types/struct.Time.html#structfield.second) for more information.
  int get second {
    final result = _ICU4XTime_second(_underlying);
    return result;
  }

  // ignore: non_constant_identifier_names
  static final _ICU4XTime_second =
    _capi<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Opaque>)>>('ICU4XTime_second')
      .asFunction<int Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true);

  /// Returns the nanosecond in this time
  ///
  /// See the [Rust documentation for `nanosecond`](https://docs.rs/icu/latest/icu/calendar/types/struct.Time.html#structfield.nanosecond) for more information.
  int get nanosecond {
    final result = _ICU4XTime_nanosecond(_underlying);
    return result;
  }

  // ignore: non_constant_identifier_names
  static final _ICU4XTime_nanosecond =
    _capi<ffi.NativeFunction<ffi.Uint32 Function(ffi.Pointer<ffi.Opaque>)>>('ICU4XTime_nanosecond')
      .asFunction<int Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true);
}
