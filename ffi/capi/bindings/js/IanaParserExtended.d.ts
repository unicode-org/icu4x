// generated by diplomat-tool
import type { DataError } from "./DataError"
import type { DataProvider } from "./DataProvider"
import type { TimeZoneAndCanonicalAndNormalized } from "./TimeZoneAndCanonicalAndNormalized"
import type { TimeZoneAndCanonicalAndNormalizedIterator } from "./TimeZoneAndCanonicalAndNormalizedIterator"
import type { TimeZoneAndCanonicalIterator } from "./TimeZoneAndCanonicalIterator"
import type { pointer, codepoint } from "./diplomat-runtime.d.ts";


/** A mapper between IANA time zone identifiers and BCP-47 time zone identifiers.
*
*This mapper supports two-way mapping, but it is optimized for the case of IANA to BCP-47.
*It also supports normalizing and canonicalizing the IANA strings.
*
*See the [Rust documentation for `IanaParserExtended`](https://docs.rs/icu/latest/icu/time/zone/iana/struct.IanaParserExtended.html) for more information.
*/


export class IanaParserExtended {
    
    get ffiValue(): pointer;

    static createWithProvider(provider: DataProvider): IanaParserExtended;

    parse(value: string): TimeZoneAndCanonicalAndNormalized;

    iter(): TimeZoneAndCanonicalIterator;

    iterAll(): TimeZoneAndCanonicalAndNormalizedIterator;

    constructor();
}