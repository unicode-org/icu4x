// generated by diplomat-tool
import type { Calendar } from "./Calendar"
import type { DataProvider } from "./DataProvider"
import type { Date } from "./Date"
import type { DateTimeFormatError } from "./DateTimeFormatError"
import type { DateTimeFormatterLoadError } from "./DateTimeFormatterLoadError"
import type { DateTimeLength } from "./DateTimeLength"
import type { IsoDate } from "./IsoDate"
import type { Locale } from "./Locale"
import type { Time } from "./Time"
import type { pointer, codepoint } from "./diplomat-runtime.d.ts";


/** An ICU4X DateFormatter object capable of formatting a [`Date`] and a [`Time`] as a string,
*using some calendar specified at runtime in the locale.
*
*See the [Rust documentation for `DateTimeFormatter`](https://docs.rs/icu/latest/icu/datetime/struct.DateTimeFormatter.html) for more information.
*
*Additional information: [1](https://docs.rs/icu/latest/icu/datetime/fieldsets/struct.YMDT.html)
*/


export class DateTimeFormatter {
    
    get ffiValue(): pointer;

    static createWithLength(locale: Locale, length: DateTimeLength): DateTimeFormatter;

    static createWithLengthAndProvider(provider: DataProvider, locale: Locale, length: DateTimeLength): DateTimeFormatter;

    format(date: Date, time: Time): string;

    formatIso(date: IsoDate, time: Time): string;

    calendar(): Calendar;
}