// generated by diplomat-tool
import type { CodePointRangeIterator } from "./CodePointRangeIterator"
import type { CodePointSetData } from "./CodePointSetData"
import type { DataError } from "./DataError"
import type { DataProvider } from "./DataProvider"
import type { GeneralCategoryGroup } from "./GeneralCategoryGroup"
import type { GeneralCategoryGroup_obj } from "./GeneralCategoryGroup"
import type { pointer, codepoint } from "./diplomat-runtime.d.ts";


/** An ICU4X Unicode Map Property object, capable of querying whether a code point (key) to obtain the Unicode property value, for a specific Unicode property.
*
*For properties whose values fit into 8 bits.
*
*See the [Rust documentation for `properties`](https://docs.rs/icu/latest/icu/properties/index.html) for more information.
*
*See the [Rust documentation for `CodePointMapData`](https://docs.rs/icu/latest/icu/properties/struct.CodePointMapData.html) for more information.
*
*See the [Rust documentation for `CodePointMapDataBorrowed`](https://docs.rs/icu/latest/icu/properties/struct.CodePointMapDataBorrowed.html) for more information.
*/


export class CodePointMapData8 {
    
    get ffiValue(): pointer;

    get(cp: codepoint): number;

    iterRangesForValue(value: number): CodePointRangeIterator;

    iterRangesForValueComplemented(value: number): CodePointRangeIterator;

    iterRangesForGroup(group: GeneralCategoryGroup_obj): CodePointRangeIterator;

    getSetForValue(value: number): CodePointSetData;

    static createGeneralCategory(): CodePointMapData8;

    static createGeneralCategoryWithProvider(provider: DataProvider): CodePointMapData8;

    static createBidiClass(): CodePointMapData8;

    static createBidiClassWithProvider(provider: DataProvider): CodePointMapData8;

    static createEastAsianWidth(): CodePointMapData8;

    static createEastAsianWidthWithProvider(provider: DataProvider): CodePointMapData8;

    static createHangulSyllableType(): CodePointMapData8;

    static createHangulSyllableTypeWithProvider(provider: DataProvider): CodePointMapData8;

    static createIndicSyllabicCategory(): CodePointMapData8;

    static createIndicSyllabicCategoryWithProvider(provider: DataProvider): CodePointMapData8;

    static createLineBreak(): CodePointMapData8;

    static createLineBreakWithProvider(provider: DataProvider): CodePointMapData8;

    static createGraphemeClusterBreak(): CodePointMapData8;

    static createGraphemeClusterBreakWithProvider(provider: DataProvider): CodePointMapData8;

    static createWordBreak(): CodePointMapData8;

    static createWordBreakWithProvider(provider: DataProvider): CodePointMapData8;

    static createSentenceBreak(): CodePointMapData8;

    static createSentenceBreakWithProvider(provider: DataProvider): CodePointMapData8;

    static createJoiningType(): CodePointMapData8;

    static createJoiningTypeWithProvider(provider: DataProvider): CodePointMapData8;

    static createCanonicalCombiningClass(): CodePointMapData8;

    static createCanonicalCombiningClassWithProvider(provider: DataProvider): CodePointMapData8;
}