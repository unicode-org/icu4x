// generated by diplomat-tool
import wasm from "./diplomat-wasm.mjs";
import * as diplomatRuntime from "./diplomat-runtime.mjs";

const ErasedMeasureUnit_box_destroy_registry = new FinalizationRegistry((ptr) => {
    wasm.icu4x_ErasedMeasureUnit_destroy_mv1(ptr);
});

/**
 * An ICU4X Erased Measurement Unit object which represents a single unit of measurement
 * such as `meter`, `second`, `kilometer-per-hour`, `square-meter`, etc.
 *
 * You can create an instance of this object using {@link ErasedMeasureUnitParser} by calling the `parse` method.
 *
 * See the [Rust documentation for `ErasedMeasureUnit`](https://docs.rs/icu/2.0.0/icu/experimental/measure/measureunit/struct.ErasedMeasureUnit.html) for more information.
 */
export class ErasedMeasureUnit {
    // Internal ptr reference:
    #ptr = null;

    // Lifetimes are only to keep dependencies alive.
    // Since JS won't garbage collect until there are no incoming edges.
    #selfEdge = [];

    #internalConstructor(symbol, ptr, selfEdge) {
        if (symbol !== diplomatRuntime.internalConstructor) {
            console.error("ErasedMeasureUnit is an Opaque type. You cannot call its constructor.");
            return;
        }
        this.#ptr = ptr;
        this.#selfEdge = selfEdge;

        // Are we being borrowed? If not, we can register.
        if (this.#selfEdge.length === 0) {
            ErasedMeasureUnit_box_destroy_registry.register(this, this.#ptr);
        }

        return this;
    }
    /** @internal */
    get ffiValue() {
        return this.#ptr;
    }


    constructor(symbol, ptr, selfEdge) {
        return this.#internalConstructor(...arguments)
    }
}