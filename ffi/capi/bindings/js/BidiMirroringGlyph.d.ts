// generated by diplomat-tool
import type { BidiPairedBracketType } from "./BidiPairedBracketType"
import type { pointer, codepoint } from "./diplomat-runtime.d.ts";

type BidiMirroringGlyph_obj = {
    mirroringGlyph?: codepoint | null;
    mirrored: boolean;
    pairedBracketType: BidiPairedBracketType;
};



/**
 * See the [Rust documentation for `BidiMirroringGlyph`](https://docs.rs/icu/2.0.0/icu/properties/props/struct.BidiMirroringGlyph.html) for more information.
 */
export class BidiMirroringGlyph {
    get mirroringGlyph(): codepoint | null;
    set mirroringGlyph(value: codepoint | null);
    get mirrored(): boolean;
    set mirrored(value: boolean);
    get pairedBracketType(): BidiPairedBracketType;
    set pairedBracketType(value: BidiPairedBracketType);
    /** @internal */
    static fromFields(structObj : BidiMirroringGlyph_obj) : BidiMirroringGlyph;

    /**
    * Create `BidiMirroringGlyph` from an object that contains all of `BidiMirroringGlyph`s fields.
    * Optional fields do not need to be included in the provided object.
    */
    constructor(structObj: BidiMirroringGlyph_obj);


    /**
     * See the [Rust documentation for `for_char`](https://docs.rs/icu/2.0.0/icu/properties/props/trait.EnumeratedProperty.html#tymethod.for_char) for more information.
     */
    static forChar(ch: codepoint): BidiMirroringGlyph;
}