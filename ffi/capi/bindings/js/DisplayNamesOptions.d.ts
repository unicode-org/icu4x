// generated by diplomat-tool
import type { DisplayNamesFallback } from "./DisplayNamesFallback"
import type { DisplayNamesStyle } from "./DisplayNamesStyle"
import type { LanguageDisplay } from "./LanguageDisplay"
import type { pointer, codepoint } from "./diplomat-runtime.d.ts";


/**
 * See the [Rust documentation for `DisplayNamesOptions`](https://docs.rs/icu/latest/icu/experimental/displaynames/options/struct.DisplayNamesOptions.html) for more information.
 */
type DisplayNamesOptions_obj = {
    style?: DisplayNamesStyle | null;
    fallback?: DisplayNamesFallback | null;
    languageDisplay?: LanguageDisplay | null;
};



export class DisplayNamesOptions {
    get style(): DisplayNamesStyle | null;
    set style(value: DisplayNamesStyle | null);
    get fallback(): DisplayNamesFallback | null;
    set fallback(value: DisplayNamesFallback | null);
    get languageDisplay(): LanguageDisplay | null;
    set languageDisplay(value: LanguageDisplay | null);
    /** Create `DisplayNamesOptions` from an object that contains all of `DisplayNamesOptions`s fields.
    * Optional fields do not need to be included in the provided object.
    */
    static fromFields(structObj : DisplayNamesOptions_obj) : DisplayNamesOptions;



    constructor(structObj: DisplayNamesOptions_obj);
}