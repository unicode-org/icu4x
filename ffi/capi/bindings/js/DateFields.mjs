// generated by diplomat-tool
import wasm from "./diplomat-wasm.mjs";
import * as diplomatRuntime from "./diplomat-runtime.mjs";


/** See the [Rust documentation for `DateFields`](https://docs.rs/icu/latest/icu/datetime/enum.DateFields.html) for more information.
*/


export class DateFields {
    
    #value = undefined;

    static #values = new Map([
        ["D", 0],
        ["Md", 1],
        ["Ymd", 2],
        ["De", 3],
        ["Mde", 4],
        ["Ymde", 5],
        ["E", 6],
        ["M", 7],
        ["Ym", 8],
        ["Y", 9]
    ]);

    static getAllEntries() {
        return DateFields.#values.entries();
    }
    
    #internalConstructor(value) {
        if (arguments.length > 1 && arguments[0] === diplomatRuntime.internalConstructor) {
            // We pass in two internalConstructor arguments to create *new*
            // instances of this type, otherwise the enums are treated as singletons.
            if (arguments[1] === diplomatRuntime.internalConstructor ) {
                this.#value = arguments[2];
                return this;
            }
            return DateFields.#objectValues[arguments[1]];
        }

        if (value instanceof DateFields) {
            return value;
        }

        let intVal = DateFields.#values.get(value);

        // Nullish check, checks for null or undefined
        if (intVal != null) {
            return DateFields.#objectValues[intVal];
        }

        throw TypeError(value + " is not a DateFields and does not correspond to any of its enumerator values.");
    }

    static fromValue(value) {
        return new DateFields(value);
    }

    get value() {
        return [...DateFields.#values.keys()][this.#value];
    }

    get ffiValue() {
        return this.#value;
    }
    static #objectValues = [
        new DateFields(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 0),
        new DateFields(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 1),
        new DateFields(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 2),
        new DateFields(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 3),
        new DateFields(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 4),
        new DateFields(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 5),
        new DateFields(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 6),
        new DateFields(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 7),
        new DateFields(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 8),
        new DateFields(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 9),
    ];

    static D = DateFields.#objectValues[0];
    static Md = DateFields.#objectValues[1];
    static Ymd = DateFields.#objectValues[2];
    static De = DateFields.#objectValues[3];
    static Mde = DateFields.#objectValues[4];
    static Ymde = DateFields.#objectValues[5];
    static E = DateFields.#objectValues[6];
    static M = DateFields.#objectValues[7];
    static Ym = DateFields.#objectValues[8];
    static Y = DateFields.#objectValues[9];

    constructor(value) {
        return this.#internalConstructor(...arguments)
    }
}