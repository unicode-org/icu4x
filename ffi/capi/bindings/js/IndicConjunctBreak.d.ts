// generated by diplomat-tool
import type { pointer, codepoint } from "./diplomat-runtime.d.ts";


/** 
 * See the [Rust documentation for `IndicConjunctBreak`](https://docs.rs/icu/latest/icu/properties/props/struct.IndicConjunctBreak.html) for more information.
 */


export class IndicConjunctBreak {
    

    static fromValue(value : IndicConjunctBreak | string) : IndicConjunctBreak; 

    get value() : string;

    get ffiValue() : number;

    static None : IndicConjunctBreak;
    static Consonant : IndicConjunctBreak;
    static Extend : IndicConjunctBreak;
    static Linker : IndicConjunctBreak;

    /** 
     * See the [Rust documentation for `for_char`](https://docs.rs/icu/latest/icu/properties/props/trait.EnumeratedProperty.html#tymethod.for_char) for more information.
     */
    static forChar(ch: codepoint): IndicConjunctBreak;

    /** 
     * Convert to an integer value usable with ICU4C and CodePointMapData
     *
     * See the [Rust documentation for `to_icu4c_value`](https://docs.rs/icu/latest/icu/properties/props/struct.IndicConjunctBreak.html#method.to_icu4c_value) for more information.
     */
    toIntegerValue(): number;

    /** 
     * Convert from an integer value from ICU4C or CodePointMapData
     *
     * See the [Rust documentation for `from_icu4c_value`](https://docs.rs/icu/latest/icu/properties/props/struct.IndicConjunctBreak.html#method.from_icu4c_value) for more information.
     */
    static fromIntegerValue(other: number): IndicConjunctBreak | null;

    constructor(value: IndicConjunctBreak | string );
}