// generated by diplomat-tool
import type { DataProvider } from "./DataProvider"
import type { DateTimeAlignment } from "./DateTimeAlignment"
import type { DateTimeFormatterLoadError } from "./DateTimeFormatterLoadError"
import type { DateTimeLength } from "./DateTimeLength"
import type { IsoDate } from "./IsoDate"
import type { Locale } from "./Locale"
import type { NeoZonedDateTimeFormatterGregorian } from "./NeoZonedDateTimeFormatterGregorian"
import type { Time } from "./Time"
import type { TimePrecision } from "./TimePrecision"
import type { YearStyle } from "./YearStyle"
import type { pointer, codepoint } from "./diplomat-runtime.d.ts";


/** See the [Rust documentation for `FixedCalendarDateTimeFormatter`](https://docs.rs/icu/latest/icu/datetime/type.FixedCalendarDateTimeFormatter.html) for more information.
*/


export class DateTimeFormatterGregorian {
    
    get ffiValue(): pointer;

    static createDt(locale: Locale, length: DateTimeLength | null, timePrecision: TimePrecision | null, alignment: DateTimeAlignment | null): DateTimeFormatterGregorian;

    static createDtWithProvider(provider: DataProvider, locale: Locale, length: DateTimeLength | null, timePrecision: TimePrecision | null, alignment: DateTimeAlignment | null): DateTimeFormatterGregorian;

    static createMdt(locale: Locale, length: DateTimeLength | null, timePrecision: TimePrecision | null, alignment: DateTimeAlignment | null): DateTimeFormatterGregorian;

    static createMdtWithProvider(provider: DataProvider, locale: Locale, length: DateTimeLength | null, timePrecision: TimePrecision | null, alignment: DateTimeAlignment | null): DateTimeFormatterGregorian;

    static createYmdt(locale: Locale, length: DateTimeLength | null, timePrecision: TimePrecision | null, alignment: DateTimeAlignment | null, yearStyle: YearStyle | null): DateTimeFormatterGregorian;

    static createYmdtWithProvider(provider: DataProvider, locale: Locale, length: DateTimeLength | null, timePrecision: TimePrecision | null, alignment: DateTimeAlignment | null, yearStyle: YearStyle | null): DateTimeFormatterGregorian;

    static createDet(locale: Locale, length: DateTimeLength | null, timePrecision: TimePrecision | null, alignment: DateTimeAlignment | null): DateTimeFormatterGregorian;

    static createDetWithProvider(provider: DataProvider, locale: Locale, length: DateTimeLength | null, timePrecision: TimePrecision | null, alignment: DateTimeAlignment | null): DateTimeFormatterGregorian;

    static createMdet(locale: Locale, length: DateTimeLength | null, timePrecision: TimePrecision | null, alignment: DateTimeAlignment | null): DateTimeFormatterGregorian;

    static createMdetWithProvider(provider: DataProvider, locale: Locale, length: DateTimeLength | null, timePrecision: TimePrecision | null, alignment: DateTimeAlignment | null): DateTimeFormatterGregorian;

    static createYmdet(locale: Locale, length: DateTimeLength | null, timePrecision: TimePrecision | null, alignment: DateTimeAlignment | null, yearStyle: YearStyle | null): DateTimeFormatterGregorian;

    static createYmdetWithProvider(provider: DataProvider, locale: Locale, length: DateTimeLength | null, timePrecision: TimePrecision | null, alignment: DateTimeAlignment | null, yearStyle: YearStyle | null): DateTimeFormatterGregorian;

    static createEt(locale: Locale, length: DateTimeLength | null, timePrecision: TimePrecision | null, alignment: DateTimeAlignment | null): DateTimeFormatterGregorian;

    static createEtWithProvider(provider: DataProvider, locale: Locale, length: DateTimeLength | null, timePrecision: TimePrecision | null, alignment: DateTimeAlignment | null): DateTimeFormatterGregorian;

    withZoneGenericShort(locale: Locale): NeoZonedDateTimeFormatterGregorian;

    withZoneGenericShortAndProvider(provider: DataProvider, locale: Locale): NeoZonedDateTimeFormatterGregorian;

    withZoneGenericLong(locale: Locale): NeoZonedDateTimeFormatterGregorian;

    withZoneGenericLongAndProvider(provider: DataProvider, locale: Locale): NeoZonedDateTimeFormatterGregorian;

    withZoneSpecificShort(locale: Locale): NeoZonedDateTimeFormatterGregorian;

    withZoneSpecificShortAndProvider(provider: DataProvider, locale: Locale): NeoZonedDateTimeFormatterGregorian;

    withZoneSpecificLong(locale: Locale): NeoZonedDateTimeFormatterGregorian;

    withZoneSpecificLongAndProvider(provider: DataProvider, locale: Locale): NeoZonedDateTimeFormatterGregorian;

    withZoneLocalizedOffsetShort(locale: Locale): NeoZonedDateTimeFormatterGregorian;

    withZoneLocalizedOffsetShortAndProvider(provider: DataProvider, locale: Locale): NeoZonedDateTimeFormatterGregorian;

    withZoneLocalizedOffsetLong(locale: Locale): NeoZonedDateTimeFormatterGregorian;

    withZoneLocalizedOffsetLongAndProvider(provider: DataProvider, locale: Locale): NeoZonedDateTimeFormatterGregorian;

    formatIso(date: IsoDate, time: Time): string;
}