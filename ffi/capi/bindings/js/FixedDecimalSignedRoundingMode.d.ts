// generated by diplomat-tool
import type { pointer, codepoint } from "./diplomat-runtime.d.ts";


/** 
 * Mode used in a rounding operation for signed numbers.
 *
 * See the [Rust documentation for `SignedRoundingMode`](https://docs.rs/fixed_decimal/latest/fixed_decimal/enum.SignedRoundingMode.html) for more information.
 */


export class FixedDecimalSignedRoundingMode {
    

    static fromValue(value : FixedDecimalSignedRoundingMode | string) : FixedDecimalSignedRoundingMode; 

    get value() : string;

    get ffiValue() : number;

    static Expand : FixedDecimalSignedRoundingMode;
    static Trunc : FixedDecimalSignedRoundingMode;
    static HalfExpand : FixedDecimalSignedRoundingMode;
    static HalfTrunc : FixedDecimalSignedRoundingMode;
    static HalfEven : FixedDecimalSignedRoundingMode;
    static Ceil : FixedDecimalSignedRoundingMode;
    static Floor : FixedDecimalSignedRoundingMode;
    static HalfCeil : FixedDecimalSignedRoundingMode;
    static HalfFloor : FixedDecimalSignedRoundingMode;

    constructor(value: FixedDecimalSignedRoundingMode | string );
}