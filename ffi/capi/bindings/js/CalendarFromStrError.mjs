// generated by diplomat-tool
import wasm from "./diplomat-wasm.mjs";
import * as diplomatRuntime from "./diplomat-runtime.mjs";

// Base enumerator definition
/** Additional information: [1](https://docs.rs/icu/latest/icu/calendar/struct.FromStrError.html)
*/
export class CalendarFromStrError {
    #value = undefined;

    static values = new Map([
        ["Unknown", 0],
        ["InvalidSyntax", 1],
        ["OutOfRange", 2],
        ["MissingFields", 3],
        ["UnknownCalendar", 4]
    ]);
    constructor(value) {
        if (value instanceof CalendarFromStrError) {
            this.#value = value.value;
            return;
        }

        if (CalendarFromStrError.values.has(value)) {
            this.#value = value;
            return;
        }

        throw TypeError(value + " is not a CalendarFromStrError and does not correspond to any of its enumerator values.");
    }

    get value() {
        return this.#value;
    }

    get ffiValue() {
        return CalendarFromStrError.values.get(this.#value);
    }

    static Unknown = new CalendarFromStrError("Unknown");

    static InvalidSyntax = new CalendarFromStrError("InvalidSyntax");

    static OutOfRange = new CalendarFromStrError("OutOfRange");

    static MissingFields = new CalendarFromStrError("MissingFields");

    static UnknownCalendar = new CalendarFromStrError("UnknownCalendar");


    

}