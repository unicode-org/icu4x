// generated by diplomat-tool
import type { CodePointRangeIterator } from "./CodePointRangeIterator"
import type { DataError } from "./DataError"
import type { DataProvider } from "./DataProvider"
import type { GeneralCategoryGroup } from "./GeneralCategoryGroup"
import type { GeneralCategoryGroup_obj } from "./GeneralCategoryGroup"
import type { pointer, codepoint } from "./diplomat-runtime.d.ts";


/** An ICU4X Unicode Set Property object, capable of querying whether a code point is contained in a set based on a Unicode property.
*
*See the [Rust documentation for `properties`](https://docs.rs/icu/latest/icu/properties/index.html) for more information.
*
*See the [Rust documentation for `CodePointSetData`](https://docs.rs/icu/latest/icu/properties/struct.CodePointSetData.html) for more information.
*
*See the [Rust documentation for `CodePointSetDataBorrowed`](https://docs.rs/icu/latest/icu/properties/struct.CodePointSetDataBorrowed.html) for more information.
*/


export class CodePointSetData {
    
    get ffiValue(): pointer;

    contains(cp: codepoint): boolean;

    iterRanges(): CodePointRangeIterator;

    iterRangesComplemented(): CodePointRangeIterator;

    static createGeneralCategoryGroup(group: GeneralCategoryGroup_obj): CodePointSetData;

    static createGeneralCategoryGroupWithProvider(provider: DataProvider, group: number): CodePointSetData;

    static asciiHexDigitForChar(ch: codepoint): boolean;

    static createAsciiHexDigit(): CodePointSetData;

    static createAsciiHexDigitWithProvider(provider: DataProvider): CodePointSetData;

    static alnumForChar(ch: codepoint): boolean;

    static createAlnum(): CodePointSetData;

    static createAlnumWithProvider(provider: DataProvider): CodePointSetData;

    static alphabeticForChar(ch: codepoint): boolean;

    static createAlphabetic(): CodePointSetData;

    static createAlphabeticWithProvider(provider: DataProvider): CodePointSetData;

    static bidiControlForChar(ch: codepoint): boolean;

    static createBidiControl(): CodePointSetData;

    static createBidiControlWithProvider(provider: DataProvider): CodePointSetData;

    static bidiMirroredForChar(ch: codepoint): boolean;

    static createBidiMirrored(): CodePointSetData;

    static createBidiMirroredWithProvider(provider: DataProvider): CodePointSetData;

    static blankForChar(ch: codepoint): boolean;

    static createBlank(): CodePointSetData;

    static createBlankWithProvider(provider: DataProvider): CodePointSetData;

    static casedForChar(ch: codepoint): boolean;

    static createCased(): CodePointSetData;

    static createCasedWithProvider(provider: DataProvider): CodePointSetData;

    static caseIgnorableForChar(ch: codepoint): boolean;

    static createCaseIgnorable(): CodePointSetData;

    static createCaseIgnorableWithProvider(provider: DataProvider): CodePointSetData;

    static fullCompositionExclusionForChar(ch: codepoint): boolean;

    static createFullCompositionExclusion(): CodePointSetData;

    static createFullCompositionExclusionWithProvider(provider: DataProvider): CodePointSetData;

    static changesWhenCasefoldedForChar(ch: codepoint): boolean;

    static createChangesWhenCasefolded(): CodePointSetData;

    static createChangesWhenCasefoldedWithProvider(provider: DataProvider): CodePointSetData;

    static changesWhenCasemappedForChar(ch: codepoint): boolean;

    static createChangesWhenCasemapped(): CodePointSetData;

    static createChangesWhenCasemappedWithProvider(provider: DataProvider): CodePointSetData;

    static changesWhenNfkcCasefoldedForChar(ch: codepoint): boolean;

    static createChangesWhenNfkcCasefolded(): CodePointSetData;

    static createChangesWhenNfkcCasefoldedWithProvider(provider: DataProvider): CodePointSetData;

    static changesWhenLowercasedForChar(ch: codepoint): boolean;

    static createChangesWhenLowercased(): CodePointSetData;

    static createChangesWhenLowercasedWithProvider(provider: DataProvider): CodePointSetData;

    static changesWhenTitlecasedForChar(ch: codepoint): boolean;

    static createChangesWhenTitlecased(): CodePointSetData;

    static createChangesWhenTitlecasedWithProvider(provider: DataProvider): CodePointSetData;

    static changesWhenUppercasedForChar(ch: codepoint): boolean;

    static createChangesWhenUppercased(): CodePointSetData;

    static createChangesWhenUppercasedWithProvider(provider: DataProvider): CodePointSetData;

    static dashForChar(ch: codepoint): boolean;

    static createDash(): CodePointSetData;

    static createDashWithProvider(provider: DataProvider): CodePointSetData;

    static deprecatedForChar(ch: codepoint): boolean;

    static createDeprecated(): CodePointSetData;

    static createDeprecatedWithProvider(provider: DataProvider): CodePointSetData;

    static defaultIgnorableCodePointForChar(ch: codepoint): boolean;

    static createDefaultIgnorableCodePoint(): CodePointSetData;

    static createDefaultIgnorableCodePointWithProvider(provider: DataProvider): CodePointSetData;

    static diacriticForChar(ch: codepoint): boolean;

    static createDiacritic(): CodePointSetData;

    static createDiacriticWithProvider(provider: DataProvider): CodePointSetData;

    static emojiModifierBaseForChar(ch: codepoint): boolean;

    static createEmojiModifierBase(): CodePointSetData;

    static createEmojiModifierBaseWithProvider(provider: DataProvider): CodePointSetData;

    static emojiComponentForChar(ch: codepoint): boolean;

    static createEmojiComponent(): CodePointSetData;

    static createEmojiComponentWithProvider(provider: DataProvider): CodePointSetData;

    static emojiModifierForChar(ch: codepoint): boolean;

    static createEmojiModifier(): CodePointSetData;

    static createEmojiModifierWithProvider(provider: DataProvider): CodePointSetData;

    static emojiForChar(ch: codepoint): boolean;

    static createEmoji(): CodePointSetData;

    static createEmojiWithProvider(provider: DataProvider): CodePointSetData;

    static emojiPresentationForChar(ch: codepoint): boolean;

    static createEmojiPresentation(): CodePointSetData;

    static createEmojiPresentationWithProvider(provider: DataProvider): CodePointSetData;

    static extenderForChar(ch: codepoint): boolean;

    static createExtender(): CodePointSetData;

    static createExtenderWithProvider(provider: DataProvider): CodePointSetData;

    static extendedPictographicForChar(ch: codepoint): boolean;

    static createExtendedPictographic(): CodePointSetData;

    static createExtendedPictographicWithProvider(provider: DataProvider): CodePointSetData;

    static graphForChar(ch: codepoint): boolean;

    static createGraph(): CodePointSetData;

    static createGraphWithProvider(provider: DataProvider): CodePointSetData;

    static graphemeBaseForChar(ch: codepoint): boolean;

    static createGraphemeBase(): CodePointSetData;

    static createGraphemeBaseWithProvider(provider: DataProvider): CodePointSetData;

    static graphemeExtendForChar(ch: codepoint): boolean;

    static createGraphemeExtend(): CodePointSetData;

    static createGraphemeExtendWithProvider(provider: DataProvider): CodePointSetData;

    static graphemeLinkForChar(ch: codepoint): boolean;

    static createGraphemeLink(): CodePointSetData;

    static createGraphemeLinkWithProvider(provider: DataProvider): CodePointSetData;

    static hexDigitForChar(ch: codepoint): boolean;

    static createHexDigit(): CodePointSetData;

    static createHexDigitWithProvider(provider: DataProvider): CodePointSetData;

    static hyphenForChar(ch: codepoint): boolean;

    static createHyphen(): CodePointSetData;

    static createHyphenWithProvider(provider: DataProvider): CodePointSetData;

    static idContinueForChar(ch: codepoint): boolean;

    static createIdContinue(): CodePointSetData;

    static createIdContinueWithProvider(provider: DataProvider): CodePointSetData;

    static ideographicForChar(ch: codepoint): boolean;

    static createIdeographic(): CodePointSetData;

    static createIdeographicWithProvider(provider: DataProvider): CodePointSetData;

    static idStartForChar(ch: codepoint): boolean;

    static createIdStart(): CodePointSetData;

    static createIdStartWithProvider(provider: DataProvider): CodePointSetData;

    static idsBinaryOperatorForChar(ch: codepoint): boolean;

    static createIdsBinaryOperator(): CodePointSetData;

    static createIdsBinaryOperatorWithProvider(provider: DataProvider): CodePointSetData;

    static idsTrinaryOperatorForChar(ch: codepoint): boolean;

    static createIdsTrinaryOperator(): CodePointSetData;

    static createIdsTrinaryOperatorWithProvider(provider: DataProvider): CodePointSetData;

    static joinControlForChar(ch: codepoint): boolean;

    static createJoinControl(): CodePointSetData;

    static createJoinControlWithProvider(provider: DataProvider): CodePointSetData;

    static logicalOrderExceptionForChar(ch: codepoint): boolean;

    static createLogicalOrderException(): CodePointSetData;

    static createLogicalOrderExceptionWithProvider(provider: DataProvider): CodePointSetData;

    static lowercaseForChar(ch: codepoint): boolean;

    static createLowercase(): CodePointSetData;

    static createLowercaseWithProvider(provider: DataProvider): CodePointSetData;

    static mathForChar(ch: codepoint): boolean;

    static createMath(): CodePointSetData;

    static createMathWithProvider(provider: DataProvider): CodePointSetData;

    static noncharacterCodePointForChar(ch: codepoint): boolean;

    static createNoncharacterCodePoint(): CodePointSetData;

    static createNoncharacterCodePointWithProvider(provider: DataProvider): CodePointSetData;

    static nfcInertForChar(ch: codepoint): boolean;

    static createNfcInert(): CodePointSetData;

    static createNfcInertWithProvider(provider: DataProvider): CodePointSetData;

    static nfdInertForChar(ch: codepoint): boolean;

    static createNfdInert(): CodePointSetData;

    static createNfdInertWithProvider(provider: DataProvider): CodePointSetData;

    static nfkcInertForChar(ch: codepoint): boolean;

    static createNfkcInert(): CodePointSetData;

    static createNfkcInertWithProvider(provider: DataProvider): CodePointSetData;

    static nfkdInertForChar(ch: codepoint): boolean;

    static createNfkdInert(): CodePointSetData;

    static createNfkdInertWithProvider(provider: DataProvider): CodePointSetData;

    static patternSyntaxForChar(ch: codepoint): boolean;

    static createPatternSyntax(): CodePointSetData;

    static createPatternSyntaxWithProvider(provider: DataProvider): CodePointSetData;

    static patternWhiteSpaceForChar(ch: codepoint): boolean;

    static createPatternWhiteSpace(): CodePointSetData;

    static createPatternWhiteSpaceWithProvider(provider: DataProvider): CodePointSetData;

    static prependedConcatenationMarkForChar(ch: codepoint): boolean;

    static createPrependedConcatenationMark(): CodePointSetData;

    static createPrependedConcatenationMarkWithProvider(provider: DataProvider): CodePointSetData;

    static printForChar(ch: codepoint): boolean;

    static createPrint(): CodePointSetData;

    static createPrintWithProvider(provider: DataProvider): CodePointSetData;

    static quotationMarkForChar(ch: codepoint): boolean;

    static createQuotationMark(): CodePointSetData;

    static createQuotationMarkWithProvider(provider: DataProvider): CodePointSetData;

    static radicalForChar(ch: codepoint): boolean;

    static createRadical(): CodePointSetData;

    static createRadicalWithProvider(provider: DataProvider): CodePointSetData;

    static regionalIndicatorForChar(ch: codepoint): boolean;

    static createRegionalIndicator(): CodePointSetData;

    static createRegionalIndicatorWithProvider(provider: DataProvider): CodePointSetData;

    static softDottedForChar(ch: codepoint): boolean;

    static createSoftDotted(): CodePointSetData;

    static createSoftDottedWithProvider(provider: DataProvider): CodePointSetData;

    static segmentStarterForChar(ch: codepoint): boolean;

    static createSegmentStarter(): CodePointSetData;

    static createSegmentStarterWithProvider(provider: DataProvider): CodePointSetData;

    static caseSensitiveForChar(ch: codepoint): boolean;

    static createCaseSensitive(): CodePointSetData;

    static createCaseSensitiveWithProvider(provider: DataProvider): CodePointSetData;

    static sentenceTerminalForChar(ch: codepoint): boolean;

    static createSentenceTerminal(): CodePointSetData;

    static createSentenceTerminalWithProvider(provider: DataProvider): CodePointSetData;

    static terminalPunctuationForChar(ch: codepoint): boolean;

    static createTerminalPunctuation(): CodePointSetData;

    static createTerminalPunctuationWithProvider(provider: DataProvider): CodePointSetData;

    static unifiedIdeographForChar(ch: codepoint): boolean;

    static createUnifiedIdeograph(): CodePointSetData;

    static createUnifiedIdeographWithProvider(provider: DataProvider): CodePointSetData;

    static uppercaseForChar(ch: codepoint): boolean;

    static createUppercase(): CodePointSetData;

    static createUppercaseWithProvider(provider: DataProvider): CodePointSetData;

    static variationSelectorForChar(ch: codepoint): boolean;

    static createVariationSelector(): CodePointSetData;

    static createVariationSelectorWithProvider(provider: DataProvider): CodePointSetData;

    static whiteSpaceForChar(ch: codepoint): boolean;

    static createWhiteSpace(): CodePointSetData;

    static createWhiteSpaceWithProvider(provider: DataProvider): CodePointSetData;

    static xdigitForChar(ch: codepoint): boolean;

    static createXdigit(): CodePointSetData;

    static createXdigitWithProvider(provider: DataProvider): CodePointSetData;

    static xidContinueForChar(ch: codepoint): boolean;

    static createXidContinue(): CodePointSetData;

    static createXidContinueWithProvider(provider: DataProvider): CodePointSetData;

    static xidStartForChar(ch: codepoint): boolean;

    static createXidStart(): CodePointSetData;

    static createXidStartWithProvider(provider: DataProvider): CodePointSetData;

    static createForEcma262(propertyName: string): CodePointSetData;

    static createForEcma262WithProvider(provider: DataProvider, propertyName: string): CodePointSetData;
}