// generated by diplomat-tool
import wasm from "./diplomat-wasm.mjs";
import * as diplomatRuntime from "./diplomat-runtime.mjs";


/** An object that represents the Script_Extensions property for a single character
*
*See the [Rust documentation for `ScriptExtensionsSet`](https://docs.rs/icu/latest/icu/properties/script/struct.ScriptExtensionsSet.html) for more information.
*/

const ScriptExtensionsSet_box_destroy_registry = new FinalizationRegistry((ptr) => {
    wasm.icu4x_ScriptExtensionsSet_destroy_mv1(ptr);
});
export class ScriptExtensionsSet {
    // Internal ptr reference:
    #ptr = null;

    // Lifetimes are only to keep dependencies alive.
    // Since JS won't garbage collect until there are no incoming edges.
    #selfEdge = [];
    
    #aEdge = [];
    
    
    constructor(ptr, selfEdge, aEdge) {
        
        
        this.#aEdge = aEdge;
        
        this.#ptr = ptr;
        this.#selfEdge = selfEdge;
        // Unconditionally register to destroy when this object is ready to garbage collect.
        ScriptExtensionsSet_box_destroy_registry.register(this, this.#ptr);
    }

    get ffiValue() {
        return this.#ptr;
    }


    contains(script) {
        const result = wasm.icu4x_ScriptExtensionsSet_contains_mv1(this.ffiValue, script);
    
        try {
    
            return result;
        } finally {
        
        }
    }

    get count() {
        const result = wasm.icu4x_ScriptExtensionsSet_count_mv1(this.ffiValue);
    
        try {
    
            return result;
        } finally {
        
        }
    }

    scriptAt(index) {
        
        const diplomat_receive_buffer = wasm.diplomat_alloc(3, 2);
        const result = wasm.icu4x_ScriptExtensionsSet_script_at_mv1(diplomat_receive_buffer, this.ffiValue, index);
    
        try {
    
            if (!diplomatRuntime.resultFlag(wasm, diplomat_receive_buffer, 2)) {
                return null;
            }
            return (new Uint16Array(wasm.memory.buffer, diplomat_receive_buffer, 1))[0];
        } finally {
        
            wasm.diplomat_free(diplomat_receive_buffer, 3, 2);
        
        }
    }

    

}