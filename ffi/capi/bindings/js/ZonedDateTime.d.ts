// generated by diplomat-tool
import type { Calendar } from "./Calendar"
import type { CalendarParseError } from "./CalendarParseError"
import type { Date } from "./Date"
import type { IanaParser } from "./IanaParser"
import type { Time } from "./Time"
import type { TimeZoneInfo } from "./TimeZoneInfo"
import type { VariantOffsetsCalculator } from "./VariantOffsetsCalculator"
import type { pointer, codepoint } from "./diplomat-runtime.d.ts";


/** An ICU4X DateTime object capable of containing a date, time, and zone for any calendar.
*
*See the [Rust documentation for `ZonedDateTime`](https://docs.rs/icu/latest/icu/time/struct.ZonedDateTime.html) for more information.
*/


export class ZonedDateTime {
    
    get date() : Date;
    
    get time() : Time;
    
    get zone() : TimeZoneInfo;
    

    static fromString(v: string, calendar: Calendar, ianaParser: IanaParser, offsetCalculator: VariantOffsetsCalculator): ZonedDateTime;

    static locationOnlyFromString(v: string, calendar: Calendar, ianaParser: IanaParser): ZonedDateTime;

    static offsetOnlyFromString(v: string, calendar: Calendar): ZonedDateTime;

    static looseFromString(v: string, calendar: Calendar, ianaParser: IanaParser): ZonedDateTime;
}