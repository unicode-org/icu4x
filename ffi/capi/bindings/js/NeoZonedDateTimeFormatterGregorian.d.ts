// generated by diplomat-tool
import type { DataProvider } from "./DataProvider"
import type { DateTimeFormatterGregorian } from "./DateTimeFormatterGregorian"
import type { DateTimeFormatterLoadError } from "./DateTimeFormatterLoadError"
import type { DateTimeWriteError } from "./DateTimeWriteError"
import type { IsoDate } from "./IsoDate"
import type { Locale } from "./Locale"
import type { Time } from "./Time"
import type { TimeZoneInfo } from "./TimeZoneInfo"
import type { pointer, codepoint } from "./diplomat-runtime.d.ts";


/** See the [Rust documentation for `FixedCalendarDateTimeFormatter`](https://docs.rs/icu/latest/icu/datetime/struct.FixedCalendarDateTimeFormatter.html) for more information.
*/


export class NeoZonedDateTimeFormatterGregorian {
    
    get ffiValue(): pointer;

    static createGenericShort(locale: Locale, formatter: DateTimeFormatterGregorian): NeoZonedDateTimeFormatterGregorian;

    static createGenericShortWithProvider(provider: DataProvider, locale: Locale, formatter: DateTimeFormatterGregorian): NeoZonedDateTimeFormatterGregorian;

    static createGenericLong(locale: Locale, formatter: DateTimeFormatterGregorian): NeoZonedDateTimeFormatterGregorian;

    static createGenericLongWithProvider(provider: DataProvider, locale: Locale, formatter: DateTimeFormatterGregorian): NeoZonedDateTimeFormatterGregorian;

    static createSpecificShort(locale: Locale, formatter: DateTimeFormatterGregorian): NeoZonedDateTimeFormatterGregorian;

    static createSpecificShortWithProvider(provider: DataProvider, locale: Locale, formatter: DateTimeFormatterGregorian): NeoZonedDateTimeFormatterGregorian;

    static createSpecificLong(locale: Locale, formatter: DateTimeFormatterGregorian): NeoZonedDateTimeFormatterGregorian;

    static createSpecificLongWithProvider(provider: DataProvider, locale: Locale, formatter: DateTimeFormatterGregorian): NeoZonedDateTimeFormatterGregorian;

    static createLocalizedOffsetShort(locale: Locale, formatter: DateTimeFormatterGregorian): NeoZonedDateTimeFormatterGregorian;

    static createLocalizedOffsetShortWithProvider(provider: DataProvider, locale: Locale, formatter: DateTimeFormatterGregorian): NeoZonedDateTimeFormatterGregorian;

    static createLocalizedOffsetLong(locale: Locale, formatter: DateTimeFormatterGregorian): NeoZonedDateTimeFormatterGregorian;

    static createLocalizedOffsetLongWithProvider(provider: DataProvider, locale: Locale, formatter: DateTimeFormatterGregorian): NeoZonedDateTimeFormatterGregorian;

    formatIso(date: IsoDate, time: Time, zone: TimeZoneInfo): string;
}