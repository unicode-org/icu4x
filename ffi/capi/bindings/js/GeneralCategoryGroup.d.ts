// generated by diplomat-tool
import type { GeneralCategory } from "./GeneralCategory"
import type { pointer, codepoint } from "./diplomat-runtime.d.ts";


/** A mask that is capable of representing groups of `General_Category` values.
*
*See the [Rust documentation for `GeneralCategoryGroup`](https://docs.rs/icu/latest/icu/properties/props/struct.GeneralCategoryGroup.html) for more information.
*/
type GeneralCategoryGroup_obj = {
    mask: number;
};



export class GeneralCategoryGroup {
    
    get mask() : number; 
    set mask(value: number); 
    
    /** Create `GeneralCategoryGroup` from an object that contains all of `GeneralCategoryGroup`s fields.
    * Optional fields do not need to be included in the provided object.
    */
    static fromFields(structObj : GeneralCategoryGroup_obj) : GeneralCategoryGroup;
    

    contains(val: GeneralCategory): boolean;

    complement(): GeneralCategoryGroup;

    static all(): GeneralCategoryGroup;

    static empty(): GeneralCategoryGroup;

    union(other: GeneralCategoryGroup_obj): GeneralCategoryGroup;

    intersection(other: GeneralCategoryGroup_obj): GeneralCategoryGroup;

    static casedLetter(): GeneralCategoryGroup;

    static letter(): GeneralCategoryGroup;

    static mark(): GeneralCategoryGroup;

    static number(): GeneralCategoryGroup;

    static separator(): GeneralCategoryGroup;

    static other(): GeneralCategoryGroup;

    static punctuation(): GeneralCategoryGroup;

    static symbol(): GeneralCategoryGroup;

    constructor(structObj : GeneralCategoryGroup_obj);
}