// generated by diplomat-tool
import type { pointer, codepoint } from "./diplomat-runtime.d.ts";

// Base enumerator definition
/** Additional information: [1](https://docs.rs/icu/latest/icu/datetime/pattern/enum.PatternLoadError.html), [2](https://docs.rs/icu/latest/icu/provider/struct.DataError.html), [3](https://docs.rs/icu/latest/icu/provider/enum.DataErrorKind.html)
*/
export class DateTimeFormatterLoadError {
    constructor(value : DateTimeFormatterLoadError | string);

    get value() : string;

    get ffiValue() : number;

    static Unknown : DateTimeFormatterLoadError;
    static UnsupportedLength : DateTimeFormatterLoadError;
    static DuplicateField : DateTimeFormatterLoadError;
    static TypeTooSpecific : DateTimeFormatterLoadError;
    static DataMarkerNotFound : DateTimeFormatterLoadError;
    static DataIdentifierNotFound : DateTimeFormatterLoadError;
    static DataInvalidRequest : DateTimeFormatterLoadError;
    static DataInconsistentData : DateTimeFormatterLoadError;
    static DataDowncast : DateTimeFormatterLoadError;
    static DataDeserialize : DateTimeFormatterLoadError;
    static DataCustom : DateTimeFormatterLoadError;
    static DataIo : DateTimeFormatterLoadError;
}