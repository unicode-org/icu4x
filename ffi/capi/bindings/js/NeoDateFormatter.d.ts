// generated by diplomat-tool
import type { DataProvider } from "./DataProvider"
import type { Date } from "./Date"
import type { DateTimeAlignment } from "./DateTimeAlignment"
import type { DateTimeFormatterLoadError } from "./DateTimeFormatterLoadError"
import type { DateTimeLength } from "./DateTimeLength"
import type { DateTimeMismatchedCalendarError } from "./DateTimeMismatchedCalendarError"
import type { IsoDate } from "./IsoDate"
import type { Locale } from "./Locale"
import type { YearStyle } from "./YearStyle"
import type { pointer, codepoint } from "./diplomat-runtime.d.ts";


/** See the [Rust documentation for `DateTimeFormatter`](https://docs.rs/icu/latest/icu/datetime/type.DateTimeFormatter.html) for more information.
*/


export class NeoDateFormatter {
    
    get ffiValue(): pointer;

    static createD(locale: Locale, length: DateTimeLength | null, alignment: DateTimeAlignment | null): NeoDateFormatter;

    static createDWithProvider(provider: DataProvider, locale: Locale, length: DateTimeLength | null, alignment: DateTimeAlignment | null): NeoDateFormatter;

    static createMd(locale: Locale, length: DateTimeLength | null, alignment: DateTimeAlignment | null): NeoDateFormatter;

    static createMdWithProvider(provider: DataProvider, locale: Locale, length: DateTimeLength | null, alignment: DateTimeAlignment | null): NeoDateFormatter;

    static createYmd(locale: Locale, length: DateTimeLength | null, alignment: DateTimeAlignment | null, yearStyle: YearStyle | null): NeoDateFormatter;

    static createYmdWithProvider(provider: DataProvider, locale: Locale, length: DateTimeLength | null, alignment: DateTimeAlignment | null, yearStyle: YearStyle | null): NeoDateFormatter;

    static createDe(locale: Locale, length: DateTimeLength | null, alignment: DateTimeAlignment | null): NeoDateFormatter;

    static createDeWithProvider(provider: DataProvider, locale: Locale, length: DateTimeLength | null, alignment: DateTimeAlignment | null): NeoDateFormatter;

    static createMde(locale: Locale, length: DateTimeLength | null, alignment: DateTimeAlignment | null): NeoDateFormatter;

    static createMdeWithProvider(provider: DataProvider, locale: Locale, length: DateTimeLength | null, alignment: DateTimeAlignment | null): NeoDateFormatter;

    static createYmde(locale: Locale, length: DateTimeLength | null, alignment: DateTimeAlignment | null, yearStyle: YearStyle | null): NeoDateFormatter;

    static createYmdeWithProvider(provider: DataProvider, locale: Locale, length: DateTimeLength | null, alignment: DateTimeAlignment | null, yearStyle: YearStyle | null): NeoDateFormatter;

    static createE(locale: Locale, length: DateTimeLength | null): NeoDateFormatter;

    static createEWithProvider(provider: DataProvider, locale: Locale, length: DateTimeLength | null): NeoDateFormatter;

    static createM(locale: Locale, length: DateTimeLength | null, alignment: DateTimeAlignment | null): NeoDateFormatter;

    static createMWithProvider(provider: DataProvider, locale: Locale, length: DateTimeLength | null, alignment: DateTimeAlignment | null): NeoDateFormatter;

    static createYm(locale: Locale, length: DateTimeLength | null, alignment: DateTimeAlignment | null, yearStyle: YearStyle | null): NeoDateFormatter;

    static createYmWithProvider(provider: DataProvider, locale: Locale, length: DateTimeLength | null, alignment: DateTimeAlignment | null, yearStyle: YearStyle | null): NeoDateFormatter;

    static createY(locale: Locale, length: DateTimeLength | null, alignment: DateTimeAlignment | null, yearStyle: YearStyle | null): NeoDateFormatter;

    static createYWithProvider(provider: DataProvider, locale: Locale, length: DateTimeLength | null, alignment: DateTimeAlignment | null, yearStyle: YearStyle | null): NeoDateFormatter;

    formatIso(date: IsoDate): string;

    formatSameCalendar(date: Date): string;
}