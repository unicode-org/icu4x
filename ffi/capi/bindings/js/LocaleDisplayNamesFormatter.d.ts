// generated by diplomat-tool
import type { DataError } from "./DataError"
import type { DataProvider } from "./DataProvider"
import type { DisplayNamesOptions } from "./DisplayNamesOptions"
import type { DisplayNamesOptions_obj } from "./DisplayNamesOptions"
import type { Locale } from "./Locale"
import type { pointer, codepoint } from "./diplomat-runtime.d.ts";



/**
 * See the [Rust documentation for `LocaleDisplayNamesFormatter`](https://docs.rs/icu/2.0.0/icu/experimental/displaynames/struct.LocaleDisplayNamesFormatter.html) for more information.
 */
export class LocaleDisplayNamesFormatter {
    /** @internal */
    get ffiValue(): pointer;


    /**
     * Creates a new `LocaleDisplayNamesFormatter` from locale data and an options bag using a particular data source.
     *
     * See the [Rust documentation for `try_new`](https://docs.rs/icu/2.0.0/icu/experimental/displaynames/struct.LocaleDisplayNamesFormatter.html#method.try_new) for more information.
     */
    static createWithProvider(provider: DataProvider, locale: Locale, options: DisplayNamesOptions_obj): LocaleDisplayNamesFormatter;

    /**
     * Returns the locale-specific display name of a locale.
     *
     * See the [Rust documentation for `of`](https://docs.rs/icu/2.0.0/icu/experimental/displaynames/struct.LocaleDisplayNamesFormatter.html#method.of) for more information.
     */
    of(locale: Locale): string;

    /**
     * Creates a new `LocaleDisplayNamesFormatter` from locale data and an options bag using compiled data.
     *
     * See the [Rust documentation for `try_new`](https://docs.rs/icu/2.0.0/icu/experimental/displaynames/struct.LocaleDisplayNamesFormatter.html#method.try_new) for more information.
     */
    constructor(locale: Locale, options: DisplayNamesOptions_obj);
}