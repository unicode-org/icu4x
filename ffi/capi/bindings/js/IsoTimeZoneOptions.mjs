// generated by diplomat-tool
import { IsoTimeZoneFormat } from "./IsoTimeZoneFormat.mjs"
import { IsoTimeZoneMinuteDisplay } from "./IsoTimeZoneMinuteDisplay.mjs"
import { IsoTimeZoneSecondDisplay } from "./IsoTimeZoneSecondDisplay.mjs"
import wasm from "./diplomat-wasm.mjs";
import * as diplomatRuntime from "./diplomat-runtime.mjs";

export class IsoTimeZoneOptions {

    #format;
    get format()  {
        return this.#format;
    }
    set format(value) {
        this.#format = value;
    }

    #minutes;
    get minutes()  {
        return this.#minutes;
    }
    set minutes(value) {
        this.#minutes = value;
    }

    #seconds;
    get seconds()  {
        return this.#seconds;
    }
    set seconds(value) {
        this.#seconds = value;
    }
    constructor() {
        if (arguments.length > 0 && arguments[0] === diplomatRuntime.internalConstructor) {
            this.#fromFFI(...Array.prototype.slice.call(arguments, 1));
        } else {
            
            this.#format = arguments[0];
            this.#minutes = arguments[1];
            this.#seconds = arguments[2];
        }
    }

    // Return this struct in FFI function friendly format.
    // Returns an array that can be expanded with spread syntax (...)
    
    _intoFFI(
        functionCleanupArena,
        appendArrayMap
    ) {
        return [this.#format.ffiValue, this.#minutes.ffiValue, this.#seconds.ffiValue]
    }

    _writeToArrayBuffer(
        arrayBuffer,
        offset,
        functionCleanupArena,
        appendArrayMap
    ) {
        diplomatRuntime.writeToArrayBuffer(arrayBuffer, offset + 0, this.#format.ffiValue, Int32Array);
        diplomatRuntime.writeToArrayBuffer(arrayBuffer, offset + 4, this.#minutes.ffiValue, Int32Array);
        diplomatRuntime.writeToArrayBuffer(arrayBuffer, offset + 8, this.#seconds.ffiValue, Int32Array);
    }

    // This struct contains borrowed fields, so this takes in a list of
    // "edges" corresponding to where each lifetime's data may have been borrowed from
    // and passes it down to individual fields containing the borrow.
    // This method does not attempt to handle any dependencies between lifetimes, the caller
    // should handle this when constructing edge arrays.
    #fromFFI(ptr) {
        const formatDeref = diplomatRuntime.enumDiscriminant(wasm, ptr);
        this.#format = new IsoTimeZoneFormat(diplomatRuntime.internalConstructor, formatDeref);
        const minutesDeref = diplomatRuntime.enumDiscriminant(wasm, ptr + 4);
        this.#minutes = new IsoTimeZoneMinuteDisplay(diplomatRuntime.internalConstructor, minutesDeref);
        const secondsDeref = diplomatRuntime.enumDiscriminant(wasm, ptr + 8);
        this.#seconds = new IsoTimeZoneSecondDisplay(diplomatRuntime.internalConstructor, secondsDeref);
    }
}