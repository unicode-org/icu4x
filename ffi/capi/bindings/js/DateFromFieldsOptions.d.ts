// generated by diplomat-tool
import type { DateMissingFieldsStrategy } from "./DateMissingFieldsStrategy"
import type { DateOverflow } from "./DateOverflow"
import type { pointer, codepoint } from "./diplomat-runtime.d.ts";

export type DateFromFieldsOptions_obj = {
    overflow?: DateOverflow | null;
    missingFieldsStrategy?: DateMissingFieldsStrategy | null;
};



/**
 * See the [Rust documentation for `DateFromFieldsOptions`](https://docs.rs/icu/2.0.0/icu/calendar/options/struct.DateFromFieldsOptions.html) for more information.
 */
export class DateFromFieldsOptions {
    get overflow(): DateOverflow | null;
    set overflow(value: DateOverflow | null);
    get missingFieldsStrategy(): DateMissingFieldsStrategy | null;
    set missingFieldsStrategy(value: DateMissingFieldsStrategy | null);
    /** @internal */
    static fromFields(structObj : DateFromFieldsOptions_obj) : DateFromFieldsOptions;

    /**
    * Create `DateFromFieldsOptions` from an object that contains all of `DateFromFieldsOptions`s fields.
    * Optional fields do not need to be included in the provided object.
    */
    constructor(structObj: DateFromFieldsOptions_obj);

}