// generated by diplomat-tool
import type { CollatorAlternateHandling } from "./CollatorAlternateHandling"
import type { CollatorBackwardSecondLevel } from "./CollatorBackwardSecondLevel"
import type { CollatorCaseFirst } from "./CollatorCaseFirst"
import type { CollatorCaseLevel } from "./CollatorCaseLevel"
import type { CollatorMaxVariable } from "./CollatorMaxVariable"
import type { CollatorNumeric } from "./CollatorNumeric"
import type { CollatorStrength } from "./CollatorStrength"
import type { pointer, codepoint } from "./diplomat-runtime.d.ts";


/** See the [Rust documentation for `CollatorOptions`](https://docs.rs/icu/latest/icu/collator/struct.CollatorOptions.html) for more information.
*/
type CollatorOptions_Obj = {
    strength: CollatorStrength | null;
    alternateHandling: CollatorAlternateHandling | null;
    caseFirst: CollatorCaseFirst | null;
    maxVariable: CollatorMaxVariable | null;
    caseLevel: CollatorCaseLevel | null;
    numeric: CollatorNumeric | null;
    backwardSecondLevel: CollatorBackwardSecondLevel | null;
};

export class CollatorOptions {

    get strength() : CollatorStrength | null;
    set strength(value: CollatorStrength | null); 

    get alternateHandling() : CollatorAlternateHandling | null;
    set alternateHandling(value: CollatorAlternateHandling | null); 

    get caseFirst() : CollatorCaseFirst | null;
    set caseFirst(value: CollatorCaseFirst | null); 

    get maxVariable() : CollatorMaxVariable | null;
    set maxVariable(value: CollatorMaxVariable | null); 

    get caseLevel() : CollatorCaseLevel | null;
    set caseLevel(value: CollatorCaseLevel | null); 

    get numeric() : CollatorNumeric | null;
    set numeric(value: CollatorNumeric | null); 

    get backwardSecondLevel() : CollatorBackwardSecondLevel | null;
    set backwardSecondLevel(value: CollatorBackwardSecondLevel | null); 
    constructor(structObj : CollatorOptions_Obj);
}