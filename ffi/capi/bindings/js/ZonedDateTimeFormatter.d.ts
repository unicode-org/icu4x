// generated by diplomat-tool
import type { DataProvider } from "./DataProvider"
import type { Date } from "./Date"
import type { DateTimeFormatError } from "./DateTimeFormatError"
import type { DateTimeFormatterLoadError } from "./DateTimeFormatterLoadError"
import type { DateTimeLength } from "./DateTimeLength"
import type { IsoDate } from "./IsoDate"
import type { Locale } from "./Locale"
import type { Time } from "./Time"
import type { TimeZoneInfo } from "./TimeZoneInfo"
import type { pointer, codepoint } from "./diplomat-runtime.d.ts";


/** An object capable of formatting a date time with time zone to a string.
*
*See the [Rust documentation for `DateTimeFormatter`](https://docs.rs/icu/latest/icu/datetime/struct.DateTimeFormatter.html) for more information.
*
*Additional information: [1](https://docs.rs/icu/latest/icu/datetime/fieldsets/struct.YMDT.html), [2](https://docs.rs/icu/latest/icu/datetime/fieldsets/struct.Vs.html)
*/


export class ZonedDateTimeFormatter {
    
    get ffiValue(): pointer;

    static createWithLength(locale: Locale, length: DateTimeLength): ZonedDateTimeFormatter;

    static createWithLengthAndProvider(provider: DataProvider, locale: Locale, length: DateTimeLength): ZonedDateTimeFormatter;

    format(date: Date, time: Time, zone: TimeZoneInfo): string;

    formatIso(date: IsoDate, time: Time, zone: TimeZoneInfo): string;
}