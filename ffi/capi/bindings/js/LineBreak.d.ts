// generated by diplomat-tool
import type { pointer, codepoint } from "./diplomat-runtime.d.ts";

// Base enumerator definition
/** See the [Rust documentation for `LineBreak`](https://docs.rs/icu/latest/icu/properties/props/struct.LineBreak.html) for more information.
*/
export class LineBreak {
    constructor(value : LineBreak | string);

    get value() : string;

    get ffiValue() : number;

    static Unknown : LineBreak;
    static Ambiguous : LineBreak;
    static Alphabetic : LineBreak;
    static BreakBoth : LineBreak;
    static BreakAfter : LineBreak;
    static BreakBefore : LineBreak;
    static MandatoryBreak : LineBreak;
    static ContingentBreak : LineBreak;
    static ClosePunctuation : LineBreak;
    static CombiningMark : LineBreak;
    static CarriageReturn : LineBreak;
    static Exclamation : LineBreak;
    static Glue : LineBreak;
    static Hyphen : LineBreak;
    static Ideographic : LineBreak;
    static Inseparable : LineBreak;
    static InfixNumeric : LineBreak;
    static LineFeed : LineBreak;
    static Nonstarter : LineBreak;
    static Numeric : LineBreak;
    static OpenPunctuation : LineBreak;
    static PostfixNumeric : LineBreak;
    static PrefixNumeric : LineBreak;
    static Quotation : LineBreak;
    static ComplexContext : LineBreak;
    static Surrogate : LineBreak;
    static Space : LineBreak;
    static BreakSymbols : LineBreak;
    static ZwSpace : LineBreak;
    static NextLine : LineBreak;
    static WordJoiner : LineBreak;
    static H2 : LineBreak;
    static H3 : LineBreak;
    static Jl : LineBreak;
    static Jt : LineBreak;
    static Jv : LineBreak;
    static CloseParenthesis : LineBreak;
    static ConditionalJapaneseStarter : LineBreak;
    static HebrewLetter : LineBreak;
    static RegionalIndicator : LineBreak;
    static EBase : LineBreak;
    static EModifier : LineBreak;
    static Zwj : LineBreak;
    static Aksara : LineBreak;
    static AksaraPrebase : LineBreak;
    static AksaraStart : LineBreak;
    static ViramaFinal : LineBreak;
    static Virama : LineBreak;

    toInteger(): number;

    static fromInteger(other: number): LineBreak | null;
}