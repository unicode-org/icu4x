// generated by diplomat-tool
import wasm from "./diplomat-wasm.mjs";
import * as diplomatRuntime from "./diplomat-runtime.mjs";


/** 
 * See the [Rust documentation for `ZoneStyle`](https://docs.rs/icu_datetime/latest/icu_datetime/fieldsets/builder/enum.ZoneStyle.html) for more information.
 */


export class ZoneStyle {
    
    #value = undefined;

    static #values = new Map([
        ["SpecificLong", 0],
        ["SpecificShort", 1],
        ["LocalizedOffsetLong", 2],
        ["LocalizedOffsetShort", 3],
        ["GenericLong", 4],
        ["GenericShort", 5],
        ["Location", 6],
        ["ExemplarCity", 7]
    ]);

    static getAllEntries() {
        return ZoneStyle.#values.entries();
    }
    
    #internalConstructor(value) {
        if (arguments.length > 1 && arguments[0] === diplomatRuntime.internalConstructor) {
            // We pass in two internalConstructor arguments to create *new*
            // instances of this type, otherwise the enums are treated as singletons.
            if (arguments[1] === diplomatRuntime.internalConstructor ) {
                this.#value = arguments[2];
                return this;
            }
            return ZoneStyle.#objectValues[arguments[1]];
        }

        if (value instanceof ZoneStyle) {
            return value;
        }

        let intVal = ZoneStyle.#values.get(value);

        // Nullish check, checks for null or undefined
        if (intVal != null) {
            return ZoneStyle.#objectValues[intVal];
        }

        throw TypeError(value + " is not a ZoneStyle and does not correspond to any of its enumerator values.");
    }

    static fromValue(value) {
        return new ZoneStyle(value);
    }

    get value() {
        return [...ZoneStyle.#values.keys()][this.#value];
    }

    get ffiValue() {
        return this.#value;
    }
    static #objectValues = [
        new ZoneStyle(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 0),
        new ZoneStyle(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 1),
        new ZoneStyle(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 2),
        new ZoneStyle(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 3),
        new ZoneStyle(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 4),
        new ZoneStyle(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 5),
        new ZoneStyle(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 6),
        new ZoneStyle(diplomatRuntime.internalConstructor, diplomatRuntime.internalConstructor, 7),
    ];

    static SpecificLong = ZoneStyle.#objectValues[0];
    static SpecificShort = ZoneStyle.#objectValues[1];
    static LocalizedOffsetLong = ZoneStyle.#objectValues[2];
    static LocalizedOffsetShort = ZoneStyle.#objectValues[3];
    static GenericLong = ZoneStyle.#objectValues[4];
    static GenericShort = ZoneStyle.#objectValues[5];
    static Location = ZoneStyle.#objectValues[6];
    static ExemplarCity = ZoneStyle.#objectValues[7];

    constructor(value) {
        return this.#internalConstructor(...arguments)
    }
}