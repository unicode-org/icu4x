// generated by diplomat-tool

// https://github.com/dart-lang/sdk/issues/53946
// ignore_for_file: non_native_function_type_argument_to_pointer

part of 'lib.g.dart';

/// FFI version of `PluralCategory`.
///
/// See the [Rust documentation for `PluralCategory`](https://docs.rs/icu/latest/icu/plurals/enum.PluralCategory.html) for more information.
enum PluralCategory {
  zero,

  one,

  two,

  few,

  many,

  other;

  /// Construct from a string in the format
  /// [specified in TR35](https://unicode.org/reports/tr35/tr35-numbers.html#Language_Plural_Rules)
  ///
  /// See the [Rust documentation for `get_for_cldr_string`](https://docs.rs/icu/latest/icu/plurals/enum.PluralCategory.html#method.get_for_cldr_string) for more information.
  ///
  /// See the [Rust documentation for `get_for_cldr_bytes`](https://docs.rs/icu/latest/icu/plurals/enum.PluralCategory.html#method.get_for_cldr_bytes) for more information.
  ///
  /// Throws [VoidError] on failure.
  factory PluralCategory.forCldrString(String s) {
    final temp = ffi2.Arena();
    final sView = s.utf8View;
    final result = _ICU4XPluralCategory_get_for_cldr_string(sView.pointer(temp), sView.length);
    temp.releaseAll();
    if (!result.isOk) {
      throw VoidError();
    }
    return PluralCategory.values[result.union.ok];
  }

  // ignore: non_constant_identifier_names
  static final _ICU4XPluralCategory_get_for_cldr_string =
    _capi<ffi.NativeFunction<_ResultInt32Void Function(ffi.Pointer<ffi.Uint8>, ffi.Size)>>('ICU4XPluralCategory_get_for_cldr_string')
      .asFunction<_ResultInt32Void Function(ffi.Pointer<ffi.Uint8>, int)>(isLeaf: true);
}
