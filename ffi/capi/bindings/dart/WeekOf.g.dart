// generated by diplomat-tool

// https://github.com/dart-lang/sdk/issues/53946
// ignore_for_file: non_native_function_type_argument_to_pointer

part of 'lib.g.dart';

final class _WeekOfFfi extends ffi.Struct {
  @ffi.Uint16()
  external int week;
  @ffi.Int32()
  external int unit;
}

/// See the [Rust documentation for `WeekOf`](https://docs.rs/icu/latest/icu/calendar/week/struct.WeekOf.html) for more information.
final class WeekOf {
  final int week;
  final WeekRelativeUnit unit;

  // ignore: unused_element
  // Internal constructor from FFI.
  // This struct contains borrowed fields, so this takes in a list of
  // "edges" corresponding to where each lifetime's data may have been borrowed from
  // and passes it down to individual fields containing the borrow.
  // This method does not attempt to handle any dependencies between lifetimes, the caller
  // should handle this when constructing edge arrays.
  WeekOf._(_WeekOfFfi underlying) :
    week = underlying.week,
    unit = WeekRelativeUnit.values[underlying.unit];

  // ignore: unused_element
  _WeekOfFfi _pointer(ffi.Allocator temp) {
    final pointer = temp<_WeekOfFfi>();
    pointer.ref.week = week;
    pointer.ref.unit = unit.index;
    return pointer.ref;
  }

  @override
  bool operator ==(Object other) =>
      other is WeekOf &&
      other.week == this.week &&
      other.unit == this.unit;

  @override
  int get hashCode => Object.hashAll([
        this.week,
        this.unit,
      ]);
}
