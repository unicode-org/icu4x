// generated by diplomat-tool

part of 'lib.g.dart';

/// An ICU4X Fixed Decimal Format object, capable of formatting a [`FixedDecimal`] as a string.
///
/// See the [Rust documentation for `FixedDecimalFormatter`](https://docs.rs/icu/latest/icu/decimal/struct.FixedDecimalFormatter.html) for more information.
final class FixedDecimalFormatter implements ffi.Finalizable {
  final ffi.Pointer<ffi.Opaque> _ffi;

  // These are "used" in the sense that they keep dependencies alive
  // ignore: unused_field
  final core.List<Object> _selfEdge;

  // This takes in a list of lifetime edges (including for &self borrows)
  // corresponding to data this may borrow from. These should be flat arrays containing
  // references to objects, and this object will hold on to them to keep them alive and
  // maintain borrow validity.
  FixedDecimalFormatter._fromFfi(this._ffi, this._selfEdge) {
    if (_selfEdge.isEmpty) {
      _finalizer.attach(this, _ffi.cast());
    }
  }

  static final _finalizer = ffi.NativeFinalizer(ffi.Native.addressOf(_icu4x_FixedDecimalFormatter_destroy_mv1));

  /// Creates a new [`FixedDecimalFormatter`] from locale data.
  ///
  /// See the [Rust documentation for `try_new`](https://docs.rs/icu/latest/icu/decimal/struct.FixedDecimalFormatter.html#method.try_new) for more information.
  ///
  /// Throws [DataError] on failure.
  factory FixedDecimalFormatter.withGroupingStrategy(DataProvider provider, Locale locale, FixedDecimalGroupingStrategy groupingStrategy) {
    final result = _icu4x_FixedDecimalFormatter_create_with_grouping_strategy_mv1(provider._ffi, locale._ffi, groupingStrategy.index);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return FixedDecimalFormatter._fromFfi(result.union.ok, []);
  }

  /// Creates a new [`FixedDecimalFormatter`] from preconstructed locale data.
  ///
  /// See the [Rust documentation for `DecimalSymbolsV1`](https://docs.rs/icu/latest/icu/decimal/provider/struct.DecimalSymbolsV1.html) for more information.
  ///
  /// Throws [DataError] on failure.
  static FixedDecimalFormatter createWithManualData(String plusSignPrefix, String plusSignSuffix, String minusSignPrefix, String minusSignSuffix, String decimalSeparator, String groupingSeparator, int primaryGroupSize, int secondaryGroupSize, int minGroupSize, core.List<Rune> digits, FixedDecimalGroupingStrategy groupingStrategy) {
    final temp = ffi2.Arena();
    final plusSignPrefixView = plusSignPrefix.utf8View;
    final plusSignSuffixView = plusSignSuffix.utf8View;
    final minusSignPrefixView = minusSignPrefix.utf8View;
    final minusSignSuffixView = minusSignSuffix.utf8View;
    final decimalSeparatorView = decimalSeparator.utf8View;
    final groupingSeparatorView = groupingSeparator.utf8View;
    final digitsView = digits.uint32View;
    final result = _icu4x_FixedDecimalFormatter_create_with_manual_data_mv1(plusSignPrefixView.allocIn(temp), plusSignPrefixView.length, plusSignSuffixView.allocIn(temp), plusSignSuffixView.length, minusSignPrefixView.allocIn(temp), minusSignPrefixView.length, minusSignSuffixView.allocIn(temp), minusSignSuffixView.length, decimalSeparatorView.allocIn(temp), decimalSeparatorView.length, groupingSeparatorView.allocIn(temp), groupingSeparatorView.length, primaryGroupSize, secondaryGroupSize, minGroupSize, digitsView.allocIn(temp), digitsView.length, groupingStrategy.index);
    temp.releaseAll();
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return FixedDecimalFormatter._fromFfi(result.union.ok, []);
  }

  /// Formats a [`FixedDecimal`] to a string.
  ///
  /// See the [Rust documentation for `format`](https://docs.rs/icu/latest/icu/decimal/struct.FixedDecimalFormatter.html#method.format) for more information.
  String format(FixedDecimal value) {
    final write = _Write();
    _icu4x_FixedDecimalFormatter_format_mv1(_ffi, value._ffi, write._ffi);
    return write.finalize();
  }
}

@meta.ResourceIdentifier('icu4x_FixedDecimalFormatter_destroy_mv1')
@ffi.Native<ffi.Void Function(ffi.Pointer<ffi.Void>)>(isLeaf: true, symbol: 'icu4x_FixedDecimalFormatter_destroy_mv1')
// ignore: non_constant_identifier_names
external void _icu4x_FixedDecimalFormatter_destroy_mv1(ffi.Pointer<ffi.Void> self);

@meta.ResourceIdentifier('icu4x_FixedDecimalFormatter_create_with_grouping_strategy_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>, ffi.Pointer<ffi.Opaque>, ffi.Int32)>(isLeaf: true, symbol: 'icu4x_FixedDecimalFormatter_create_with_grouping_strategy_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_FixedDecimalFormatter_create_with_grouping_strategy_mv1(ffi.Pointer<ffi.Opaque> provider, ffi.Pointer<ffi.Opaque> locale, int groupingStrategy);

@meta.ResourceIdentifier('icu4x_FixedDecimalFormatter_create_with_manual_data_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Uint8>, ffi.Size, ffi.Pointer<ffi.Uint8>, ffi.Size, ffi.Pointer<ffi.Uint8>, ffi.Size, ffi.Pointer<ffi.Uint8>, ffi.Size, ffi.Pointer<ffi.Uint8>, ffi.Size, ffi.Pointer<ffi.Uint8>, ffi.Size, ffi.Uint8, ffi.Uint8, ffi.Uint8, ffi.Pointer<ffi.Uint32>, ffi.Size, ffi.Int32)>(isLeaf: true, symbol: 'icu4x_FixedDecimalFormatter_create_with_manual_data_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_FixedDecimalFormatter_create_with_manual_data_mv1(ffi.Pointer<ffi.Uint8> plusSignPrefixData, int plusSignPrefixLength, ffi.Pointer<ffi.Uint8> plusSignSuffixData, int plusSignSuffixLength, ffi.Pointer<ffi.Uint8> minusSignPrefixData, int minusSignPrefixLength, ffi.Pointer<ffi.Uint8> minusSignSuffixData, int minusSignSuffixLength, ffi.Pointer<ffi.Uint8> decimalSeparatorData, int decimalSeparatorLength, ffi.Pointer<ffi.Uint8> groupingSeparatorData, int groupingSeparatorLength, int primaryGroupSize, int secondaryGroupSize, int minGroupSize, ffi.Pointer<ffi.Uint32> digitsData, int digitsLength, int groupingStrategy);

@meta.ResourceIdentifier('icu4x_FixedDecimalFormatter_format_mv1')
@ffi.Native<ffi.Void Function(ffi.Pointer<ffi.Opaque>, ffi.Pointer<ffi.Opaque>, ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_FixedDecimalFormatter_format_mv1')
// ignore: non_constant_identifier_names
external void _icu4x_FixedDecimalFormatter_format_mv1(ffi.Pointer<ffi.Opaque> self, ffi.Pointer<ffi.Opaque> value, ffi.Pointer<ffi.Opaque> write);
