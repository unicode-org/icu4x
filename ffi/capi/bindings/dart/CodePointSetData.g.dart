// generated by diplomat-tool

part of 'lib.g.dart';

/// An ICU4X Unicode Set Property object, capable of querying whether a code point is contained in a set based on a Unicode property.
///
/// See the [Rust documentation for `properties`](https://docs.rs/icu/latest/icu/properties/index.html) for more information.
///
/// See the [Rust documentation for `CodePointSetData`](https://docs.rs/icu/latest/icu/properties/struct.CodePointSetData.html) for more information.
///
/// See the [Rust documentation for `CodePointSetDataBorrowed`](https://docs.rs/icu/latest/icu/properties/struct.CodePointSetDataBorrowed.html) for more information.
final class CodePointSetData implements ffi.Finalizable {
  final ffi.Pointer<ffi.Opaque> _ffi;

  // These are "used" in the sense that they keep dependencies alive
  // ignore: unused_field
  final core.List<Object> _selfEdge;

  // This takes in a list of lifetime edges (including for &self borrows)
  // corresponding to data this may borrow from. These should be flat arrays containing
  // references to objects, and this object will hold on to them to keep them alive and
  // maintain borrow validity.
  CodePointSetData._fromFfi(this._ffi, this._selfEdge) {
    if (_selfEdge.isEmpty) {
      _finalizer.attach(this, _ffi.cast());
    }
  }

  static final _finalizer = ffi.NativeFinalizer(ffi.Native.addressOf(_icu4x_CodePointSetData_destroy_mv1));

  /// Checks whether the code point is in the set.
  ///
  /// See the [Rust documentation for `contains`](https://docs.rs/icu/latest/icu/properties/struct.CodePointSetDataBorrowed.html#method.contains) for more information.
  bool contains(Rune cp) {
    final result = _icu4x_CodePointSetData_contains_mv1(_ffi, cp);
    return result;
  }

  /// Produces an iterator over ranges of code points contained in this set
  ///
  /// See the [Rust documentation for `iter_ranges`](https://docs.rs/icu/latest/icu/properties/struct.CodePointSetDataBorrowed.html#method.iter_ranges) for more information.
  CodePointRangeIterator iterRanges() {
    // This lifetime edge depends on lifetimes: 'a
    core.List<Object> aEdges = [this];
    final result = _icu4x_CodePointSetData_iter_ranges_mv1(_ffi);
    return CodePointRangeIterator._fromFfi(result, [], aEdges);
  }

  /// Produces an iterator over ranges of code points not contained in this set
  ///
  /// See the [Rust documentation for `iter_ranges_complemented`](https://docs.rs/icu/latest/icu/properties/struct.CodePointSetDataBorrowed.html#method.iter_ranges_complemented) for more information.
  CodePointRangeIterator iterRangesComplemented() {
    // This lifetime edge depends on lifetimes: 'a
    core.List<Object> aEdges = [this];
    final result = _icu4x_CodePointSetData_iter_ranges_complemented_mv1(_ffi);
    return CodePointRangeIterator._fromFfi(result, [], aEdges);
  }

  /// Produces a set for obtaining General Category Group values
  /// which is a mask with the same format as the `U_GC_XX_MASK` mask in ICU4C, using compiled data.
  ///
  /// See the [Rust documentation for `GeneralCategoryGroup`](https://docs.rs/icu/latest/icu/properties/props/struct.GeneralCategoryGroup.html) for more information.
  ///
  /// See the [Rust documentation for `get_set_for_value_group`](https://docs.rs/icu/latest/icu/properties/struct.CodePointMapDataBorrowed.html#method.get_set_for_value_group) for more information.
  factory CodePointSetData.generalCategoryGroup(int group) {
    final result = _icu4x_CodePointSetData_create_general_category_group_mv1(group);
    return CodePointSetData._fromFfi(result, []);
  }

  /// Produces a set for obtaining General Category Group values
  /// which is a mask with the same format as the `U_GC_XX_MASK` mask in ICU4C, using a provided data source.
  ///
  /// See the [Rust documentation for `GeneralCategoryGroup`](https://docs.rs/icu/latest/icu/properties/props/struct.GeneralCategoryGroup.html) for more information.
  ///
  /// See the [Rust documentation for `get_set_for_value_group`](https://docs.rs/icu/latest/icu/properties/struct.CodePointMapDataBorrowed.html#method.get_set_for_value_group) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.generalCategoryGroupWithProvider(DataProvider provider, int group) {
    final result = _icu4x_CodePointSetData_create_general_category_group_with_provider_mv1(provider._ffi, group);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Ascii_Hex_Digit` property, using compiled data.
  ///
  /// See the [Rust documentation for `AsciiHexDigit`](https://docs.rs/icu/latest/icu/properties/props/struct.AsciiHexDigit.html) for more information.
  factory CodePointSetData.asciiHexDigit() {
    final result = _icu4x_CodePointSetData_create_ascii_hex_digit_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Ascii_Hex_Digit` property, using a particular data source.
  ///
  /// See the [Rust documentation for `AsciiHexDigit`](https://docs.rs/icu/latest/icu/properties/props/struct.AsciiHexDigit.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.asciiHexDigitWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_ascii_hex_digit_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Alnum` property, using compiled data.
  ///
  /// See the [Rust documentation for `Alnum`](https://docs.rs/icu/latest/icu/properties/props/struct.Alnum.html) for more information.
  factory CodePointSetData.alnum() {
    final result = _icu4x_CodePointSetData_create_alnum_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Alnum` property, using a particular data source.
  ///
  /// See the [Rust documentation for `Alnum`](https://docs.rs/icu/latest/icu/properties/props/struct.Alnum.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.alnumWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_alnum_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Alphabetic` property, using compiled data.
  ///
  /// See the [Rust documentation for `Alphabetic`](https://docs.rs/icu/latest/icu/properties/props/struct.Alphabetic.html) for more information.
  factory CodePointSetData.alphabetic() {
    final result = _icu4x_CodePointSetData_create_alphabetic_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Alphabetic` property, using a particular data source.
  ///
  /// See the [Rust documentation for `Alphabetic`](https://docs.rs/icu/latest/icu/properties/props/struct.Alphabetic.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.alphabeticWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_alphabetic_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Bidi_Control` property, using compiled data.
  ///
  /// See the [Rust documentation for `BidiControl`](https://docs.rs/icu/latest/icu/properties/props/struct.BidiControl.html) for more information.
  factory CodePointSetData.bidiControl() {
    final result = _icu4x_CodePointSetData_create_bidi_control_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Bidi_Control` property, using a particular data source.
  ///
  /// See the [Rust documentation for `BidiControl`](https://docs.rs/icu/latest/icu/properties/props/struct.BidiControl.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.bidiControlWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_bidi_control_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Bidi_Mirrored` property, using compiled data.
  ///
  /// See the [Rust documentation for `BidiMirrored`](https://docs.rs/icu/latest/icu/properties/props/struct.BidiMirrored.html) for more information.
  factory CodePointSetData.bidiMirrored() {
    final result = _icu4x_CodePointSetData_create_bidi_mirrored_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Bidi_Mirrored` property, using a particular data source.
  ///
  /// See the [Rust documentation for `BidiMirrored`](https://docs.rs/icu/latest/icu/properties/props/struct.BidiMirrored.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.bidiMirroredWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_bidi_mirrored_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Blank` property, using compiled data.
  ///
  /// See the [Rust documentation for `Blank`](https://docs.rs/icu/latest/icu/properties/props/struct.Blank.html) for more information.
  factory CodePointSetData.blank() {
    final result = _icu4x_CodePointSetData_create_blank_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Blank` property, using a particular data source.
  ///
  /// See the [Rust documentation for `Blank`](https://docs.rs/icu/latest/icu/properties/props/struct.Blank.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.blankWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_blank_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Cased` property, using compiled data.
  ///
  /// See the [Rust documentation for `Cased`](https://docs.rs/icu/latest/icu/properties/props/struct.Cased.html) for more information.
  factory CodePointSetData.cased() {
    final result = _icu4x_CodePointSetData_create_cased_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Cased` property, using a particular data source.
  ///
  /// See the [Rust documentation for `Cased`](https://docs.rs/icu/latest/icu/properties/props/struct.Cased.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.casedWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_cased_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Case_Ignorable` property, using compiled data.
  ///
  /// See the [Rust documentation for `CaseIgnorable`](https://docs.rs/icu/latest/icu/properties/props/struct.CaseIgnorable.html) for more information.
  factory CodePointSetData.caseIgnorable() {
    final result = _icu4x_CodePointSetData_create_case_ignorable_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Case_Ignorable` property, using a particular data source.
  ///
  /// See the [Rust documentation for `CaseIgnorable`](https://docs.rs/icu/latest/icu/properties/props/struct.CaseIgnorable.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.caseIgnorableWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_case_ignorable_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Full_Composition_Exclusion` property, using compiled data.
  ///
  /// See the [Rust documentation for `FullCompositionExclusion`](https://docs.rs/icu/latest/icu/properties/props/struct.FullCompositionExclusion.html) for more information.
  factory CodePointSetData.fullCompositionExclusion() {
    final result = _icu4x_CodePointSetData_create_full_composition_exclusion_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Full_Composition_Exclusion` property, using a particular data source.
  ///
  /// See the [Rust documentation for `FullCompositionExclusion`](https://docs.rs/icu/latest/icu/properties/props/struct.FullCompositionExclusion.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.fullCompositionExclusionWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_full_composition_exclusion_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Changes_When_Casefolded` property, using compiled data.
  ///
  /// See the [Rust documentation for `ChangesWhenCasefolded`](https://docs.rs/icu/latest/icu/properties/props/struct.ChangesWhenCasefolded.html) for more information.
  factory CodePointSetData.changesWhenCasefolded() {
    final result = _icu4x_CodePointSetData_create_changes_when_casefolded_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Changes_When_Casefolded` property, using a particular data source.
  ///
  /// See the [Rust documentation for `ChangesWhenCasefolded`](https://docs.rs/icu/latest/icu/properties/props/struct.ChangesWhenCasefolded.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.changesWhenCasefoldedWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_changes_when_casefolded_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Changes_When_Casemapped` property, using compiled data.
  ///
  /// See the [Rust documentation for `ChangesWhenCasemapped`](https://docs.rs/icu/latest/icu/properties/props/struct.ChangesWhenCasemapped.html) for more information.
  factory CodePointSetData.changesWhenCasemapped() {
    final result = _icu4x_CodePointSetData_create_changes_when_casemapped_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Changes_When_Casemapped` property, using a particular data source.
  ///
  /// See the [Rust documentation for `ChangesWhenCasemapped`](https://docs.rs/icu/latest/icu/properties/props/struct.ChangesWhenCasemapped.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.changesWhenCasemappedWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_changes_when_casemapped_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Changes_When_Nfkc_Casefolded` property, using compiled data.
  ///
  /// See the [Rust documentation for `ChangesWhenNfkcCasefolded`](https://docs.rs/icu/latest/icu/properties/props/struct.ChangesWhenNfkcCasefolded.html) for more information.
  factory CodePointSetData.changesWhenNfkcCasefolded() {
    final result = _icu4x_CodePointSetData_create_changes_when_nfkc_casefolded_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Changes_When_Nfkc_Casefolded` property, using a particular data source.
  ///
  /// See the [Rust documentation for `ChangesWhenNfkcCasefolded`](https://docs.rs/icu/latest/icu/properties/props/struct.ChangesWhenNfkcCasefolded.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.changesWhenNfkcCasefoldedWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_changes_when_nfkc_casefolded_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Changes_When_Lowercased` property, using compiled data.
  ///
  /// See the [Rust documentation for `ChangesWhenLowercased`](https://docs.rs/icu/latest/icu/properties/props/struct.ChangesWhenLowercased.html) for more information.
  factory CodePointSetData.changesWhenLowercased() {
    final result = _icu4x_CodePointSetData_create_changes_when_lowercased_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Changes_When_Lowercased` property, using a particular data source.
  ///
  /// See the [Rust documentation for `ChangesWhenLowercased`](https://docs.rs/icu/latest/icu/properties/props/struct.ChangesWhenLowercased.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.changesWhenLowercasedWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_changes_when_lowercased_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Changes_When_Titlecased` property, using compiled data.
  ///
  /// See the [Rust documentation for `ChangesWhenTitlecased`](https://docs.rs/icu/latest/icu/properties/props/struct.ChangesWhenTitlecased.html) for more information.
  factory CodePointSetData.changesWhenTitlecased() {
    final result = _icu4x_CodePointSetData_create_changes_when_titlecased_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Changes_When_Titlecased` property, using a particular data source.
  ///
  /// See the [Rust documentation for `ChangesWhenTitlecased`](https://docs.rs/icu/latest/icu/properties/props/struct.ChangesWhenTitlecased.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.changesWhenTitlecasedWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_changes_when_titlecased_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Changes_When_Uppercased` property, using compiled data.
  ///
  /// See the [Rust documentation for `ChangesWhenUppercased`](https://docs.rs/icu/latest/icu/properties/props/struct.ChangesWhenUppercased.html) for more information.
  factory CodePointSetData.changesWhenUppercased() {
    final result = _icu4x_CodePointSetData_create_changes_when_uppercased_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Changes_When_Uppercased` property, using a particular data source.
  ///
  /// See the [Rust documentation for `ChangesWhenUppercased`](https://docs.rs/icu/latest/icu/properties/props/struct.ChangesWhenUppercased.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.changesWhenUppercasedWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_changes_when_uppercased_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Dash` property, using compiled data.
  ///
  /// See the [Rust documentation for `Dash`](https://docs.rs/icu/latest/icu/properties/props/struct.Dash.html) for more information.
  factory CodePointSetData.dash() {
    final result = _icu4x_CodePointSetData_create_dash_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Dash` property, using a particular data source.
  ///
  /// See the [Rust documentation for `Dash`](https://docs.rs/icu/latest/icu/properties/props/struct.Dash.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.dashWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_dash_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Deprecated` property, using compiled data.
  ///
  /// See the [Rust documentation for `Deprecated`](https://docs.rs/icu/latest/icu/properties/props/struct.Deprecated.html) for more information.
  factory CodePointSetData.deprecated() {
    final result = _icu4x_CodePointSetData_create_deprecated_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Deprecated` property, using a particular data source.
  ///
  /// See the [Rust documentation for `Deprecated`](https://docs.rs/icu/latest/icu/properties/props/struct.Deprecated.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.deprecatedWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_deprecated_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Default_Ignorable_Code_Point` property, using compiled data.
  ///
  /// See the [Rust documentation for `DefaultIgnorableCodePoint`](https://docs.rs/icu/latest/icu/properties/props/struct.DefaultIgnorableCodePoint.html) for more information.
  factory CodePointSetData.defaultIgnorableCodePoint() {
    final result = _icu4x_CodePointSetData_create_default_ignorable_code_point_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Default_Ignorable_Code_Point` property, using a particular data source.
  ///
  /// See the [Rust documentation for `DefaultIgnorableCodePoint`](https://docs.rs/icu/latest/icu/properties/props/struct.DefaultIgnorableCodePoint.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.defaultIgnorableCodePointWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_default_ignorable_code_point_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Diacritic` property, using compiled data.
  ///
  /// See the [Rust documentation for `Diacritic`](https://docs.rs/icu/latest/icu/properties/props/struct.Diacritic.html) for more information.
  factory CodePointSetData.diacritic() {
    final result = _icu4x_CodePointSetData_create_diacritic_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Diacritic` property, using a particular data source.
  ///
  /// See the [Rust documentation for `Diacritic`](https://docs.rs/icu/latest/icu/properties/props/struct.Diacritic.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.diacriticWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_diacritic_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Emoji_Modifier_Base` property, using compiled data.
  ///
  /// See the [Rust documentation for `EmojiModifierBase`](https://docs.rs/icu/latest/icu/properties/props/struct.EmojiModifierBase.html) for more information.
  factory CodePointSetData.emojiModifierBase() {
    final result = _icu4x_CodePointSetData_create_emoji_modifier_base_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Emoji_Modifier_Base` property, using a particular data source.
  ///
  /// See the [Rust documentation for `EmojiModifierBase`](https://docs.rs/icu/latest/icu/properties/props/struct.EmojiModifierBase.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.emojiModifierBaseWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_emoji_modifier_base_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Emoji_Component` property, using compiled data.
  ///
  /// See the [Rust documentation for `EmojiComponent`](https://docs.rs/icu/latest/icu/properties/props/struct.EmojiComponent.html) for more information.
  factory CodePointSetData.emojiComponent() {
    final result = _icu4x_CodePointSetData_create_emoji_component_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Emoji_Component` property, using a particular data source.
  ///
  /// See the [Rust documentation for `EmojiComponent`](https://docs.rs/icu/latest/icu/properties/props/struct.EmojiComponent.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.emojiComponentWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_emoji_component_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Emoji_Modifier` property, using compiled data.
  ///
  /// See the [Rust documentation for `EmojiModifier`](https://docs.rs/icu/latest/icu/properties/props/struct.EmojiModifier.html) for more information.
  factory CodePointSetData.emojiModifier() {
    final result = _icu4x_CodePointSetData_create_emoji_modifier_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Emoji_Modifier` property, using a particular data source.
  ///
  /// See the [Rust documentation for `EmojiModifier`](https://docs.rs/icu/latest/icu/properties/props/struct.EmojiModifier.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.emojiModifierWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_emoji_modifier_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Emoji` property, using compiled data.
  ///
  /// See the [Rust documentation for `Emoji`](https://docs.rs/icu/latest/icu/properties/props/struct.Emoji.html) for more information.
  factory CodePointSetData.emoji() {
    final result = _icu4x_CodePointSetData_create_emoji_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Emoji` property, using a particular data source.
  ///
  /// See the [Rust documentation for `Emoji`](https://docs.rs/icu/latest/icu/properties/props/struct.Emoji.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.emojiWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_emoji_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Emoji_Presentation` property, using compiled data.
  ///
  /// See the [Rust documentation for `EmojiPresentation`](https://docs.rs/icu/latest/icu/properties/props/struct.EmojiPresentation.html) for more information.
  factory CodePointSetData.emojiPresentation() {
    final result = _icu4x_CodePointSetData_create_emoji_presentation_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Emoji_Presentation` property, using a particular data source.
  ///
  /// See the [Rust documentation for `EmojiPresentation`](https://docs.rs/icu/latest/icu/properties/props/struct.EmojiPresentation.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.emojiPresentationWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_emoji_presentation_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Extender` property, using compiled data.
  ///
  /// See the [Rust documentation for `Extender`](https://docs.rs/icu/latest/icu/properties/props/struct.Extender.html) for more information.
  factory CodePointSetData.extender() {
    final result = _icu4x_CodePointSetData_create_extender_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Extender` property, using a particular data source.
  ///
  /// See the [Rust documentation for `Extender`](https://docs.rs/icu/latest/icu/properties/props/struct.Extender.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.extenderWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_extender_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Extended_Pictographic` property, using compiled data.
  ///
  /// See the [Rust documentation for `ExtendedPictographic`](https://docs.rs/icu/latest/icu/properties/props/struct.ExtendedPictographic.html) for more information.
  factory CodePointSetData.extendedPictographic() {
    final result = _icu4x_CodePointSetData_create_extended_pictographic_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Extended_Pictographic` property, using a particular data source.
  ///
  /// See the [Rust documentation for `ExtendedPictographic`](https://docs.rs/icu/latest/icu/properties/props/struct.ExtendedPictographic.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.extendedPictographicWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_extended_pictographic_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Graph` property, using compiled data.
  ///
  /// See the [Rust documentation for `Graph`](https://docs.rs/icu/latest/icu/properties/props/struct.Graph.html) for more information.
  factory CodePointSetData.graph() {
    final result = _icu4x_CodePointSetData_create_graph_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Graph` property, using a particular data source.
  ///
  /// See the [Rust documentation for `Graph`](https://docs.rs/icu/latest/icu/properties/props/struct.Graph.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.graphWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_graph_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Grapheme_Base` property, using compiled data.
  ///
  /// See the [Rust documentation for `GraphemeBase`](https://docs.rs/icu/latest/icu/properties/props/struct.GraphemeBase.html) for more information.
  factory CodePointSetData.graphemeBase() {
    final result = _icu4x_CodePointSetData_create_grapheme_base_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Grapheme_Base` property, using a particular data source.
  ///
  /// See the [Rust documentation for `GraphemeBase`](https://docs.rs/icu/latest/icu/properties/props/struct.GraphemeBase.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.graphemeBaseWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_grapheme_base_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Grapheme_Extend` property, using compiled data.
  ///
  /// See the [Rust documentation for `GraphemeExtend`](https://docs.rs/icu/latest/icu/properties/props/struct.GraphemeExtend.html) for more information.
  factory CodePointSetData.graphemeExtend() {
    final result = _icu4x_CodePointSetData_create_grapheme_extend_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Grapheme_Extend` property, using a particular data source.
  ///
  /// See the [Rust documentation for `GraphemeExtend`](https://docs.rs/icu/latest/icu/properties/props/struct.GraphemeExtend.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.graphemeExtendWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_grapheme_extend_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Grapheme_Link` property, using compiled data.
  ///
  /// See the [Rust documentation for `GraphemeLink`](https://docs.rs/icu/latest/icu/properties/props/struct.GraphemeLink.html) for more information.
  factory CodePointSetData.graphemeLink() {
    final result = _icu4x_CodePointSetData_create_grapheme_link_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Grapheme_Link` property, using a particular data source.
  ///
  /// See the [Rust documentation for `GraphemeLink`](https://docs.rs/icu/latest/icu/properties/props/struct.GraphemeLink.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.graphemeLinkWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_grapheme_link_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Hex_Digit` property, using compiled data.
  ///
  /// See the [Rust documentation for `HexDigit`](https://docs.rs/icu/latest/icu/properties/props/struct.HexDigit.html) for more information.
  factory CodePointSetData.hexDigit() {
    final result = _icu4x_CodePointSetData_create_hex_digit_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Hex_Digit` property, using a particular data source.
  ///
  /// See the [Rust documentation for `HexDigit`](https://docs.rs/icu/latest/icu/properties/props/struct.HexDigit.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.hexDigitWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_hex_digit_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Hyphen` property, using compiled data.
  ///
  /// See the [Rust documentation for `Hyphen`](https://docs.rs/icu/latest/icu/properties/props/struct.Hyphen.html) for more information.
  factory CodePointSetData.hyphen() {
    final result = _icu4x_CodePointSetData_create_hyphen_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Hyphen` property, using a particular data source.
  ///
  /// See the [Rust documentation for `Hyphen`](https://docs.rs/icu/latest/icu/properties/props/struct.Hyphen.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.hyphenWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_hyphen_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Id_Continue` property, using compiled data.
  ///
  /// See the [Rust documentation for `IdContinue`](https://docs.rs/icu/latest/icu/properties/props/struct.IdContinue.html) for more information.
  factory CodePointSetData.idContinue() {
    final result = _icu4x_CodePointSetData_create_id_continue_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Id_Continue` property, using a particular data source.
  ///
  /// See the [Rust documentation for `IdContinue`](https://docs.rs/icu/latest/icu/properties/props/struct.IdContinue.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.idContinueWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_id_continue_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Ideographic` property, using compiled data.
  ///
  /// See the [Rust documentation for `Ideographic`](https://docs.rs/icu/latest/icu/properties/props/struct.Ideographic.html) for more information.
  factory CodePointSetData.ideographic() {
    final result = _icu4x_CodePointSetData_create_ideographic_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Ideographic` property, using a particular data source.
  ///
  /// See the [Rust documentation for `Ideographic`](https://docs.rs/icu/latest/icu/properties/props/struct.Ideographic.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.ideographicWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_ideographic_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Id_Start` property, using compiled data.
  ///
  /// See the [Rust documentation for `IdStart`](https://docs.rs/icu/latest/icu/properties/props/struct.IdStart.html) for more information.
  factory CodePointSetData.idStart() {
    final result = _icu4x_CodePointSetData_create_id_start_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Id_Start` property, using a particular data source.
  ///
  /// See the [Rust documentation for `IdStart`](https://docs.rs/icu/latest/icu/properties/props/struct.IdStart.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.idStartWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_id_start_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Ids_Binary_Operator` property, using compiled data.
  ///
  /// See the [Rust documentation for `IdsBinaryOperator`](https://docs.rs/icu/latest/icu/properties/props/struct.IdsBinaryOperator.html) for more information.
  factory CodePointSetData.idsBinaryOperator() {
    final result = _icu4x_CodePointSetData_create_ids_binary_operator_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Ids_Binary_Operator` property, using a particular data source.
  ///
  /// See the [Rust documentation for `IdsBinaryOperator`](https://docs.rs/icu/latest/icu/properties/props/struct.IdsBinaryOperator.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.idsBinaryOperatorWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_ids_binary_operator_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Ids_Trinary_Operator` property, using compiled data.
  ///
  /// See the [Rust documentation for `IdsTrinaryOperator`](https://docs.rs/icu/latest/icu/properties/props/struct.IdsTrinaryOperator.html) for more information.
  factory CodePointSetData.idsTrinaryOperator() {
    final result = _icu4x_CodePointSetData_create_ids_trinary_operator_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Ids_Trinary_Operator` property, using a particular data source.
  ///
  /// See the [Rust documentation for `IdsTrinaryOperator`](https://docs.rs/icu/latest/icu/properties/props/struct.IdsTrinaryOperator.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.idsTrinaryOperatorWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_ids_trinary_operator_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Join_Control` property, using compiled data.
  ///
  /// See the [Rust documentation for `JoinControl`](https://docs.rs/icu/latest/icu/properties/props/struct.JoinControl.html) for more information.
  factory CodePointSetData.joinControl() {
    final result = _icu4x_CodePointSetData_create_join_control_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Join_Control` property, using a particular data source.
  ///
  /// See the [Rust documentation for `JoinControl`](https://docs.rs/icu/latest/icu/properties/props/struct.JoinControl.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.joinControlWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_join_control_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Logical_Order_Exception` property, using compiled data.
  ///
  /// See the [Rust documentation for `LogicalOrderException`](https://docs.rs/icu/latest/icu/properties/props/struct.LogicalOrderException.html) for more information.
  factory CodePointSetData.logicalOrderException() {
    final result = _icu4x_CodePointSetData_create_logical_order_exception_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Logical_Order_Exception` property, using a particular data source.
  ///
  /// See the [Rust documentation for `LogicalOrderException`](https://docs.rs/icu/latest/icu/properties/props/struct.LogicalOrderException.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.logicalOrderExceptionWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_logical_order_exception_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Lowercase` property, using compiled data.
  ///
  /// See the [Rust documentation for `Lowercase`](https://docs.rs/icu/latest/icu/properties/props/struct.Lowercase.html) for more information.
  factory CodePointSetData.lowercase() {
    final result = _icu4x_CodePointSetData_create_lowercase_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Lowercase` property, using a particular data source.
  ///
  /// See the [Rust documentation for `Lowercase`](https://docs.rs/icu/latest/icu/properties/props/struct.Lowercase.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.lowercaseWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_lowercase_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Math` property, using compiled data.
  ///
  /// See the [Rust documentation for `Math`](https://docs.rs/icu/latest/icu/properties/props/struct.Math.html) for more information.
  factory CodePointSetData.math() {
    final result = _icu4x_CodePointSetData_create_math_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Math` property, using a particular data source.
  ///
  /// See the [Rust documentation for `Math`](https://docs.rs/icu/latest/icu/properties/props/struct.Math.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.mathWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_math_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Noncharacter_Code_Point` property, using compiled data.
  ///
  /// See the [Rust documentation for `NoncharacterCodePoint`](https://docs.rs/icu/latest/icu/properties/props/struct.NoncharacterCodePoint.html) for more information.
  factory CodePointSetData.noncharacterCodePoint() {
    final result = _icu4x_CodePointSetData_create_noncharacter_code_point_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Noncharacter_Code_Point` property, using a particular data source.
  ///
  /// See the [Rust documentation for `NoncharacterCodePoint`](https://docs.rs/icu/latest/icu/properties/props/struct.NoncharacterCodePoint.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.noncharacterCodePointWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_noncharacter_code_point_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Nfc_Inert` property, using compiled data.
  ///
  /// See the [Rust documentation for `NfcInert`](https://docs.rs/icu/latest/icu/properties/props/struct.NfcInert.html) for more information.
  factory CodePointSetData.nfcInert() {
    final result = _icu4x_CodePointSetData_create_nfc_inert_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Nfc_Inert` property, using a particular data source.
  ///
  /// See the [Rust documentation for `NfcInert`](https://docs.rs/icu/latest/icu/properties/props/struct.NfcInert.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.nfcInertWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_nfc_inert_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Nfd_Inert` property, using compiled data.
  ///
  /// See the [Rust documentation for `NfdInert`](https://docs.rs/icu/latest/icu/properties/props/struct.NfdInert.html) for more information.
  factory CodePointSetData.nfdInert() {
    final result = _icu4x_CodePointSetData_create_nfd_inert_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Nfd_Inert` property, using a particular data source.
  ///
  /// See the [Rust documentation for `NfdInert`](https://docs.rs/icu/latest/icu/properties/props/struct.NfdInert.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.nfdInertWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_nfd_inert_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Nfkc_Inert` property, using compiled data.
  ///
  /// See the [Rust documentation for `NfkcInert`](https://docs.rs/icu/latest/icu/properties/props/struct.NfkcInert.html) for more information.
  factory CodePointSetData.nfkcInert() {
    final result = _icu4x_CodePointSetData_create_nfkc_inert_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Nfkc_Inert` property, using a particular data source.
  ///
  /// See the [Rust documentation for `NfkcInert`](https://docs.rs/icu/latest/icu/properties/props/struct.NfkcInert.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.nfkcInertWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_nfkc_inert_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Nfkd_Inert` property, using compiled data.
  ///
  /// See the [Rust documentation for `NfkdInert`](https://docs.rs/icu/latest/icu/properties/props/struct.NfkdInert.html) for more information.
  factory CodePointSetData.nfkdInert() {
    final result = _icu4x_CodePointSetData_create_nfkd_inert_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Nfkd_Inert` property, using a particular data source.
  ///
  /// See the [Rust documentation for `NfkdInert`](https://docs.rs/icu/latest/icu/properties/props/struct.NfkdInert.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.nfkdInertWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_nfkd_inert_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Pattern_Syntax` property, using compiled data.
  ///
  /// See the [Rust documentation for `PatternSyntax`](https://docs.rs/icu/latest/icu/properties/props/struct.PatternSyntax.html) for more information.
  factory CodePointSetData.patternSyntax() {
    final result = _icu4x_CodePointSetData_create_pattern_syntax_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Pattern_Syntax` property, using a particular data source.
  ///
  /// See the [Rust documentation for `PatternSyntax`](https://docs.rs/icu/latest/icu/properties/props/struct.PatternSyntax.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.patternSyntaxWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_pattern_syntax_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Pattern_White_Space` property, using compiled data.
  ///
  /// See the [Rust documentation for `PatternWhiteSpace`](https://docs.rs/icu/latest/icu/properties/props/struct.PatternWhiteSpace.html) for more information.
  factory CodePointSetData.patternWhiteSpace() {
    final result = _icu4x_CodePointSetData_create_pattern_white_space_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Pattern_White_Space` property, using a particular data source.
  ///
  /// See the [Rust documentation for `PatternWhiteSpace`](https://docs.rs/icu/latest/icu/properties/props/struct.PatternWhiteSpace.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.patternWhiteSpaceWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_pattern_white_space_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Prepended_Concatenation_Mark` property, using compiled data.
  ///
  /// See the [Rust documentation for `PrependedConcatenationMark`](https://docs.rs/icu/latest/icu/properties/props/struct.PrependedConcatenationMark.html) for more information.
  factory CodePointSetData.prependedConcatenationMark() {
    final result = _icu4x_CodePointSetData_create_prepended_concatenation_mark_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Prepended_Concatenation_Mark` property, using a particular data source.
  ///
  /// See the [Rust documentation for `PrependedConcatenationMark`](https://docs.rs/icu/latest/icu/properties/props/struct.PrependedConcatenationMark.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.prependedConcatenationMarkWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_prepended_concatenation_mark_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Print` property, using compiled data.
  ///
  /// See the [Rust documentation for `Print`](https://docs.rs/icu/latest/icu/properties/props/struct.Print.html) for more information.
  factory CodePointSetData.print() {
    final result = _icu4x_CodePointSetData_create_print_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Print` property, using a particular data source.
  ///
  /// See the [Rust documentation for `Print`](https://docs.rs/icu/latest/icu/properties/props/struct.Print.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.printWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_print_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Quotation_Mark` property, using compiled data.
  ///
  /// See the [Rust documentation for `QuotationMark`](https://docs.rs/icu/latest/icu/properties/props/struct.QuotationMark.html) for more information.
  factory CodePointSetData.quotationMark() {
    final result = _icu4x_CodePointSetData_create_quotation_mark_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Quotation_Mark` property, using a particular data source.
  ///
  /// See the [Rust documentation for `QuotationMark`](https://docs.rs/icu/latest/icu/properties/props/struct.QuotationMark.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.quotationMarkWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_quotation_mark_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Radical` property, using compiled data.
  ///
  /// See the [Rust documentation for `Radical`](https://docs.rs/icu/latest/icu/properties/props/struct.Radical.html) for more information.
  factory CodePointSetData.radical() {
    final result = _icu4x_CodePointSetData_create_radical_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Radical` property, using a particular data source.
  ///
  /// See the [Rust documentation for `Radical`](https://docs.rs/icu/latest/icu/properties/props/struct.Radical.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.radicalWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_radical_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Regional_Indicator` property, using compiled data.
  ///
  /// See the [Rust documentation for `RegionalIndicator`](https://docs.rs/icu/latest/icu/properties/props/struct.RegionalIndicator.html) for more information.
  factory CodePointSetData.regionalIndicator() {
    final result = _icu4x_CodePointSetData_create_regional_indicator_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Regional_Indicator` property, using a particular data source.
  ///
  /// See the [Rust documentation for `RegionalIndicator`](https://docs.rs/icu/latest/icu/properties/props/struct.RegionalIndicator.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.regionalIndicatorWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_regional_indicator_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Soft_Dotted` property, using compiled data.
  ///
  /// See the [Rust documentation for `SoftDotted`](https://docs.rs/icu/latest/icu/properties/props/struct.SoftDotted.html) for more information.
  factory CodePointSetData.softDotted() {
    final result = _icu4x_CodePointSetData_create_soft_dotted_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Soft_Dotted` property, using a particular data source.
  ///
  /// See the [Rust documentation for `SoftDotted`](https://docs.rs/icu/latest/icu/properties/props/struct.SoftDotted.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.softDottedWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_soft_dotted_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Segment_Starter` property, using compiled data.
  ///
  /// See the [Rust documentation for `SegmentStarter`](https://docs.rs/icu/latest/icu/properties/props/struct.SegmentStarter.html) for more information.
  factory CodePointSetData.segmentStarter() {
    final result = _icu4x_CodePointSetData_create_segment_starter_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Segment_Starter` property, using a particular data source.
  ///
  /// See the [Rust documentation for `SegmentStarter`](https://docs.rs/icu/latest/icu/properties/props/struct.SegmentStarter.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.segmentStarterWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_segment_starter_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Case_Sensitive` property, using compiled data.
  ///
  /// See the [Rust documentation for `CaseSensitive`](https://docs.rs/icu/latest/icu/properties/props/struct.CaseSensitive.html) for more information.
  factory CodePointSetData.caseSensitive() {
    final result = _icu4x_CodePointSetData_create_case_sensitive_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Case_Sensitive` property, using a particular data source.
  ///
  /// See the [Rust documentation for `CaseSensitive`](https://docs.rs/icu/latest/icu/properties/props/struct.CaseSensitive.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.caseSensitiveWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_case_sensitive_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Sentence_Terminal` property, using compiled data.
  ///
  /// See the [Rust documentation for `SentenceTerminal`](https://docs.rs/icu/latest/icu/properties/props/struct.SentenceTerminal.html) for more information.
  factory CodePointSetData.sentenceTerminal() {
    final result = _icu4x_CodePointSetData_create_sentence_terminal_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Sentence_Terminal` property, using a particular data source.
  ///
  /// See the [Rust documentation for `SentenceTerminal`](https://docs.rs/icu/latest/icu/properties/props/struct.SentenceTerminal.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.sentenceTerminalWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_sentence_terminal_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Terminal_Punctuation` property, using compiled data.
  ///
  /// See the [Rust documentation for `TerminalPunctuation`](https://docs.rs/icu/latest/icu/properties/props/struct.TerminalPunctuation.html) for more information.
  factory CodePointSetData.terminalPunctuation() {
    final result = _icu4x_CodePointSetData_create_terminal_punctuation_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Terminal_Punctuation` property, using a particular data source.
  ///
  /// See the [Rust documentation for `TerminalPunctuation`](https://docs.rs/icu/latest/icu/properties/props/struct.TerminalPunctuation.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.terminalPunctuationWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_terminal_punctuation_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Unified_Ideograph` property, using compiled data.
  ///
  /// See the [Rust documentation for `UnifiedIdeograph`](https://docs.rs/icu/latest/icu/properties/props/struct.UnifiedIdeograph.html) for more information.
  factory CodePointSetData.unifiedIdeograph() {
    final result = _icu4x_CodePointSetData_create_unified_ideograph_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Unified_Ideograph` property, using a particular data source.
  ///
  /// See the [Rust documentation for `UnifiedIdeograph`](https://docs.rs/icu/latest/icu/properties/props/struct.UnifiedIdeograph.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.unifiedIdeographWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_unified_ideograph_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Uppercase` property, using compiled data.
  ///
  /// See the [Rust documentation for `Uppercase`](https://docs.rs/icu/latest/icu/properties/props/struct.Uppercase.html) for more information.
  factory CodePointSetData.uppercase() {
    final result = _icu4x_CodePointSetData_create_uppercase_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Uppercase` property, using a particular data source.
  ///
  /// See the [Rust documentation for `Uppercase`](https://docs.rs/icu/latest/icu/properties/props/struct.Uppercase.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.uppercaseWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_uppercase_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Variation_Selector` property, using compiled data.
  ///
  /// See the [Rust documentation for `VariationSelector`](https://docs.rs/icu/latest/icu/properties/props/struct.VariationSelector.html) for more information.
  factory CodePointSetData.variationSelector() {
    final result = _icu4x_CodePointSetData_create_variation_selector_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Variation_Selector` property, using a particular data source.
  ///
  /// See the [Rust documentation for `VariationSelector`](https://docs.rs/icu/latest/icu/properties/props/struct.VariationSelector.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.variationSelectorWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_variation_selector_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `White_Space` property, using compiled data.
  ///
  /// See the [Rust documentation for `WhiteSpace`](https://docs.rs/icu/latest/icu/properties/props/struct.WhiteSpace.html) for more information.
  factory CodePointSetData.whiteSpace() {
    final result = _icu4x_CodePointSetData_create_white_space_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `White_Space` property, using a particular data source.
  ///
  /// See the [Rust documentation for `WhiteSpace`](https://docs.rs/icu/latest/icu/properties/props/struct.WhiteSpace.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.whiteSpaceWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_white_space_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Xdigit` property, using compiled data.
  ///
  /// See the [Rust documentation for `Xdigit`](https://docs.rs/icu/latest/icu/properties/props/struct.Xdigit.html) for more information.
  factory CodePointSetData.xdigit() {
    final result = _icu4x_CodePointSetData_create_xdigit_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Xdigit` property, using a particular data source.
  ///
  /// See the [Rust documentation for `Xdigit`](https://docs.rs/icu/latest/icu/properties/props/struct.Xdigit.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.xdigitWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_xdigit_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Xid_Continue` property, using compiled data.
  ///
  /// See the [Rust documentation for `XidContinue`](https://docs.rs/icu/latest/icu/properties/props/struct.XidContinue.html) for more information.
  factory CodePointSetData.xidContinue() {
    final result = _icu4x_CodePointSetData_create_xid_continue_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Xid_Continue` property, using a particular data source.
  ///
  /// See the [Rust documentation for `XidContinue`](https://docs.rs/icu/latest/icu/properties/props/struct.XidContinue.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.xidContinueWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_xid_continue_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Create a set for the `Xid_Start` property, using compiled data.
  ///
  /// See the [Rust documentation for `XidStart`](https://docs.rs/icu/latest/icu/properties/props/struct.XidStart.html) for more information.
  factory CodePointSetData.xidStart() {
    final result = _icu4x_CodePointSetData_create_xid_start_mv1();
    return CodePointSetData._fromFfi(result, []);
  }

  /// Create a set for the `Xid_Start` property, using a particular data source.
  ///
  /// See the [Rust documentation for `XidStart`](https://docs.rs/icu/latest/icu/properties/props/struct.XidStart.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.xidStartWithProvider(DataProvider provider) {
    final result = _icu4x_CodePointSetData_create_xid_start_with_provider_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// [ecma]: https://tc39.es/ecma262/#table-binary-unicode-properties
  ///
  /// See the [Rust documentation for `new_for_ecma262`](https://docs.rs/icu/latest/icu/properties/struct.CodePointSetData.html#method.new_for_ecma262) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.forEcma262(String propertyName) {
    final temp = _FinalizedArena();
    final result = _icu4x_CodePointSetData_create_for_ecma262_mv1(propertyName._utf8AllocIn(temp.arena));
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// [ecma]: https://tc39.es/ecma262/#table-binary-unicode-properties
  ///
  /// See the [Rust documentation for `new_for_ecma262`](https://docs.rs/icu/latest/icu/properties/struct.CodePointSetData.html#method.new_for_ecma262) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.forEcma262WithProvider(DataProvider provider, String propertyName) {
    final temp = _FinalizedArena();
    final result = _icu4x_CodePointSetData_create_for_ecma262_with_provider_mv1(provider._ffi, propertyName._utf8AllocIn(temp.arena));
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }
}

@meta.RecordUse()
@ffi.Native<ffi.Void Function(ffi.Pointer<ffi.Void>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_destroy_mv1')
// ignore: non_constant_identifier_names
external void _icu4x_CodePointSetData_destroy_mv1(ffi.Pointer<ffi.Void> self);

@meta.RecordUse()
@ffi.Native<ffi.Bool Function(ffi.Pointer<ffi.Opaque>, ffi.Uint32)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_contains_mv1')
// ignore: non_constant_identifier_names
external bool _icu4x_CodePointSetData_contains_mv1(ffi.Pointer<ffi.Opaque> self, Rune cp);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_iter_ranges_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_iter_ranges_mv1(ffi.Pointer<ffi.Opaque> self);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_iter_ranges_complemented_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_iter_ranges_complemented_mv1(ffi.Pointer<ffi.Opaque> self);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function(ffi.Uint32)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_general_category_group_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_general_category_group_mv1(int group);

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>, ffi.Uint32)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_general_category_group_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_general_category_group_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider, int group);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_ascii_hex_digit_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_ascii_hex_digit_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_ascii_hex_digit_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_ascii_hex_digit_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_alnum_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_alnum_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_alnum_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_alnum_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_alphabetic_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_alphabetic_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_alphabetic_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_alphabetic_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_bidi_control_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_bidi_control_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_bidi_control_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_bidi_control_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_bidi_mirrored_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_bidi_mirrored_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_bidi_mirrored_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_bidi_mirrored_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_blank_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_blank_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_blank_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_blank_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_cased_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_cased_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_cased_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_cased_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_case_ignorable_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_case_ignorable_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_case_ignorable_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_case_ignorable_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_full_composition_exclusion_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_full_composition_exclusion_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_full_composition_exclusion_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_full_composition_exclusion_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_changes_when_casefolded_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_changes_when_casefolded_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_changes_when_casefolded_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_changes_when_casefolded_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_changes_when_casemapped_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_changes_when_casemapped_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_changes_when_casemapped_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_changes_when_casemapped_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_changes_when_nfkc_casefolded_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_changes_when_nfkc_casefolded_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_changes_when_nfkc_casefolded_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_changes_when_nfkc_casefolded_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_changes_when_lowercased_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_changes_when_lowercased_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_changes_when_lowercased_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_changes_when_lowercased_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_changes_when_titlecased_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_changes_when_titlecased_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_changes_when_titlecased_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_changes_when_titlecased_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_changes_when_uppercased_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_changes_when_uppercased_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_changes_when_uppercased_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_changes_when_uppercased_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_dash_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_dash_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_dash_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_dash_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_deprecated_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_deprecated_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_deprecated_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_deprecated_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_default_ignorable_code_point_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_default_ignorable_code_point_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_default_ignorable_code_point_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_default_ignorable_code_point_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_diacritic_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_diacritic_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_diacritic_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_diacritic_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_emoji_modifier_base_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_emoji_modifier_base_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_emoji_modifier_base_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_emoji_modifier_base_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_emoji_component_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_emoji_component_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_emoji_component_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_emoji_component_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_emoji_modifier_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_emoji_modifier_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_emoji_modifier_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_emoji_modifier_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_emoji_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_emoji_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_emoji_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_emoji_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_emoji_presentation_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_emoji_presentation_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_emoji_presentation_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_emoji_presentation_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_extender_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_extender_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_extender_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_extender_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_extended_pictographic_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_extended_pictographic_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_extended_pictographic_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_extended_pictographic_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_graph_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_graph_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_graph_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_graph_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_grapheme_base_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_grapheme_base_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_grapheme_base_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_grapheme_base_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_grapheme_extend_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_grapheme_extend_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_grapheme_extend_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_grapheme_extend_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_grapheme_link_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_grapheme_link_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_grapheme_link_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_grapheme_link_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_hex_digit_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_hex_digit_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_hex_digit_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_hex_digit_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_hyphen_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_hyphen_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_hyphen_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_hyphen_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_id_continue_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_id_continue_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_id_continue_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_id_continue_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_ideographic_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_ideographic_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_ideographic_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_ideographic_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_id_start_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_id_start_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_id_start_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_id_start_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_ids_binary_operator_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_ids_binary_operator_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_ids_binary_operator_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_ids_binary_operator_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_ids_trinary_operator_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_ids_trinary_operator_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_ids_trinary_operator_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_ids_trinary_operator_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_join_control_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_join_control_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_join_control_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_join_control_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_logical_order_exception_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_logical_order_exception_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_logical_order_exception_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_logical_order_exception_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_lowercase_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_lowercase_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_lowercase_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_lowercase_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_math_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_math_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_math_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_math_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_noncharacter_code_point_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_noncharacter_code_point_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_noncharacter_code_point_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_noncharacter_code_point_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_nfc_inert_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_nfc_inert_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_nfc_inert_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_nfc_inert_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_nfd_inert_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_nfd_inert_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_nfd_inert_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_nfd_inert_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_nfkc_inert_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_nfkc_inert_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_nfkc_inert_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_nfkc_inert_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_nfkd_inert_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_nfkd_inert_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_nfkd_inert_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_nfkd_inert_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_pattern_syntax_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_pattern_syntax_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_pattern_syntax_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_pattern_syntax_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_pattern_white_space_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_pattern_white_space_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_pattern_white_space_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_pattern_white_space_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_prepended_concatenation_mark_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_prepended_concatenation_mark_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_prepended_concatenation_mark_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_prepended_concatenation_mark_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_print_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_print_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_print_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_print_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_quotation_mark_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_quotation_mark_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_quotation_mark_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_quotation_mark_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_radical_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_radical_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_radical_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_radical_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_regional_indicator_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_regional_indicator_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_regional_indicator_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_regional_indicator_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_soft_dotted_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_soft_dotted_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_soft_dotted_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_soft_dotted_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_segment_starter_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_segment_starter_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_segment_starter_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_segment_starter_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_case_sensitive_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_case_sensitive_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_case_sensitive_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_case_sensitive_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_sentence_terminal_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_sentence_terminal_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_sentence_terminal_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_sentence_terminal_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_terminal_punctuation_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_terminal_punctuation_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_terminal_punctuation_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_terminal_punctuation_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_unified_ideograph_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_unified_ideograph_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_unified_ideograph_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_unified_ideograph_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_uppercase_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_uppercase_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_uppercase_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_uppercase_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_variation_selector_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_variation_selector_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_variation_selector_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_variation_selector_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_white_space_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_white_space_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_white_space_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_white_space_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_xdigit_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_xdigit_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_xdigit_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_xdigit_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_xid_continue_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_xid_continue_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_xid_continue_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_xid_continue_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<ffi.Pointer<ffi.Opaque> Function()>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_xid_start_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_create_xid_start_mv1();

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_xid_start_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_xid_start_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(_SliceUtf8)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_for_ecma262_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_for_ecma262_mv1(_SliceUtf8 propertyName);

@meta.RecordUse()
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>, _SliceUtf8)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_create_for_ecma262_with_provider_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_create_for_ecma262_with_provider_mv1(ffi.Pointer<ffi.Opaque> provider, _SliceUtf8 propertyName);
