// generated by diplomat-tool

part of 'lib.g.dart';

/// An ICU4X Unicode Set Property object, capable of querying whether a code point is contained in a set based on a Unicode property.
///
/// See the [Rust documentation for `properties`](https://docs.rs/icu/latest/icu/properties/index.html) for more information.
///
/// See the [Rust documentation for `CodePointSetData`](https://docs.rs/icu/latest/icu/properties/sets/struct.CodePointSetData.html) for more information.
///
/// See the [Rust documentation for `CodePointSetDataBorrowed`](https://docs.rs/icu/latest/icu/properties/sets/struct.CodePointSetDataBorrowed.html) for more information.
final class CodePointSetData implements ffi.Finalizable {
  final ffi.Pointer<ffi.Opaque> _ffi;

  // These are "used" in the sense that they keep dependencies alive
  // ignore: unused_field
  final core.List<Object> _selfEdge;

  // This takes in a list of lifetime edges (including for &self borrows)
  // corresponding to data this may borrow from. These should be flat arrays containing
  // references to objects, and this object will hold on to them to keep them alive and
  // maintain borrow validity.
  CodePointSetData._fromFfi(this._ffi, this._selfEdge) {
    if (_selfEdge.isEmpty) {
      _finalizer.attach(this, _ffi.cast());
    }
  }

  static final _finalizer = ffi.NativeFinalizer(ffi.Native.addressOf(_icu4x_CodePointSetData_destroy_mv1));

  /// Checks whether the code point is in the set.
  ///
  /// See the [Rust documentation for `contains`](https://docs.rs/icu/latest/icu/properties/sets/struct.CodePointSetDataBorrowed.html#method.contains) for more information.
  bool contains(Rune cp) {
    final result = _icu4x_CodePointSetData_contains_mv1(_ffi, cp);
    return result;
  }

  /// Produces an iterator over ranges of code points contained in this set
  ///
  /// See the [Rust documentation for `iter_ranges`](https://docs.rs/icu/latest/icu/properties/sets/struct.CodePointSetDataBorrowed.html#method.iter_ranges) for more information.
  CodePointRangeIterator iterRanges() {
    // This lifetime edge depends on lifetimes: 'a
    core.List<Object> aEdges = [this];
    final result = _icu4x_CodePointSetData_iter_ranges_mv1(_ffi);
    return CodePointRangeIterator._fromFfi(result, [], aEdges);
  }

  /// Produces an iterator over ranges of code points not contained in this set
  ///
  /// See the [Rust documentation for `iter_ranges_complemented`](https://docs.rs/icu/latest/icu/properties/sets/struct.CodePointSetDataBorrowed.html#method.iter_ranges_complemented) for more information.
  CodePointRangeIterator iterRangesComplemented() {
    // This lifetime edge depends on lifetimes: 'a
    core.List<Object> aEdges = [this];
    final result = _icu4x_CodePointSetData_iter_ranges_complemented_mv1(_ffi);
    return CodePointRangeIterator._fromFfi(result, [], aEdges);
  }

  /// which is a mask with the same format as the `U_GC_XX_MASK` mask in ICU4C
  ///
  /// See the [Rust documentation for `for_general_category_group`](https://docs.rs/icu/latest/icu/properties/sets/fn.for_general_category_group.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.forGeneralCategoryGroup(DataProvider provider, int group) {
    final result = _icu4x_CodePointSetData_load_for_general_category_group_mv1(provider._ffi, group);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `ascii_hex_digit`](https://docs.rs/icu/latest/icu/properties/sets/fn.ascii_hex_digit.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.asciiHexDigit(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_ascii_hex_digit_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `alnum`](https://docs.rs/icu/latest/icu/properties/sets/fn.alnum.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.alnum(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_alnum_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `alphabetic`](https://docs.rs/icu/latest/icu/properties/sets/fn.alphabetic.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.alphabetic(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_alphabetic_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `bidi_control`](https://docs.rs/icu/latest/icu/properties/sets/fn.bidi_control.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.bidiControl(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_bidi_control_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `bidi_mirrored`](https://docs.rs/icu/latest/icu/properties/sets/fn.bidi_mirrored.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.bidiMirrored(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_bidi_mirrored_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `blank`](https://docs.rs/icu/latest/icu/properties/sets/fn.blank.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.blank(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_blank_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `cased`](https://docs.rs/icu/latest/icu/properties/sets/fn.cased.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.cased(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_cased_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `case_ignorable`](https://docs.rs/icu/latest/icu/properties/sets/fn.case_ignorable.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.caseIgnorable(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_case_ignorable_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `full_composition_exclusion`](https://docs.rs/icu/latest/icu/properties/sets/fn.full_composition_exclusion.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.fullCompositionExclusion(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_full_composition_exclusion_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `changes_when_casefolded`](https://docs.rs/icu/latest/icu/properties/sets/fn.changes_when_casefolded.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.changesWhenCasefolded(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_changes_when_casefolded_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `changes_when_casemapped`](https://docs.rs/icu/latest/icu/properties/sets/fn.changes_when_casemapped.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.changesWhenCasemapped(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_changes_when_casemapped_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `changes_when_nfkc_casefolded`](https://docs.rs/icu/latest/icu/properties/sets/fn.changes_when_nfkc_casefolded.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.changesWhenNfkcCasefolded(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_changes_when_nfkc_casefolded_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `changes_when_lowercased`](https://docs.rs/icu/latest/icu/properties/sets/fn.changes_when_lowercased.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.changesWhenLowercased(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_changes_when_lowercased_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `changes_when_titlecased`](https://docs.rs/icu/latest/icu/properties/sets/fn.changes_when_titlecased.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.changesWhenTitlecased(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_changes_when_titlecased_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `changes_when_uppercased`](https://docs.rs/icu/latest/icu/properties/sets/fn.changes_when_uppercased.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.changesWhenUppercased(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_changes_when_uppercased_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `dash`](https://docs.rs/icu/latest/icu/properties/sets/fn.dash.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.dash(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_dash_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `deprecated`](https://docs.rs/icu/latest/icu/properties/sets/fn.deprecated.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.deprecated(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_deprecated_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `default_ignorable_code_point`](https://docs.rs/icu/latest/icu/properties/sets/fn.default_ignorable_code_point.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.defaultIgnorableCodePoint(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_default_ignorable_code_point_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `diacritic`](https://docs.rs/icu/latest/icu/properties/sets/fn.diacritic.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.diacritic(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_diacritic_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `emoji_modifier_base`](https://docs.rs/icu/latest/icu/properties/sets/fn.emoji_modifier_base.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.emojiModifierBase(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_emoji_modifier_base_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `emoji_component`](https://docs.rs/icu/latest/icu/properties/sets/fn.emoji_component.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.emojiComponent(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_emoji_component_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `emoji_modifier`](https://docs.rs/icu/latest/icu/properties/sets/fn.emoji_modifier.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.emojiModifier(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_emoji_modifier_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `emoji`](https://docs.rs/icu/latest/icu/properties/sets/fn.emoji.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.emoji(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_emoji_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `emoji_presentation`](https://docs.rs/icu/latest/icu/properties/sets/fn.emoji_presentation.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.emojiPresentation(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_emoji_presentation_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `extender`](https://docs.rs/icu/latest/icu/properties/sets/fn.extender.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.extender(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_extender_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `extended_pictographic`](https://docs.rs/icu/latest/icu/properties/sets/fn.extended_pictographic.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.extendedPictographic(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_extended_pictographic_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `graph`](https://docs.rs/icu/latest/icu/properties/sets/fn.graph.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.graph(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_graph_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `grapheme_base`](https://docs.rs/icu/latest/icu/properties/sets/fn.grapheme_base.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.graphemeBase(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_grapheme_base_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `grapheme_extend`](https://docs.rs/icu/latest/icu/properties/sets/fn.grapheme_extend.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.graphemeExtend(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_grapheme_extend_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `grapheme_link`](https://docs.rs/icu/latest/icu/properties/sets/fn.grapheme_link.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.graphemeLink(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_grapheme_link_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `hex_digit`](https://docs.rs/icu/latest/icu/properties/sets/fn.hex_digit.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.hexDigit(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_hex_digit_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `hyphen`](https://docs.rs/icu/latest/icu/properties/sets/fn.hyphen.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.hyphen(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_hyphen_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `id_continue`](https://docs.rs/icu/latest/icu/properties/sets/fn.id_continue.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.idContinue(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_id_continue_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `ideographic`](https://docs.rs/icu/latest/icu/properties/sets/fn.ideographic.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.ideographic(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_ideographic_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `id_start`](https://docs.rs/icu/latest/icu/properties/sets/fn.id_start.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.idStart(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_id_start_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `ids_binary_operator`](https://docs.rs/icu/latest/icu/properties/sets/fn.ids_binary_operator.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.idsBinaryOperator(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_ids_binary_operator_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `ids_trinary_operator`](https://docs.rs/icu/latest/icu/properties/sets/fn.ids_trinary_operator.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.idsTrinaryOperator(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_ids_trinary_operator_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `join_control`](https://docs.rs/icu/latest/icu/properties/sets/fn.join_control.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.joinControl(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_join_control_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `logical_order_exception`](https://docs.rs/icu/latest/icu/properties/sets/fn.logical_order_exception.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.logicalOrderException(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_logical_order_exception_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `lowercase`](https://docs.rs/icu/latest/icu/properties/sets/fn.lowercase.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.lowercase(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_lowercase_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `math`](https://docs.rs/icu/latest/icu/properties/sets/fn.math.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.math(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_math_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `noncharacter_code_point`](https://docs.rs/icu/latest/icu/properties/sets/fn.noncharacter_code_point.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.noncharacterCodePoint(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_noncharacter_code_point_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `nfc_inert`](https://docs.rs/icu/latest/icu/properties/sets/fn.nfc_inert.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.nfcInert(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_nfc_inert_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `nfd_inert`](https://docs.rs/icu/latest/icu/properties/sets/fn.nfd_inert.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.nfdInert(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_nfd_inert_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `nfkc_inert`](https://docs.rs/icu/latest/icu/properties/sets/fn.nfkc_inert.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.nfkcInert(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_nfkc_inert_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `nfkd_inert`](https://docs.rs/icu/latest/icu/properties/sets/fn.nfkd_inert.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.nfkdInert(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_nfkd_inert_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `pattern_syntax`](https://docs.rs/icu/latest/icu/properties/sets/fn.pattern_syntax.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.patternSyntax(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_pattern_syntax_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `pattern_white_space`](https://docs.rs/icu/latest/icu/properties/sets/fn.pattern_white_space.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.patternWhiteSpace(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_pattern_white_space_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `prepended_concatenation_mark`](https://docs.rs/icu/latest/icu/properties/sets/fn.prepended_concatenation_mark.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.prependedConcatenationMark(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_prepended_concatenation_mark_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `print`](https://docs.rs/icu/latest/icu/properties/sets/fn.print.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.print(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_print_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `quotation_mark`](https://docs.rs/icu/latest/icu/properties/sets/fn.quotation_mark.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.quotationMark(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_quotation_mark_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `radical`](https://docs.rs/icu/latest/icu/properties/sets/fn.radical.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.radical(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_radical_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `regional_indicator`](https://docs.rs/icu/latest/icu/properties/sets/fn.regional_indicator.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.regionalIndicator(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_regional_indicator_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `soft_dotted`](https://docs.rs/icu/latest/icu/properties/sets/fn.soft_dotted.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.softDotted(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_soft_dotted_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `segment_starter`](https://docs.rs/icu/latest/icu/properties/sets/fn.segment_starter.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.segmentStarter(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_segment_starter_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `case_sensitive`](https://docs.rs/icu/latest/icu/properties/sets/fn.case_sensitive.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.caseSensitive(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_case_sensitive_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `sentence_terminal`](https://docs.rs/icu/latest/icu/properties/sets/fn.sentence_terminal.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.sentenceTerminal(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_sentence_terminal_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `terminal_punctuation`](https://docs.rs/icu/latest/icu/properties/sets/fn.terminal_punctuation.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.terminalPunctuation(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_terminal_punctuation_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `unified_ideograph`](https://docs.rs/icu/latest/icu/properties/sets/fn.unified_ideograph.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.unifiedIdeograph(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_unified_ideograph_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `uppercase`](https://docs.rs/icu/latest/icu/properties/sets/fn.uppercase.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.uppercase(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_uppercase_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `variation_selector`](https://docs.rs/icu/latest/icu/properties/sets/fn.variation_selector.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.variationSelector(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_variation_selector_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `white_space`](https://docs.rs/icu/latest/icu/properties/sets/fn.white_space.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.whiteSpace(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_white_space_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `xdigit`](https://docs.rs/icu/latest/icu/properties/sets/fn.xdigit.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.xdigit(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_xdigit_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `xid_continue`](https://docs.rs/icu/latest/icu/properties/sets/fn.xid_continue.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.xidContinue(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_xid_continue_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// See the [Rust documentation for `xid_start`](https://docs.rs/icu/latest/icu/properties/sets/fn.xid_start.html) for more information.
  ///
  /// Throws [DataError] on failure.
  factory CodePointSetData.xidStart(DataProvider provider) {
    final result = _icu4x_CodePointSetData_load_xid_start_mv1(provider._ffi);
    if (!result.isOk) {
      throw DataError.values[result.union.err];
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }

  /// Loads data for a property specified as a string as long as it is one of the
  /// [ECMA-262 binary properties][ecma] (not including Any, ASCII, and Assigned pseudoproperties).
  ///
  /// Returns `Error::PropertyUnexpectedPropertyNameError` in case the string does not
  /// match any property in the list
  ///
  /// [ecma]: https://tc39.es/ecma262/#table-binary-unicode-properties
  ///
  /// See the [Rust documentation for `for_ecma262`](https://docs.rs/icu/latest/icu/properties/sets/fn.for_ecma262.html) for more information.
  ///
  /// Throws [Error] on failure.
  factory CodePointSetData.forEcma262(DataProvider provider, String propertyName) {
    final temp = ffi2.Arena();
    final propertyNameView = propertyName.utf8View;
    final result = _icu4x_CodePointSetData_load_for_ecma262_mv1(provider._ffi, propertyNameView.allocIn(temp), propertyNameView.length);
    temp.releaseAll();
    if (!result.isOk) {
      throw Error.values.firstWhere((v) => v._ffi == result.union.err);
    }
    return CodePointSetData._fromFfi(result.union.ok, []);
  }
}

@meta.ResourceIdentifier('icu4x_CodePointSetData_destroy_mv1')
@ffi.Native<ffi.Void Function(ffi.Pointer<ffi.Void>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_destroy_mv1')
// ignore: non_constant_identifier_names
external void _icu4x_CodePointSetData_destroy_mv1(ffi.Pointer<ffi.Void> self);

@meta.ResourceIdentifier('icu4x_CodePointSetData_contains_mv1')
@ffi.Native<ffi.Bool Function(ffi.Pointer<ffi.Opaque>, ffi.Uint32)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_contains_mv1')
// ignore: non_constant_identifier_names
external bool _icu4x_CodePointSetData_contains_mv1(ffi.Pointer<ffi.Opaque> self, Rune cp);

@meta.ResourceIdentifier('icu4x_CodePointSetData_iter_ranges_mv1')
@ffi.Native<ffi.Pointer<ffi.Opaque> Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_iter_ranges_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_iter_ranges_mv1(ffi.Pointer<ffi.Opaque> self);

@meta.ResourceIdentifier('icu4x_CodePointSetData_iter_ranges_complemented_mv1')
@ffi.Native<ffi.Pointer<ffi.Opaque> Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_iter_ranges_complemented_mv1')
// ignore: non_constant_identifier_names
external ffi.Pointer<ffi.Opaque> _icu4x_CodePointSetData_iter_ranges_complemented_mv1(ffi.Pointer<ffi.Opaque> self);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_for_general_category_group_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>, ffi.Uint32)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_for_general_category_group_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_for_general_category_group_mv1(ffi.Pointer<ffi.Opaque> provider, int group);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_ascii_hex_digit_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_ascii_hex_digit_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_ascii_hex_digit_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_alnum_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_alnum_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_alnum_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_alphabetic_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_alphabetic_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_alphabetic_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_bidi_control_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_bidi_control_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_bidi_control_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_bidi_mirrored_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_bidi_mirrored_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_bidi_mirrored_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_blank_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_blank_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_blank_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_cased_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_cased_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_cased_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_case_ignorable_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_case_ignorable_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_case_ignorable_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_full_composition_exclusion_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_full_composition_exclusion_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_full_composition_exclusion_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_changes_when_casefolded_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_changes_when_casefolded_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_changes_when_casefolded_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_changes_when_casemapped_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_changes_when_casemapped_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_changes_when_casemapped_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_changes_when_nfkc_casefolded_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_changes_when_nfkc_casefolded_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_changes_when_nfkc_casefolded_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_changes_when_lowercased_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_changes_when_lowercased_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_changes_when_lowercased_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_changes_when_titlecased_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_changes_when_titlecased_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_changes_when_titlecased_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_changes_when_uppercased_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_changes_when_uppercased_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_changes_when_uppercased_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_dash_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_dash_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_dash_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_deprecated_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_deprecated_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_deprecated_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_default_ignorable_code_point_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_default_ignorable_code_point_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_default_ignorable_code_point_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_diacritic_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_diacritic_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_diacritic_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_emoji_modifier_base_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_emoji_modifier_base_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_emoji_modifier_base_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_emoji_component_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_emoji_component_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_emoji_component_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_emoji_modifier_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_emoji_modifier_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_emoji_modifier_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_emoji_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_emoji_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_emoji_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_emoji_presentation_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_emoji_presentation_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_emoji_presentation_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_extender_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_extender_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_extender_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_extended_pictographic_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_extended_pictographic_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_extended_pictographic_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_graph_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_graph_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_graph_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_grapheme_base_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_grapheme_base_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_grapheme_base_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_grapheme_extend_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_grapheme_extend_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_grapheme_extend_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_grapheme_link_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_grapheme_link_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_grapheme_link_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_hex_digit_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_hex_digit_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_hex_digit_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_hyphen_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_hyphen_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_hyphen_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_id_continue_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_id_continue_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_id_continue_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_ideographic_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_ideographic_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_ideographic_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_id_start_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_id_start_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_id_start_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_ids_binary_operator_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_ids_binary_operator_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_ids_binary_operator_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_ids_trinary_operator_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_ids_trinary_operator_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_ids_trinary_operator_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_join_control_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_join_control_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_join_control_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_logical_order_exception_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_logical_order_exception_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_logical_order_exception_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_lowercase_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_lowercase_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_lowercase_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_math_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_math_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_math_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_noncharacter_code_point_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_noncharacter_code_point_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_noncharacter_code_point_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_nfc_inert_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_nfc_inert_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_nfc_inert_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_nfd_inert_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_nfd_inert_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_nfd_inert_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_nfkc_inert_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_nfkc_inert_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_nfkc_inert_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_nfkd_inert_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_nfkd_inert_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_nfkd_inert_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_pattern_syntax_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_pattern_syntax_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_pattern_syntax_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_pattern_white_space_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_pattern_white_space_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_pattern_white_space_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_prepended_concatenation_mark_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_prepended_concatenation_mark_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_prepended_concatenation_mark_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_print_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_print_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_print_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_quotation_mark_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_quotation_mark_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_quotation_mark_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_radical_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_radical_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_radical_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_regional_indicator_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_regional_indicator_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_regional_indicator_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_soft_dotted_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_soft_dotted_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_soft_dotted_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_segment_starter_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_segment_starter_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_segment_starter_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_case_sensitive_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_case_sensitive_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_case_sensitive_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_sentence_terminal_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_sentence_terminal_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_sentence_terminal_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_terminal_punctuation_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_terminal_punctuation_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_terminal_punctuation_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_unified_ideograph_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_unified_ideograph_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_unified_ideograph_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_uppercase_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_uppercase_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_uppercase_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_variation_selector_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_variation_selector_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_variation_selector_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_white_space_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_white_space_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_white_space_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_xdigit_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_xdigit_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_xdigit_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_xid_continue_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_xid_continue_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_xid_continue_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_xid_start_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_xid_start_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_xid_start_mv1(ffi.Pointer<ffi.Opaque> provider);

@meta.ResourceIdentifier('icu4x_CodePointSetData_load_for_ecma262_mv1')
@ffi.Native<_ResultOpaqueInt32 Function(ffi.Pointer<ffi.Opaque>, ffi.Pointer<ffi.Uint8>, ffi.Size)>(isLeaf: true, symbol: 'icu4x_CodePointSetData_load_for_ecma262_mv1')
// ignore: non_constant_identifier_names
external _ResultOpaqueInt32 _icu4x_CodePointSetData_load_for_ecma262_mv1(ffi.Pointer<ffi.Opaque> provider, ffi.Pointer<ffi.Uint8> propertyNameData, int propertyNameLength);
