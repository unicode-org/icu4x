// generated by diplomat-tool

// https://github.com/dart-lang/sdk/issues/53946
// ignore_for_file: non_native_function_type_argument_to_pointer

part of 'lib.g.dart';

final class _PluralCategoriesFfi extends ffi.Struct {
  @ffi.Bool()
  external bool zero;
  @ffi.Bool()
  external bool one;
  @ffi.Bool()
  external bool two;
  @ffi.Bool()
  external bool few;
  @ffi.Bool()
  external bool many;
  @ffi.Bool()
  external bool other;
}

final class PluralCategories {
  final bool zero;
  final bool one;
  final bool two;
  final bool few;
  final bool many;
  final bool other;

  // ignore: unused_element
  // Internal constructor from FFI.
  // This struct contains borrowed fields, so this takes in a list of
  // "edges" corresponding to where each lifetime's data may have been borrowed from
  // and passes it down to individual fields containing the borrow.
  // This method does not attempt to handle any dependencies between lifetimes, the caller
  // should handle this when constructing edge arrays.
  PluralCategories._(_PluralCategoriesFfi underlying) :
    zero = underlying.zero,
    one = underlying.one,
    two = underlying.two,
    few = underlying.few,
    many = underlying.many,
    other = underlying.other;

  // ignore: unused_element
  _PluralCategoriesFfi _pointer(ffi.Allocator temp) {
    final pointer = temp<_PluralCategoriesFfi>();
    pointer.ref.zero = zero;
    pointer.ref.one = one;
    pointer.ref.two = two;
    pointer.ref.few = few;
    pointer.ref.many = many;
    pointer.ref.other = other;
    return pointer.ref;
  }

  @override
  bool operator ==(Object other) =>
      other is PluralCategories &&
      other.zero == this.zero &&
      other.one == this.one &&
      other.two == this.two &&
      other.few == this.few &&
      other.many == this.many &&
      other.other == this.other;

  @override
  int get hashCode => Object.hashAll([
        this.zero,
        this.one,
        this.two,
        this.few,
        this.many,
        this.other,
      ]);
}
