// generated by diplomat-tool

part of 'lib.g.dart';

final class _PluralCategoriesFfi extends ffi.Struct {
  @ffi.Bool()
  external bool zero;
  @ffi.Bool()
  external bool one;
  @ffi.Bool()
  external bool two;
  @ffi.Bool()
  external bool few;
  @ffi.Bool()
  external bool many;
  @ffi.Bool()
  external bool other;
}

final class PluralCategories {
  final bool zero;
  final bool one;
  final bool two;
  final bool few;
  final bool many;
  final bool other;

  // This struct contains borrowed fields, so this takes in a list of
  // "edges" corresponding to where each lifetime's data may have been borrowed from
  // and passes it down to individual fields containing the borrow.
  // This method does not attempt to handle any dependencies between lifetimes, the caller
  // should handle this when constructing edge arrays.
  // ignore: unused_element
  PluralCategories._fromFfi(_PluralCategoriesFfi ffi)
      : zero = ffi.zero,
        one = ffi.one,
        two = ffi.two,
        few = ffi.few,
        many = ffi.many,
        other = ffi.other;

  // ignore: unused_element
  _PluralCategoriesFfi _toFfi(ffi.Allocator temp) {
    final struct = ffi.Struct.create<_PluralCategoriesFfi>();
    struct.zero = zero;
    struct.one = one;
    struct.two = two;
    struct.few = few;
    struct.many = many;
    struct.other = other;
    return struct;
  }

  @override
  bool operator ==(Object other) =>
      other is PluralCategories &&
      other.zero == zero &&
      other.one == one &&
      other.two == two &&
      other.few == few &&
      other.many == many &&
      other.other == this.other;

  @override
  int get hashCode => Object.hashAll([
        zero,
        one,
        two,
        few,
        many,
        other,
      ]);
}
