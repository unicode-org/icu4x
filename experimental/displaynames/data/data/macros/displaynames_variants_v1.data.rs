// @generated
/// Implement [`DataProvider<VariantDisplayNamesV1Marker>`](icu_provider::DataProvider) on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_displaynames_variants_v1 {
    ($ provider : path) => {
        #[clippy::msrv = "1.61"]
        impl icu_provider::DataProvider<icu_displaynames::provider::VariantDisplayNamesV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu_displaynames::provider::VariantDisplayNamesV1Marker>, icu_provider::DataError> {
                static EN_AU: <icu_displaynames::provider::VariantDisplayNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu_displaynames::provider::VariantDisplayNamesV1 {
                    names: unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"1606nict1694acad1901\0\0\0\x001959acad1994\0\0\0\x001996\0\0\0\0abl1943\0alalc97\0aluku\0\0\0ao1990\0\0arevela\0arevmda\0baku1926balanka\0barla\0\0\0biske\0\0\0bohoric\0boont\0\0\0colb1945dajnko\0\0ekavsk\0\0emodeng\0fonipa\0\0fonupa\0\0hepburn\0ijekavskkkcor\0\0\0kscor\0\0\0lipaw\0\0\0metelko\0monoton\0ndyuka\0\0nedis\0\0\0njiva\0\0\0nulik\0\0\0osojs\0\0\0oxendictpamaka\0\0pinyin\0\0polyton\0posix\0\0\0revised\0rigik\0\0\0rozaj\0\0\0saaho\0\0\0scotlandscouse\0\0simple\0\0solba\0\0\0sotav\0\0\0tarask\0\0uccor\0\0\0ucrcor\0\0unifon\0\0valenciawadegile") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"8\0\0\0\0\0\x1A\0-\0K\0S\0r\0\x8C\0\xAC\0\xCD\0\xDA\0\x0C\x01\x1C\x01,\x01I\x01`\x01\x88\x01\xA0\x01\xB1\x01\xBA\x01\xEE\x01\xFD\x01\x1F\x023\x02@\x02M\x02a\x02\x85\x02\x97\x02\xAB\x02\xC8\x02\xD8\x02\xE1\x02\xEF\x02\xFF\x02\x12\x03!\x038\x03Z\x03h\x03{\x03\x84\x03\x8C\x03\x9F\x03\xAF\x03\xB5\x03\xB9\x03\xD2\x03\xD8\x03\xDE\x03\xF7\x03\x1E\x046\x04I\x04d\x04|\x04\x85\x04Late Middle French to 1606Early Modern FrenchTraditional German orthographyAcademicStandardized Resian orthographyGerman orthography of 1996Orthographic formulation of 1943ALA-LC Romanization, 1997 editionAluku dialectPortuguese Language Orthographic Agreement of 1990Eastern ArmenianWestern ArmenianUnified Turkic Latin AlphabetBalanka dialect of AniiBarlavento dialect group of KabuverdianuSan Giorgio/Bila dialectBohori\xC4\x8D alphabetBoontlingPortuguese-Brazilian Orthographic Convention of 1945Dajnko alphabetSerbian with Ekavian pronunciationEarly Modern EnglishIPA PhoneticsUPA PhoneticsHepburn romanizationSerbian with Ijekavian pronunciationCommon OrthographyStandard OrthographyThe Lipovaz dialect of ResianMetelko alphabetMonotonicNdyuka dialectNatisone dialectGniva/Njiva dialectModern Volap\xC3\xBCkOseacco/Osojane dialectOxford English Dictionary spellingPamaka dialectPinyin RomanizationPolytonicComputerRevised OrthographyClassic Volap\xC3\xBCkResianSahoScottish Standard EnglishScouseSIMPLEStolvizza/Solbica dialectSotavento dialect group of KabuverdianuTaraskievica orthographyUnified OrthographyUnified Revised OrthographyUnifon phonetic alphabetValencianWade-Giles Romanization") })
                    },
                };
                static EN_001: <icu_displaynames::provider::VariantDisplayNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu_displaynames::provider::VariantDisplayNamesV1 {
                    names: unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"1606nict1694acad1901\0\0\0\x001959acad1994\0\0\0\x001996\0\0\0\0abl1943\0alalc97\0aluku\0\0\0ao1990\0\0arevela\0arevmda\0baku1926balanka\0barla\0\0\0biske\0\0\0bohoric\0boont\0\0\0colb1945dajnko\0\0ekavsk\0\0emodeng\0fonipa\0\0fonupa\0\0hepburn\0ijekavskkkcor\0\0\0kscor\0\0\0lipaw\0\0\0metelko\0monoton\0ndyuka\0\0nedis\0\0\0njiva\0\0\0nulik\0\0\0osojs\0\0\0oxendictpamaka\0\0pinyin\0\0polyton\0posix\0\0\0revised\0rigik\0\0\0rozaj\0\0\0saaho\0\0\0scotlandscouse\0\0solba\0\0\0sotav\0\0\0tarask\0\0uccor\0\0\0ucrcor\0\0unifon\0\0valenciawadegile") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"7\0\0\0\0\0\x1A\0-\0K\0S\0r\0\x8C\0\xAC\0\xCD\0\xDA\0\x0C\x01\x1C\x01,\x01I\x01`\x01\x88\x01\xA0\x01\xB1\x01\xBA\x01\xEE\x01\xFD\x01\x1F\x023\x02@\x02M\x02a\x02\x85\x02\x97\x02\xAB\x02\xC8\x02\xD8\x02\xE1\x02\xEF\x02\xFF\x02\x12\x03!\x038\x03Z\x03h\x03{\x03\x84\x03\x8C\x03\x9F\x03\xAF\x03\xB5\x03\xB9\x03\xD2\x03\xD8\x03\xF1\x03\x18\x040\x04C\x04^\x04v\x04\x7F\x04Late Middle French to 1606Early Modern FrenchTraditional German orthographyAcademicStandardized Resian orthographyGerman orthography of 1996Orthographic formulation of 1943ALA-LC Romanization, 1997 editionAluku dialectPortuguese Language Orthographic Agreement of 1990Eastern ArmenianWestern ArmenianUnified Turkic Latin AlphabetBalanka dialect of AniiBarlavento dialect group of KabuverdianuSan Giorgio/Bila dialectBohori\xC4\x8D alphabetBoontlingPortuguese-Brazilian Orthographic Convention of 1945Dajnko alphabetSerbian with Ekavian pronunciationEarly Modern EnglishIPA PhoneticsUPA PhoneticsHepburn romanizationSerbian with Ijekavian pronunciationCommon OrthographyStandard OrthographyThe Lipovaz dialect of ResianMetelko alphabetMonotonicNdyuka dialectNatisone dialectGniva/Njiva dialectModern Volap\xC3\xBCkOseacco/Osojane dialectOxford English Dictionary spellingPamaka dialectPinyin RomanizationPolytonicComputerRevised OrthographyClassic Volap\xC3\xBCkResianSahoScottish Standard EnglishScouseStolvizza/Solbica dialectSotavento dialect group of KabuverdianuTaraskievica orthographyUnified OrthographyUnified Revised OrthographyUnifon phonetic alphabetValencianWade-Giles Romanization") })
                    },
                };
                static AR_EG: <icu_displaynames::provider::VariantDisplayNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu_displaynames::provider::VariantDisplayNamesV1 {
                    names: unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"1901\0\0\0\x001959acad1996\0\0\0\0arevela\0arevmda\0baku1926kkcor\0\0\0monoton\0nedis\0\0\0pinyin\0\0polyton\0posix\0\0\0revised\0scotlanduccor\0\0\0ucrcor\0\0valenciawadegile") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x12\0\0\0\0\x004\0B\0q\0\x88\0\x9F\0\xE0\0\xFB\0\x12\x01)\x01J\x01c\x01m\x01\x8F\x01\xCB\x01\xE8\x01\x16\x02\"\x02\xD8\xA7\xD9\x84\xD8\xAA\xD9\x87\xD8\xAC\xD8\xA6\xD8\xA9 \xD8\xA7\xD9\x84\xD8\xA3\xD9\x84\xD9\x85\xD8\xA7\xD9\x86\xD9\x8A\xD8\xA9 \xD8\xA7\xD9\x84\xD8\xAA\xD9\x82\xD9\x84\xD9\x8A\xD8\xAF\xD9\x8A\xD8\xA9\xD8\xA3\xD9\x83\xD8\xA7\xD8\xAF\xD9\x8A\xD9\x85\xD9\x8A\xD8\xA7\xD9\x84\xD8\xAA\xD9\x87\xD8\xAC\xD8\xA6\xD8\xA9 \xD8\xA7\xD9\x84\xD8\xA3\xD9\x84\xD9\x85\xD8\xA7\xD9\x86\xD9\x8A\xD8\xA9 \xD9\x84\xD8\xB9\xD8\xA7\xD9\x85 1996\xD8\xA3\xD8\xB1\xD9\x85\xD9\x86\xD9\x8A\xD8\xA9 \xD8\xB4\xD8\xB1\xD9\x82\xD9\x8A\xD8\xA9\xD8\xA3\xD8\xB1\xD9\x85\xD9\x86\xD9\x8A\xD8\xA9 \xD8\xBA\xD8\xB1\xD8\xA8\xD9\x8A\xD8\xA9\xD8\xA7\xD9\x84\xD8\xA3\xD8\xA8\xD8\xAC\xD8\xAF\xD9\x8A\xD8\xA9 \xD8\xA7\xD9\x84\xD8\xAA\xD8\xB1\xD9\x83\xD9\x8A\xD8\xA9 \xD8\xA7\xD9\x84\xD9\x84\xD8\xA7\xD8\xAA\xD9\x8A\xD9\x86\xD9\x8A\xD8\xA9 \xD8\xA7\xD9\x84\xD9\x85\xD9\x88\xD8\xAD\xD8\xAF\xD8\xA9\xD8\xA7\xD9\x84\xD8\xAA\xD9\x87\xD8\xAC\xD8\xA6\xD8\xA9 \xD8\xA7\xD9\x84\xD8\xB9\xD8\xA7\xD9\x85\xD8\xA9\xD8\xA3\xD8\xAD\xD8\xA7\xD8\xAF\xD9\x8A \xD8\xA7\xD9\x84\xD9\x86\xD8\xBA\xD9\x85\xD8\xA9\xD9\x84\xD9\x87\xD8\xAC\xD8\xA9 \xD9\x86\xD8\xA7\xD8\xAA\xD9\x8A\xD8\xB3\xD9\x88\xD9\x86\xD8\xA8\xD9\x8A\xD9\x86\xD9\x8A\xD9\x8A\xD9\x86 \xD8\xA8\xD8\xA7\xD9\x84\xD9\x84\xD8\xA7\xD8\xAA\xD9\x8A\xD9\x86\xD9\x8A\xD8\xA9\xD9\x85\xD8\xAA\xD8\xB9\xD8\xAF\xD8\xAF \xD8\xA7\xD9\x84\xD9\x86\xD8\xBA\xD9\x85\xD8\xA7\xD8\xAA\xD8\xAD\xD8\xA7\xD8\xB3\xD9\x88\xD8\xA8\xD8\xAA\xD9\x87\xD8\xAC\xD8\xA6\xD8\xA9 \xD8\xAA\xD9\x85\xD8\xAA \xD9\x85\xD8\xB1\xD8\xA7\xD8\xAC\xD8\xB9\xD8\xAA\xD9\x87\xD8\xA7\xD8\xA7\xD9\x84\xD8\xA5\xD9\x86\xD8\xAC\xD9\x84\xD9\x8A\xD8\xB2\xD9\x8A\xD8\xA9 \xD8\xA7\xD9\x84\xD8\xA3\xD8\xB3\xD9\x83\xD8\xAA\xD9\x84\xD9\x86\xD8\xAF\xD9\x86\xD9\x8A\xD8\xA9 \xD8\xA7\xD9\x84\xD8\xB1\xD8\xB3\xD9\x85\xD9\x8A\xD8\xA9\xD8\xA7\xD9\x84\xD8\xAA\xD9\x87\xD8\xAC\xD8\xA6\xD8\xA9 \xD8\xA7\xD9\x84\xD9\x85\xD9\x88\xD8\xAD\xD8\xAF\xD8\xA9\xD8\xA7\xD9\x84\xD8\xAA\xD9\x87\xD8\xAC\xD8\xA6\xD8\xA9 \xD8\xA7\xD9\x84\xD9\x85\xD8\xB1\xD8\xA7\xD8\xAC\xD8\xB9\xD8\xA9 \xD8\xA7\xD9\x84\xD9\x85\xD9\x88\xD8\xAD\xD8\xAF\xD8\xA9\xD8\xA8\xD9\x84\xD9\x86\xD8\xB3\xD9\x8A\xD8\xA9\xD8\xA7\xD9\x84\xD9\x85\xD9\x86\xD8\xAF\xD8\xB1\xD9\x8A\xD9\x86 \xD8\xA8\xD8\xA7\xD9\x84\xD9\x84\xD8\xA7\xD8\xAA\xD9\x8A\xD9\x86\xD9\x8A\xD8\xA9 - \xD9\x88\xD9\x8A\xD8\xAF\xE2\x80\x93\xD8\xAC\xD9\x8A\xD9\x84\xD8\xB2") })
                    },
                };
                static ES_AR: <icu_displaynames::provider::VariantDisplayNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu_displaynames::provider::VariantDisplayNamesV1 {
                    names: unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"1901\0\0\0\x001996\0\0\0\0arevela\0fonipa\0\0monoton\0pinyin\0\0polyton\0posix\0\0\0revised\0scotlandvalenciawadegile") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x0C\0\0\0\0\0\x1F\0:\0J\0n\0y\0\x8D\0\x98\0\xA1\0\xB5\0\xCF\0\xD9\0Ortograf\xC3\xADa alemana tradicionalOrtograf\xC3\xADa alemana de 1996Armenio orientalAlfabeto fon\xC3\xA9tico internacional IPAMonot\xC3\xB3nicoRomanizaci\xC3\xB3n pinyinPolit\xC3\xB3nicoOrdenadorOrtograf\xC3\xADa revisadaIngl\xC3\xA9s escoc\xC3\xA9s est\xC3\xA1ndarValencianoRomanizaci\xC3\xB3n Wade-Giles") })
                    },
                };
                static FIL: <icu_displaynames::provider::VariantDisplayNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu_displaynames::provider::VariantDisplayNamesV1 {
                    names: unsafe {
                        #[allow(unused_unsafe)]
                        zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::ZeroVec::from_bytes_unchecked(b"pinyin\0\0wadegile") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x02\0\0\0\0\0\x13\0Pinyin RomanizationWade-Giles Romanization") })
                    },
                };
                static VALUES: [&<icu_displaynames::provider::VariantDisplayNamesV1Marker as icu_provider::DataMarker>::Yokeable; 98usize
                static KEYS: [&str; 98usize] = ["ar-EG", "en-001", "en-150", "en-AG", "en-AI", "en-AT", "en-AU", "en-BB", "en-BE", "en-BM", "en-BS", "en-BW", "en-BZ", "en-CC", "en-CH", "en-CK", "en-CM", "en-CX", "en-CY", "en-DE", "en-DG", "en-DK", "en-DM", "en-ER", "en-FI", "en-FJ", "en-FK", "en-FM", "en-GB", "en-GD", "en-GG", "en-GH", "en-GI", "en-GM", "en-GY", "en-HK", "en-IE", "en-IL", "en-IM", "en-IN", "en-IO", "en-JE", "en-JM", "en-KE", "en-KI", "en-KN", "en-KY", "en-LC", "en-LR", "en-LS", "en-MG", "en-MO", "en-MS", "en-MT", "en-MU", "en-MV", "en-MW", "en-MY", "en-NA", "en-NF", "en-NG", "en-NL", "en-NR", "en-NU", "en-NZ", "en-PG", "en-PK", "en-PN", "en-PW", "en-RW", "en-SB", "en-SC", "en-SD", "en-SE", "en-SG", "en-SH", "en-SI", "en-SL", "en-SS", "en-SX", "en-SZ", "en-TC", "en-TK", "en-TO", "en-TT", "en-TV", "en-TZ", "en-UG", "en-VC", "en-VG", "en-VU", "en-WS", "en-ZA", "en-ZM", "en-ZW", "es-AR", "fil", "hi-Latn"];
                let mut metadata = icu_provider::DataResponseMetadata::default();
                let payload = if let Ok(payload) = KEYS.binary_search_by(|k| req.locale.strict_cmp(k.as_bytes()).reverse()).map(|i| *unsafe { VALUES.get_unchecked(i) }) {
                    payload
                } else {
                    let mut fallback_iterator = icu_locid_transform::fallback::LocaleFallbacker::new().fallback_for(<icu_displaynames::provider::VariantDisplayNamesV1Marker as icu_provider::KeyedDataMarker>::KEY.into(), req.locale.clone());
                    loop {
                        if fallback_iterator.get().is_empty() {
                            return Err(icu_provider::DataErrorKind::MissingLocale.with_req(<icu_displaynames::provider::VariantDisplayNamesV1Marker as icu_provider::KeyedDataMarker>::KEY, req));
                        }
                        if let Ok(payload) = KEYS.binary_search_by(|k| fallback_iterator.get().strict_cmp(k.as_bytes()).reverse()).map(|i| *unsafe { VALUES.get_unchecked(i) }) {
                            metadata.locale = Some(fallback_iterator.take());
                            break payload;
                        }
                        fallback_iterator.step();
                    }
                };
                Ok(icu_provider::DataResponse { payload: Some(icu_provider::DataPayload::from_static_ref(payload)), metadata })
            }
        }
    };
}
