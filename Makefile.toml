# This file is part of ICU4X. For terms of use, please see the file
# called LICENSE at the top level of the ICU4X source tree
# (online at: https://github.com/unicode-org/icu4x/blob/main/LICENSE ).

extend = [{ path = "./tools/scripts/data.toml"}, { path = "./tools/scripts/valgrind.toml"},
          { path = "./tools/scripts/tidy.toml"}, { path = "./tools/scripts/wasm.toml"},
          { path = "./tools/scripts/tests.toml"}, { path = "./tools/scripts/ffi.toml"}]

[config]
default_to_workspace = false

[env]
ICU4X_NIGHTLY_TOOLCHAIN = { value = "nightly-2022-04-05", condition = { env_not_set = ["ICU4X_NIGHTLY_TOOLCHAIN"] } }

[tasks.quick]
description = "Run quick version of all lints and builds (useful before pushing to GitHub)"
category = "ICU4X Development"
dependencies = [
    "ci-job-check",
    "check-no-features",
    "fmt-check",
    "clippy-all",
    "ci-job-tidy",
]

[tasks.tidy]
description = "Run fmt and other tidy checks"
category = "ICU4X Development"
dependencies = [
    "fmt-check",
    "ci-job-tidy",
]

[tasks.check-no-features]
description = "Check ICU4X build with no features (covered in CI via cargo check-all-features)"
category = "ICU4X Development"
command = "cargo"
args = ["check", "--all-targets", "--no-default-features"]

[tasks.ci-job-check]
description = "Run all tests for the CI 'check' job"
category = "ICU4X Development"
command = "cargo"
args = ["check", "--all-targets", "--all-features"]

[tasks.ci-job-test]
description = "Run all tests for the CI 'test' job"
category = "CI"
dependencies = [
    "test-all-features",
]

[tasks.ci-job-testdata]
description = "Run all tests for the CI 'testdata' job"
category = "CI"
dependencies = [
    "testdata-check",
]

[tasks.ci-job-test-docs]
description = "Run all tests for the CI 'test-docs' job"
category = "CI"
dependencies = [
    "test-docs",
]

[tasks.ci-job-full-datagen]
# Note: ci-job-full-datagen is not actually invoked by CI and instead exists
# for symmetry and predictability. CI instead uses a custom GitHub action
# that allows it to download and cache the CLDR releases efficiently
description = "Run full data generation on latest CLDR and ICU"
category = "CI"
dependencies = [
    "full-data",
]

[tasks.ci-job-ffi]
description = "Run all tests for the CI 'ffi' job"
category = "CI"
dependencies = [
    "test-ffi",
]

[tasks.ci-job-verify-ffi]
description = "Run all tests for the CI 'verify-ffi' job"
category = "CI"
dependencies = [
    "verify-ffi",
]


[tasks.ci-job-features]
description = "Run all tests for the CI 'features' job"
category = "CI"
dependencies = [
    "check-all-features",
]

[tasks.ci-job-fmt]
description = "Run all tests for the CI 'fmt' job"
category = "CI"
dependencies = [
    "fmt-check",
]

[tasks.ci-job-tidy]
description = "Run all tests for the CI 'tidy' job"
category = "CI"
dependencies = [
    "license-header-check",
    "generated-readme-check",
    "license-file-check",
]

[tasks.ci-job-wasm]
description = "Run all tests for the CI 'wasm' job"
category = "CI"
dependencies = [
    "test-cpp-emscripten",
]

[tasks.ci-job-clippy]
# Note: ci-job-clippy is not actually invoked by CI and instead exists
# for symmetry and predictability. CI instead uses a special GitHub action
# that allows it to integrate better with GitHub annotations
description = "Run all tests for the CI 'clippy' job"
category = "CI"
dependencies = [
    "clippy-all",
]

[tasks.ci-all]
# Note that updating this list will not update what is run on CI,
# it simply exists as a shortcut to run everything locally
description = "Locally run all CI jobs"
category = "ICU4X Development"
dependencies = [
    "ci-job-check",
    "ci-job-tidy",
    "ci-job-fmt",
    "ci-job-features",
    "ci-job-test",
    "ci-job-wasm",

    # Note: CI doesn't call these directly
    "ci-job-clippy",
    "ci-job-full-data",

    # benchmarking and coverage jobs not included
]
