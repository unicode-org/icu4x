# This file is part of ICU4X. For terms of use, please see the file
# called LICENSE at the top level of the ICU4X source tree
# (online at: https://github.com/unicode-org/icu4x/blob/main/LICENSE ).

[package]
name = "icu_casemap"
description = "Unicode case mapping and folding algorithms"
license = "Unicode-3.0"

authors.workspace = true
categories.workspace = true
edition.workspace = true
homepage.workspace = true
include.workspace = true
repository.workspace = true
rust-version.workspace = true
version.workspace = true

[package.metadata.docs.rs]
all-features = true

[dependencies]
displaydoc = { version = "0.2.3", default-features = false }
icu_collections = { workspace = true }
icu_locid = { workspace = true }
icu_properties = { workspace = true }
icu_provider = { workspace = true, features = ["macros"] }
zerovec = { workspace = true, features = ["yoke"] }
writeable = { workspace = true }

databake = { workspace = true, features = ["derive"], optional = true}
serde = { version = "1.0", default-features = false, features = ["derive", "alloc"], optional = true }

icu_casemap_data = { workspace = true, optional = true }

[dev-dependencies]
icu = { path = "../../components/icu", default-features = false }
icu_normalizer = { path = "../../components/normalizer", features = ["compiled_data"]}
icu_benchmark_macros = { path = "../../tools/benchmark/macros" }
icu_collections = { path = "../../components/collections", features = ["databake"] }

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
criterion = { workspace = true }

[features]
default = ["compiled_data"]
std = ["icu_collections/std", "icu_provider/std"]
bench = []
serde = ["dep:serde", "zerovec/serde", "icu_collections/serde", "icu_provider/serde", "icu_properties/serde"]
datagen = ["serde", "dep:databake", "zerovec/databake", "icu_collections/databake"]
compiled_data = ["dep:icu_casemap_data", "icu_properties/compiled_data"]

[package.metadata.cargo-all-features]
skip_optional_dependencies = true
# Bench feature gets tested separately and is only relevant for CI
denylist = ["bench"]

[[test]]
name = "conversions"
required-features = ["compiled_data"]

[[test]]
name = "gen_greek_to_me"
harness = false
required-features = ["compiled_data", "datagen"] # datagen bound can be removed after #3624


[[bench]]
name = "casemap"
harness = false
required-features = ["compiled_data"]
