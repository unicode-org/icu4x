// @generated
/// Implement [`DataProvider<DecimalSymbolsV1Marker>`](icu_provider::DataProvider) on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_decimal_symbols_v1 {
    ($ provider : path) => {
        #[clippy::msrv = "1.61"]
        impl icu_provider::DataProvider<icu_decimal::provider::DecimalSymbolsV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu_decimal::provider::DecimalSymbolsV1Marker>, icu_provider::DataError> {
                static AST: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("."), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static LO_U_NU_LAOO: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("."), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['໐', '໑', '໒', '໓', '໔', '໕', '໖', '໗', '໘', '໙'] };
                static KM_U_NU_KHMR: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("."), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['០', '១', '២', '៣', '៤', '៥', '៦', '៧', '៨', '៩'] };
                static JV_U_NU_JAVA: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("."), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['꧐', '꧑', '꧒', '꧓', '꧔', '꧕', '꧖', '꧗', '꧘', '꧙'] };
                static ES: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("."), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 2u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static FR: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("\u{202f}"), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static AF: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("\u{a0}"), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static BE: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("\u{a0}"), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 2u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static AS_U_NU_LATN: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 2u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static BRX_U_NU_DEVA: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 2u8, min_grouping: 1u8 }, digits: ['०', '१', '२', '३', '४', '५', '६', '७', '८', '९'] };
                static AS: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 2u8, min_grouping: 1u8 }, digits: ['০', '১', '২', '৩', '৪', '৫', '৬', '৭', '৮', '৯'] };
                static PA_GURU_U_NU_GURU: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 2u8, min_grouping: 1u8 }, digits: ['੦', '੧', '੨', '੩', '੪', '੫', '੬', '੭', '੮', '੯'] };
                static GU_U_NU_GUJR: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 2u8, min_grouping: 1u8 }, digits: ['૦', '૧', '૨', '૩', '૪', '૫', '૬', '૭', '૮', '૯'] };
                static OR_U_NU_ORYA: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 2u8, min_grouping: 1u8 }, digits: ['୦', '୧', '୨', '୩', '୪', '୫', '୬', '୭', '୮', '୯'] };
                static TA_LK_U_NU_TAMLDEC: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 2u8, min_grouping: 1u8 }, digits: ['௦', '௧', '௨', '௩', '௪', '௫', '௬', '௭', '௮', '௯'] };
                static ML_U_NU_MLYM: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 2u8, min_grouping: 1u8 }, digits: ['൦', '൧', '൨', '൩', '൪', '൫', '൬', '൭', '൮', '൯'] };
                static AM: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static BGC: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['०', '१', '२', '३', '४', '५', '६', '७', '८', '९'] };
                static MNI: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['০', '১', '২', '৩', '৪', '৫', '৬', '৭', '৮', '৯'] };
                static TE_U_NU_TELU: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['౦', '౧', '౨', '౩', '౪', '౫', '౬', '౭', '౮', '౯'] };
                static KN_U_NU_KNDA: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['೦', '೧', '೨', '೩', '೪', '೫', '೬', '೭', '೮', '೯'] };
                static TH_U_NU_THAI: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['๐', '๑', '๒', '๓', '๔', '๕', '๖', '๗', '๘', '๙'] };
                static MY: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['၀', '၁', '၂', '၃', '၄', '၅', '၆', '၇', '၈', '၉'] };
                static SAT: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['᱐', '᱑', '᱒', '᱓', '᱔', '᱕', '᱖', '᱗', '᱘', '᱙'] };
                static YUE_HANS_U_NU_HANIDEC: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['〇', '一', '二', '三', '四', '五', '六', '七', '八', '九'] };
                static XH: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed("\u{a0}"), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static KS_ARAB_U_NU_LATN: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed("،"), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static DE_CH: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed("’"), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static FF_ADLM_BF_U_NU_LATN: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed("⹁"), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static FF_ADLM: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed("⹁"), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['𞥐', '𞥑', '𞥒', '𞥓', '𞥔', '𞥕', '𞥖', '𞥗', '𞥘', '𞥙'] };
                static AR_DZ: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{200e}-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{200e}+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("."), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static AR_AE: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{200e}-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{200e}+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static KS: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{200e}-\u{200e}"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{200e}+\u{200e}"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("٫"), grouping_separator: alloc::borrow::Cow::Borrowed("٬"), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['۰', '۱', '۲', '۳', '۴', '۵', '۶', '۷', '۸', '۹'] };
                static PS_PK_U_NU_LATN: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{200e}−"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{200e}+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("."), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static FA_AF_U_NU_LATN: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{200e}−"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{200e}+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed(","), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static FA: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{200e}−"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{200e}+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("٫"), grouping_separator: alloc::borrow::Cow::Borrowed("٬"), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['۰', '۱', '۲', '۳', '۴', '۵', '۶', '۷', '۸', '۹'] };
                static AR: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{61c}-"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("\u{61c}+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("٫"), grouping_separator: alloc::borrow::Cow::Borrowed("٬"), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['٠', '١', '٢', '٣', '٤', '٥', '٦', '٧', '٨', '٩'] };
                static EU: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("−"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("."), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static FI: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("−"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("\u{a0}"), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static ET: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("−"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed(","), grouping_separator: alloc::borrow::Cow::Borrowed("\u{a0}"), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 2u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static RM: <icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable = icu_decimal::provider::DecimalSymbolsV1 { minus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("−"), suffix: alloc::borrow::Cow::Borrowed("") }, plus_sign_affixes: icu_decimal::provider::AffixesV1 { prefix: alloc::borrow::Cow::Borrowed("+"), suffix: alloc::borrow::Cow::Borrowed("") }, decimal_separator: alloc::borrow::Cow::Borrowed("."), grouping_separator: alloc::borrow::Cow::Borrowed("’"), grouping_sizes: icu_decimal::provider::GroupingSizesV1 { primary: 3u8, secondary: 3u8, min_grouping: 1u8 }, digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] };
                static VALUES: [&<icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::DataMarker>::Yokeable; 538usize] = [&AF, &AF, &AM, &AR, &AR_AE, &AR, &AR, &AR_AE, &AR, &AR_AE, &AR_DZ, &AR, &AR, &AR_AE, &AR_AE, &AR, &AR, &AR_AE, &AR, &AR_AE, &AR, &AR_AE, &AR, &AR_AE, &AR, &AR_AE, &AR, &AR_AE, &AR, &AR_DZ, &AR_DZ, &AR, &AR_DZ, &AR, &AR, &AR_DZ, &AR, &AR_AE, &AR, &AR_AE, &AR, &AR_AE, &AR, &AR_AE, &AR, &AR_AE, &AR, &AR_AE, &AR, &AR_AE, &AR, &AR_AE, &AR, &AR_AE, &AR_DZ, &AR, &AR, &AR_AE, &AR_AE, &AS, &AS_U_NU_LATN, &AST, &AST, &AST, &BE, &BE, &BE, &BGC, &AM, &BGC, &AM, &AS, &AS, &AS_U_NU_LATN, &AS_U_NU_LATN, &AF, &AS_U_NU_LATN, &BRX_U_NU_DEVA, &AST, &AST, &AST, &AST, &AST, &AST, &AST, &AST, &AM, &AM, &AF, &AF, &AM, &AST, &AST, &AST, &AF, &AST, &DE_CH, &AST, &DE_CH, &AST, &AM, &BGC, &AST, &AST, &AST, &AST, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AST, &AM, &AM, &AST, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &DE_CH, &AM, &AM, &AM, &AM, &AST, &AM, &AST, &AM, &AM, &AF, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AS_U_NU_LATN, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AST, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AF, &AM, &AM, &AST, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AM, &AF, &AM, &AM, &ES, &AM, &AST, &AST, &AM, &AM, &AST, &AST, &AF, &AM, &AM, &ES, &AST, &ES, &AM, &AM, &ES, &AM, &AM, &AM, &AM, &ES, &AM, &AST, &AM, &AM, &AST, &AST, &ET, &EU, &FA, &FA, &FA_AF_U_NU_LATN, &FA_AF_U_NU_LATN, &FF_ADLM, &FF_ADLM, &FF_ADLM_BF_U_NU_LATN, &FF_ADLM, &FF_ADLM_BF_U_NU_LATN, &FF_ADLM, &FF_ADLM_BF_U_NU_LATN, &FF_ADLM, &FF_ADLM_BF_U_NU_LATN, &FF_ADLM, &FF_ADLM_BF_U_NU_LATN, &FF_ADLM, &FF_ADLM_BF_U_NU_LATN, &FF_ADLM, &FF_ADLM_BF_U_NU_LATN, &FF_ADLM, &FF_ADLM_BF_U_NU_LATN, &FF_ADLM, &FF_ADLM_BF_U_NU_LATN, &FF_ADLM, &FF_ADLM_BF_U_NU_LATN, &FF_ADLM, &FF_ADLM_BF_U_NU_LATN, &FF_ADLM_BF_U_NU_LATN, &FI, &AM, &EU, &EU, &FR, &FR, &FR, &FR, &FR, &FR, &AF, &FR, &FR, &FR, &FR, &FR, &FR, &FR, &FR, &FR, &FR, &FR, &FR, &FR, &FR, &FR, &AST, &AST, &FR, &FR, &FR, &FR, &FR, &FR, &FR, &FR, &FR, &FR, &FR, &FR, &FR, &FR, &FR, &FR, &FR, &FR, &FR, &FR, &FR, &FR, &AM, &AM, &AM, &AST, &AS_U_NU_LATN, &GU_U_NU_GUJR, &AM, &AM, &AM, &AR_AE, &AS_U_NU_LATN, &AS_U_NU_LATN, &BRX_U_NU_DEVA, &EU, &EU, &AST, &AF, &AF, &ES, &AST, &AM, &AST, &AST, &DE_CH, &AST, &AST, &AM, &AST, &JV_U_NU_JAVA, &BE, &AF, &AST, &AF, &AST, &KM_U_NU_KHMR, &AM, &KN_U_NU_KNDA, &AM, &AM, &AM, &BGC, &KS, &KS, &KS_ARAB_U_NU_LATN, &AM, &KS_ARAB_U_NU_LATN, &AF, &AST, &LO_U_NU_LAOO, &FI, &BE, &AM, &BGC, &AM, &AST, &AS_U_NU_LATN, &ML_U_NU_MLYM, &AM, &MNI, &MNI, &AM, &AM, &BRX_U_NU_DEVA, &AS_U_NU_LATN, &AM, &AST, &AST, &AM, &MY, &AM, &FI, &FI, &BRX_U_NU_DEVA, &BRX_U_NU_DEVA, &AS_U_NU_LATN, &AS_U_NU_LATN, &AST, &AST, &AST, &AST, &AST, &AST, &AST, &FI, &FI, &AS_U_NU_LATN, &OR_U_NU_ORYA, &AS_U_NU_LATN, &AS_U_NU_LATN, &PA_GURU_U_NU_GURU, &PA_GURU_U_NU_GURU, &AM, &BE, &KS, &KS, &PS_PK_U_NU_LATN, &PS_PK_U_NU_LATN, &AST, &AF, &BE, &BE, &BE, &BE, &BE, &BE, &BE, &BE, &BE, &BE, &AM, &AST, &AM, &BGC, &AM, &RM, &AST, &AST, &AF, &AF, &AF, &AF, &AF, &BE, &BRX_U_NU_DEVA, &AS_U_NU_LATN, &SAT, &SAT, &AM, &AM, &AST, &AR, &AR, &AM, &AM, &AM, &AM, &AF, &EU, &AM, &AM, &AM, &AM, &BE, &BE, &BE, &AST, &AST, &AST, &AST, &AST, &AST, &AST, &AST, &AST, &AST, &FI, &FI, &FI, &AM, &AST, &AM, &AM, &AS_U_NU_LATN, &AS_U_NU_LATN, &TA_LK_U_NU_TAMLDEC, &AM, &TA_LK_U_NU_TAMLDEC, &AM, &TA_LK_U_NU_TAMLDEC, &TA_LK_U_NU_TAMLDEC, &AS_U_NU_LATN, &TE_U_NU_TELU, &AF, &AM, &TH_U_NU_THAI, &AM, &AM, &AF, &AM, &AST, &AST, &AF, &AF, &AM, &AR_AE, &KS, &AR_AE, &KS, &AF, &AF, &AF, &AST, &AST, &XH, &AM, &AM, &AST, &AST, &AST, &AM, &AM, &YUE_HANS_U_NU_HANIDEC, &AM, &YUE_HANS_U_NU_HANIDEC, &YUE_HANS_U_NU_HANIDEC, &AM, &AM, &AM, &YUE_HANS_U_NU_HANIDEC, &YUE_HANS_U_NU_HANIDEC, &AM, &AM, &YUE_HANS_U_NU_HANIDEC, &AM, &YUE_HANS_U_NU_HANIDEC, &YUE_HANS_U_NU_HANIDEC, &YUE_HANS_U_NU_HANIDEC, &AM];
                static KEYS: [&str; 538usize] = ["af", "af-NA", "am", "ar", "ar-AE", "ar-AE-u-nu-arab", "ar-BH", "ar-BH-u-nu-latn", "ar-DJ", "ar-DJ-u-nu-latn", "ar-DZ", "ar-DZ-u-nu-arab", "ar-EG", "ar-EG-u-nu-latn", "ar-EH", "ar-EH-u-nu-arab", "ar-ER", "ar-ER-u-nu-latn", "ar-IL", "ar-IL-u-nu-latn", "ar-IQ", "ar-IQ-u-nu-latn", "ar-JO", "ar-JO-u-nu-latn", "ar-KM", "ar-KM-u-nu-latn", "ar-KW", "ar-KW-u-nu-latn", "ar-LB", "ar-LB-u-nu-latn", "ar-LY", "ar-LY-u-nu-arab", "ar-MA", "ar-MA-u-nu-arab", "ar-MR", "ar-MR-u-nu-latn", "ar-OM", "ar-OM-u-nu-latn", "ar-PS", "ar-PS-u-nu-latn", "ar-QA", "ar-QA-u-nu-latn", "ar-SA", "ar-SA-u-nu-latn", "ar-SD", "ar-SD-u-nu-latn", "ar-SO", "ar-SO-u-nu-latn", "ar-SS", "ar-SS-u-nu-latn", "ar-SY", "ar-SY-u-nu-latn", "ar-TD", "ar-TD-u-nu-latn", "ar-TN", "ar-TN-u-nu-arab", "ar-YE", "ar-YE-u-nu-latn", "ar-u-nu-latn", "as", "as-u-nu-latn", "ast", "az", "az-Latn", "be", "be-tarask", "bg", "bgc", "bgc-u-nu-latn", "bho", "bho-u-nu-latn", "bn", "bn-IN", "bn-IN-u-nu-latn", "bn-u-nu-latn", "br", "brx", "brx-u-nu-deva", "bs", "bs-Cyrl", "bs-Latn", "ca", "ca-AD", "ca-ES-valencia", "ca-FR", "ca-IT", "ceb", "chr", "cs", "cv", "cy", "da", "da-GL", "de", "de-AT", "de-BE", "de-CH", "de-IT", "de-LI", "de-LU", "doi", "doi-u-nu-deva", "dsb", "el", "el-CY", "el-polyton", "en", "en-001", "en-150", "en-AE", "en-AG", "en-AI", "en-AS", "en-AT", "en-AU", "en-BB", "en-BE", "en-BI", "en-BM", "en-BS", "en-BW", "en-BZ", "en-CA", "en-CC", "en-CH", "en-CK", "en-CM", "en-CX", "en-CY", "en-DE", "en-DG", "en-DK", "en-DM", "en-ER", "en-FI", "en-FJ", "en-FK", "en-FM", "en-GB", "en-GD", "en-GG", "en-GH", "en-GI", "en-GM", "en-GU", "en-GY", "en-HK", "en-IE", "en-IL", "en-IM", "en-IN", "en-IO", "en-JE", "en-JM", "en-KE", "en-KI", "en-KN", "en-KY", "en-LC", "en-LR", "en-LS", "en-MG", "en-MH", "en-MO", "en-MP", "en-MS", "en-MT", "en-MU", "en-MV", "en-MW", "en-MY", "en-NA", "en-NF", "en-NG", "en-NL", "en-NR", "en-NU", "en-NZ", "en-PG", "en-PH", "en-PK", "en-PN", "en-PR", "en-PW", "en-RW", "en-SB", "en-SC", "en-SD", "en-SE", "en-SG", "en-SH", "en-SI", "en-SL", "en-SS", "en-SX", "en-SZ", "en-TC", "en-TK", "en-TO", "en-TT", "en-TV", "en-TZ", "en-UG", "en-UM", "en-VC", "en-VG", "en-VI", "en-VU", "en-WS", "en-ZA", "en-ZM", "en-ZW", "es", "es-419", "es-AR", "es-BO", "es-BR", "es-BZ", "es-CL", "es-CO", "es-CR", "es-CU", "es-DO", "es-EA", "es-EC", "es-GQ", "es-GT", "es-HN", "es-IC", "es-MX", "es-NI", "es-PA", "es-PE", "es-PH", "es-PR", "es-PY", "es-SV", "es-US", "es-UY", "es-VE", "et", "eu", "fa", "fa-AF", "fa-AF-u-nu-latn", "fa-u-nu-latn", "ff-Adlm", "ff-Adlm-BF", "ff-Adlm-BF-u-nu-latn", "ff-Adlm-CM", "ff-Adlm-CM-u-nu-latn", "ff-Adlm-GH", "ff-Adlm-GH-u-nu-latn", "ff-Adlm-GM", "ff-Adlm-GM-u-nu-latn", "ff-Adlm-GW", "ff-Adlm-GW-u-nu-latn", "ff-Adlm-LR", "ff-Adlm-LR-u-nu-latn", "ff-Adlm-MR", "ff-Adlm-MR-u-nu-latn", "ff-Adlm-NE", "ff-Adlm-NE-u-nu-latn", "ff-Adlm-NG", "ff-Adlm-NG-u-nu-latn", "ff-Adlm-SL", "ff-Adlm-SL-u-nu-latn", "ff-Adlm-SN", "ff-Adlm-SN-u-nu-latn", "ff-Adlm-u-nu-latn", "fi", "fil", "fo", "fo-DK", "fr", "fr-BE", "fr-BF", "fr-BI", "fr-BJ", "fr-BL", "fr-CA", "fr-CD", "fr-CF", "fr-CG", "fr-CH", "fr-CI", "fr-CM", "fr-DJ", "fr-DZ", "fr-GA", "fr-GF", "fr-GN", "fr-GP", "fr-GQ", "fr-HT", "fr-KM", "fr-LU", "fr-MA", "fr-MC", "fr-MF", "fr-MG", "fr-ML", "fr-MQ", "fr-MR", "fr-MU", "fr-NC", "fr-NE", "fr-PF", "fr-PM", "fr-RE", "fr-RW", "fr-SC", "fr-SN", "fr-SY", "fr-TD", "fr-TG", "fr-TN", "fr-VU", "fr-WF", "fr-YT", "ga", "ga-GB", "gd", "gl", "gu", "gu-u-nu-gujr", "ha", "ha-GH", "ha-NE", "he", "hi", "hi-Latn", "hi-u-nu-deva", "hr", "hr-BA", "hsb", "hu", "hy", "ia", "id", "ig", "is", "it", "it-CH", "it-SM", "it-VA", "ja", "jv", "jv-u-nu-java", "ka", "kea", "kgp", "kk", "km", "km-u-nu-khmr", "kn", "kn-u-nu-knda", "ko", "ko-KP", "kok", "kok-u-nu-deva", "ks", "ks-Arab", "ks-Arab-u-nu-latn", "ks-Deva", "ks-u-nu-latn", "ky", "lo", "lo-u-nu-laoo", "lt", "lv", "mai", "mai-u-nu-deva", "mi", "mk", "ml", "ml-u-nu-mlym", "mn", "mni", "mni-Beng", "mni-Beng-u-nu-latn", "mni-u-nu-latn", "mr", "mr-u-nu-latn", "ms", "ms-BN", "ms-ID", "ms-SG", "my", "my-u-nu-latn", "nb", "nb-SJ", "ne", "ne-IN", "ne-IN-u-nu-latn", "ne-u-nu-latn", "nl", "nl-AW", "nl-BE", "nl-BQ", "nl-CW", "nl-SR", "nl-SX", "nn", "no", "or", "or-u-nu-orya", "pa", "pa-Guru", "pa-Guru-u-nu-guru", "pa-u-nu-guru", "pcm", "pl", "ps", "ps-PK", "ps-PK-u-nu-latn", "ps-u-nu-latn", "pt", "pt-AO", "pt-CH", "pt-CV", "pt-GQ", "pt-GW", "pt-LU", "pt-MO", "pt-MZ", "pt-PT", "pt-ST", "pt-TL", "qu", "qu-BO", "qu-EC", "raj", "raj-u-nu-latn", "rm", "ro", "ro-MD", "ru", "ru-BY", "ru-KG", "ru-KZ", "ru-MD", "ru-UA", "sa", "sa-u-nu-latn", "sat", "sat-Olck", "sat-Olck-u-nu-latn", "sat-u-nu-latn", "sc", "sd", "sd-Arab", "sd-Arab-u-nu-latn", "sd-Deva", "sd-u-nu-latn", "si", "sk", "sl", "so", "so-DJ", "so-ET", "so-KE", "sq", "sq-MK", "sq-XK", "sr", "sr-Cyrl", "sr-Cyrl-BA", "sr-Cyrl-XK", "sr-Latn", "sr-Latn-BA", "sr-Latn-ME", "sr-Latn-XK", "su", "su-Latn", "sv", "sv-AX", "sv-FI", "sw", "sw-CD", "sw-KE", "sw-UG", "ta", "ta-LK", "ta-LK-u-nu-tamldec", "ta-MY", "ta-MY-u-nu-tamldec", "ta-SG", "ta-SG-u-nu-tamldec", "ta-u-nu-tamldec", "te", "te-u-nu-telu", "tg", "th", "th-u-nu-thai", "ti", "ti-ER", "tk", "to", "tr", "tr-CY", "tt", "uk", "und", "ur", "ur-IN", "ur-IN-u-nu-latn", "ur-u-nu-arabext", "uz", "uz-Cyrl", "uz-Latn", "vi", "wo", "xh", "yo", "yo-BJ", "yrl", "yrl-CO", "yrl-VE", "yue", "yue-Hans", "yue-Hans-u-nu-hanidec", "yue-Hant", "yue-Hant-u-nu-hanidec", "yue-u-nu-hanidec", "zh", "zh-Hans", "zh-Hans-SG", "zh-Hans-SG-u-nu-hanidec", "zh-Hans-u-nu-hanidec", "zh-Hant", "zh-Hant-HK", "zh-Hant-HK-u-nu-hanidec", "zh-Hant-MO", "zh-Hant-MO-u-nu-hanidec", "zh-Hant-u-nu-hanidec", "zh-u-nu-hanidec", "zu"];
                let mut metadata = icu_provider::DataResponseMetadata::default();
                let payload = if let Ok(payload) = KEYS.binary_search_by(|k| req.locale.strict_cmp(k.as_bytes()).reverse()).map(|i| *unsafe { VALUES.get_unchecked(i) }) {
                    payload
                } else {
                    const FALLBACKER: icu_locid_transform::fallback::LocaleFallbackerWithConfig<'static> = icu_locid_transform::fallback::LocaleFallbacker::new().for_config(icu_locid_transform::fallback::LocaleFallbackConfig::from_key(<icu_decimal::provider::DecimalSymbolsV1Marker as icu_provider::KeyedDataMarker>::KEY));
                    let mut fallback_iterator = FALLBACKER.fallback_for(req.locale.clone());
                    loop {
                        if let Ok(payload) = KEYS.binary_search_by(|k| fallback_iterator.get().strict_cmp(k.as_bytes()).reverse()).map(|i| *unsafe { VALUES.get_unchecked(i) }) {
                            metadata.locale = Some(fallback_iterator.take());
                            break payload;
                        }
                        fallback_iterator.step();
                    }
                };
                Ok(icu_provider::DataResponse { payload: Some(icu_provider::DataPayload::from_static_ref(payload)), metadata })
            }
        }
    };
}
