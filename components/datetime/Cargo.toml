# This file is part of ICU4X. For terms of use, please see the file
# called LICENSE at the top level of the ICU4X source tree
# (online at: https://github.com/unicode-org/icu4x/blob/main/LICENSE ).

[package]
name = "icu_datetime"
description = "API for formatting date and time to user readable textual representation"
version = "1.2.1"
rust-version = "1.65.0"
authors = ["The ICU4X Project Developers"]
edition = "2021"
readme = "README.md"
repository = "https://github.com/unicode-org/icu4x"
homepage = "https://icu4x.unicode.org"
license = "Unicode-DFS-2016"
categories = ["internationalization"]
# Keep this in sync with other crates unless there are exceptions
include = [
    "src/**/*",
    "data/*",
    "examples/**/*",
    "benches/**/*",
    "tests/**/*",
    "Cargo.toml",
    "LICENSE",
    "README.md"
]

[package.metadata.docs.rs]
all-features = true

[dependencies]
displaydoc = { version = "0.2.3", default-features = false }
either = { version = "1.6.1", default-features = false }
fixed_decimal = { version = "0.5.2", path = "../../utils/fixed_decimal" }
icu_calendar = { version = "1.2.0", path = "../calendar", default-features = false }
icu_decimal = { version = "1.2.0", path = "../decimal", default-features = false }
icu_locid = { version = "1.2.0", path = "../locid" }
icu_plurals = { version = "1.2.0", path = "../plurals", default-features = false }
icu_provider = { version = "1.2.0", path = "../../provider/core", features = ["macros"] }
icu_timezone = { version = "1.2.0", path = "../timezone", default-features = false }
smallvec = "1.6"
tinystr = { version = "0.7.1", path = "../../utils/tinystr", default-features = false, features = ["alloc", "zerovec"] }
writeable = { version = "0.5.1", path = "../../utils/writeable" }
zerovec = { version = "0.9.4", path = "../../utils/zerovec", features = ["yoke"] }

serde = { version = "1.0", default-features = false, features = ["derive", "alloc"], optional = true }
databake = { version = "0.1.3", path = "../../utils/databake", features = ["derive"], optional = true}

icu_datetime_data = { version = "~1.3.0", path = "data", optional = true }
icu_locid_transform = { version = "1.2.0", path = "../../components/locid_transform", optional = true }

# Experimental
litemap = { version = "0.7.0", path = "../../utils/litemap", optional = true }

[dev-dependencies]
icu = { path = "../icu", default-features = false }
icu_benchmark_macros = { path = "../../tools/benchmark/macros" }
icu_provider_adapters = { path = "../../provider/adapters" }
icu_provider_blob = { path = "../../provider/blob" }
litemap = { path = "../../utils/litemap" }

serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
bincode = "1.3"

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
criterion = "0.4"

[features]
default = ["compiled_data"]
std = [
    "icu_calendar/std",
    "icu_decimal/std",
    "icu_locid/std",
    "icu_plurals/std",
    "icu_provider/std",
    "icu_timezone/std",
]
serde = [
    "dep:serde",
    "icu_calendar/serde",
    "icu_decimal/serde",
    "icu_plurals/serde",
    "icu_provider/serde",
    "icu_timezone/serde",
    "litemap?/serde",
    "smallvec/serde",
    "tinystr/serde",
    "zerovec/serde",
]
datagen = [
    "dep:databake",
    "dep:litemap",
    "icu_calendar/datagen",
    "icu_provider/datagen",
    "icu_timezone/datagen",
    "serde",
    "std",
    ]
experimental = ["dep:litemap"]
bench = ["serde"]
compiled_data = ["dep:icu_datetime_data", "dep:icu_locid_transform", "icu_calendar/compiled_data", "icu_decimal/compiled_data", "icu_plurals/compiled_data", "icu_timezone/compiled_data"]

[lib]
path = "src/lib.rs"
bench = false  # This option is required for Benchmark CI

[package.metadata.cargo-all-features]
skip_optional_dependencies = true
# Bench feature gets tested separately and is only relevant for CI
denylist = ["bench"]

[[bench]]
name = "datetime"
harness = false
required-features = ["compiled_data"]

[[bench]]
name = "pattern"
harness = false
required-features = ["bench"]

[[test]]
name = "datetime"
required-features = ["compiled_data"]

[[test]]
name = "resolved_components"
required-features = ["experimental"]

[[test]]
name = "skeleton_serialization"
required-features = ["experimental"]

[[example]]
name = "work_log"
required-features = ["compiled_data"]
