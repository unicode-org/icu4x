# This file is part of ICU4X. For terms of use, please see the file
# called LICENSE at the top level of the ICU4X source tree
# (online at: https://github.com/unicode-org/icu4x/blob/main/LICENSE ).

[package]
name = "icu_experimental"
description = "ICU4X pre-release components under active development; all code in this crate is unstable."
version = "0.1.0"

authors.workspace = true
categories.workspace = true
edition.workspace = true
homepage.workspace = true
include.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true

[package.metadata.workspaces]
independent = true

[package.metadata.docs.rs]
all-features = true

[dependencies]

icu_collections = { workspace = true }
icu_provider = { workspace = true, features = ["macros"] }
icu_locale_core = { workspace = true }

icu_decimal = { workspace = true }
icu_list = { workspace = true }
icu_locale = { workspace = true }
icu_normalizer = { workspace = true }
icu_plurals = { workspace = true }
icu_properties = { workspace = true }

databake = { workspace = true, optional = true, features = ["derive"] }
fixed_decimal = { workspace = true }
icu_pattern = { workspace = true , features = ["alloc", "yoke", "zerofrom"]}
litemap = { workspace = true }
tinystr = { workspace = true, features = ["alloc", "zerovec"] }
writeable = { workspace = true }
zerotrie = { workspace = true, features = ["yoke", "zerofrom"] }
zerovec = { workspace = true, features = ["derive", "yoke"] }
zerofrom = { workspace = true }

displaydoc = { workspace = true }
log = { workspace = true, optional = true }
num-bigint = { workspace = true }
num-rational = { workspace = true, features = ["num-bigint"]}
num-traits = { workspace = true }
serde = { workspace = true, features = ["derive", "alloc"], optional = true }
smallvec = { workspace = true }

icu_experimental_data = { workspace = true, optional = true }

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
criterion = { workspace = true }

[dev-dependencies]
icu = { path = "../../components/icu", features = ["experimental"]}

icu_locale_data = { workspace = true }
icu_properties_data = { workspace = true }
icu_normalizer_data = { workspace = true }

[features]
default = ["compiled_data"]
compiled_data = ["dep:icu_experimental_data", "icu_decimal/compiled_data", "icu_list/compiled_data", "icu_plurals/compiled_data", "icu_properties/compiled_data", "icu_normalizer/compiled_data"]
datagen = ["serde", "std", "dep:databake", "zerovec/databake", "zerotrie/databake", "tinystr/databake", "icu_collections/databake", "std", "log", "icu_pattern/databake"]
ryu = ["fixed_decimal/ryu"]
serde = ["dep:serde", "zerovec/serde", "tinystr/serde", "icu_collections/serde", "icu_decimal/serde", "icu_list/serde", "icu_pattern/serde", "icu_plurals/serde", "icu_provider/serde", "zerotrie/serde"]
std = ["fixed_decimal/std", "icu_decimal/std", "icu_pattern/std", "icu_plurals/std", "icu_provider/std", "icu_locale_core/std"]

bench = []

[[bench]]
name = "transliterate"
path = "benches/transliterate/bench.rs"
harness = false

[[test]]
name = "displaynames_test"
path = "tests/displaynames/tests.rs"

[[test]]
name = "personnames_test"
path = "tests/personnames/tests.rs"

[[test]]
name = "relativetime_test"
path = "tests/relativetime/tests.rs"

[[test]]
name = "transliterate_test"
path = "tests/transliterate/cldr.rs"

[[test]]
name = "units_test"
path = "tests/units/units_test.rs"
