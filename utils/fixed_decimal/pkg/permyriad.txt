 Retained Bytes │ Retained % │ Dominator Tree
────────────────┼────────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
           3894 ┊     32.94% ┊ "function names" subsection
           3560 ┊     30.12% ┊ table[0]
           3556 ┊     30.08% ┊   ⤷ elem[0]
           1309 ┊     11.07% ┊       ⤷ core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::hf44a8e3177939d82
           1290 ┊     10.91% ┊           ⤷ core::fmt::num::imp::fmt_u64::h02426c6ea33fa8b1
            943 ┊      7.98% ┊               ⤷ core::fmt::Formatter::pad_integral::ha732429d695233c6
            160 ┊      1.35% ┊                   ⤷ core::fmt::Formatter::padding::h116b7e093af958f1
             94 ┊      0.80% ┊                   ⤷ core::fmt::Formatter::pad_integral::write_prefix::ha37ce68ff7005af6
             10 ┊      0.08% ┊                   ⤷ type[11]: (i32, i32, i32, i32, i32, i32) -> i32
              7 ┊      0.06% ┊               ⤷ type[10]: (i64, i32, i32) -> i32
            897 ┊      7.59% ┊       ⤷ core::fmt::write::hcdc919081fb76c8f
            132 ┊      1.12% ┊           ⤷ core::panicking::panic_bounds_check::h9a071d3fa3c05f2a
            124 ┊      1.05% ┊           ⤷ core::fmt::getcount::h861ec173eab72a8d
            328 ┊      2.77% ┊       ⤷ <&mut W as core::fmt::Write>::write_char::h4cc14ef41aaead3d
            247 ┊      2.09% ┊       ⤷ std::panicking::begin_panic_handler::PanicPayload::fill::hd039868956b928df
            168 ┊      1.42% ┊       ⤷ <wee_alloc::size_classes::SizeClassAllocPolicy as wee_alloc::AllocPolicy>::new_cell_for_free_list::hc422e17381578f77
            118 ┊      1.00% ┊       ⤷ <&mut W as core::fmt::Write>::write_fmt::hb7ccc1a26ce6fe4f
            116 ┊      0.98% ┊       ⤷ <std::panicking::begin_panic_handler::PanicPayload as core::panic::BoxMeUp>::take_box::h5ce115b899cede78
            112 ┊      0.95% ┊       ⤷ <wee_alloc::LargeAllocPolicy as wee_alloc::AllocPolicy>::new_cell_for_free_list::h6d450bc70398a1ce
             44 ┊      0.37% ┊       ⤷ core::ptr::drop_in_place::h208bb2259968f776
             34 ┊      0.29% ┊       ⤷ core::ptr::drop_in_place::h4d8018b625cf8376
             32 ┊      0.27% ┊       ⤷ <std::panicking::begin_panic_handler::PanicPayload as core::panic::BoxMeUp>::get::h23de12b735da4a26
             24 ┊      0.20% ┊       ⤷ <&mut W as core::fmt::Write>::write_str::h9cf4a47d4d9fd837
             15 ┊      0.13% ┊       ⤷ <T as core::any::Any>::type_id::h49a75cc037b1108b
             15 ┊      0.13% ┊       ⤷ core::ops::function::FnOnce::call_once::hb79636bb9f7c0d68
             15 ┊      0.13% ┊       ⤷ <T as core::any::Any>::type_id::hfda674a93a89c2d6
              7 ┊      0.06% ┊       ⤷ <wee_alloc::LargeAllocPolicy as wee_alloc::AllocPolicy>::min_cell_size::h3e09d24d511c162f
              6 ┊      0.05% ┊       ⤷ <wee_alloc::LargeAllocPolicy as wee_alloc::AllocPolicy>::should_merge_adjacent_free_cells::h0ff09b2be183c512
              6 ┊      0.05% ┊       ⤷ <wee_alloc::size_classes::SizeClassAllocPolicy as wee_alloc::AllocPolicy>::min_cell_size::heac91d6b149faca8
              6 ┊      0.05% ┊       ⤷ <wee_alloc::size_classes::SizeClassAllocPolicy as wee_alloc::AllocPolicy>::should_merge_adjacent_free_cells::h32f5670d323b8a84
              5 ┊      0.04% ┊       ⤷ type[9]: (i32) -> i64
              4 ┊      0.03% ┊       ⤷ std::alloc::default_alloc_error_hook::hd578be0a27d40dc1
              4 ┊      0.03% ┊       ⤷ core::ptr::drop_in_place::h87bbcd4b96a429d5
              4 ┊      0.03% ┊       ⤷ core::ptr::drop_in_place::hf34fc32dfd6a1dca
              4 ┊      0.03% ┊       ⤷ core::ptr::drop_in_place::hfb7c3c3096059d0f
              4 ┊      0.03% ┊       ⤷ core::ptr::drop_in_place::h8480c48a13eaff95
              4 ┊      0.03% ┊       ⤷ core::ptr::drop_in_place::hfb7c3c3096059d0f.1622
            751 ┊      6.35% ┊ wee_alloc::alloc_with_refill::hc6d059644918d278
            608 ┊      5.14% ┊   ⤷ wee_alloc::alloc_first_fit::hec0f0f54bfd81038
              9 ┊      0.08% ┊   ⤷ type[12]: (i32, i32, i32, i32, i32) -> i32
            548 ┊      4.64% ┊ <wee_alloc::WeeAlloc as core::alloc::global::GlobalAlloc>::dealloc::ha5bc9b3a43b818b2
            341 ┊      2.88% ┊   ⤷ wee_alloc::WeeAlloc::dealloc_impl::{{closure}}::h21395ae90c962d08
            511 ┊      4.32% ┊ alloc::raw_vec::RawVec<T,A>::reserve::h36b4998143ff41ef
            281 ┊      2.38% ┊   ⤷ alloc::raw_vec::finish_grow::h2e7719e8c87df8dc
             77 ┊      0.65% ┊       ⤷ __rust_realloc
             59 ┊      0.50% ┊           ⤷ __rg_realloc
            478 ┊      4.04% ┊ core::panicking::panic_fmt::hd8ce56461509210e
            410 ┊      3.47% ┊   ⤷ rust_begin_unwind
            303 ┊      2.56% ┊       ⤷ std::sys_common::backtrace::__rust_end_short_backtrace::hf2fbe36ee3d88c65
            245 ┊      2.07% ┊           ⤷ std::panicking::begin_panic_handler::{{closure}}::h3c9230bae5689cec
            194 ┊      1.64% ┊               ⤷ std::panicking::rust_panic_with_hook::h9f68644f5b7d5017
              6 ┊      0.05% ┊                   ⤷ rust_panic
             34 ┊      0.29% ┊       ⤷ core::option::Option<T>::unwrap::h7ddf780fab261b67
            477 ┊      4.04% ┊ export "main"
            470 ┊      3.98% ┊   ⤷ main
             83 ┊      0.70% ┊       ⤷ alloc::raw_vec::RawVec<T,A>::allocate_in::hec4a77debe4148f8
            203 ┊      1.72% ┊ <wee_alloc::WeeAlloc as core::alloc::global::GlobalAlloc>::alloc::h01592a764b68148e
             86 ┊      0.73% ┊ core::panicking::panic::h059bb8b4b17f4cbc
             69 ┊      0.58% ┊ alloc::alloc::handle_alloc_error::hca26941e53fa543f
             54 ┊      0.46% ┊   ⤷ __rust_alloc_error_handler
             39 ┊      0.33% ┊       ⤷ __rg_oom
             59 ┊      0.50% ┊ <alloc::vec::Vec<T> as alloc::vec::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend::hdc6d8e4cac9df68c
             56 ┊      0.47% ┊ memcpy
             32 ┊      0.27% ┊ __rust_dealloc
             16 ┊      0.14% ┊   ⤷ __rg_dealloc
             28 ┊      0.24% ┊ __rust_alloc
             14 ┊      0.12% ┊   ⤷ __rg_alloc
             25 ┊      0.21% ┊ alloc::raw_vec::capacity_overflow::h6f470473614799a0
             21 ┊      0.18% ┊ export "__heap_base"
              7 ┊      0.06% ┊   ⤷ global[2]
             20 ┊      0.17% ┊ export "__data_end"
              7 ┊      0.06% ┊   ⤷ global[1]
             11 ┊      0.09% ┊ export "memory"
              2 ┊      0.02% ┊   ⤷ memory[0]
              8 ┊      0.07% ┊ type[6]: (i32, i32, i32, i32) -> i32
              8 ┊      0.07% ┊ custom section 'name' headers
              8 ┊      0.07% ┊ wasm magic bytes
              7 ┊      0.06% ┊ type[1]: (i32, i32, i32) -> i32
              7 ┊      0.06% ┊ type[3]: (i32, i32, i32, i32) -> nil
              7 ┊      0.06% ┊ global[0]
              7 ┊      0.06% ┊ code section headers
              6 ┊      0.05% ┊ type[2]: (i32, i32) -> i32
              6 ┊      0.05% ┊ type[5]: (i32, i32, i32) -> nil
              5 ┊      0.04% ┊ type[0]: (i32, i32) -> nil
              5 ┊      0.04% ┊ type[4]: (i32) -> i32
              4 ┊      0.03% ┊ type[8]: (i32) -> nil
              4 ┊      0.03% ┊ data section headers
              3 ┊      0.03% ┊ type[7]: () -> nil
              3 ┊      0.03% ┊ type section headers
              3 ┊      0.03% ┊ table section headers
              3 ┊      0.03% ┊ memory section headers
              3 ┊      0.03% ┊ global section headers
              3 ┊      0.03% ┊ export section headers
              3 ┊      0.03% ┊ element section headers
            888 ┊      7.51% ┊ [1 Unreachable Items]
