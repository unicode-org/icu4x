 Retained Bytes │ Retained % │ Dominator Tree
────────────────┼────────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
           3899 ┊     32.98% ┊ "function names" subsection
           3559 ┊     30.10% ┊ table[0]
           3555 ┊     30.07% ┊   ⤷ elem[0]
           1309 ┊     11.07% ┊       ⤷ core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h60d343ae9ad25d2d
           1290 ┊     10.91% ┊           ⤷ core::fmt::num::imp::fmt_u64::h53be2cf8685583dd
            943 ┊      7.98% ┊               ⤷ core::fmt::Formatter::pad_integral::h07aef0d894bb255d
            160 ┊      1.35% ┊                   ⤷ core::fmt::Formatter::padding::h7a1896b194aaa2f4
             94 ┊      0.79% ┊                   ⤷ core::fmt::Formatter::pad_integral::write_prefix::hf48b2e0a8b365e61
             10 ┊      0.08% ┊                   ⤷ type[11]: (i32, i32, i32, i32, i32, i32) -> i32
              7 ┊      0.06% ┊               ⤷ type[10]: (i64, i32, i32) -> i32
            897 ┊      7.59% ┊       ⤷ core::fmt::write::hbe0dd8e9c0d9aeb7
            132 ┊      1.12% ┊           ⤷ core::panicking::panic_bounds_check::hc53ca9df0b8509fd
            124 ┊      1.05% ┊           ⤷ core::fmt::getcount::h94e80423a9eced8f
            328 ┊      2.77% ┊       ⤷ <&mut W as core::fmt::Write>::write_char::h9cff9d77aed7896d
            247 ┊      2.09% ┊       ⤷ std::panicking::begin_panic_handler::PanicPayload::fill::h9af7534c4c371d05
            168 ┊      1.42% ┊       ⤷ <wee_alloc::size_classes::SizeClassAllocPolicy as wee_alloc::AllocPolicy>::new_cell_for_free_list::he7e425dc825adf5e
            118 ┊      1.00% ┊       ⤷ <&mut W as core::fmt::Write>::write_fmt::hf1fbebbdcf92fdc7
            116 ┊      0.98% ┊       ⤷ <std::panicking::begin_panic_handler::PanicPayload as core::panic::BoxMeUp>::take_box::hff411efd02c22cd0
            112 ┊      0.95% ┊       ⤷ <wee_alloc::LargeAllocPolicy as wee_alloc::AllocPolicy>::new_cell_for_free_list::hfd7f9400df5e1977
             44 ┊      0.37% ┊       ⤷ core::ptr::drop_in_place::hf1099cb5f23da3a1
             34 ┊      0.29% ┊       ⤷ core::ptr::drop_in_place::h02e1550be636b150
             32 ┊      0.27% ┊       ⤷ <std::panicking::begin_panic_handler::PanicPayload as core::panic::BoxMeUp>::get::h46310b10c141f08f
             24 ┊      0.20% ┊       ⤷ <&mut W as core::fmt::Write>::write_str::h29e73825d1f5f372
             15 ┊      0.13% ┊       ⤷ core::ops::function::FnOnce::call_once::h8a477fe68b043fe4
             15 ┊      0.13% ┊       ⤷ <T as core::any::Any>::type_id::h2a7b7c33b71febce
             14 ┊      0.12% ┊       ⤷ <T as core::any::Any>::type_id::h4650a8e2c1d42a98
              7 ┊      0.06% ┊       ⤷ <wee_alloc::LargeAllocPolicy as wee_alloc::AllocPolicy>::min_cell_size::h667191588b760392
              6 ┊      0.05% ┊       ⤷ <wee_alloc::size_classes::SizeClassAllocPolicy as wee_alloc::AllocPolicy>::min_cell_size::h6ffb77ee4897b221
              6 ┊      0.05% ┊       ⤷ <wee_alloc::size_classes::SizeClassAllocPolicy as wee_alloc::AllocPolicy>::should_merge_adjacent_free_cells::h2e6d421fbe35545d
              6 ┊      0.05% ┊       ⤷ <wee_alloc::LargeAllocPolicy as wee_alloc::AllocPolicy>::should_merge_adjacent_free_cells::h01e8383435e93ec4
              5 ┊      0.04% ┊       ⤷ type[9]: (i32) -> i64
              4 ┊      0.03% ┊       ⤷ std::alloc::default_alloc_error_hook::hb03d50b55ebca620
              4 ┊      0.03% ┊       ⤷ core::ptr::drop_in_place::h5842ab0252ffe1cc
              4 ┊      0.03% ┊       ⤷ core::ptr::drop_in_place::hc4ce7ec6fd1fe8d0
              4 ┊      0.03% ┊       ⤷ core::ptr::drop_in_place::hd3015ce202a59e41
              4 ┊      0.03% ┊       ⤷ core::ptr::drop_in_place::hd3015ce202a59e41.1499
              4 ┊      0.03% ┊       ⤷ core::ptr::drop_in_place::h94844c03dc9a0b7a.1500
            751 ┊      6.35% ┊ wee_alloc::alloc_with_refill::h24686b3bb6386faa
            608 ┊      5.14% ┊   ⤷ wee_alloc::alloc_first_fit::hc2bc7b0f56683323
              9 ┊      0.08% ┊   ⤷ type[12]: (i32, i32, i32, i32, i32) -> i32
            548 ┊      4.63% ┊ <wee_alloc::WeeAlloc as core::alloc::global::GlobalAlloc>::dealloc::h8bcae00d2a7aad43
            341 ┊      2.88% ┊   ⤷ wee_alloc::WeeAlloc::dealloc_impl::{{closure}}::h7b427f37e6930c47
            511 ┊      4.32% ┊ alloc::raw_vec::RawVec<T,A>::reserve::h14e2bbdcfb5c0d23
            281 ┊      2.38% ┊   ⤷ alloc::raw_vec::finish_grow::h3e91ad6198eee436
             77 ┊      0.65% ┊       ⤷ __rust_realloc
             59 ┊      0.50% ┊           ⤷ __rg_realloc
            478 ┊      4.04% ┊ core::panicking::panic_fmt::hdf8d0243e0d4fceb
            410 ┊      3.47% ┊   ⤷ rust_begin_unwind
            303 ┊      2.56% ┊       ⤷ std::sys_common::backtrace::__rust_end_short_backtrace::hb408146a39027d78
            245 ┊      2.07% ┊           ⤷ std::panicking::begin_panic_handler::{{closure}}::h6269f23e4ae37022
            194 ┊      1.64% ┊               ⤷ std::panicking::rust_panic_with_hook::h64cb0accada9ce0e
              6 ┊      0.05% ┊                   ⤷ rust_panic
             34 ┊      0.29% ┊       ⤷ core::option::Option<T>::unwrap::h3544e7a036042d11
            477 ┊      4.03% ┊ export "main"
            470 ┊      3.97% ┊   ⤷ main
             83 ┊      0.70% ┊       ⤷ alloc::raw_vec::RawVec<T,A>::allocate_in::h31198357b084008b
            203 ┊      1.72% ┊ <wee_alloc::WeeAlloc as core::alloc::global::GlobalAlloc>::alloc::h1df54fea1544be8a
             86 ┊      0.73% ┊ core::panicking::panic::h1f31dfdebac1729f
             69 ┊      0.58% ┊ alloc::alloc::handle_alloc_error::h8e32739f1fa5c58c
             54 ┊      0.46% ┊   ⤷ __rust_alloc_error_handler
             39 ┊      0.33% ┊       ⤷ __rg_oom
             59 ┊      0.50% ┊ <alloc::vec::Vec<T> as alloc::vec::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend::haaef633926038d87
             56 ┊      0.47% ┊ memcpy
             32 ┊      0.27% ┊ __rust_dealloc
             16 ┊      0.14% ┊   ⤷ __rg_dealloc
             28 ┊      0.24% ┊ __rust_alloc
             14 ┊      0.12% ┊   ⤷ __rg_alloc
             25 ┊      0.21% ┊ alloc::raw_vec::capacity_overflow::hb5aace515ee70317
             21 ┊      0.18% ┊ export "__heap_base"
              7 ┊      0.06% ┊   ⤷ global[2]
             20 ┊      0.17% ┊ export "__data_end"
              7 ┊      0.06% ┊   ⤷ global[1]
             11 ┊      0.09% ┊ export "memory"
              2 ┊      0.02% ┊   ⤷ memory[0]
              8 ┊      0.07% ┊ type[6]: (i32, i32, i32, i32) -> i32
              8 ┊      0.07% ┊ custom section 'name' headers
              8 ┊      0.07% ┊ wasm magic bytes
              7 ┊      0.06% ┊ type[1]: (i32, i32, i32) -> i32
              7 ┊      0.06% ┊ type[3]: (i32, i32, i32, i32) -> nil
              7 ┊      0.06% ┊ global[0]
              7 ┊      0.06% ┊ code section headers
              6 ┊      0.05% ┊ type[2]: (i32, i32) -> i32
              6 ┊      0.05% ┊ type[5]: (i32, i32, i32) -> nil
              5 ┊      0.04% ┊ type[0]: (i32, i32) -> nil
              5 ┊      0.04% ┊ type[4]: (i32) -> i32
              4 ┊      0.03% ┊ type[8]: (i32) -> nil
              4 ┊      0.03% ┊ data section headers
              3 ┊      0.03% ┊ type[7]: () -> nil
              3 ┊      0.03% ┊ type section headers
              3 ┊      0.03% ┊ table section headers
              3 ┊      0.03% ┊ memory section headers
              3 ┊      0.03% ┊ global section headers
              3 ┊      0.03% ┊ export section headers
              3 ┊      0.03% ┊ element section headers
            888 ┊      7.51% ┊ [1 Unreachable Items]
