# This file is part of ICU4X. For terms of use, please see the file
# called LICENSE at the top level of the ICU4X source tree
# (online at: https://github.com/unicode-org/icu4x/blob/main/LICENSE ).

name: package:icu4x
permissions:
  pull-requests: read # Changed to read, as we are only reading labels
  contents: read # Added for checkout action

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, labeled, unlabeled]
    paths:
      - ".github/workflows/dart.yml"
      - "ffi/dart/**"
      - "ffi/capi/bindings/dart/**"
  push:
    branches: [main]
    paths:
      - ".github/workflows/dart.yml"
      - "ffi/dart/**"
      - "ffi/capi/bindings/dart/**"
  schedule:
    - cron: "0 0 * * 0" # weekly

jobs:
  # This job will determine if the 'skip-fetch' tag is present
  check_skip_fetch:
    runs-on: ubuntu-latest
    outputs:
      skip_fetch: ${{ steps.get-labels.outputs.skip_fetch }}
    permissions:
      pull-requests: read
    if: github.event_name == 'pull_request'
    steps:
      - name: Get PR Labels
        id: get-labels
        run: |
          labels="$(gh api repos/$OWNER/$REPO_NAME/pulls/$PULL_REQUEST_NUMBER --jq '.labels.[].name')"
          echo "Found labels: $labels"
          if echo "$labels" | grep -q "skip-fetch"; then
            echo "skip_fetch=true" >> "$GITHUB_OUTPUT"
          else
            echo "skip_fetch=false" >> "$GITHUB_OUTPUT"
          fi
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
          PULL_REQUEST_NUMBER: ${{ github.event.pull_request.number }}

  build_local:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
        with:
          submodules: true

      - name: Install Rust toolchains
        run: |
          rustup toolchain install stable
          rustup toolchain install nightly

      - name: Show the selected Rust toolchain
        run: rustup show

      - uses: dart-lang/setup-dart@e51d8e571e22473a2ddebf0ef8a2123f0ab2c02c
        with:
          sdk: main

      - name: Prep build
        run: |
          (cd ffi/dart && dart pub get)

      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          dart ffi/dart/lib/src/hook_helpers/build_libs.dart --working_directory . --file bin/linux_x64 --os linux --architecture x64 --compile_type dynamic --cargo_features collator,datetime,list,decimal,plurals,casemap,experimental,default,compiled_data

      - name: Build Mac
        if: matrix.os == 'macos-latest'
        run: |
          dart ffi/dart/lib/src/hook_helpers/build_libs.dart --working_directory . --file bin/macos_arm64 --os macos --architecture arm64 --compile_type dynamic --cargo_features collator,datetime,list,decimal,plurals,casemap,experimental,default,compiled_data

      - name: Build Windows
        if: matrix.os == 'windows-latest'
        run: |
          dart ffi/dart/lib/src/hook_helpers/build_libs.dart --working_directory . --file bin/windows_x64 --os windows --architecture x64 --compile_type dynamic --cargo_features collator,datetime,list,decimal,plurals,casemap,experimental,default,compiled_data

      - name: Run `dart pub get`
        run: |
          cd ffi/dart
          dart pub get

      - run: |
          yq -i ".hooks.user_defines.icu4x.buildMode = \"local\"" ffi/dart/pubspec.yaml
          yq -i ".hooks.user_defines.icu4x.localPath = \"file://$(realpath bin/linux_x64)\"" ffi/dart/pubspec.yaml
        if: matrix.os == 'ubuntu-latest'

      - run: |
          yq -i ".hooks.user_defines.icu4x.buildMode = \"local\"" ffi/dart/pubspec.yaml
          yq -i ".hooks.user_defines.icu4x.localPath = \"file://$(realpath bin/macos_arm64)\"" ffi/dart/pubspec.yaml
        if: matrix.os == 'macos-latest'

      - run: |
          choco install yq
          yq -i ".hooks.user_defines.icu4x.buildMode = \"local\"" ffi/dart/pubspec.yaml
          yq -i ".hooks.user_defines.icu4x.localPath = \"file://$((Get-Item bin\windows_x64).FullName -replace '/', '\')\"" ffi/dart/pubspec.yaml
        if: matrix.os == 'windows-latest'

      - run: echo $LOCAL_ICU4X_BINARY

      - name: Display structure of downloaded files
        run: ls -R

      - name: Run `dart test`
        run: |
          cd ffi/dart
          dart test

      - run: dart pub get
        working-directory: examples/dart

      - run: dart --enable-experiment=record-use build cli
        working-directory: examples/dart
