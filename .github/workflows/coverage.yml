# This file is part of ICU4X. For terms of use, please see the file
# called LICENSE at the top level of the ICU4X source tree
# (online at: https://github.com/unicode-org/icu4x/blob/main/LICENSE ).

name:                           Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: '*'

jobs:
  test:

    name:                       Coverage
    runs-on:                    ubuntu-latest

    steps:
      - uses:                   actions/checkout@v3

      ## Coverage steps

      # Cargo-make boilerplate
      - name: Get cargo-make version
        id: cargo-make-version
        run: |
          echo "hash=$(cargo search cargo-make | grep '^cargo-make =' | md5sum)" >> $GITHUB_OUTPUT
        shell: bash
      - name: Attempt to load cached cargo-make
        uses: actions/cache@v3
        id: cargo-make-cache
        with:
          path: |
            ~/.cargo/bin/cargo-make
            ~/.cargo/bin/cargo-make.exe
          key: ${{ runner.os }}-make-${{ steps.cargo-make-version.outputs.hash }}
      - name: Install cargo-make
        if: steps.cargo-make-cache.outputs.cache-hit != 'true'
        run: cargo +stable install cargo-make

      # Toolchain boilerplate
      - name: Potentially override rust version with nightly
        run: cargo make set-nightly-version-for-ci
      - name: Show the selected Rust toolchain
        run: rustup show

      # Install grcov
      - name: Get grcov version
        id: grcov-version
        run: |
          echo "::set-output name=hash::$(cargo search grcov | grep '^grcov =' | md5sum)"
        shell: bash
      - name: Attempt to load cached grcov
        uses: actions/cache@v3
        id: grcov-cache
        with:
          path: |
            ~/.cargo/bin/grcov
            ~/.cargo/bin/grcov.exe
          key: ${{ runner.os }}-make-${{ steps.grcov-version.outputs.hash }}
      - name: Install grcov
        if: steps.grcov-cache.outputs.cache-hit != 'true'
        run: |
          cargo +stable install grcov

      # Actual job
      - run: cargo test --all-features --no-fail-fast
        env:
          CARGO_INCREMENTAL:    '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests'


      - id:                     coverage
        uses:                   actions-rs/grcov@v0.1

      - name:                   Push grcov results to Coveralls via GitHub Action
        uses:                   coverallsapp/github-action@v2.2.1
        with:
          github-token:         ${{ secrets.GITHUB_TOKEN }}
          file:                 ${{ steps.coverage.outputs.report }}

      - name:                   Push grcov results to Codecov via GitHub Action
        uses:                   codecov/codecov-action@v3
        with:
          file:                 ${{ steps.coverage.outputs.report }}
          fail_ci_if_error:     true
