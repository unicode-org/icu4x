name: Build & Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: '*'

jobs:

  # Build job

  build:

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        feature-set: [ "", "--all-features" ]  # no feature options ("") uses default.
                                               # --no-default-features is not allowed
                                               #     at root of virtual workspace for
                                               #     both build and test.
        

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    # Build job > Cache steps
      
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.toml') }}

    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.toml') }}

    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.toml') }}

    # Build job > Build and run steps
        
    - name: Build
      run: cargo build ${{ matrix.feature-set }} --verbose

    - name: Test
      run: cargo test ${{ matrix.feature-set }} --verbose

  # Formatting job

  format:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Rust formatter
      ## make this command fail if cargo fmt had to make changes
      run: cargo fmt && git diff-index --exit-code HEAD


  # Linting job (cargo-clippy) - completes and puts warnings inline in PR

  lint:
    runs-on: ubuntu-latest

    needs: [build]

    steps:
    - uses: actions/checkout@v2

    # Linting job > Install and run clippy steps

    - name: Install clippy
      run: rustup component add clippy

    - uses: actions-rs/clippy-check@v1.0.7
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-targets --all-features -- -D warnings

  # Doc-GH-Pages job

  doc_gh_pages:
    runs-on: ubuntu-latest

    needs: [build, format]

    ## Only create docs for merges/pushes to master (skip PRs).
    ## Multiple unfinished PRs should not clobber docs from approved code.
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
    - uses: actions/checkout@v2

    # Doc-GH-Pages job > Cache steps
      
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.toml') }}

    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.toml') }}

    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.toml') }}

    # Doc-GH-Pages job > Generate `cargo doc` step

    - name: Cargo doc
      uses: actions-rs/cargo@v1
      with:
        command: doc
        args: --workspace --release --all-features --no-deps

    # Doc-GH-Pages job > Generate dummy root index.html to redirect to `icu4x` crate

    - name: Create doc /index.html
      run: |
        mkdir -p target/doc
        cat > target/doc/index.html <<EOL
        <!doctype html>
        <html>
          <head>
            <meta charset="utf-8">
            <meta http-equiv="refresh" content="0;url=./icu4x" />
            <title>ICU4X Developer Docs</title>
          </head>
          <body>
            <p><a href="./icu4x">Redirect to icu4x crate doc</a></p>
          </body>
        </html>
        EOL

    # Doc-GH-Pages job > Commit docs on GH Pages branch step

    - name: Doc -> Github Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        # Setup for publishing to an external repo:
        # https://github.com/marketplace/actions/github-pages-action#%EF%B8%8F-deploy-to-external-repository
        # https://github.com/marketplace/actions/github-pages-action#%EF%B8%8F-create-ssh-deploy-key
        deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
        external_repository: unicode-org/icu4x-docs
        publish_branch: gh-pages
        publish_dir: ./target/doc
